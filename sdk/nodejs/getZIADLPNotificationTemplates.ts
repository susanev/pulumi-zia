// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Use the **zia_dlp_notification_templates** data source to get information about a ZIA DLP Notification Templates in the Zscaler Internet Access cloud or via the API.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zia from "@pulumi/zia";
 *
 * const example = zia.getZIADLPNotificationTemplates({
 *     name: "DLP Auditor Template Test",
 * });
 * ```
 */
export function getZIADLPNotificationTemplates(args?: GetZIADLPNotificationTemplatesArgs, opts?: pulumi.InvokeOptions): Promise<GetZIADLPNotificationTemplatesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zia:index/getZIADLPNotificationTemplates:getZIADLPNotificationTemplates", {
        "id": args.id,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getZIADLPNotificationTemplates.
 */
export interface GetZIADLPNotificationTemplatesArgs {
    /**
     * The unique identifier for a DLP notification template.
     */
    id?: number;
    /**
     * The DLP policy rule name.
     */
    name?: string;
}

/**
 * A collection of values returned by getZIADLPNotificationTemplates.
 */
export interface GetZIADLPNotificationTemplatesResult {
    readonly attachContent: boolean;
    readonly htmlMessage: string;
    readonly id: number;
    readonly name: string;
    readonly plainTestMessage: string;
    readonly subject: string;
    readonly tlsEnabled: boolean;
}
/**
 * Use the **zia_dlp_notification_templates** data source to get information about a ZIA DLP Notification Templates in the Zscaler Internet Access cloud or via the API.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zia from "@pulumi/zia";
 *
 * const example = zia.getZIADLPNotificationTemplates({
 *     name: "DLP Auditor Template Test",
 * });
 * ```
 */
export function getZIADLPNotificationTemplatesOutput(args?: GetZIADLPNotificationTemplatesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetZIADLPNotificationTemplatesResult> {
    return pulumi.output(args).apply((a: any) => getZIADLPNotificationTemplates(a, opts))
}

/**
 * A collection of arguments for invoking getZIADLPNotificationTemplates.
 */
export interface GetZIADLPNotificationTemplatesOutputArgs {
    /**
     * The unique identifier for a DLP notification template.
     */
    id?: pulumi.Input<number>;
    /**
     * The DLP policy rule name.
     */
    name?: pulumi.Input<string>;
}
