// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ZIAFirewallFilteringDestinationGroups extends pulumi.CustomResource {
    /**
     * Get an existing ZIAFirewallFilteringDestinationGroups resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ZIAFirewallFilteringDestinationGroupsState, opts?: pulumi.CustomResourceOptions): ZIAFirewallFilteringDestinationGroups {
        return new ZIAFirewallFilteringDestinationGroups(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'zia:index/zIAFirewallFilteringDestinationGroups:ZIAFirewallFilteringDestinationGroups';

    /**
     * Returns true if the given object is an instance of ZIAFirewallFilteringDestinationGroups.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ZIAFirewallFilteringDestinationGroups {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ZIAFirewallFilteringDestinationGroups.__pulumiType;
    }

    /**
     * Destination IP addresses within the group
     */
    public readonly addresses!: pulumi.Output<string[]>;
    /**
     * Destination countries for which the rule is applicable. If not set, the rule is not restricted to specific destination
     * countries.
     */
    public readonly countries!: pulumi.Output<string[]>;
    /**
     * Additional information about the destination IP group
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * List of URL categories for which rule must be applied
     */
    public readonly ipCategories!: pulumi.Output<string[] | undefined>;
    /**
     * Unique identifer for the destination IP group
     */
    public /*out*/ readonly ipDestinationId!: pulumi.Output<number>;
    /**
     * Destination IP group name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Destination IP group type (i.e., the group can contain destination IP addresses or FQDNs)
     */
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a ZIAFirewallFilteringDestinationGroups resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ZIAFirewallFilteringDestinationGroupsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ZIAFirewallFilteringDestinationGroupsArgs | ZIAFirewallFilteringDestinationGroupsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ZIAFirewallFilteringDestinationGroupsState | undefined;
            resourceInputs["addresses"] = state ? state.addresses : undefined;
            resourceInputs["countries"] = state ? state.countries : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["ipCategories"] = state ? state.ipCategories : undefined;
            resourceInputs["ipDestinationId"] = state ? state.ipDestinationId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as ZIAFirewallFilteringDestinationGroupsArgs | undefined;
            resourceInputs["addresses"] = args ? args.addresses : undefined;
            resourceInputs["countries"] = args ? args.countries : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["ipCategories"] = args ? args.ipCategories : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["ipDestinationId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ZIAFirewallFilteringDestinationGroups.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ZIAFirewallFilteringDestinationGroups resources.
 */
export interface ZIAFirewallFilteringDestinationGroupsState {
    /**
     * Destination IP addresses within the group
     */
    addresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Destination countries for which the rule is applicable. If not set, the rule is not restricted to specific destination
     * countries.
     */
    countries?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Additional information about the destination IP group
     */
    description?: pulumi.Input<string>;
    /**
     * List of URL categories for which rule must be applied
     */
    ipCategories?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Unique identifer for the destination IP group
     */
    ipDestinationId?: pulumi.Input<number>;
    /**
     * Destination IP group name
     */
    name?: pulumi.Input<string>;
    /**
     * Destination IP group type (i.e., the group can contain destination IP addresses or FQDNs)
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ZIAFirewallFilteringDestinationGroups resource.
 */
export interface ZIAFirewallFilteringDestinationGroupsArgs {
    /**
     * Destination IP addresses within the group
     */
    addresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Destination countries for which the rule is applicable. If not set, the rule is not restricted to specific destination
     * countries.
     */
    countries?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Additional information about the destination IP group
     */
    description?: pulumi.Input<string>;
    /**
     * List of URL categories for which rule must be applied
     */
    ipCategories?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Destination IP group name
     */
    name?: pulumi.Input<string>;
    /**
     * Destination IP group type (i.e., the group can contain destination IP addresses or FQDNs)
     */
    type?: pulumi.Input<string>;
}
