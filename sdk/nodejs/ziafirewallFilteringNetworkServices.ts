// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * The **zia_firewall_filtering_network_service** resource allows the creation and management of ZIA Cloud Firewall IP network services in the Zscaler Internet Access. This resource can then be associated with a ZIA cloud firewall filtering rule and network service group resources.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zia from "@zscaler/pulumi-zia";
 *
 * const example = new zia.ZIAFirewallFilteringNetworkServices("example", {
 *     description: "example",
 *     destTcpPorts: [
 *         {
 *             start: 5000,
 *         },
 *         {
 *             start: 5001,
 *         },
 *         {
 *             end: 5005,
 *             start: 5003,
 *         },
 *     ],
 *     srcTcpPorts: [
 *         {
 *             start: 5000,
 *         },
 *         {
 *             start: 5001,
 *         },
 *         {
 *             end: 5005,
 *             start: 5002,
 *         },
 *     ],
 *     type: "CUSTOM",
 * });
 * ```
 */
export class ZIAFirewallFilteringNetworkServices extends pulumi.CustomResource {
    /**
     * Get an existing ZIAFirewallFilteringNetworkServices resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ZIAFirewallFilteringNetworkServicesState, opts?: pulumi.CustomResourceOptions): ZIAFirewallFilteringNetworkServices {
        return new ZIAFirewallFilteringNetworkServices(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'zia:index/zIAFirewallFilteringNetworkServices:ZIAFirewallFilteringNetworkServices';

    /**
     * Returns true if the given object is an instance of ZIAFirewallFilteringNetworkServices.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ZIAFirewallFilteringNetworkServices {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ZIAFirewallFilteringNetworkServices.__pulumiType;
    }

    /**
     * Description of the service
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The TCP destination port number (example: 50) or port number range (example: 1000-1050), if any, that is used by the network service.
     */
    public readonly destTcpPorts!: pulumi.Output<outputs.ZIAFirewallFilteringNetworkServicesDestTcpPort[] | undefined>;
    /**
     * The UDP source port number (example: 50) or port number range (example: 1000-1050), if any, that is used by the network service.
     */
    public readonly destUdpPorts!: pulumi.Output<outputs.ZIAFirewallFilteringNetworkServicesDestUdpPort[] | undefined>;
    /**
     * (Optional
     */
    public readonly isNameL10nTag!: pulumi.Output<boolean | undefined>;
    /**
     * Name of the service
     */
    public readonly name!: pulumi.Output<string>;
    public /*out*/ readonly networkServiceId!: pulumi.Output<number>;
    /**
     * The TCP source port number (example: 50) or port number range (example: 1000-1050), if any, that is used by the network service
     */
    public readonly srcTcpPorts!: pulumi.Output<outputs.ZIAFirewallFilteringNetworkServicesSrcTcpPort[] | undefined>;
    /**
     * The UDP source port number (example: 50) or port number range (example: 1000-1050), if any, that is used by the network service.
     */
    public readonly srcUdpPorts!: pulumi.Output<outputs.ZIAFirewallFilteringNetworkServicesSrcUdpPort[] | undefined>;
    /**
     * The following values are supported: `"ICMP_ANY`, `"UDP_ANY"`, `"TCP_ANY"`, `"OTHER_NETWORK_SERVICE"`, `"DNS"`, `"NETBIOS"`, `"FTP"`, `"GNUTELLA"`, `"H_323"`, `"HTTP"`, `"HTTPS"`, `"IKE"`, `"IMAP"`, `"ILS"`, `"IKE_NAT"`, `"IRC"`, `"LDAP"`, `"QUIC"`, `"TDS"`, `"NETMEETING"`, `"NFS"`, `"NTP"`, `"SIP"`, `"SNMP"`, `"SMB"`, `"SMTP"`, `"SSH"`, `"SYSLOG"`, `"TELNET"`, `"TRACEROUTE"`, `"POP3"`, `"PPTP"`, `"RADIUS"`, `"REAL_MEDIA"`, `"RTSP"`, `"VNC"`, `"WHOIS"`, `"KERBEROS_SEC"`, `"TACACS"`, `"SNMPTRAP"`, `"NMAP"`, `"RSYNC"`, `"L2TP"`, `"HTTP_PROXY"`, `"PC_ANYWHERE"`, `"MSN"`, `"ECHO"`, `"AIM"`, `"IDENT"`, `"YMSG"`, `"SCCP"`, `"MGCP_UA"`, `"MGCP_CA"`, `"VDO_LIVE"`, `"OPENVPN"`, `"TFTP"`, `"FTPS_IMPLICIT"`, `"ZSCALER_PROXY_NW_SERVICES"`, `"GRE_PROTOCOL"`, `"ESP_PROTOCOL"`, `"DHCP"`
     */
    public readonly tag!: pulumi.Output<string>;
    /**
     * Supported values: `STANDARD`, `PREDEFINED`, `CUSTOM`
     */
    public readonly type!: pulumi.Output<string | undefined>;

    /**
     * Create a ZIAFirewallFilteringNetworkServices resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ZIAFirewallFilteringNetworkServicesArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ZIAFirewallFilteringNetworkServicesArgs | ZIAFirewallFilteringNetworkServicesState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ZIAFirewallFilteringNetworkServicesState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["destTcpPorts"] = state ? state.destTcpPorts : undefined;
            resourceInputs["destUdpPorts"] = state ? state.destUdpPorts : undefined;
            resourceInputs["isNameL10nTag"] = state ? state.isNameL10nTag : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkServiceId"] = state ? state.networkServiceId : undefined;
            resourceInputs["srcTcpPorts"] = state ? state.srcTcpPorts : undefined;
            resourceInputs["srcUdpPorts"] = state ? state.srcUdpPorts : undefined;
            resourceInputs["tag"] = state ? state.tag : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as ZIAFirewallFilteringNetworkServicesArgs | undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["destTcpPorts"] = args ? args.destTcpPorts : undefined;
            resourceInputs["destUdpPorts"] = args ? args.destUdpPorts : undefined;
            resourceInputs["isNameL10nTag"] = args ? args.isNameL10nTag : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["srcTcpPorts"] = args ? args.srcTcpPorts : undefined;
            resourceInputs["srcUdpPorts"] = args ? args.srcUdpPorts : undefined;
            resourceInputs["tag"] = args ? args.tag : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["networkServiceId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ZIAFirewallFilteringNetworkServices.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ZIAFirewallFilteringNetworkServices resources.
 */
export interface ZIAFirewallFilteringNetworkServicesState {
    /**
     * Description of the service
     */
    description?: pulumi.Input<string>;
    /**
     * The TCP destination port number (example: 50) or port number range (example: 1000-1050), if any, that is used by the network service.
     */
    destTcpPorts?: pulumi.Input<pulumi.Input<inputs.ZIAFirewallFilteringNetworkServicesDestTcpPort>[]>;
    /**
     * The UDP source port number (example: 50) or port number range (example: 1000-1050), if any, that is used by the network service.
     */
    destUdpPorts?: pulumi.Input<pulumi.Input<inputs.ZIAFirewallFilteringNetworkServicesDestUdpPort>[]>;
    /**
     * (Optional
     */
    isNameL10nTag?: pulumi.Input<boolean>;
    /**
     * Name of the service
     */
    name?: pulumi.Input<string>;
    networkServiceId?: pulumi.Input<number>;
    /**
     * The TCP source port number (example: 50) or port number range (example: 1000-1050), if any, that is used by the network service
     */
    srcTcpPorts?: pulumi.Input<pulumi.Input<inputs.ZIAFirewallFilteringNetworkServicesSrcTcpPort>[]>;
    /**
     * The UDP source port number (example: 50) or port number range (example: 1000-1050), if any, that is used by the network service.
     */
    srcUdpPorts?: pulumi.Input<pulumi.Input<inputs.ZIAFirewallFilteringNetworkServicesSrcUdpPort>[]>;
    /**
     * The following values are supported: `"ICMP_ANY`, `"UDP_ANY"`, `"TCP_ANY"`, `"OTHER_NETWORK_SERVICE"`, `"DNS"`, `"NETBIOS"`, `"FTP"`, `"GNUTELLA"`, `"H_323"`, `"HTTP"`, `"HTTPS"`, `"IKE"`, `"IMAP"`, `"ILS"`, `"IKE_NAT"`, `"IRC"`, `"LDAP"`, `"QUIC"`, `"TDS"`, `"NETMEETING"`, `"NFS"`, `"NTP"`, `"SIP"`, `"SNMP"`, `"SMB"`, `"SMTP"`, `"SSH"`, `"SYSLOG"`, `"TELNET"`, `"TRACEROUTE"`, `"POP3"`, `"PPTP"`, `"RADIUS"`, `"REAL_MEDIA"`, `"RTSP"`, `"VNC"`, `"WHOIS"`, `"KERBEROS_SEC"`, `"TACACS"`, `"SNMPTRAP"`, `"NMAP"`, `"RSYNC"`, `"L2TP"`, `"HTTP_PROXY"`, `"PC_ANYWHERE"`, `"MSN"`, `"ECHO"`, `"AIM"`, `"IDENT"`, `"YMSG"`, `"SCCP"`, `"MGCP_UA"`, `"MGCP_CA"`, `"VDO_LIVE"`, `"OPENVPN"`, `"TFTP"`, `"FTPS_IMPLICIT"`, `"ZSCALER_PROXY_NW_SERVICES"`, `"GRE_PROTOCOL"`, `"ESP_PROTOCOL"`, `"DHCP"`
     */
    tag?: pulumi.Input<string>;
    /**
     * Supported values: `STANDARD`, `PREDEFINED`, `CUSTOM`
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ZIAFirewallFilteringNetworkServices resource.
 */
export interface ZIAFirewallFilteringNetworkServicesArgs {
    /**
     * Description of the service
     */
    description?: pulumi.Input<string>;
    /**
     * The TCP destination port number (example: 50) or port number range (example: 1000-1050), if any, that is used by the network service.
     */
    destTcpPorts?: pulumi.Input<pulumi.Input<inputs.ZIAFirewallFilteringNetworkServicesDestTcpPort>[]>;
    /**
     * The UDP source port number (example: 50) or port number range (example: 1000-1050), if any, that is used by the network service.
     */
    destUdpPorts?: pulumi.Input<pulumi.Input<inputs.ZIAFirewallFilteringNetworkServicesDestUdpPort>[]>;
    /**
     * (Optional
     */
    isNameL10nTag?: pulumi.Input<boolean>;
    /**
     * Name of the service
     */
    name?: pulumi.Input<string>;
    /**
     * The TCP source port number (example: 50) or port number range (example: 1000-1050), if any, that is used by the network service
     */
    srcTcpPorts?: pulumi.Input<pulumi.Input<inputs.ZIAFirewallFilteringNetworkServicesSrcTcpPort>[]>;
    /**
     * The UDP source port number (example: 50) or port number range (example: 1000-1050), if any, that is used by the network service.
     */
    srcUdpPorts?: pulumi.Input<pulumi.Input<inputs.ZIAFirewallFilteringNetworkServicesSrcUdpPort>[]>;
    /**
     * The following values are supported: `"ICMP_ANY`, `"UDP_ANY"`, `"TCP_ANY"`, `"OTHER_NETWORK_SERVICE"`, `"DNS"`, `"NETBIOS"`, `"FTP"`, `"GNUTELLA"`, `"H_323"`, `"HTTP"`, `"HTTPS"`, `"IKE"`, `"IMAP"`, `"ILS"`, `"IKE_NAT"`, `"IRC"`, `"LDAP"`, `"QUIC"`, `"TDS"`, `"NETMEETING"`, `"NFS"`, `"NTP"`, `"SIP"`, `"SNMP"`, `"SMB"`, `"SMTP"`, `"SSH"`, `"SYSLOG"`, `"TELNET"`, `"TRACEROUTE"`, `"POP3"`, `"PPTP"`, `"RADIUS"`, `"REAL_MEDIA"`, `"RTSP"`, `"VNC"`, `"WHOIS"`, `"KERBEROS_SEC"`, `"TACACS"`, `"SNMPTRAP"`, `"NMAP"`, `"RSYNC"`, `"L2TP"`, `"HTTP_PROXY"`, `"PC_ANYWHERE"`, `"MSN"`, `"ECHO"`, `"AIM"`, `"IDENT"`, `"YMSG"`, `"SCCP"`, `"MGCP_UA"`, `"MGCP_CA"`, `"VDO_LIVE"`, `"OPENVPN"`, `"TFTP"`, `"FTPS_IMPLICIT"`, `"ZSCALER_PROXY_NW_SERVICES"`, `"GRE_PROTOCOL"`, `"ESP_PROTOCOL"`, `"DHCP"`
     */
    tag?: pulumi.Input<string>;
    /**
     * Supported values: `STANDARD`, `PREDEFINED`, `CUSTOM`
     */
    type?: pulumi.Input<string>;
}
