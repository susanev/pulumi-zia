// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * The **zia_dlp_dictionaries** resource allows the creation and management of ZIA DLP dictionaries in the Zscaler Internet Access cloud or via the API.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zia from "@zscaler/pulumi-zia";
 *
 * const example = new zia.dlp.DLPDictionaries("example", {
 *     customPhraseMatchType: "MATCH_ALL_CUSTOM_PHRASE_PATTERN_DICTIONARY",
 *     description: "Your Description",
 *     dictionaryType: "PATTERNS_AND_PHRASES",
 *     patterns: [{
 *         action: "PATTERN_COUNT_TYPE_UNIQUE",
 *         pattern: "YourPattern",
 *     }],
 *     phrases: [{
 *         action: "PHRASE_COUNT_TYPE_ALL",
 *         phrase: "YourPhrase",
 *     }],
 * });
 * ```
 */
export class DLPDictionaries extends pulumi.CustomResource {
    /**
     * Get an existing DLPDictionaries resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DLPDictionariesState, opts?: pulumi.CustomResourceOptions): DLPDictionaries {
        return new DLPDictionaries(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'zia:DLP/dLPDictionaries:DLPDictionaries';

    /**
     * Returns true if the given object is an instance of DLPDictionaries.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DLPDictionaries {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DLPDictionaries.__pulumiType;
    }

    /**
     * The DLP confidence threshold. The following values are supported:
     */
    public readonly confidenceThreshold!: pulumi.Output<string | undefined>;
    /**
     * The DLP custom phrase match type. Supported values are:
     */
    public readonly customPhraseMatchType!: pulumi.Output<string | undefined>;
    /**
     * The desciption of the DLP dictionary
     */
    public readonly description!: pulumi.Output<string | undefined>;
    public /*out*/ readonly dictionaryId!: pulumi.Output<number>;
    /**
     * The DLP dictionary type. The following values are supported:
     */
    public readonly dictionaryType!: pulumi.Output<string | undefined>;
    /**
     * Exact Data Match (EDM) related information for custom DLP dictionaries.
     */
    public readonly exactDataMatchDetails!: pulumi.Output<outputs.DLP.DLPDictionariesExactDataMatchDetail[] | undefined>;
    /**
     * List of Indexed Document Match (IDM) profiles and their corresponding match accuracy for custom DLP dictionaries.
     */
    public readonly idmProfileMatchAccuracies!: pulumi.Output<outputs.DLP.DLPDictionariesIdmProfileMatchAccuracy[]>;
    /**
     * The DLP dictionary's name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Indicates whether the name is localized or not. This is always set to True for predefined DLP dictionaries.
     */
    public /*out*/ readonly nameL10nTag!: pulumi.Output<boolean>;
    /**
     * List containing the patterns used within a custom DLP dictionary. This attribute is not applicable to predefined DLP dictionaries. Required when `dictionaryType` is `PATTERNS_AND_PHRASES`
     */
    public readonly patterns!: pulumi.Output<outputs.DLP.DLPDictionariesPattern[] | undefined>;
    /**
     * List containing the phrases used within a custom DLP dictionary. This attribute is not applicable to predefined DLP dictionaries. Required when `dictionaryType` is `PATTERNS_AND_PHRASES`
     */
    public readonly phrases!: pulumi.Output<outputs.DLP.DLPDictionariesPhrase[] | undefined>;
    /**
     * The DLP dictionary proximity length.
     */
    public readonly proximity!: pulumi.Output<number | undefined>;
    /**
     * The DLP threshold type. The following values are supported:
     */
    public /*out*/ readonly thresholdType!: pulumi.Output<string>;

    /**
     * Create a DLPDictionaries resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: DLPDictionariesArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DLPDictionariesArgs | DLPDictionariesState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DLPDictionariesState | undefined;
            resourceInputs["confidenceThreshold"] = state ? state.confidenceThreshold : undefined;
            resourceInputs["customPhraseMatchType"] = state ? state.customPhraseMatchType : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["dictionaryId"] = state ? state.dictionaryId : undefined;
            resourceInputs["dictionaryType"] = state ? state.dictionaryType : undefined;
            resourceInputs["exactDataMatchDetails"] = state ? state.exactDataMatchDetails : undefined;
            resourceInputs["idmProfileMatchAccuracies"] = state ? state.idmProfileMatchAccuracies : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nameL10nTag"] = state ? state.nameL10nTag : undefined;
            resourceInputs["patterns"] = state ? state.patterns : undefined;
            resourceInputs["phrases"] = state ? state.phrases : undefined;
            resourceInputs["proximity"] = state ? state.proximity : undefined;
            resourceInputs["thresholdType"] = state ? state.thresholdType : undefined;
        } else {
            const args = argsOrState as DLPDictionariesArgs | undefined;
            resourceInputs["confidenceThreshold"] = args ? args.confidenceThreshold : undefined;
            resourceInputs["customPhraseMatchType"] = args ? args.customPhraseMatchType : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["dictionaryType"] = args ? args.dictionaryType : undefined;
            resourceInputs["exactDataMatchDetails"] = args ? args.exactDataMatchDetails : undefined;
            resourceInputs["idmProfileMatchAccuracies"] = args ? args.idmProfileMatchAccuracies : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["patterns"] = args ? args.patterns : undefined;
            resourceInputs["phrases"] = args ? args.phrases : undefined;
            resourceInputs["proximity"] = args ? args.proximity : undefined;
            resourceInputs["dictionaryId"] = undefined /*out*/;
            resourceInputs["nameL10nTag"] = undefined /*out*/;
            resourceInputs["thresholdType"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DLPDictionaries.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DLPDictionaries resources.
 */
export interface DLPDictionariesState {
    /**
     * The DLP confidence threshold. The following values are supported:
     */
    confidenceThreshold?: pulumi.Input<string>;
    /**
     * The DLP custom phrase match type. Supported values are:
     */
    customPhraseMatchType?: pulumi.Input<string>;
    /**
     * The desciption of the DLP dictionary
     */
    description?: pulumi.Input<string>;
    dictionaryId?: pulumi.Input<number>;
    /**
     * The DLP dictionary type. The following values are supported:
     */
    dictionaryType?: pulumi.Input<string>;
    /**
     * Exact Data Match (EDM) related information for custom DLP dictionaries.
     */
    exactDataMatchDetails?: pulumi.Input<pulumi.Input<inputs.DLP.DLPDictionariesExactDataMatchDetail>[]>;
    /**
     * List of Indexed Document Match (IDM) profiles and their corresponding match accuracy for custom DLP dictionaries.
     */
    idmProfileMatchAccuracies?: pulumi.Input<pulumi.Input<inputs.DLP.DLPDictionariesIdmProfileMatchAccuracy>[]>;
    /**
     * The DLP dictionary's name
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates whether the name is localized or not. This is always set to True for predefined DLP dictionaries.
     */
    nameL10nTag?: pulumi.Input<boolean>;
    /**
     * List containing the patterns used within a custom DLP dictionary. This attribute is not applicable to predefined DLP dictionaries. Required when `dictionaryType` is `PATTERNS_AND_PHRASES`
     */
    patterns?: pulumi.Input<pulumi.Input<inputs.DLP.DLPDictionariesPattern>[]>;
    /**
     * List containing the phrases used within a custom DLP dictionary. This attribute is not applicable to predefined DLP dictionaries. Required when `dictionaryType` is `PATTERNS_AND_PHRASES`
     */
    phrases?: pulumi.Input<pulumi.Input<inputs.DLP.DLPDictionariesPhrase>[]>;
    /**
     * The DLP dictionary proximity length.
     */
    proximity?: pulumi.Input<number>;
    /**
     * The DLP threshold type. The following values are supported:
     */
    thresholdType?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DLPDictionaries resource.
 */
export interface DLPDictionariesArgs {
    /**
     * The DLP confidence threshold. The following values are supported:
     */
    confidenceThreshold?: pulumi.Input<string>;
    /**
     * The DLP custom phrase match type. Supported values are:
     */
    customPhraseMatchType?: pulumi.Input<string>;
    /**
     * The desciption of the DLP dictionary
     */
    description?: pulumi.Input<string>;
    /**
     * The DLP dictionary type. The following values are supported:
     */
    dictionaryType?: pulumi.Input<string>;
    /**
     * Exact Data Match (EDM) related information for custom DLP dictionaries.
     */
    exactDataMatchDetails?: pulumi.Input<pulumi.Input<inputs.DLP.DLPDictionariesExactDataMatchDetail>[]>;
    /**
     * List of Indexed Document Match (IDM) profiles and their corresponding match accuracy for custom DLP dictionaries.
     */
    idmProfileMatchAccuracies?: pulumi.Input<pulumi.Input<inputs.DLP.DLPDictionariesIdmProfileMatchAccuracy>[]>;
    /**
     * The DLP dictionary's name
     */
    name?: pulumi.Input<string>;
    /**
     * List containing the patterns used within a custom DLP dictionary. This attribute is not applicable to predefined DLP dictionaries. Required when `dictionaryType` is `PATTERNS_AND_PHRASES`
     */
    patterns?: pulumi.Input<pulumi.Input<inputs.DLP.DLPDictionariesPattern>[]>;
    /**
     * List containing the phrases used within a custom DLP dictionary. This attribute is not applicable to predefined DLP dictionaries. Required when `dictionaryType` is `PATTERNS_AND_PHRASES`
     */
    phrases?: pulumi.Input<pulumi.Input<inputs.DLP.DLPDictionariesPhrase>[]>;
    /**
     * The DLP dictionary proximity length.
     */
    proximity?: pulumi.Input<number>;
}
