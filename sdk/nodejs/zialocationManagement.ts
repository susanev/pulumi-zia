// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * The **zia_location_management** resource allows the creation and management of ZIA locations in the Zscaler Internet Access. This resource can then be associated with a:
 *
 * * Static IP resource
 * * GRE Tunnel resource
 * * VPN credentials resource
 * * URL filtering and firewall filtering rules
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as zia from "@zscaler/pulumi-zia";
 *
 * const usaSjc37ZIATrafficForwardingVPNCredentials = new zia.ZIATrafficForwardingVPNCredentials("usaSjc37ZIATrafficForwardingVPNCredentials", {
 *     type: "UFQDN",
 *     fqdn: "usa_sjc37@acme.com",
 *     comments: "USA - San Jose IPSec Tunnel",
 *     preSharedKey: "P@ass0rd123!",
 * });
 * const usaSjc37ZIATrafficForwardingStaticIP = new zia.ZIATrafficForwardingStaticIP("usaSjc37ZIATrafficForwardingStaticIP", {
 *     ipAddress: "1.1.1.1",
 *     routableIp: true,
 *     comment: "SJC37 - Static IP",
 *     geoOverride: false,
 * });
 * // ZIA Location Management
 * const usaSjc37ZIALocationManagement = new zia.ZIALocationManagement("usaSjc37ZIALocationManagement", {
 *     description: "Created with Terraform",
 *     country: "UNITED_STATES",
 *     tz: "UNITED_STATES_AMERICA_LOS_ANGELES",
 *     authRequired: true,
 *     idleTimeInMinutes: 720,
 *     displayTimeUnit: "HOUR",
 *     surrogateIp: true,
 *     xffForwardEnabled: true,
 *     ofwEnabled: true,
 *     ipsControl: true,
 *     ipAddresses: [usaSjc37ZIATrafficForwardingStaticIP.ipAddress],
 *     vpnCredentials: [{
 *         id: usaSjc37ZIATrafficForwardingVPNCredentials.vpnCredentalId,
 *         type: usaSjc37ZIATrafficForwardingVPNCredentials.type,
 *     }],
 * }, {
 *     dependsOn: [
 *         usaSjc37ZIATrafficForwardingVPNCredentials,
 *         usaSjc37ZIATrafficForwardingStaticIP,
 *     ],
 * });
 * ```
 */
export class ZIALocationManagement extends pulumi.CustomResource {
    /**
     * Get an existing ZIALocationManagement resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ZIALocationManagementState, opts?: pulumi.CustomResourceOptions): ZIALocationManagement {
        return new ZIALocationManagement(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'zia:index/zIALocationManagement:ZIALocationManagement';

    /**
     * Returns true if the given object is an instance of ZIALocationManagement.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ZIALocationManagement {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ZIALocationManagement.__pulumiType;
    }

    /**
     * For First Time AUP Behavior, Block Internet Access. When set, all internet access (including non-HTTP traffic) is disabled until the user accepts the AUP.
     */
    public readonly aupBlockInternetUntilAccepted!: pulumi.Output<boolean>;
    /**
     * Enable AUP. When set to true, AUP is enabled for the location.
     */
    public readonly aupEnabled!: pulumi.Output<boolean>;
    /**
     * For First Time AUP Behavior, Force SSL Inspection. When set, Zscaler will force SSL Inspection in order to enforce AUP for HTTPS traffic.
     */
    public readonly aupForceSslInspection!: pulumi.Output<boolean>;
    /**
     * Custom AUP Frequency. Refresh time (in days) to re-validate the AUP.
     */
    public readonly aupTimeoutInDays!: pulumi.Output<number | undefined>;
    /**
     * Enforce Authentication. Required when ports are enabled, IP Surrogate is enabled, or Kerberos Authentication is enabled.
     */
    public readonly authRequired!: pulumi.Output<boolean>;
    /**
     * Enable Caution. When set to true, a caution notifcation is enabled for the location.
     */
    public readonly cautionEnabled!: pulumi.Output<boolean>;
    /**
     * Country
     */
    public readonly country!: pulumi.Output<string>;
    /**
     * Additional notes or information regarding the location or sub-location. The description cannot exceed 1024 characters.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Display Time Unit. The time unit to display for IP Surrogate idle time to disassociation.
     */
    public readonly displayTimeUnit!: pulumi.Output<string | undefined>;
    /**
     * Download bandwidth in bytes. The value `0` implies no Bandwidth Control enforcement.
     */
    public readonly dnBandwidth!: pulumi.Output<number | undefined>;
    /**
     * Idle Time to Disassociation. The user mapping idle time (in minutes) is required if a Surrogate IP is enabled.
     */
    public readonly idleTimeInMinutes!: pulumi.Output<number | undefined>;
    /**
     * For locations: IP addresses of the egress points that are provisioned in the Zscaler Cloud. Each entry is a single IP address (e.g., `238.10.33.9`). For sub-locations: Egress, internal, or GRE tunnel IP addresses. Each entry is either a single IP address, CIDR (e.g., `10.10.33.0/24`), or range (e.g., `10.10.33.1-10.10.33.10`)). The value is required if `vpnCredentials` are not defined.
     */
    public readonly ipAddresses!: pulumi.Output<string[] | undefined>;
    /**
     * Enable IPS Control. When set to true, IPS Control is enabled for the location if Firewall is enabled.
     */
    public readonly ipsControl!: pulumi.Output<boolean>;
    public /*out*/ readonly locationId!: pulumi.Output<number>;
    /**
     * Location Name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Enable Firewall. When set to true, Firewall is enabled for the location.
     */
    public readonly ofwEnabled!: pulumi.Output<boolean>;
    /**
     * Parent Location ID. If this ID does not exist or is `0`, it is implied that it is a parent location. Otherwise, it is a sub-location whose parent has this ID. x-applicableTo: `SUB`
     */
    public readonly parentId!: pulumi.Output<number | undefined>;
    /**
     * IP ports that are associated with the location.
     */
    public readonly ports!: pulumi.Output<string | undefined>;
    /**
     * Profile tag that specifies the location traffic type. If not specified, this tag defaults to `Unassigned`. The supported options are: `NONE`, `CORPORATE`, `SERVER`, `GUESTWIFI`, `IOT`.
     */
    public readonly profile!: pulumi.Output<string>;
    /**
     * This parameter was deprecated and no longer has an effect on SSL policy. It remains supported in the API payload in order to maintain backwards compatibility with existing scripts, but it will be removed in future.
     */
    public readonly sslScanEnabled!: pulumi.Output<boolean>;
    /**
     * Enable Surrogate IP. When set to true, users are mapped to internal device IP addresses.
     */
    public readonly surrogateIp!: pulumi.Output<boolean>;
    /**
     * Enforce Surrogate IP for Known Browsers. When set to true, IP Surrogate is enforced for all known browsers.
     */
    public readonly surrogateIpEnforcedForKnownBrowsers!: pulumi.Output<boolean>;
    /**
     * Refresh Time for re-validation of Surrogacy. The surrogate refresh time (in minutes) to re-validate the IP surrogates.
     */
    public readonly surrogateRefreshTimeInMinutes!: pulumi.Output<number | undefined>;
    /**
     * Display Refresh Time Unit. The time unit to display for refresh time for re-validation of surrogacy.
     */
    public readonly surrogateRefreshTimeUnit!: pulumi.Output<string | undefined>;
    /**
     * Timezone of the location. If not specified, it defaults to GMT.
     */
    public readonly tz!: pulumi.Output<string>;
    /**
     * Upload bandwidth in bytes. The value `0` implies no Bandwidth Control enforcement.
     */
    public readonly upBandwidth!: pulumi.Output<number | undefined>;
    public readonly vpnCredentials!: pulumi.Output<outputs.ZIALocationManagementVpnCredential[] | undefined>;
    /**
     * Enable XFF Forwarding. When set to true, traffic is passed to Zscaler Cloud via the X-Forwarded-For (XFF) header.
     */
    public readonly xffForwardEnabled!: pulumi.Output<boolean>;
    /**
     * This parameter was deprecated and no longer has an effect on SSL policy. It remains supported in the API payload in order to maintain backwards compatibility with existing scripts, but it will be removed in future.
     */
    public readonly zappSslScanEnabled!: pulumi.Output<boolean>;

    /**
     * Create a ZIALocationManagement resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ZIALocationManagementArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ZIALocationManagementArgs | ZIALocationManagementState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ZIALocationManagementState | undefined;
            resourceInputs["aupBlockInternetUntilAccepted"] = state ? state.aupBlockInternetUntilAccepted : undefined;
            resourceInputs["aupEnabled"] = state ? state.aupEnabled : undefined;
            resourceInputs["aupForceSslInspection"] = state ? state.aupForceSslInspection : undefined;
            resourceInputs["aupTimeoutInDays"] = state ? state.aupTimeoutInDays : undefined;
            resourceInputs["authRequired"] = state ? state.authRequired : undefined;
            resourceInputs["cautionEnabled"] = state ? state.cautionEnabled : undefined;
            resourceInputs["country"] = state ? state.country : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayTimeUnit"] = state ? state.displayTimeUnit : undefined;
            resourceInputs["dnBandwidth"] = state ? state.dnBandwidth : undefined;
            resourceInputs["idleTimeInMinutes"] = state ? state.idleTimeInMinutes : undefined;
            resourceInputs["ipAddresses"] = state ? state.ipAddresses : undefined;
            resourceInputs["ipsControl"] = state ? state.ipsControl : undefined;
            resourceInputs["locationId"] = state ? state.locationId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["ofwEnabled"] = state ? state.ofwEnabled : undefined;
            resourceInputs["parentId"] = state ? state.parentId : undefined;
            resourceInputs["ports"] = state ? state.ports : undefined;
            resourceInputs["profile"] = state ? state.profile : undefined;
            resourceInputs["sslScanEnabled"] = state ? state.sslScanEnabled : undefined;
            resourceInputs["surrogateIp"] = state ? state.surrogateIp : undefined;
            resourceInputs["surrogateIpEnforcedForKnownBrowsers"] = state ? state.surrogateIpEnforcedForKnownBrowsers : undefined;
            resourceInputs["surrogateRefreshTimeInMinutes"] = state ? state.surrogateRefreshTimeInMinutes : undefined;
            resourceInputs["surrogateRefreshTimeUnit"] = state ? state.surrogateRefreshTimeUnit : undefined;
            resourceInputs["tz"] = state ? state.tz : undefined;
            resourceInputs["upBandwidth"] = state ? state.upBandwidth : undefined;
            resourceInputs["vpnCredentials"] = state ? state.vpnCredentials : undefined;
            resourceInputs["xffForwardEnabled"] = state ? state.xffForwardEnabled : undefined;
            resourceInputs["zappSslScanEnabled"] = state ? state.zappSslScanEnabled : undefined;
        } else {
            const args = argsOrState as ZIALocationManagementArgs | undefined;
            resourceInputs["aupBlockInternetUntilAccepted"] = args ? args.aupBlockInternetUntilAccepted : undefined;
            resourceInputs["aupEnabled"] = args ? args.aupEnabled : undefined;
            resourceInputs["aupForceSslInspection"] = args ? args.aupForceSslInspection : undefined;
            resourceInputs["aupTimeoutInDays"] = args ? args.aupTimeoutInDays : undefined;
            resourceInputs["authRequired"] = args ? args.authRequired : undefined;
            resourceInputs["cautionEnabled"] = args ? args.cautionEnabled : undefined;
            resourceInputs["country"] = args ? args.country : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayTimeUnit"] = args ? args.displayTimeUnit : undefined;
            resourceInputs["dnBandwidth"] = args ? args.dnBandwidth : undefined;
            resourceInputs["idleTimeInMinutes"] = args ? args.idleTimeInMinutes : undefined;
            resourceInputs["ipAddresses"] = args ? args.ipAddresses : undefined;
            resourceInputs["ipsControl"] = args ? args.ipsControl : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["ofwEnabled"] = args ? args.ofwEnabled : undefined;
            resourceInputs["parentId"] = args ? args.parentId : undefined;
            resourceInputs["ports"] = args ? args.ports : undefined;
            resourceInputs["profile"] = args ? args.profile : undefined;
            resourceInputs["sslScanEnabled"] = args ? args.sslScanEnabled : undefined;
            resourceInputs["surrogateIp"] = args ? args.surrogateIp : undefined;
            resourceInputs["surrogateIpEnforcedForKnownBrowsers"] = args ? args.surrogateIpEnforcedForKnownBrowsers : undefined;
            resourceInputs["surrogateRefreshTimeInMinutes"] = args ? args.surrogateRefreshTimeInMinutes : undefined;
            resourceInputs["surrogateRefreshTimeUnit"] = args ? args.surrogateRefreshTimeUnit : undefined;
            resourceInputs["tz"] = args ? args.tz : undefined;
            resourceInputs["upBandwidth"] = args ? args.upBandwidth : undefined;
            resourceInputs["vpnCredentials"] = args ? args.vpnCredentials : undefined;
            resourceInputs["xffForwardEnabled"] = args ? args.xffForwardEnabled : undefined;
            resourceInputs["zappSslScanEnabled"] = args ? args.zappSslScanEnabled : undefined;
            resourceInputs["locationId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ZIALocationManagement.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ZIALocationManagement resources.
 */
export interface ZIALocationManagementState {
    /**
     * For First Time AUP Behavior, Block Internet Access. When set, all internet access (including non-HTTP traffic) is disabled until the user accepts the AUP.
     */
    aupBlockInternetUntilAccepted?: pulumi.Input<boolean>;
    /**
     * Enable AUP. When set to true, AUP is enabled for the location.
     */
    aupEnabled?: pulumi.Input<boolean>;
    /**
     * For First Time AUP Behavior, Force SSL Inspection. When set, Zscaler will force SSL Inspection in order to enforce AUP for HTTPS traffic.
     */
    aupForceSslInspection?: pulumi.Input<boolean>;
    /**
     * Custom AUP Frequency. Refresh time (in days) to re-validate the AUP.
     */
    aupTimeoutInDays?: pulumi.Input<number>;
    /**
     * Enforce Authentication. Required when ports are enabled, IP Surrogate is enabled, or Kerberos Authentication is enabled.
     */
    authRequired?: pulumi.Input<boolean>;
    /**
     * Enable Caution. When set to true, a caution notifcation is enabled for the location.
     */
    cautionEnabled?: pulumi.Input<boolean>;
    /**
     * Country
     */
    country?: pulumi.Input<string>;
    /**
     * Additional notes or information regarding the location or sub-location. The description cannot exceed 1024 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * Display Time Unit. The time unit to display for IP Surrogate idle time to disassociation.
     */
    displayTimeUnit?: pulumi.Input<string>;
    /**
     * Download bandwidth in bytes. The value `0` implies no Bandwidth Control enforcement.
     */
    dnBandwidth?: pulumi.Input<number>;
    /**
     * Idle Time to Disassociation. The user mapping idle time (in minutes) is required if a Surrogate IP is enabled.
     */
    idleTimeInMinutes?: pulumi.Input<number>;
    /**
     * For locations: IP addresses of the egress points that are provisioned in the Zscaler Cloud. Each entry is a single IP address (e.g., `238.10.33.9`). For sub-locations: Egress, internal, or GRE tunnel IP addresses. Each entry is either a single IP address, CIDR (e.g., `10.10.33.0/24`), or range (e.g., `10.10.33.1-10.10.33.10`)). The value is required if `vpnCredentials` are not defined.
     */
    ipAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Enable IPS Control. When set to true, IPS Control is enabled for the location if Firewall is enabled.
     */
    ipsControl?: pulumi.Input<boolean>;
    locationId?: pulumi.Input<number>;
    /**
     * Location Name.
     */
    name?: pulumi.Input<string>;
    /**
     * Enable Firewall. When set to true, Firewall is enabled for the location.
     */
    ofwEnabled?: pulumi.Input<boolean>;
    /**
     * Parent Location ID. If this ID does not exist or is `0`, it is implied that it is a parent location. Otherwise, it is a sub-location whose parent has this ID. x-applicableTo: `SUB`
     */
    parentId?: pulumi.Input<number>;
    /**
     * IP ports that are associated with the location.
     */
    ports?: pulumi.Input<string>;
    /**
     * Profile tag that specifies the location traffic type. If not specified, this tag defaults to `Unassigned`. The supported options are: `NONE`, `CORPORATE`, `SERVER`, `GUESTWIFI`, `IOT`.
     */
    profile?: pulumi.Input<string>;
    /**
     * This parameter was deprecated and no longer has an effect on SSL policy. It remains supported in the API payload in order to maintain backwards compatibility with existing scripts, but it will be removed in future.
     */
    sslScanEnabled?: pulumi.Input<boolean>;
    /**
     * Enable Surrogate IP. When set to true, users are mapped to internal device IP addresses.
     */
    surrogateIp?: pulumi.Input<boolean>;
    /**
     * Enforce Surrogate IP for Known Browsers. When set to true, IP Surrogate is enforced for all known browsers.
     */
    surrogateIpEnforcedForKnownBrowsers?: pulumi.Input<boolean>;
    /**
     * Refresh Time for re-validation of Surrogacy. The surrogate refresh time (in minutes) to re-validate the IP surrogates.
     */
    surrogateRefreshTimeInMinutes?: pulumi.Input<number>;
    /**
     * Display Refresh Time Unit. The time unit to display for refresh time for re-validation of surrogacy.
     */
    surrogateRefreshTimeUnit?: pulumi.Input<string>;
    /**
     * Timezone of the location. If not specified, it defaults to GMT.
     */
    tz?: pulumi.Input<string>;
    /**
     * Upload bandwidth in bytes. The value `0` implies no Bandwidth Control enforcement.
     */
    upBandwidth?: pulumi.Input<number>;
    vpnCredentials?: pulumi.Input<pulumi.Input<inputs.ZIALocationManagementVpnCredential>[]>;
    /**
     * Enable XFF Forwarding. When set to true, traffic is passed to Zscaler Cloud via the X-Forwarded-For (XFF) header.
     */
    xffForwardEnabled?: pulumi.Input<boolean>;
    /**
     * This parameter was deprecated and no longer has an effect on SSL policy. It remains supported in the API payload in order to maintain backwards compatibility with existing scripts, but it will be removed in future.
     */
    zappSslScanEnabled?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a ZIALocationManagement resource.
 */
export interface ZIALocationManagementArgs {
    /**
     * For First Time AUP Behavior, Block Internet Access. When set, all internet access (including non-HTTP traffic) is disabled until the user accepts the AUP.
     */
    aupBlockInternetUntilAccepted?: pulumi.Input<boolean>;
    /**
     * Enable AUP. When set to true, AUP is enabled for the location.
     */
    aupEnabled?: pulumi.Input<boolean>;
    /**
     * For First Time AUP Behavior, Force SSL Inspection. When set, Zscaler will force SSL Inspection in order to enforce AUP for HTTPS traffic.
     */
    aupForceSslInspection?: pulumi.Input<boolean>;
    /**
     * Custom AUP Frequency. Refresh time (in days) to re-validate the AUP.
     */
    aupTimeoutInDays?: pulumi.Input<number>;
    /**
     * Enforce Authentication. Required when ports are enabled, IP Surrogate is enabled, or Kerberos Authentication is enabled.
     */
    authRequired?: pulumi.Input<boolean>;
    /**
     * Enable Caution. When set to true, a caution notifcation is enabled for the location.
     */
    cautionEnabled?: pulumi.Input<boolean>;
    /**
     * Country
     */
    country?: pulumi.Input<string>;
    /**
     * Additional notes or information regarding the location or sub-location. The description cannot exceed 1024 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * Display Time Unit. The time unit to display for IP Surrogate idle time to disassociation.
     */
    displayTimeUnit?: pulumi.Input<string>;
    /**
     * Download bandwidth in bytes. The value `0` implies no Bandwidth Control enforcement.
     */
    dnBandwidth?: pulumi.Input<number>;
    /**
     * Idle Time to Disassociation. The user mapping idle time (in minutes) is required if a Surrogate IP is enabled.
     */
    idleTimeInMinutes?: pulumi.Input<number>;
    /**
     * For locations: IP addresses of the egress points that are provisioned in the Zscaler Cloud. Each entry is a single IP address (e.g., `238.10.33.9`). For sub-locations: Egress, internal, or GRE tunnel IP addresses. Each entry is either a single IP address, CIDR (e.g., `10.10.33.0/24`), or range (e.g., `10.10.33.1-10.10.33.10`)). The value is required if `vpnCredentials` are not defined.
     */
    ipAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Enable IPS Control. When set to true, IPS Control is enabled for the location if Firewall is enabled.
     */
    ipsControl?: pulumi.Input<boolean>;
    /**
     * Location Name.
     */
    name?: pulumi.Input<string>;
    /**
     * Enable Firewall. When set to true, Firewall is enabled for the location.
     */
    ofwEnabled?: pulumi.Input<boolean>;
    /**
     * Parent Location ID. If this ID does not exist or is `0`, it is implied that it is a parent location. Otherwise, it is a sub-location whose parent has this ID. x-applicableTo: `SUB`
     */
    parentId?: pulumi.Input<number>;
    /**
     * IP ports that are associated with the location.
     */
    ports?: pulumi.Input<string>;
    /**
     * Profile tag that specifies the location traffic type. If not specified, this tag defaults to `Unassigned`. The supported options are: `NONE`, `CORPORATE`, `SERVER`, `GUESTWIFI`, `IOT`.
     */
    profile?: pulumi.Input<string>;
    /**
     * This parameter was deprecated and no longer has an effect on SSL policy. It remains supported in the API payload in order to maintain backwards compatibility with existing scripts, but it will be removed in future.
     */
    sslScanEnabled?: pulumi.Input<boolean>;
    /**
     * Enable Surrogate IP. When set to true, users are mapped to internal device IP addresses.
     */
    surrogateIp?: pulumi.Input<boolean>;
    /**
     * Enforce Surrogate IP for Known Browsers. When set to true, IP Surrogate is enforced for all known browsers.
     */
    surrogateIpEnforcedForKnownBrowsers?: pulumi.Input<boolean>;
    /**
     * Refresh Time for re-validation of Surrogacy. The surrogate refresh time (in minutes) to re-validate the IP surrogates.
     */
    surrogateRefreshTimeInMinutes?: pulumi.Input<number>;
    /**
     * Display Refresh Time Unit. The time unit to display for refresh time for re-validation of surrogacy.
     */
    surrogateRefreshTimeUnit?: pulumi.Input<string>;
    /**
     * Timezone of the location. If not specified, it defaults to GMT.
     */
    tz?: pulumi.Input<string>;
    /**
     * Upload bandwidth in bytes. The value `0` implies no Bandwidth Control enforcement.
     */
    upBandwidth?: pulumi.Input<number>;
    vpnCredentials?: pulumi.Input<pulumi.Input<inputs.ZIALocationManagementVpnCredential>[]>;
    /**
     * Enable XFF Forwarding. When set to true, traffic is passed to Zscaler Cloud via the X-Forwarded-For (XFF) header.
     */
    xffForwardEnabled?: pulumi.Input<boolean>;
    /**
     * This parameter was deprecated and no longer has an effect on SSL policy. It remains supported in the API payload in order to maintain backwards compatibility with existing scripts, but it will be removed in future.
     */
    zappSslScanEnabled?: pulumi.Input<boolean>;
}
