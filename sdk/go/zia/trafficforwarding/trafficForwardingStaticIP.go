// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package trafficforwarding

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The **zia_traffic_forwarding_static_ip** resource allows the creation and management of static ip addresses in the Zscaler Internet Access cloud. The resource, can then be associated with other resources such as:
//
// * VPN Credentials of type `IP`
// * Location Management
// * GRE Tunnel
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/zscaler/pulumi-zia/sdk/go/zia/TrafficForwarding"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := TrafficForwarding.NewTrafficForwardingStaticIP(ctx, "example", &TrafficForwarding.TrafficForwardingStaticIPArgs{
//				Comment:     pulumi.String("Example"),
//				GeoOverride: pulumi.Bool(true),
//				IpAddress:   pulumi.String("1.1.1.1"),
//				Latitude:    -36.848461,
//				Longitude:   pulumi.Float64(174.763336),
//				RoutableIp:  pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Static IP resources can be imported by using `<STATIC IP ID>` or `<IP ADDRESS>`as the import ID.
//
// ```sh
//
//	$ pulumi import zia:TrafficForwarding/trafficForwardingStaticIP:TrafficForwardingStaticIP example <static_ip_id>
//
// ```
//
//	or
//
// ```sh
//
//	$ pulumi import zia:TrafficForwarding/trafficForwardingStaticIP:TrafficForwardingStaticIP example <ip_address>
//
// ```
type TrafficForwardingStaticIP struct {
	pulumi.CustomResourceState

	// Additional information about this static IP address
	Comment pulumi.StringPtrOutput `pulumi:"comment"`
	// If not set, geographic coordinates and city are automatically determined from the IP address. Otherwise, the latitude and longitude coordinates must be provided.
	GeoOverride pulumi.BoolOutput `pulumi:"geoOverride"`
	// The static IP address
	IpAddress pulumi.StringOutput `pulumi:"ipAddress"`
	// This is an immutable reference to an entity. which mainly consists of id and name
	LastModifiedBies TrafficForwardingStaticIPLastModifiedByArrayOutput `pulumi:"lastModifiedBies"`
	// Required only if the geoOverride attribute is set. Latitude with 7 digit precision after decimal point, ranges between -90 and 90 degrees.
	Latitude pulumi.Float64Output `pulumi:"latitude"`
	// Required only if the geoOverride attribute is set. Longitude with 7 digit precision after decimal point, ranges between -180 and 180 degrees.
	Longitude pulumi.Float64Output `pulumi:"longitude"`
	// This is an immutable reference to an entity. which mainly consists of id and name
	ManagedBies TrafficForwardingStaticIPManagedByArrayOutput `pulumi:"managedBies"`
	// Indicates whether a non-RFC 1918 IP address is publicly routable. This attribute is ignored if there is no ZIA Private Service Edge associated to the organization.
	RoutableIp pulumi.BoolOutput `pulumi:"routableIp"`
	// The ID of the Static IP.
	StaticIpId pulumi.IntOutput `pulumi:"staticIpId"`
}

// NewTrafficForwardingStaticIP registers a new resource with the given unique name, arguments, and options.
func NewTrafficForwardingStaticIP(ctx *pulumi.Context,
	name string, args *TrafficForwardingStaticIPArgs, opts ...pulumi.ResourceOption) (*TrafficForwardingStaticIP, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IpAddress == nil {
		return nil, errors.New("invalid value for required argument 'IpAddress'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource TrafficForwardingStaticIP
	err := ctx.RegisterResource("zia:TrafficForwarding/trafficForwardingStaticIP:TrafficForwardingStaticIP", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTrafficForwardingStaticIP gets an existing TrafficForwardingStaticIP resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTrafficForwardingStaticIP(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TrafficForwardingStaticIPState, opts ...pulumi.ResourceOption) (*TrafficForwardingStaticIP, error) {
	var resource TrafficForwardingStaticIP
	err := ctx.ReadResource("zia:TrafficForwarding/trafficForwardingStaticIP:TrafficForwardingStaticIP", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TrafficForwardingStaticIP resources.
type trafficForwardingStaticIPState struct {
	// Additional information about this static IP address
	Comment *string `pulumi:"comment"`
	// If not set, geographic coordinates and city are automatically determined from the IP address. Otherwise, the latitude and longitude coordinates must be provided.
	GeoOverride *bool `pulumi:"geoOverride"`
	// The static IP address
	IpAddress *string `pulumi:"ipAddress"`
	// This is an immutable reference to an entity. which mainly consists of id and name
	LastModifiedBies []TrafficForwardingStaticIPLastModifiedBy `pulumi:"lastModifiedBies"`
	// Required only if the geoOverride attribute is set. Latitude with 7 digit precision after decimal point, ranges between -90 and 90 degrees.
	Latitude *float64 `pulumi:"latitude"`
	// Required only if the geoOverride attribute is set. Longitude with 7 digit precision after decimal point, ranges between -180 and 180 degrees.
	Longitude *float64 `pulumi:"longitude"`
	// This is an immutable reference to an entity. which mainly consists of id and name
	ManagedBies []TrafficForwardingStaticIPManagedBy `pulumi:"managedBies"`
	// Indicates whether a non-RFC 1918 IP address is publicly routable. This attribute is ignored if there is no ZIA Private Service Edge associated to the organization.
	RoutableIp *bool `pulumi:"routableIp"`
	// The ID of the Static IP.
	StaticIpId *int `pulumi:"staticIpId"`
}

type TrafficForwardingStaticIPState struct {
	// Additional information about this static IP address
	Comment pulumi.StringPtrInput
	// If not set, geographic coordinates and city are automatically determined from the IP address. Otherwise, the latitude and longitude coordinates must be provided.
	GeoOverride pulumi.BoolPtrInput
	// The static IP address
	IpAddress pulumi.StringPtrInput
	// This is an immutable reference to an entity. which mainly consists of id and name
	LastModifiedBies TrafficForwardingStaticIPLastModifiedByArrayInput
	// Required only if the geoOverride attribute is set. Latitude with 7 digit precision after decimal point, ranges between -90 and 90 degrees.
	Latitude pulumi.Float64PtrInput
	// Required only if the geoOverride attribute is set. Longitude with 7 digit precision after decimal point, ranges between -180 and 180 degrees.
	Longitude pulumi.Float64PtrInput
	// This is an immutable reference to an entity. which mainly consists of id and name
	ManagedBies TrafficForwardingStaticIPManagedByArrayInput
	// Indicates whether a non-RFC 1918 IP address is publicly routable. This attribute is ignored if there is no ZIA Private Service Edge associated to the organization.
	RoutableIp pulumi.BoolPtrInput
	// The ID of the Static IP.
	StaticIpId pulumi.IntPtrInput
}

func (TrafficForwardingStaticIPState) ElementType() reflect.Type {
	return reflect.TypeOf((*trafficForwardingStaticIPState)(nil)).Elem()
}

type trafficForwardingStaticIPArgs struct {
	// Additional information about this static IP address
	Comment *string `pulumi:"comment"`
	// If not set, geographic coordinates and city are automatically determined from the IP address. Otherwise, the latitude and longitude coordinates must be provided.
	GeoOverride *bool `pulumi:"geoOverride"`
	// The static IP address
	IpAddress string `pulumi:"ipAddress"`
	// This is an immutable reference to an entity. which mainly consists of id and name
	LastModifiedBies []TrafficForwardingStaticIPLastModifiedBy `pulumi:"lastModifiedBies"`
	// Required only if the geoOverride attribute is set. Latitude with 7 digit precision after decimal point, ranges between -90 and 90 degrees.
	Latitude *float64 `pulumi:"latitude"`
	// Required only if the geoOverride attribute is set. Longitude with 7 digit precision after decimal point, ranges between -180 and 180 degrees.
	Longitude *float64 `pulumi:"longitude"`
	// This is an immutable reference to an entity. which mainly consists of id and name
	ManagedBies []TrafficForwardingStaticIPManagedBy `pulumi:"managedBies"`
	// Indicates whether a non-RFC 1918 IP address is publicly routable. This attribute is ignored if there is no ZIA Private Service Edge associated to the organization.
	RoutableIp *bool `pulumi:"routableIp"`
}

// The set of arguments for constructing a TrafficForwardingStaticIP resource.
type TrafficForwardingStaticIPArgs struct {
	// Additional information about this static IP address
	Comment pulumi.StringPtrInput
	// If not set, geographic coordinates and city are automatically determined from the IP address. Otherwise, the latitude and longitude coordinates must be provided.
	GeoOverride pulumi.BoolPtrInput
	// The static IP address
	IpAddress pulumi.StringInput
	// This is an immutable reference to an entity. which mainly consists of id and name
	LastModifiedBies TrafficForwardingStaticIPLastModifiedByArrayInput
	// Required only if the geoOverride attribute is set. Latitude with 7 digit precision after decimal point, ranges between -90 and 90 degrees.
	Latitude pulumi.Float64PtrInput
	// Required only if the geoOverride attribute is set. Longitude with 7 digit precision after decimal point, ranges between -180 and 180 degrees.
	Longitude pulumi.Float64PtrInput
	// This is an immutable reference to an entity. which mainly consists of id and name
	ManagedBies TrafficForwardingStaticIPManagedByArrayInput
	// Indicates whether a non-RFC 1918 IP address is publicly routable. This attribute is ignored if there is no ZIA Private Service Edge associated to the organization.
	RoutableIp pulumi.BoolPtrInput
}

func (TrafficForwardingStaticIPArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*trafficForwardingStaticIPArgs)(nil)).Elem()
}

type TrafficForwardingStaticIPInput interface {
	pulumi.Input

	ToTrafficForwardingStaticIPOutput() TrafficForwardingStaticIPOutput
	ToTrafficForwardingStaticIPOutputWithContext(ctx context.Context) TrafficForwardingStaticIPOutput
}

func (*TrafficForwardingStaticIP) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficForwardingStaticIP)(nil)).Elem()
}

func (i *TrafficForwardingStaticIP) ToTrafficForwardingStaticIPOutput() TrafficForwardingStaticIPOutput {
	return i.ToTrafficForwardingStaticIPOutputWithContext(context.Background())
}

func (i *TrafficForwardingStaticIP) ToTrafficForwardingStaticIPOutputWithContext(ctx context.Context) TrafficForwardingStaticIPOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficForwardingStaticIPOutput)
}

// TrafficForwardingStaticIPArrayInput is an input type that accepts TrafficForwardingStaticIPArray and TrafficForwardingStaticIPArrayOutput values.
// You can construct a concrete instance of `TrafficForwardingStaticIPArrayInput` via:
//
//	TrafficForwardingStaticIPArray{ TrafficForwardingStaticIPArgs{...} }
type TrafficForwardingStaticIPArrayInput interface {
	pulumi.Input

	ToTrafficForwardingStaticIPArrayOutput() TrafficForwardingStaticIPArrayOutput
	ToTrafficForwardingStaticIPArrayOutputWithContext(context.Context) TrafficForwardingStaticIPArrayOutput
}

type TrafficForwardingStaticIPArray []TrafficForwardingStaticIPInput

func (TrafficForwardingStaticIPArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TrafficForwardingStaticIP)(nil)).Elem()
}

func (i TrafficForwardingStaticIPArray) ToTrafficForwardingStaticIPArrayOutput() TrafficForwardingStaticIPArrayOutput {
	return i.ToTrafficForwardingStaticIPArrayOutputWithContext(context.Background())
}

func (i TrafficForwardingStaticIPArray) ToTrafficForwardingStaticIPArrayOutputWithContext(ctx context.Context) TrafficForwardingStaticIPArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficForwardingStaticIPArrayOutput)
}

// TrafficForwardingStaticIPMapInput is an input type that accepts TrafficForwardingStaticIPMap and TrafficForwardingStaticIPMapOutput values.
// You can construct a concrete instance of `TrafficForwardingStaticIPMapInput` via:
//
//	TrafficForwardingStaticIPMap{ "key": TrafficForwardingStaticIPArgs{...} }
type TrafficForwardingStaticIPMapInput interface {
	pulumi.Input

	ToTrafficForwardingStaticIPMapOutput() TrafficForwardingStaticIPMapOutput
	ToTrafficForwardingStaticIPMapOutputWithContext(context.Context) TrafficForwardingStaticIPMapOutput
}

type TrafficForwardingStaticIPMap map[string]TrafficForwardingStaticIPInput

func (TrafficForwardingStaticIPMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TrafficForwardingStaticIP)(nil)).Elem()
}

func (i TrafficForwardingStaticIPMap) ToTrafficForwardingStaticIPMapOutput() TrafficForwardingStaticIPMapOutput {
	return i.ToTrafficForwardingStaticIPMapOutputWithContext(context.Background())
}

func (i TrafficForwardingStaticIPMap) ToTrafficForwardingStaticIPMapOutputWithContext(ctx context.Context) TrafficForwardingStaticIPMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficForwardingStaticIPMapOutput)
}

type TrafficForwardingStaticIPOutput struct{ *pulumi.OutputState }

func (TrafficForwardingStaticIPOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficForwardingStaticIP)(nil)).Elem()
}

func (o TrafficForwardingStaticIPOutput) ToTrafficForwardingStaticIPOutput() TrafficForwardingStaticIPOutput {
	return o
}

func (o TrafficForwardingStaticIPOutput) ToTrafficForwardingStaticIPOutputWithContext(ctx context.Context) TrafficForwardingStaticIPOutput {
	return o
}

// Additional information about this static IP address
func (o TrafficForwardingStaticIPOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrafficForwardingStaticIP) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

// If not set, geographic coordinates and city are automatically determined from the IP address. Otherwise, the latitude and longitude coordinates must be provided.
func (o TrafficForwardingStaticIPOutput) GeoOverride() pulumi.BoolOutput {
	return o.ApplyT(func(v *TrafficForwardingStaticIP) pulumi.BoolOutput { return v.GeoOverride }).(pulumi.BoolOutput)
}

// The static IP address
func (o TrafficForwardingStaticIPOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *TrafficForwardingStaticIP) pulumi.StringOutput { return v.IpAddress }).(pulumi.StringOutput)
}

// This is an immutable reference to an entity. which mainly consists of id and name
func (o TrafficForwardingStaticIPOutput) LastModifiedBies() TrafficForwardingStaticIPLastModifiedByArrayOutput {
	return o.ApplyT(func(v *TrafficForwardingStaticIP) TrafficForwardingStaticIPLastModifiedByArrayOutput {
		return v.LastModifiedBies
	}).(TrafficForwardingStaticIPLastModifiedByArrayOutput)
}

// Required only if the geoOverride attribute is set. Latitude with 7 digit precision after decimal point, ranges between -90 and 90 degrees.
func (o TrafficForwardingStaticIPOutput) Latitude() pulumi.Float64Output {
	return o.ApplyT(func(v *TrafficForwardingStaticIP) pulumi.Float64Output { return v.Latitude }).(pulumi.Float64Output)
}

// Required only if the geoOverride attribute is set. Longitude with 7 digit precision after decimal point, ranges between -180 and 180 degrees.
func (o TrafficForwardingStaticIPOutput) Longitude() pulumi.Float64Output {
	return o.ApplyT(func(v *TrafficForwardingStaticIP) pulumi.Float64Output { return v.Longitude }).(pulumi.Float64Output)
}

// This is an immutable reference to an entity. which mainly consists of id and name
func (o TrafficForwardingStaticIPOutput) ManagedBies() TrafficForwardingStaticIPManagedByArrayOutput {
	return o.ApplyT(func(v *TrafficForwardingStaticIP) TrafficForwardingStaticIPManagedByArrayOutput { return v.ManagedBies }).(TrafficForwardingStaticIPManagedByArrayOutput)
}

// Indicates whether a non-RFC 1918 IP address is publicly routable. This attribute is ignored if there is no ZIA Private Service Edge associated to the organization.
func (o TrafficForwardingStaticIPOutput) RoutableIp() pulumi.BoolOutput {
	return o.ApplyT(func(v *TrafficForwardingStaticIP) pulumi.BoolOutput { return v.RoutableIp }).(pulumi.BoolOutput)
}

// The ID of the Static IP.
func (o TrafficForwardingStaticIPOutput) StaticIpId() pulumi.IntOutput {
	return o.ApplyT(func(v *TrafficForwardingStaticIP) pulumi.IntOutput { return v.StaticIpId }).(pulumi.IntOutput)
}

type TrafficForwardingStaticIPArrayOutput struct{ *pulumi.OutputState }

func (TrafficForwardingStaticIPArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TrafficForwardingStaticIP)(nil)).Elem()
}

func (o TrafficForwardingStaticIPArrayOutput) ToTrafficForwardingStaticIPArrayOutput() TrafficForwardingStaticIPArrayOutput {
	return o
}

func (o TrafficForwardingStaticIPArrayOutput) ToTrafficForwardingStaticIPArrayOutputWithContext(ctx context.Context) TrafficForwardingStaticIPArrayOutput {
	return o
}

func (o TrafficForwardingStaticIPArrayOutput) Index(i pulumi.IntInput) TrafficForwardingStaticIPOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TrafficForwardingStaticIP {
		return vs[0].([]*TrafficForwardingStaticIP)[vs[1].(int)]
	}).(TrafficForwardingStaticIPOutput)
}

type TrafficForwardingStaticIPMapOutput struct{ *pulumi.OutputState }

func (TrafficForwardingStaticIPMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TrafficForwardingStaticIP)(nil)).Elem()
}

func (o TrafficForwardingStaticIPMapOutput) ToTrafficForwardingStaticIPMapOutput() TrafficForwardingStaticIPMapOutput {
	return o
}

func (o TrafficForwardingStaticIPMapOutput) ToTrafficForwardingStaticIPMapOutputWithContext(ctx context.Context) TrafficForwardingStaticIPMapOutput {
	return o
}

func (o TrafficForwardingStaticIPMapOutput) MapIndex(k pulumi.StringInput) TrafficForwardingStaticIPOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TrafficForwardingStaticIP {
		return vs[0].(map[string]*TrafficForwardingStaticIP)[vs[1].(string)]
	}).(TrafficForwardingStaticIPOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficForwardingStaticIPInput)(nil)).Elem(), &TrafficForwardingStaticIP{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficForwardingStaticIPArrayInput)(nil)).Elem(), TrafficForwardingStaticIPArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficForwardingStaticIPMapInput)(nil)).Elem(), TrafficForwardingStaticIPMap{})
	pulumi.RegisterOutputType(TrafficForwardingStaticIPOutput{})
	pulumi.RegisterOutputType(TrafficForwardingStaticIPArrayOutput{})
	pulumi.RegisterOutputType(TrafficForwardingStaticIPMapOutput{})
}
