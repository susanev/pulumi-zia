// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package locationmanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type LocationManagementVpnCredential struct {
	Comments *string `pulumi:"comments"`
	Fqdn     *string `pulumi:"fqdn"`
	// VPN credential resource id. The value is required if `ipAddresses` are not defined.
	Id           *int    `pulumi:"id"`
	IpAddress    *string `pulumi:"ipAddress"`
	PreSharedKey *string `pulumi:"preSharedKey"`
	Type         *string `pulumi:"type"`
}

// LocationManagementVpnCredentialInput is an input type that accepts LocationManagementVpnCredentialArgs and LocationManagementVpnCredentialOutput values.
// You can construct a concrete instance of `LocationManagementVpnCredentialInput` via:
//
//	LocationManagementVpnCredentialArgs{...}
type LocationManagementVpnCredentialInput interface {
	pulumi.Input

	ToLocationManagementVpnCredentialOutput() LocationManagementVpnCredentialOutput
	ToLocationManagementVpnCredentialOutputWithContext(context.Context) LocationManagementVpnCredentialOutput
}

type LocationManagementVpnCredentialArgs struct {
	Comments pulumi.StringPtrInput `pulumi:"comments"`
	Fqdn     pulumi.StringPtrInput `pulumi:"fqdn"`
	// VPN credential resource id. The value is required if `ipAddresses` are not defined.
	Id           pulumi.IntPtrInput    `pulumi:"id"`
	IpAddress    pulumi.StringPtrInput `pulumi:"ipAddress"`
	PreSharedKey pulumi.StringPtrInput `pulumi:"preSharedKey"`
	Type         pulumi.StringPtrInput `pulumi:"type"`
}

func (LocationManagementVpnCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LocationManagementVpnCredential)(nil)).Elem()
}

func (i LocationManagementVpnCredentialArgs) ToLocationManagementVpnCredentialOutput() LocationManagementVpnCredentialOutput {
	return i.ToLocationManagementVpnCredentialOutputWithContext(context.Background())
}

func (i LocationManagementVpnCredentialArgs) ToLocationManagementVpnCredentialOutputWithContext(ctx context.Context) LocationManagementVpnCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocationManagementVpnCredentialOutput)
}

// LocationManagementVpnCredentialArrayInput is an input type that accepts LocationManagementVpnCredentialArray and LocationManagementVpnCredentialArrayOutput values.
// You can construct a concrete instance of `LocationManagementVpnCredentialArrayInput` via:
//
//	LocationManagementVpnCredentialArray{ LocationManagementVpnCredentialArgs{...} }
type LocationManagementVpnCredentialArrayInput interface {
	pulumi.Input

	ToLocationManagementVpnCredentialArrayOutput() LocationManagementVpnCredentialArrayOutput
	ToLocationManagementVpnCredentialArrayOutputWithContext(context.Context) LocationManagementVpnCredentialArrayOutput
}

type LocationManagementVpnCredentialArray []LocationManagementVpnCredentialInput

func (LocationManagementVpnCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LocationManagementVpnCredential)(nil)).Elem()
}

func (i LocationManagementVpnCredentialArray) ToLocationManagementVpnCredentialArrayOutput() LocationManagementVpnCredentialArrayOutput {
	return i.ToLocationManagementVpnCredentialArrayOutputWithContext(context.Background())
}

func (i LocationManagementVpnCredentialArray) ToLocationManagementVpnCredentialArrayOutputWithContext(ctx context.Context) LocationManagementVpnCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocationManagementVpnCredentialArrayOutput)
}

type LocationManagementVpnCredentialOutput struct{ *pulumi.OutputState }

func (LocationManagementVpnCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LocationManagementVpnCredential)(nil)).Elem()
}

func (o LocationManagementVpnCredentialOutput) ToLocationManagementVpnCredentialOutput() LocationManagementVpnCredentialOutput {
	return o
}

func (o LocationManagementVpnCredentialOutput) ToLocationManagementVpnCredentialOutputWithContext(ctx context.Context) LocationManagementVpnCredentialOutput {
	return o
}

func (o LocationManagementVpnCredentialOutput) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocationManagementVpnCredential) *string { return v.Comments }).(pulumi.StringPtrOutput)
}

func (o LocationManagementVpnCredentialOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocationManagementVpnCredential) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// VPN credential resource id. The value is required if `ipAddresses` are not defined.
func (o LocationManagementVpnCredentialOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LocationManagementVpnCredential) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o LocationManagementVpnCredentialOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocationManagementVpnCredential) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

func (o LocationManagementVpnCredentialOutput) PreSharedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocationManagementVpnCredential) *string { return v.PreSharedKey }).(pulumi.StringPtrOutput)
}

func (o LocationManagementVpnCredentialOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocationManagementVpnCredential) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type LocationManagementVpnCredentialArrayOutput struct{ *pulumi.OutputState }

func (LocationManagementVpnCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LocationManagementVpnCredential)(nil)).Elem()
}

func (o LocationManagementVpnCredentialArrayOutput) ToLocationManagementVpnCredentialArrayOutput() LocationManagementVpnCredentialArrayOutput {
	return o
}

func (o LocationManagementVpnCredentialArrayOutput) ToLocationManagementVpnCredentialArrayOutputWithContext(ctx context.Context) LocationManagementVpnCredentialArrayOutput {
	return o
}

func (o LocationManagementVpnCredentialArrayOutput) Index(i pulumi.IntInput) LocationManagementVpnCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LocationManagementVpnCredential {
		return vs[0].([]LocationManagementVpnCredential)[vs[1].(int)]
	}).(LocationManagementVpnCredentialOutput)
}

type GetLocationManagementVpnCredential struct {
	// (String) Additional information about this VPN credential.
	// Additional information about this VPN credential.
	Comments string `pulumi:"comments"`
	// (String) Fully Qualified Domain Name. Applicable only to `UFQDN` or `XAUTH` (or `HOSTED_MOBILE_USERS`) auth type.
	Fqdn string `pulumi:"fqdn"`
	// The ID of the location to be exported.
	Id int `pulumi:"id"`
	// (List of Object)
	Locations []GetLocationManagementVpnCredentialLocation `pulumi:"locations"`
	// (List of Object)
	ManagedBies []GetLocationManagementVpnCredentialManagedBy `pulumi:"managedBies"`
	// (String) Pre-shared key. This is a required field for `UFQDN` and IP auth type.
	PreSharedKey string `pulumi:"preSharedKey"`
	// (String) VPN authentication type (i.e., how the VPN credential is sent to the server). It is not modifiable after VpnCredential is created.
	Type string `pulumi:"type"`
}

// GetLocationManagementVpnCredentialInput is an input type that accepts GetLocationManagementVpnCredentialArgs and GetLocationManagementVpnCredentialOutput values.
// You can construct a concrete instance of `GetLocationManagementVpnCredentialInput` via:
//
//	GetLocationManagementVpnCredentialArgs{...}
type GetLocationManagementVpnCredentialInput interface {
	pulumi.Input

	ToGetLocationManagementVpnCredentialOutput() GetLocationManagementVpnCredentialOutput
	ToGetLocationManagementVpnCredentialOutputWithContext(context.Context) GetLocationManagementVpnCredentialOutput
}

type GetLocationManagementVpnCredentialArgs struct {
	// (String) Additional information about this VPN credential.
	// Additional information about this VPN credential.
	Comments pulumi.StringInput `pulumi:"comments"`
	// (String) Fully Qualified Domain Name. Applicable only to `UFQDN` or `XAUTH` (or `HOSTED_MOBILE_USERS`) auth type.
	Fqdn pulumi.StringInput `pulumi:"fqdn"`
	// The ID of the location to be exported.
	Id pulumi.IntInput `pulumi:"id"`
	// (List of Object)
	Locations GetLocationManagementVpnCredentialLocationArrayInput `pulumi:"locations"`
	// (List of Object)
	ManagedBies GetLocationManagementVpnCredentialManagedByArrayInput `pulumi:"managedBies"`
	// (String) Pre-shared key. This is a required field for `UFQDN` and IP auth type.
	PreSharedKey pulumi.StringInput `pulumi:"preSharedKey"`
	// (String) VPN authentication type (i.e., how the VPN credential is sent to the server). It is not modifiable after VpnCredential is created.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetLocationManagementVpnCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocationManagementVpnCredential)(nil)).Elem()
}

func (i GetLocationManagementVpnCredentialArgs) ToGetLocationManagementVpnCredentialOutput() GetLocationManagementVpnCredentialOutput {
	return i.ToGetLocationManagementVpnCredentialOutputWithContext(context.Background())
}

func (i GetLocationManagementVpnCredentialArgs) ToGetLocationManagementVpnCredentialOutputWithContext(ctx context.Context) GetLocationManagementVpnCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocationManagementVpnCredentialOutput)
}

// GetLocationManagementVpnCredentialArrayInput is an input type that accepts GetLocationManagementVpnCredentialArray and GetLocationManagementVpnCredentialArrayOutput values.
// You can construct a concrete instance of `GetLocationManagementVpnCredentialArrayInput` via:
//
//	GetLocationManagementVpnCredentialArray{ GetLocationManagementVpnCredentialArgs{...} }
type GetLocationManagementVpnCredentialArrayInput interface {
	pulumi.Input

	ToGetLocationManagementVpnCredentialArrayOutput() GetLocationManagementVpnCredentialArrayOutput
	ToGetLocationManagementVpnCredentialArrayOutputWithContext(context.Context) GetLocationManagementVpnCredentialArrayOutput
}

type GetLocationManagementVpnCredentialArray []GetLocationManagementVpnCredentialInput

func (GetLocationManagementVpnCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLocationManagementVpnCredential)(nil)).Elem()
}

func (i GetLocationManagementVpnCredentialArray) ToGetLocationManagementVpnCredentialArrayOutput() GetLocationManagementVpnCredentialArrayOutput {
	return i.ToGetLocationManagementVpnCredentialArrayOutputWithContext(context.Background())
}

func (i GetLocationManagementVpnCredentialArray) ToGetLocationManagementVpnCredentialArrayOutputWithContext(ctx context.Context) GetLocationManagementVpnCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocationManagementVpnCredentialArrayOutput)
}

type GetLocationManagementVpnCredentialOutput struct{ *pulumi.OutputState }

func (GetLocationManagementVpnCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocationManagementVpnCredential)(nil)).Elem()
}

func (o GetLocationManagementVpnCredentialOutput) ToGetLocationManagementVpnCredentialOutput() GetLocationManagementVpnCredentialOutput {
	return o
}

func (o GetLocationManagementVpnCredentialOutput) ToGetLocationManagementVpnCredentialOutputWithContext(ctx context.Context) GetLocationManagementVpnCredentialOutput {
	return o
}

// (String) Additional information about this VPN credential.
// Additional information about this VPN credential.
func (o GetLocationManagementVpnCredentialOutput) Comments() pulumi.StringOutput {
	return o.ApplyT(func(v GetLocationManagementVpnCredential) string { return v.Comments }).(pulumi.StringOutput)
}

// (String) Fully Qualified Domain Name. Applicable only to `UFQDN` or `XAUTH` (or `HOSTED_MOBILE_USERS`) auth type.
func (o GetLocationManagementVpnCredentialOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v GetLocationManagementVpnCredential) string { return v.Fqdn }).(pulumi.StringOutput)
}

// The ID of the location to be exported.
func (o GetLocationManagementVpnCredentialOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetLocationManagementVpnCredential) int { return v.Id }).(pulumi.IntOutput)
}

// (List of Object)
func (o GetLocationManagementVpnCredentialOutput) Locations() GetLocationManagementVpnCredentialLocationArrayOutput {
	return o.ApplyT(func(v GetLocationManagementVpnCredential) []GetLocationManagementVpnCredentialLocation {
		return v.Locations
	}).(GetLocationManagementVpnCredentialLocationArrayOutput)
}

// (List of Object)
func (o GetLocationManagementVpnCredentialOutput) ManagedBies() GetLocationManagementVpnCredentialManagedByArrayOutput {
	return o.ApplyT(func(v GetLocationManagementVpnCredential) []GetLocationManagementVpnCredentialManagedBy {
		return v.ManagedBies
	}).(GetLocationManagementVpnCredentialManagedByArrayOutput)
}

// (String) Pre-shared key. This is a required field for `UFQDN` and IP auth type.
func (o GetLocationManagementVpnCredentialOutput) PreSharedKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetLocationManagementVpnCredential) string { return v.PreSharedKey }).(pulumi.StringOutput)
}

// (String) VPN authentication type (i.e., how the VPN credential is sent to the server). It is not modifiable after VpnCredential is created.
func (o GetLocationManagementVpnCredentialOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetLocationManagementVpnCredential) string { return v.Type }).(pulumi.StringOutput)
}

type GetLocationManagementVpnCredentialArrayOutput struct{ *pulumi.OutputState }

func (GetLocationManagementVpnCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLocationManagementVpnCredential)(nil)).Elem()
}

func (o GetLocationManagementVpnCredentialArrayOutput) ToGetLocationManagementVpnCredentialArrayOutput() GetLocationManagementVpnCredentialArrayOutput {
	return o
}

func (o GetLocationManagementVpnCredentialArrayOutput) ToGetLocationManagementVpnCredentialArrayOutputWithContext(ctx context.Context) GetLocationManagementVpnCredentialArrayOutput {
	return o
}

func (o GetLocationManagementVpnCredentialArrayOutput) Index(i pulumi.IntInput) GetLocationManagementVpnCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLocationManagementVpnCredential {
		return vs[0].([]GetLocationManagementVpnCredential)[vs[1].(int)]
	}).(GetLocationManagementVpnCredentialOutput)
}

type GetLocationManagementVpnCredentialLocation struct {
	// (Map of String)
	Extensions map[string]string `pulumi:"extensions"`
	// The ID of the location to be exported.
	Id int `pulumi:"id"`
	// The name of the location to be exported.
	Name string `pulumi:"name"`
}

// GetLocationManagementVpnCredentialLocationInput is an input type that accepts GetLocationManagementVpnCredentialLocationArgs and GetLocationManagementVpnCredentialLocationOutput values.
// You can construct a concrete instance of `GetLocationManagementVpnCredentialLocationInput` via:
//
//	GetLocationManagementVpnCredentialLocationArgs{...}
type GetLocationManagementVpnCredentialLocationInput interface {
	pulumi.Input

	ToGetLocationManagementVpnCredentialLocationOutput() GetLocationManagementVpnCredentialLocationOutput
	ToGetLocationManagementVpnCredentialLocationOutputWithContext(context.Context) GetLocationManagementVpnCredentialLocationOutput
}

type GetLocationManagementVpnCredentialLocationArgs struct {
	// (Map of String)
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// The ID of the location to be exported.
	Id pulumi.IntInput `pulumi:"id"`
	// The name of the location to be exported.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetLocationManagementVpnCredentialLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocationManagementVpnCredentialLocation)(nil)).Elem()
}

func (i GetLocationManagementVpnCredentialLocationArgs) ToGetLocationManagementVpnCredentialLocationOutput() GetLocationManagementVpnCredentialLocationOutput {
	return i.ToGetLocationManagementVpnCredentialLocationOutputWithContext(context.Background())
}

func (i GetLocationManagementVpnCredentialLocationArgs) ToGetLocationManagementVpnCredentialLocationOutputWithContext(ctx context.Context) GetLocationManagementVpnCredentialLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocationManagementVpnCredentialLocationOutput)
}

// GetLocationManagementVpnCredentialLocationArrayInput is an input type that accepts GetLocationManagementVpnCredentialLocationArray and GetLocationManagementVpnCredentialLocationArrayOutput values.
// You can construct a concrete instance of `GetLocationManagementVpnCredentialLocationArrayInput` via:
//
//	GetLocationManagementVpnCredentialLocationArray{ GetLocationManagementVpnCredentialLocationArgs{...} }
type GetLocationManagementVpnCredentialLocationArrayInput interface {
	pulumi.Input

	ToGetLocationManagementVpnCredentialLocationArrayOutput() GetLocationManagementVpnCredentialLocationArrayOutput
	ToGetLocationManagementVpnCredentialLocationArrayOutputWithContext(context.Context) GetLocationManagementVpnCredentialLocationArrayOutput
}

type GetLocationManagementVpnCredentialLocationArray []GetLocationManagementVpnCredentialLocationInput

func (GetLocationManagementVpnCredentialLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLocationManagementVpnCredentialLocation)(nil)).Elem()
}

func (i GetLocationManagementVpnCredentialLocationArray) ToGetLocationManagementVpnCredentialLocationArrayOutput() GetLocationManagementVpnCredentialLocationArrayOutput {
	return i.ToGetLocationManagementVpnCredentialLocationArrayOutputWithContext(context.Background())
}

func (i GetLocationManagementVpnCredentialLocationArray) ToGetLocationManagementVpnCredentialLocationArrayOutputWithContext(ctx context.Context) GetLocationManagementVpnCredentialLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocationManagementVpnCredentialLocationArrayOutput)
}

type GetLocationManagementVpnCredentialLocationOutput struct{ *pulumi.OutputState }

func (GetLocationManagementVpnCredentialLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocationManagementVpnCredentialLocation)(nil)).Elem()
}

func (o GetLocationManagementVpnCredentialLocationOutput) ToGetLocationManagementVpnCredentialLocationOutput() GetLocationManagementVpnCredentialLocationOutput {
	return o
}

func (o GetLocationManagementVpnCredentialLocationOutput) ToGetLocationManagementVpnCredentialLocationOutputWithContext(ctx context.Context) GetLocationManagementVpnCredentialLocationOutput {
	return o
}

// (Map of String)
func (o GetLocationManagementVpnCredentialLocationOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetLocationManagementVpnCredentialLocation) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// The ID of the location to be exported.
func (o GetLocationManagementVpnCredentialLocationOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetLocationManagementVpnCredentialLocation) int { return v.Id }).(pulumi.IntOutput)
}

// The name of the location to be exported.
func (o GetLocationManagementVpnCredentialLocationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLocationManagementVpnCredentialLocation) string { return v.Name }).(pulumi.StringOutput)
}

type GetLocationManagementVpnCredentialLocationArrayOutput struct{ *pulumi.OutputState }

func (GetLocationManagementVpnCredentialLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLocationManagementVpnCredentialLocation)(nil)).Elem()
}

func (o GetLocationManagementVpnCredentialLocationArrayOutput) ToGetLocationManagementVpnCredentialLocationArrayOutput() GetLocationManagementVpnCredentialLocationArrayOutput {
	return o
}

func (o GetLocationManagementVpnCredentialLocationArrayOutput) ToGetLocationManagementVpnCredentialLocationArrayOutputWithContext(ctx context.Context) GetLocationManagementVpnCredentialLocationArrayOutput {
	return o
}

func (o GetLocationManagementVpnCredentialLocationArrayOutput) Index(i pulumi.IntInput) GetLocationManagementVpnCredentialLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLocationManagementVpnCredentialLocation {
		return vs[0].([]GetLocationManagementVpnCredentialLocation)[vs[1].(int)]
	}).(GetLocationManagementVpnCredentialLocationOutput)
}

type GetLocationManagementVpnCredentialManagedBy struct {
	// (Map of String)
	Extensions map[string]string `pulumi:"extensions"`
	// The ID of the location to be exported.
	Id int `pulumi:"id"`
	// The name of the location to be exported.
	Name string `pulumi:"name"`
}

// GetLocationManagementVpnCredentialManagedByInput is an input type that accepts GetLocationManagementVpnCredentialManagedByArgs and GetLocationManagementVpnCredentialManagedByOutput values.
// You can construct a concrete instance of `GetLocationManagementVpnCredentialManagedByInput` via:
//
//	GetLocationManagementVpnCredentialManagedByArgs{...}
type GetLocationManagementVpnCredentialManagedByInput interface {
	pulumi.Input

	ToGetLocationManagementVpnCredentialManagedByOutput() GetLocationManagementVpnCredentialManagedByOutput
	ToGetLocationManagementVpnCredentialManagedByOutputWithContext(context.Context) GetLocationManagementVpnCredentialManagedByOutput
}

type GetLocationManagementVpnCredentialManagedByArgs struct {
	// (Map of String)
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// The ID of the location to be exported.
	Id pulumi.IntInput `pulumi:"id"`
	// The name of the location to be exported.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetLocationManagementVpnCredentialManagedByArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocationManagementVpnCredentialManagedBy)(nil)).Elem()
}

func (i GetLocationManagementVpnCredentialManagedByArgs) ToGetLocationManagementVpnCredentialManagedByOutput() GetLocationManagementVpnCredentialManagedByOutput {
	return i.ToGetLocationManagementVpnCredentialManagedByOutputWithContext(context.Background())
}

func (i GetLocationManagementVpnCredentialManagedByArgs) ToGetLocationManagementVpnCredentialManagedByOutputWithContext(ctx context.Context) GetLocationManagementVpnCredentialManagedByOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocationManagementVpnCredentialManagedByOutput)
}

// GetLocationManagementVpnCredentialManagedByArrayInput is an input type that accepts GetLocationManagementVpnCredentialManagedByArray and GetLocationManagementVpnCredentialManagedByArrayOutput values.
// You can construct a concrete instance of `GetLocationManagementVpnCredentialManagedByArrayInput` via:
//
//	GetLocationManagementVpnCredentialManagedByArray{ GetLocationManagementVpnCredentialManagedByArgs{...} }
type GetLocationManagementVpnCredentialManagedByArrayInput interface {
	pulumi.Input

	ToGetLocationManagementVpnCredentialManagedByArrayOutput() GetLocationManagementVpnCredentialManagedByArrayOutput
	ToGetLocationManagementVpnCredentialManagedByArrayOutputWithContext(context.Context) GetLocationManagementVpnCredentialManagedByArrayOutput
}

type GetLocationManagementVpnCredentialManagedByArray []GetLocationManagementVpnCredentialManagedByInput

func (GetLocationManagementVpnCredentialManagedByArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLocationManagementVpnCredentialManagedBy)(nil)).Elem()
}

func (i GetLocationManagementVpnCredentialManagedByArray) ToGetLocationManagementVpnCredentialManagedByArrayOutput() GetLocationManagementVpnCredentialManagedByArrayOutput {
	return i.ToGetLocationManagementVpnCredentialManagedByArrayOutputWithContext(context.Background())
}

func (i GetLocationManagementVpnCredentialManagedByArray) ToGetLocationManagementVpnCredentialManagedByArrayOutputWithContext(ctx context.Context) GetLocationManagementVpnCredentialManagedByArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocationManagementVpnCredentialManagedByArrayOutput)
}

type GetLocationManagementVpnCredentialManagedByOutput struct{ *pulumi.OutputState }

func (GetLocationManagementVpnCredentialManagedByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocationManagementVpnCredentialManagedBy)(nil)).Elem()
}

func (o GetLocationManagementVpnCredentialManagedByOutput) ToGetLocationManagementVpnCredentialManagedByOutput() GetLocationManagementVpnCredentialManagedByOutput {
	return o
}

func (o GetLocationManagementVpnCredentialManagedByOutput) ToGetLocationManagementVpnCredentialManagedByOutputWithContext(ctx context.Context) GetLocationManagementVpnCredentialManagedByOutput {
	return o
}

// (Map of String)
func (o GetLocationManagementVpnCredentialManagedByOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetLocationManagementVpnCredentialManagedBy) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// The ID of the location to be exported.
func (o GetLocationManagementVpnCredentialManagedByOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetLocationManagementVpnCredentialManagedBy) int { return v.Id }).(pulumi.IntOutput)
}

// The name of the location to be exported.
func (o GetLocationManagementVpnCredentialManagedByOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLocationManagementVpnCredentialManagedBy) string { return v.Name }).(pulumi.StringOutput)
}

type GetLocationManagementVpnCredentialManagedByArrayOutput struct{ *pulumi.OutputState }

func (GetLocationManagementVpnCredentialManagedByArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLocationManagementVpnCredentialManagedBy)(nil)).Elem()
}

func (o GetLocationManagementVpnCredentialManagedByArrayOutput) ToGetLocationManagementVpnCredentialManagedByArrayOutput() GetLocationManagementVpnCredentialManagedByArrayOutput {
	return o
}

func (o GetLocationManagementVpnCredentialManagedByArrayOutput) ToGetLocationManagementVpnCredentialManagedByArrayOutputWithContext(ctx context.Context) GetLocationManagementVpnCredentialManagedByArrayOutput {
	return o
}

func (o GetLocationManagementVpnCredentialManagedByArrayOutput) Index(i pulumi.IntInput) GetLocationManagementVpnCredentialManagedByOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLocationManagementVpnCredentialManagedBy {
		return vs[0].([]GetLocationManagementVpnCredentialManagedBy)[vs[1].(int)]
	}).(GetLocationManagementVpnCredentialManagedByOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LocationManagementVpnCredentialInput)(nil)).Elem(), LocationManagementVpnCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LocationManagementVpnCredentialArrayInput)(nil)).Elem(), LocationManagementVpnCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLocationManagementVpnCredentialInput)(nil)).Elem(), GetLocationManagementVpnCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLocationManagementVpnCredentialArrayInput)(nil)).Elem(), GetLocationManagementVpnCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLocationManagementVpnCredentialLocationInput)(nil)).Elem(), GetLocationManagementVpnCredentialLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLocationManagementVpnCredentialLocationArrayInput)(nil)).Elem(), GetLocationManagementVpnCredentialLocationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLocationManagementVpnCredentialManagedByInput)(nil)).Elem(), GetLocationManagementVpnCredentialManagedByArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLocationManagementVpnCredentialManagedByArrayInput)(nil)).Elem(), GetLocationManagementVpnCredentialManagedByArray{})
	pulumi.RegisterOutputType(LocationManagementVpnCredentialOutput{})
	pulumi.RegisterOutputType(LocationManagementVpnCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetLocationManagementVpnCredentialOutput{})
	pulumi.RegisterOutputType(GetLocationManagementVpnCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetLocationManagementVpnCredentialLocationOutput{})
	pulumi.RegisterOutputType(GetLocationManagementVpnCredentialLocationArrayOutput{})
	pulumi.RegisterOutputType(GetLocationManagementVpnCredentialManagedByOutput{})
	pulumi.RegisterOutputType(GetLocationManagementVpnCredentialManagedByArrayOutput{})
}
