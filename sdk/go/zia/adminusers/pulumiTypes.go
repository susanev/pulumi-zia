// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package adminusers

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AdminUsersAdminScope struct {
	// Based on the admin scope type, the entities can be the ID/name pair of departments, locations, or location groups.
	ScopeEntities *AdminUsersAdminScopeScopeEntities `pulumi:"scopeEntities"`
	// Only applicable for the LOCATION_GROUP admin scope type, in which case this attribute gives the list of ID/name pairs of locations within the location group.
	ScopeGroupMemberEntities *AdminUsersAdminScopeScopeGroupMemberEntities `pulumi:"scopeGroupMemberEntities"`
	// The admin scope type. The attribute name is subject to change.
	Type *string `pulumi:"type"`
}

// AdminUsersAdminScopeInput is an input type that accepts AdminUsersAdminScopeArgs and AdminUsersAdminScopeOutput values.
// You can construct a concrete instance of `AdminUsersAdminScopeInput` via:
//
//	AdminUsersAdminScopeArgs{...}
type AdminUsersAdminScopeInput interface {
	pulumi.Input

	ToAdminUsersAdminScopeOutput() AdminUsersAdminScopeOutput
	ToAdminUsersAdminScopeOutputWithContext(context.Context) AdminUsersAdminScopeOutput
}

type AdminUsersAdminScopeArgs struct {
	// Based on the admin scope type, the entities can be the ID/name pair of departments, locations, or location groups.
	ScopeEntities AdminUsersAdminScopeScopeEntitiesPtrInput `pulumi:"scopeEntities"`
	// Only applicable for the LOCATION_GROUP admin scope type, in which case this attribute gives the list of ID/name pairs of locations within the location group.
	ScopeGroupMemberEntities AdminUsersAdminScopeScopeGroupMemberEntitiesPtrInput `pulumi:"scopeGroupMemberEntities"`
	// The admin scope type. The attribute name is subject to change.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (AdminUsersAdminScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdminUsersAdminScope)(nil)).Elem()
}

func (i AdminUsersAdminScopeArgs) ToAdminUsersAdminScopeOutput() AdminUsersAdminScopeOutput {
	return i.ToAdminUsersAdminScopeOutputWithContext(context.Background())
}

func (i AdminUsersAdminScopeArgs) ToAdminUsersAdminScopeOutputWithContext(ctx context.Context) AdminUsersAdminScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdminUsersAdminScopeOutput)
}

// AdminUsersAdminScopeArrayInput is an input type that accepts AdminUsersAdminScopeArray and AdminUsersAdminScopeArrayOutput values.
// You can construct a concrete instance of `AdminUsersAdminScopeArrayInput` via:
//
//	AdminUsersAdminScopeArray{ AdminUsersAdminScopeArgs{...} }
type AdminUsersAdminScopeArrayInput interface {
	pulumi.Input

	ToAdminUsersAdminScopeArrayOutput() AdminUsersAdminScopeArrayOutput
	ToAdminUsersAdminScopeArrayOutputWithContext(context.Context) AdminUsersAdminScopeArrayOutput
}

type AdminUsersAdminScopeArray []AdminUsersAdminScopeInput

func (AdminUsersAdminScopeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdminUsersAdminScope)(nil)).Elem()
}

func (i AdminUsersAdminScopeArray) ToAdminUsersAdminScopeArrayOutput() AdminUsersAdminScopeArrayOutput {
	return i.ToAdminUsersAdminScopeArrayOutputWithContext(context.Background())
}

func (i AdminUsersAdminScopeArray) ToAdminUsersAdminScopeArrayOutputWithContext(ctx context.Context) AdminUsersAdminScopeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdminUsersAdminScopeArrayOutput)
}

type AdminUsersAdminScopeOutput struct{ *pulumi.OutputState }

func (AdminUsersAdminScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdminUsersAdminScope)(nil)).Elem()
}

func (o AdminUsersAdminScopeOutput) ToAdminUsersAdminScopeOutput() AdminUsersAdminScopeOutput {
	return o
}

func (o AdminUsersAdminScopeOutput) ToAdminUsersAdminScopeOutputWithContext(ctx context.Context) AdminUsersAdminScopeOutput {
	return o
}

// Based on the admin scope type, the entities can be the ID/name pair of departments, locations, or location groups.
func (o AdminUsersAdminScopeOutput) ScopeEntities() AdminUsersAdminScopeScopeEntitiesPtrOutput {
	return o.ApplyT(func(v AdminUsersAdminScope) *AdminUsersAdminScopeScopeEntities { return v.ScopeEntities }).(AdminUsersAdminScopeScopeEntitiesPtrOutput)
}

// Only applicable for the LOCATION_GROUP admin scope type, in which case this attribute gives the list of ID/name pairs of locations within the location group.
func (o AdminUsersAdminScopeOutput) ScopeGroupMemberEntities() AdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutput {
	return o.ApplyT(func(v AdminUsersAdminScope) *AdminUsersAdminScopeScopeGroupMemberEntities {
		return v.ScopeGroupMemberEntities
	}).(AdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutput)
}

// The admin scope type. The attribute name is subject to change.
func (o AdminUsersAdminScopeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdminUsersAdminScope) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type AdminUsersAdminScopeArrayOutput struct{ *pulumi.OutputState }

func (AdminUsersAdminScopeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdminUsersAdminScope)(nil)).Elem()
}

func (o AdminUsersAdminScopeArrayOutput) ToAdminUsersAdminScopeArrayOutput() AdminUsersAdminScopeArrayOutput {
	return o
}

func (o AdminUsersAdminScopeArrayOutput) ToAdminUsersAdminScopeArrayOutputWithContext(ctx context.Context) AdminUsersAdminScopeArrayOutput {
	return o
}

func (o AdminUsersAdminScopeArrayOutput) Index(i pulumi.IntInput) AdminUsersAdminScopeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AdminUsersAdminScope {
		return vs[0].([]AdminUsersAdminScope)[vs[1].(int)]
	}).(AdminUsersAdminScopeOutput)
}

type AdminUsersAdminScopeScopeEntities struct {
	// Identifier that uniquely identifies an entity
	Ids []int `pulumi:"ids"`
}

// AdminUsersAdminScopeScopeEntitiesInput is an input type that accepts AdminUsersAdminScopeScopeEntitiesArgs and AdminUsersAdminScopeScopeEntitiesOutput values.
// You can construct a concrete instance of `AdminUsersAdminScopeScopeEntitiesInput` via:
//
//	AdminUsersAdminScopeScopeEntitiesArgs{...}
type AdminUsersAdminScopeScopeEntitiesInput interface {
	pulumi.Input

	ToAdminUsersAdminScopeScopeEntitiesOutput() AdminUsersAdminScopeScopeEntitiesOutput
	ToAdminUsersAdminScopeScopeEntitiesOutputWithContext(context.Context) AdminUsersAdminScopeScopeEntitiesOutput
}

type AdminUsersAdminScopeScopeEntitiesArgs struct {
	// Identifier that uniquely identifies an entity
	Ids pulumi.IntArrayInput `pulumi:"ids"`
}

func (AdminUsersAdminScopeScopeEntitiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdminUsersAdminScopeScopeEntities)(nil)).Elem()
}

func (i AdminUsersAdminScopeScopeEntitiesArgs) ToAdminUsersAdminScopeScopeEntitiesOutput() AdminUsersAdminScopeScopeEntitiesOutput {
	return i.ToAdminUsersAdminScopeScopeEntitiesOutputWithContext(context.Background())
}

func (i AdminUsersAdminScopeScopeEntitiesArgs) ToAdminUsersAdminScopeScopeEntitiesOutputWithContext(ctx context.Context) AdminUsersAdminScopeScopeEntitiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdminUsersAdminScopeScopeEntitiesOutput)
}

func (i AdminUsersAdminScopeScopeEntitiesArgs) ToAdminUsersAdminScopeScopeEntitiesPtrOutput() AdminUsersAdminScopeScopeEntitiesPtrOutput {
	return i.ToAdminUsersAdminScopeScopeEntitiesPtrOutputWithContext(context.Background())
}

func (i AdminUsersAdminScopeScopeEntitiesArgs) ToAdminUsersAdminScopeScopeEntitiesPtrOutputWithContext(ctx context.Context) AdminUsersAdminScopeScopeEntitiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdminUsersAdminScopeScopeEntitiesOutput).ToAdminUsersAdminScopeScopeEntitiesPtrOutputWithContext(ctx)
}

// AdminUsersAdminScopeScopeEntitiesPtrInput is an input type that accepts AdminUsersAdminScopeScopeEntitiesArgs, AdminUsersAdminScopeScopeEntitiesPtr and AdminUsersAdminScopeScopeEntitiesPtrOutput values.
// You can construct a concrete instance of `AdminUsersAdminScopeScopeEntitiesPtrInput` via:
//
//	        AdminUsersAdminScopeScopeEntitiesArgs{...}
//
//	or:
//
//	        nil
type AdminUsersAdminScopeScopeEntitiesPtrInput interface {
	pulumi.Input

	ToAdminUsersAdminScopeScopeEntitiesPtrOutput() AdminUsersAdminScopeScopeEntitiesPtrOutput
	ToAdminUsersAdminScopeScopeEntitiesPtrOutputWithContext(context.Context) AdminUsersAdminScopeScopeEntitiesPtrOutput
}

type adminUsersAdminScopeScopeEntitiesPtrType AdminUsersAdminScopeScopeEntitiesArgs

func AdminUsersAdminScopeScopeEntitiesPtr(v *AdminUsersAdminScopeScopeEntitiesArgs) AdminUsersAdminScopeScopeEntitiesPtrInput {
	return (*adminUsersAdminScopeScopeEntitiesPtrType)(v)
}

func (*adminUsersAdminScopeScopeEntitiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AdminUsersAdminScopeScopeEntities)(nil)).Elem()
}

func (i *adminUsersAdminScopeScopeEntitiesPtrType) ToAdminUsersAdminScopeScopeEntitiesPtrOutput() AdminUsersAdminScopeScopeEntitiesPtrOutput {
	return i.ToAdminUsersAdminScopeScopeEntitiesPtrOutputWithContext(context.Background())
}

func (i *adminUsersAdminScopeScopeEntitiesPtrType) ToAdminUsersAdminScopeScopeEntitiesPtrOutputWithContext(ctx context.Context) AdminUsersAdminScopeScopeEntitiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdminUsersAdminScopeScopeEntitiesPtrOutput)
}

type AdminUsersAdminScopeScopeEntitiesOutput struct{ *pulumi.OutputState }

func (AdminUsersAdminScopeScopeEntitiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdminUsersAdminScopeScopeEntities)(nil)).Elem()
}

func (o AdminUsersAdminScopeScopeEntitiesOutput) ToAdminUsersAdminScopeScopeEntitiesOutput() AdminUsersAdminScopeScopeEntitiesOutput {
	return o
}

func (o AdminUsersAdminScopeScopeEntitiesOutput) ToAdminUsersAdminScopeScopeEntitiesOutputWithContext(ctx context.Context) AdminUsersAdminScopeScopeEntitiesOutput {
	return o
}

func (o AdminUsersAdminScopeScopeEntitiesOutput) ToAdminUsersAdminScopeScopeEntitiesPtrOutput() AdminUsersAdminScopeScopeEntitiesPtrOutput {
	return o.ToAdminUsersAdminScopeScopeEntitiesPtrOutputWithContext(context.Background())
}

func (o AdminUsersAdminScopeScopeEntitiesOutput) ToAdminUsersAdminScopeScopeEntitiesPtrOutputWithContext(ctx context.Context) AdminUsersAdminScopeScopeEntitiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AdminUsersAdminScopeScopeEntities) *AdminUsersAdminScopeScopeEntities {
		return &v
	}).(AdminUsersAdminScopeScopeEntitiesPtrOutput)
}

// Identifier that uniquely identifies an entity
func (o AdminUsersAdminScopeScopeEntitiesOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v AdminUsersAdminScopeScopeEntities) []int { return v.Ids }).(pulumi.IntArrayOutput)
}

type AdminUsersAdminScopeScopeEntitiesPtrOutput struct{ *pulumi.OutputState }

func (AdminUsersAdminScopeScopeEntitiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AdminUsersAdminScopeScopeEntities)(nil)).Elem()
}

func (o AdminUsersAdminScopeScopeEntitiesPtrOutput) ToAdminUsersAdminScopeScopeEntitiesPtrOutput() AdminUsersAdminScopeScopeEntitiesPtrOutput {
	return o
}

func (o AdminUsersAdminScopeScopeEntitiesPtrOutput) ToAdminUsersAdminScopeScopeEntitiesPtrOutputWithContext(ctx context.Context) AdminUsersAdminScopeScopeEntitiesPtrOutput {
	return o
}

func (o AdminUsersAdminScopeScopeEntitiesPtrOutput) Elem() AdminUsersAdminScopeScopeEntitiesOutput {
	return o.ApplyT(func(v *AdminUsersAdminScopeScopeEntities) AdminUsersAdminScopeScopeEntities {
		if v != nil {
			return *v
		}
		var ret AdminUsersAdminScopeScopeEntities
		return ret
	}).(AdminUsersAdminScopeScopeEntitiesOutput)
}

// Identifier that uniquely identifies an entity
func (o AdminUsersAdminScopeScopeEntitiesPtrOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *AdminUsersAdminScopeScopeEntities) []int {
		if v == nil {
			return nil
		}
		return v.Ids
	}).(pulumi.IntArrayOutput)
}

type AdminUsersAdminScopeScopeGroupMemberEntities struct {
	// Identifier that uniquely identifies an entity
	Ids []int `pulumi:"ids"`
}

// AdminUsersAdminScopeScopeGroupMemberEntitiesInput is an input type that accepts AdminUsersAdminScopeScopeGroupMemberEntitiesArgs and AdminUsersAdminScopeScopeGroupMemberEntitiesOutput values.
// You can construct a concrete instance of `AdminUsersAdminScopeScopeGroupMemberEntitiesInput` via:
//
//	AdminUsersAdminScopeScopeGroupMemberEntitiesArgs{...}
type AdminUsersAdminScopeScopeGroupMemberEntitiesInput interface {
	pulumi.Input

	ToAdminUsersAdminScopeScopeGroupMemberEntitiesOutput() AdminUsersAdminScopeScopeGroupMemberEntitiesOutput
	ToAdminUsersAdminScopeScopeGroupMemberEntitiesOutputWithContext(context.Context) AdminUsersAdminScopeScopeGroupMemberEntitiesOutput
}

type AdminUsersAdminScopeScopeGroupMemberEntitiesArgs struct {
	// Identifier that uniquely identifies an entity
	Ids pulumi.IntArrayInput `pulumi:"ids"`
}

func (AdminUsersAdminScopeScopeGroupMemberEntitiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdminUsersAdminScopeScopeGroupMemberEntities)(nil)).Elem()
}

func (i AdminUsersAdminScopeScopeGroupMemberEntitiesArgs) ToAdminUsersAdminScopeScopeGroupMemberEntitiesOutput() AdminUsersAdminScopeScopeGroupMemberEntitiesOutput {
	return i.ToAdminUsersAdminScopeScopeGroupMemberEntitiesOutputWithContext(context.Background())
}

func (i AdminUsersAdminScopeScopeGroupMemberEntitiesArgs) ToAdminUsersAdminScopeScopeGroupMemberEntitiesOutputWithContext(ctx context.Context) AdminUsersAdminScopeScopeGroupMemberEntitiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdminUsersAdminScopeScopeGroupMemberEntitiesOutput)
}

func (i AdminUsersAdminScopeScopeGroupMemberEntitiesArgs) ToAdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutput() AdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutput {
	return i.ToAdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutputWithContext(context.Background())
}

func (i AdminUsersAdminScopeScopeGroupMemberEntitiesArgs) ToAdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutputWithContext(ctx context.Context) AdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdminUsersAdminScopeScopeGroupMemberEntitiesOutput).ToAdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutputWithContext(ctx)
}

// AdminUsersAdminScopeScopeGroupMemberEntitiesPtrInput is an input type that accepts AdminUsersAdminScopeScopeGroupMemberEntitiesArgs, AdminUsersAdminScopeScopeGroupMemberEntitiesPtr and AdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutput values.
// You can construct a concrete instance of `AdminUsersAdminScopeScopeGroupMemberEntitiesPtrInput` via:
//
//	        AdminUsersAdminScopeScopeGroupMemberEntitiesArgs{...}
//
//	or:
//
//	        nil
type AdminUsersAdminScopeScopeGroupMemberEntitiesPtrInput interface {
	pulumi.Input

	ToAdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutput() AdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutput
	ToAdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutputWithContext(context.Context) AdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutput
}

type adminUsersAdminScopeScopeGroupMemberEntitiesPtrType AdminUsersAdminScopeScopeGroupMemberEntitiesArgs

func AdminUsersAdminScopeScopeGroupMemberEntitiesPtr(v *AdminUsersAdminScopeScopeGroupMemberEntitiesArgs) AdminUsersAdminScopeScopeGroupMemberEntitiesPtrInput {
	return (*adminUsersAdminScopeScopeGroupMemberEntitiesPtrType)(v)
}

func (*adminUsersAdminScopeScopeGroupMemberEntitiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AdminUsersAdminScopeScopeGroupMemberEntities)(nil)).Elem()
}

func (i *adminUsersAdminScopeScopeGroupMemberEntitiesPtrType) ToAdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutput() AdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutput {
	return i.ToAdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutputWithContext(context.Background())
}

func (i *adminUsersAdminScopeScopeGroupMemberEntitiesPtrType) ToAdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutputWithContext(ctx context.Context) AdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutput)
}

type AdminUsersAdminScopeScopeGroupMemberEntitiesOutput struct{ *pulumi.OutputState }

func (AdminUsersAdminScopeScopeGroupMemberEntitiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdminUsersAdminScopeScopeGroupMemberEntities)(nil)).Elem()
}

func (o AdminUsersAdminScopeScopeGroupMemberEntitiesOutput) ToAdminUsersAdminScopeScopeGroupMemberEntitiesOutput() AdminUsersAdminScopeScopeGroupMemberEntitiesOutput {
	return o
}

func (o AdminUsersAdminScopeScopeGroupMemberEntitiesOutput) ToAdminUsersAdminScopeScopeGroupMemberEntitiesOutputWithContext(ctx context.Context) AdminUsersAdminScopeScopeGroupMemberEntitiesOutput {
	return o
}

func (o AdminUsersAdminScopeScopeGroupMemberEntitiesOutput) ToAdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutput() AdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutput {
	return o.ToAdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutputWithContext(context.Background())
}

func (o AdminUsersAdminScopeScopeGroupMemberEntitiesOutput) ToAdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutputWithContext(ctx context.Context) AdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AdminUsersAdminScopeScopeGroupMemberEntities) *AdminUsersAdminScopeScopeGroupMemberEntities {
		return &v
	}).(AdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutput)
}

// Identifier that uniquely identifies an entity
func (o AdminUsersAdminScopeScopeGroupMemberEntitiesOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v AdminUsersAdminScopeScopeGroupMemberEntities) []int { return v.Ids }).(pulumi.IntArrayOutput)
}

type AdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutput struct{ *pulumi.OutputState }

func (AdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AdminUsersAdminScopeScopeGroupMemberEntities)(nil)).Elem()
}

func (o AdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutput) ToAdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutput() AdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutput {
	return o
}

func (o AdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutput) ToAdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutputWithContext(ctx context.Context) AdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutput {
	return o
}

func (o AdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutput) Elem() AdminUsersAdminScopeScopeGroupMemberEntitiesOutput {
	return o.ApplyT(func(v *AdminUsersAdminScopeScopeGroupMemberEntities) AdminUsersAdminScopeScopeGroupMemberEntities {
		if v != nil {
			return *v
		}
		var ret AdminUsersAdminScopeScopeGroupMemberEntities
		return ret
	}).(AdminUsersAdminScopeScopeGroupMemberEntitiesOutput)
}

// Identifier that uniquely identifies an entity
func (o AdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *AdminUsersAdminScopeScopeGroupMemberEntities) []int {
		if v == nil {
			return nil
		}
		return v.Ids
	}).(pulumi.IntArrayOutput)
}

type AdminUsersRole struct {
	Extensions map[string]string `pulumi:"extensions"`
	// Identifier that uniquely identifies an entity
	Id            *int  `pulumi:"id"`
	IsNameL10nTag *bool `pulumi:"isNameL10nTag"`
	// The configured name of the entity
	Name *string `pulumi:"name"`
}

// AdminUsersRoleInput is an input type that accepts AdminUsersRoleArgs and AdminUsersRoleOutput values.
// You can construct a concrete instance of `AdminUsersRoleInput` via:
//
//	AdminUsersRoleArgs{...}
type AdminUsersRoleInput interface {
	pulumi.Input

	ToAdminUsersRoleOutput() AdminUsersRoleOutput
	ToAdminUsersRoleOutputWithContext(context.Context) AdminUsersRoleOutput
}

type AdminUsersRoleArgs struct {
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// Identifier that uniquely identifies an entity
	Id            pulumi.IntPtrInput  `pulumi:"id"`
	IsNameL10nTag pulumi.BoolPtrInput `pulumi:"isNameL10nTag"`
	// The configured name of the entity
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (AdminUsersRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdminUsersRole)(nil)).Elem()
}

func (i AdminUsersRoleArgs) ToAdminUsersRoleOutput() AdminUsersRoleOutput {
	return i.ToAdminUsersRoleOutputWithContext(context.Background())
}

func (i AdminUsersRoleArgs) ToAdminUsersRoleOutputWithContext(ctx context.Context) AdminUsersRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdminUsersRoleOutput)
}

// AdminUsersRoleArrayInput is an input type that accepts AdminUsersRoleArray and AdminUsersRoleArrayOutput values.
// You can construct a concrete instance of `AdminUsersRoleArrayInput` via:
//
//	AdminUsersRoleArray{ AdminUsersRoleArgs{...} }
type AdminUsersRoleArrayInput interface {
	pulumi.Input

	ToAdminUsersRoleArrayOutput() AdminUsersRoleArrayOutput
	ToAdminUsersRoleArrayOutputWithContext(context.Context) AdminUsersRoleArrayOutput
}

type AdminUsersRoleArray []AdminUsersRoleInput

func (AdminUsersRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdminUsersRole)(nil)).Elem()
}

func (i AdminUsersRoleArray) ToAdminUsersRoleArrayOutput() AdminUsersRoleArrayOutput {
	return i.ToAdminUsersRoleArrayOutputWithContext(context.Background())
}

func (i AdminUsersRoleArray) ToAdminUsersRoleArrayOutputWithContext(ctx context.Context) AdminUsersRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdminUsersRoleArrayOutput)
}

type AdminUsersRoleOutput struct{ *pulumi.OutputState }

func (AdminUsersRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdminUsersRole)(nil)).Elem()
}

func (o AdminUsersRoleOutput) ToAdminUsersRoleOutput() AdminUsersRoleOutput {
	return o
}

func (o AdminUsersRoleOutput) ToAdminUsersRoleOutputWithContext(ctx context.Context) AdminUsersRoleOutput {
	return o
}

func (o AdminUsersRoleOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v AdminUsersRole) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// Identifier that uniquely identifies an entity
func (o AdminUsersRoleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AdminUsersRole) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o AdminUsersRoleOutput) IsNameL10nTag() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AdminUsersRole) *bool { return v.IsNameL10nTag }).(pulumi.BoolPtrOutput)
}

// The configured name of the entity
func (o AdminUsersRoleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdminUsersRole) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type AdminUsersRoleArrayOutput struct{ *pulumi.OutputState }

func (AdminUsersRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdminUsersRole)(nil)).Elem()
}

func (o AdminUsersRoleArrayOutput) ToAdminUsersRoleArrayOutput() AdminUsersRoleArrayOutput {
	return o
}

func (o AdminUsersRoleArrayOutput) ToAdminUsersRoleArrayOutputWithContext(ctx context.Context) AdminUsersRoleArrayOutput {
	return o
}

func (o AdminUsersRoleArrayOutput) Index(i pulumi.IntInput) AdminUsersRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AdminUsersRole {
		return vs[0].([]AdminUsersRole)[vs[1].(int)]
	}).(AdminUsersRoleOutput)
}

type GetAdminUsersAdminScope struct {
	// (String) Based on the admin scope type, the entities can be the ID/name pair of departments, locations, or location groups.
	ScopeEntities []GetAdminUsersAdminScopeScopeEntity `pulumi:"scopeEntities"`
	// (Number) Only applicable for the LOCATION_GROUP admin scope type, in which case this attribute gives the list of ID/name pairs of locations within the location group.
	ScopeGroupMemberEntities []GetAdminUsersAdminScopeScopeGroupMemberEntity `pulumi:"scopeGroupMemberEntities"`
	// (String) The admin scope type. The attribute name is subject to change.
	Type string `pulumi:"type"`
}

// GetAdminUsersAdminScopeInput is an input type that accepts GetAdminUsersAdminScopeArgs and GetAdminUsersAdminScopeOutput values.
// You can construct a concrete instance of `GetAdminUsersAdminScopeInput` via:
//
//	GetAdminUsersAdminScopeArgs{...}
type GetAdminUsersAdminScopeInput interface {
	pulumi.Input

	ToGetAdminUsersAdminScopeOutput() GetAdminUsersAdminScopeOutput
	ToGetAdminUsersAdminScopeOutputWithContext(context.Context) GetAdminUsersAdminScopeOutput
}

type GetAdminUsersAdminScopeArgs struct {
	// (String) Based on the admin scope type, the entities can be the ID/name pair of departments, locations, or location groups.
	ScopeEntities GetAdminUsersAdminScopeScopeEntityArrayInput `pulumi:"scopeEntities"`
	// (Number) Only applicable for the LOCATION_GROUP admin scope type, in which case this attribute gives the list of ID/name pairs of locations within the location group.
	ScopeGroupMemberEntities GetAdminUsersAdminScopeScopeGroupMemberEntityArrayInput `pulumi:"scopeGroupMemberEntities"`
	// (String) The admin scope type. The attribute name is subject to change.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetAdminUsersAdminScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdminUsersAdminScope)(nil)).Elem()
}

func (i GetAdminUsersAdminScopeArgs) ToGetAdminUsersAdminScopeOutput() GetAdminUsersAdminScopeOutput {
	return i.ToGetAdminUsersAdminScopeOutputWithContext(context.Background())
}

func (i GetAdminUsersAdminScopeArgs) ToGetAdminUsersAdminScopeOutputWithContext(ctx context.Context) GetAdminUsersAdminScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdminUsersAdminScopeOutput)
}

// GetAdminUsersAdminScopeArrayInput is an input type that accepts GetAdminUsersAdminScopeArray and GetAdminUsersAdminScopeArrayOutput values.
// You can construct a concrete instance of `GetAdminUsersAdminScopeArrayInput` via:
//
//	GetAdminUsersAdminScopeArray{ GetAdminUsersAdminScopeArgs{...} }
type GetAdminUsersAdminScopeArrayInput interface {
	pulumi.Input

	ToGetAdminUsersAdminScopeArrayOutput() GetAdminUsersAdminScopeArrayOutput
	ToGetAdminUsersAdminScopeArrayOutputWithContext(context.Context) GetAdminUsersAdminScopeArrayOutput
}

type GetAdminUsersAdminScopeArray []GetAdminUsersAdminScopeInput

func (GetAdminUsersAdminScopeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdminUsersAdminScope)(nil)).Elem()
}

func (i GetAdminUsersAdminScopeArray) ToGetAdminUsersAdminScopeArrayOutput() GetAdminUsersAdminScopeArrayOutput {
	return i.ToGetAdminUsersAdminScopeArrayOutputWithContext(context.Background())
}

func (i GetAdminUsersAdminScopeArray) ToGetAdminUsersAdminScopeArrayOutputWithContext(ctx context.Context) GetAdminUsersAdminScopeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdminUsersAdminScopeArrayOutput)
}

type GetAdminUsersAdminScopeOutput struct{ *pulumi.OutputState }

func (GetAdminUsersAdminScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdminUsersAdminScope)(nil)).Elem()
}

func (o GetAdminUsersAdminScopeOutput) ToGetAdminUsersAdminScopeOutput() GetAdminUsersAdminScopeOutput {
	return o
}

func (o GetAdminUsersAdminScopeOutput) ToGetAdminUsersAdminScopeOutputWithContext(ctx context.Context) GetAdminUsersAdminScopeOutput {
	return o
}

// (String) Based on the admin scope type, the entities can be the ID/name pair of departments, locations, or location groups.
func (o GetAdminUsersAdminScopeOutput) ScopeEntities() GetAdminUsersAdminScopeScopeEntityArrayOutput {
	return o.ApplyT(func(v GetAdminUsersAdminScope) []GetAdminUsersAdminScopeScopeEntity { return v.ScopeEntities }).(GetAdminUsersAdminScopeScopeEntityArrayOutput)
}

// (Number) Only applicable for the LOCATION_GROUP admin scope type, in which case this attribute gives the list of ID/name pairs of locations within the location group.
func (o GetAdminUsersAdminScopeOutput) ScopeGroupMemberEntities() GetAdminUsersAdminScopeScopeGroupMemberEntityArrayOutput {
	return o.ApplyT(func(v GetAdminUsersAdminScope) []GetAdminUsersAdminScopeScopeGroupMemberEntity {
		return v.ScopeGroupMemberEntities
	}).(GetAdminUsersAdminScopeScopeGroupMemberEntityArrayOutput)
}

// (String) The admin scope type. The attribute name is subject to change.
func (o GetAdminUsersAdminScopeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdminUsersAdminScope) string { return v.Type }).(pulumi.StringOutput)
}

type GetAdminUsersAdminScopeArrayOutput struct{ *pulumi.OutputState }

func (GetAdminUsersAdminScopeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdminUsersAdminScope)(nil)).Elem()
}

func (o GetAdminUsersAdminScopeArrayOutput) ToGetAdminUsersAdminScopeArrayOutput() GetAdminUsersAdminScopeArrayOutput {
	return o
}

func (o GetAdminUsersAdminScopeArrayOutput) ToGetAdminUsersAdminScopeArrayOutputWithContext(ctx context.Context) GetAdminUsersAdminScopeArrayOutput {
	return o
}

func (o GetAdminUsersAdminScopeArrayOutput) Index(i pulumi.IntInput) GetAdminUsersAdminScopeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdminUsersAdminScope {
		return vs[0].([]GetAdminUsersAdminScope)[vs[1].(int)]
	}).(GetAdminUsersAdminScopeOutput)
}

type GetAdminUsersAdminScopeScopeEntity struct {
	Extensions map[string]string `pulumi:"extensions"`
	// The ID of the admin user to be exported.
	Id int `pulumi:"id"`
	// (String)
	Name string `pulumi:"name"`
}

// GetAdminUsersAdminScopeScopeEntityInput is an input type that accepts GetAdminUsersAdminScopeScopeEntityArgs and GetAdminUsersAdminScopeScopeEntityOutput values.
// You can construct a concrete instance of `GetAdminUsersAdminScopeScopeEntityInput` via:
//
//	GetAdminUsersAdminScopeScopeEntityArgs{...}
type GetAdminUsersAdminScopeScopeEntityInput interface {
	pulumi.Input

	ToGetAdminUsersAdminScopeScopeEntityOutput() GetAdminUsersAdminScopeScopeEntityOutput
	ToGetAdminUsersAdminScopeScopeEntityOutputWithContext(context.Context) GetAdminUsersAdminScopeScopeEntityOutput
}

type GetAdminUsersAdminScopeScopeEntityArgs struct {
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// The ID of the admin user to be exported.
	Id pulumi.IntInput `pulumi:"id"`
	// (String)
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetAdminUsersAdminScopeScopeEntityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdminUsersAdminScopeScopeEntity)(nil)).Elem()
}

func (i GetAdminUsersAdminScopeScopeEntityArgs) ToGetAdminUsersAdminScopeScopeEntityOutput() GetAdminUsersAdminScopeScopeEntityOutput {
	return i.ToGetAdminUsersAdminScopeScopeEntityOutputWithContext(context.Background())
}

func (i GetAdminUsersAdminScopeScopeEntityArgs) ToGetAdminUsersAdminScopeScopeEntityOutputWithContext(ctx context.Context) GetAdminUsersAdminScopeScopeEntityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdminUsersAdminScopeScopeEntityOutput)
}

// GetAdminUsersAdminScopeScopeEntityArrayInput is an input type that accepts GetAdminUsersAdminScopeScopeEntityArray and GetAdminUsersAdminScopeScopeEntityArrayOutput values.
// You can construct a concrete instance of `GetAdminUsersAdminScopeScopeEntityArrayInput` via:
//
//	GetAdminUsersAdminScopeScopeEntityArray{ GetAdminUsersAdminScopeScopeEntityArgs{...} }
type GetAdminUsersAdminScopeScopeEntityArrayInput interface {
	pulumi.Input

	ToGetAdminUsersAdminScopeScopeEntityArrayOutput() GetAdminUsersAdminScopeScopeEntityArrayOutput
	ToGetAdminUsersAdminScopeScopeEntityArrayOutputWithContext(context.Context) GetAdminUsersAdminScopeScopeEntityArrayOutput
}

type GetAdminUsersAdminScopeScopeEntityArray []GetAdminUsersAdminScopeScopeEntityInput

func (GetAdminUsersAdminScopeScopeEntityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdminUsersAdminScopeScopeEntity)(nil)).Elem()
}

func (i GetAdminUsersAdminScopeScopeEntityArray) ToGetAdminUsersAdminScopeScopeEntityArrayOutput() GetAdminUsersAdminScopeScopeEntityArrayOutput {
	return i.ToGetAdminUsersAdminScopeScopeEntityArrayOutputWithContext(context.Background())
}

func (i GetAdminUsersAdminScopeScopeEntityArray) ToGetAdminUsersAdminScopeScopeEntityArrayOutputWithContext(ctx context.Context) GetAdminUsersAdminScopeScopeEntityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdminUsersAdminScopeScopeEntityArrayOutput)
}

type GetAdminUsersAdminScopeScopeEntityOutput struct{ *pulumi.OutputState }

func (GetAdminUsersAdminScopeScopeEntityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdminUsersAdminScopeScopeEntity)(nil)).Elem()
}

func (o GetAdminUsersAdminScopeScopeEntityOutput) ToGetAdminUsersAdminScopeScopeEntityOutput() GetAdminUsersAdminScopeScopeEntityOutput {
	return o
}

func (o GetAdminUsersAdminScopeScopeEntityOutput) ToGetAdminUsersAdminScopeScopeEntityOutputWithContext(ctx context.Context) GetAdminUsersAdminScopeScopeEntityOutput {
	return o
}

func (o GetAdminUsersAdminScopeScopeEntityOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetAdminUsersAdminScopeScopeEntity) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// The ID of the admin user to be exported.
func (o GetAdminUsersAdminScopeScopeEntityOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdminUsersAdminScopeScopeEntity) int { return v.Id }).(pulumi.IntOutput)
}

// (String)
func (o GetAdminUsersAdminScopeScopeEntityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdminUsersAdminScopeScopeEntity) string { return v.Name }).(pulumi.StringOutput)
}

type GetAdminUsersAdminScopeScopeEntityArrayOutput struct{ *pulumi.OutputState }

func (GetAdminUsersAdminScopeScopeEntityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdminUsersAdminScopeScopeEntity)(nil)).Elem()
}

func (o GetAdminUsersAdminScopeScopeEntityArrayOutput) ToGetAdminUsersAdminScopeScopeEntityArrayOutput() GetAdminUsersAdminScopeScopeEntityArrayOutput {
	return o
}

func (o GetAdminUsersAdminScopeScopeEntityArrayOutput) ToGetAdminUsersAdminScopeScopeEntityArrayOutputWithContext(ctx context.Context) GetAdminUsersAdminScopeScopeEntityArrayOutput {
	return o
}

func (o GetAdminUsersAdminScopeScopeEntityArrayOutput) Index(i pulumi.IntInput) GetAdminUsersAdminScopeScopeEntityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdminUsersAdminScopeScopeEntity {
		return vs[0].([]GetAdminUsersAdminScopeScopeEntity)[vs[1].(int)]
	}).(GetAdminUsersAdminScopeScopeEntityOutput)
}

type GetAdminUsersAdminScopeScopeGroupMemberEntity struct {
	Extensions map[string]string `pulumi:"extensions"`
	// The ID of the admin user to be exported.
	Id int `pulumi:"id"`
	// (String)
	Name string `pulumi:"name"`
}

// GetAdminUsersAdminScopeScopeGroupMemberEntityInput is an input type that accepts GetAdminUsersAdminScopeScopeGroupMemberEntityArgs and GetAdminUsersAdminScopeScopeGroupMemberEntityOutput values.
// You can construct a concrete instance of `GetAdminUsersAdminScopeScopeGroupMemberEntityInput` via:
//
//	GetAdminUsersAdminScopeScopeGroupMemberEntityArgs{...}
type GetAdminUsersAdminScopeScopeGroupMemberEntityInput interface {
	pulumi.Input

	ToGetAdminUsersAdminScopeScopeGroupMemberEntityOutput() GetAdminUsersAdminScopeScopeGroupMemberEntityOutput
	ToGetAdminUsersAdminScopeScopeGroupMemberEntityOutputWithContext(context.Context) GetAdminUsersAdminScopeScopeGroupMemberEntityOutput
}

type GetAdminUsersAdminScopeScopeGroupMemberEntityArgs struct {
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// The ID of the admin user to be exported.
	Id pulumi.IntInput `pulumi:"id"`
	// (String)
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetAdminUsersAdminScopeScopeGroupMemberEntityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdminUsersAdminScopeScopeGroupMemberEntity)(nil)).Elem()
}

func (i GetAdminUsersAdminScopeScopeGroupMemberEntityArgs) ToGetAdminUsersAdminScopeScopeGroupMemberEntityOutput() GetAdminUsersAdminScopeScopeGroupMemberEntityOutput {
	return i.ToGetAdminUsersAdminScopeScopeGroupMemberEntityOutputWithContext(context.Background())
}

func (i GetAdminUsersAdminScopeScopeGroupMemberEntityArgs) ToGetAdminUsersAdminScopeScopeGroupMemberEntityOutputWithContext(ctx context.Context) GetAdminUsersAdminScopeScopeGroupMemberEntityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdminUsersAdminScopeScopeGroupMemberEntityOutput)
}

// GetAdminUsersAdminScopeScopeGroupMemberEntityArrayInput is an input type that accepts GetAdminUsersAdminScopeScopeGroupMemberEntityArray and GetAdminUsersAdminScopeScopeGroupMemberEntityArrayOutput values.
// You can construct a concrete instance of `GetAdminUsersAdminScopeScopeGroupMemberEntityArrayInput` via:
//
//	GetAdminUsersAdminScopeScopeGroupMemberEntityArray{ GetAdminUsersAdminScopeScopeGroupMemberEntityArgs{...} }
type GetAdminUsersAdminScopeScopeGroupMemberEntityArrayInput interface {
	pulumi.Input

	ToGetAdminUsersAdminScopeScopeGroupMemberEntityArrayOutput() GetAdminUsersAdminScopeScopeGroupMemberEntityArrayOutput
	ToGetAdminUsersAdminScopeScopeGroupMemberEntityArrayOutputWithContext(context.Context) GetAdminUsersAdminScopeScopeGroupMemberEntityArrayOutput
}

type GetAdminUsersAdminScopeScopeGroupMemberEntityArray []GetAdminUsersAdminScopeScopeGroupMemberEntityInput

func (GetAdminUsersAdminScopeScopeGroupMemberEntityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdminUsersAdminScopeScopeGroupMemberEntity)(nil)).Elem()
}

func (i GetAdminUsersAdminScopeScopeGroupMemberEntityArray) ToGetAdminUsersAdminScopeScopeGroupMemberEntityArrayOutput() GetAdminUsersAdminScopeScopeGroupMemberEntityArrayOutput {
	return i.ToGetAdminUsersAdminScopeScopeGroupMemberEntityArrayOutputWithContext(context.Background())
}

func (i GetAdminUsersAdminScopeScopeGroupMemberEntityArray) ToGetAdminUsersAdminScopeScopeGroupMemberEntityArrayOutputWithContext(ctx context.Context) GetAdminUsersAdminScopeScopeGroupMemberEntityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdminUsersAdminScopeScopeGroupMemberEntityArrayOutput)
}

type GetAdminUsersAdminScopeScopeGroupMemberEntityOutput struct{ *pulumi.OutputState }

func (GetAdminUsersAdminScopeScopeGroupMemberEntityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdminUsersAdminScopeScopeGroupMemberEntity)(nil)).Elem()
}

func (o GetAdminUsersAdminScopeScopeGroupMemberEntityOutput) ToGetAdminUsersAdminScopeScopeGroupMemberEntityOutput() GetAdminUsersAdminScopeScopeGroupMemberEntityOutput {
	return o
}

func (o GetAdminUsersAdminScopeScopeGroupMemberEntityOutput) ToGetAdminUsersAdminScopeScopeGroupMemberEntityOutputWithContext(ctx context.Context) GetAdminUsersAdminScopeScopeGroupMemberEntityOutput {
	return o
}

func (o GetAdminUsersAdminScopeScopeGroupMemberEntityOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetAdminUsersAdminScopeScopeGroupMemberEntity) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// The ID of the admin user to be exported.
func (o GetAdminUsersAdminScopeScopeGroupMemberEntityOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdminUsersAdminScopeScopeGroupMemberEntity) int { return v.Id }).(pulumi.IntOutput)
}

// (String)
func (o GetAdminUsersAdminScopeScopeGroupMemberEntityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdminUsersAdminScopeScopeGroupMemberEntity) string { return v.Name }).(pulumi.StringOutput)
}

type GetAdminUsersAdminScopeScopeGroupMemberEntityArrayOutput struct{ *pulumi.OutputState }

func (GetAdminUsersAdminScopeScopeGroupMemberEntityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdminUsersAdminScopeScopeGroupMemberEntity)(nil)).Elem()
}

func (o GetAdminUsersAdminScopeScopeGroupMemberEntityArrayOutput) ToGetAdminUsersAdminScopeScopeGroupMemberEntityArrayOutput() GetAdminUsersAdminScopeScopeGroupMemberEntityArrayOutput {
	return o
}

func (o GetAdminUsersAdminScopeScopeGroupMemberEntityArrayOutput) ToGetAdminUsersAdminScopeScopeGroupMemberEntityArrayOutputWithContext(ctx context.Context) GetAdminUsersAdminScopeScopeGroupMemberEntityArrayOutput {
	return o
}

func (o GetAdminUsersAdminScopeScopeGroupMemberEntityArrayOutput) Index(i pulumi.IntInput) GetAdminUsersAdminScopeScopeGroupMemberEntityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdminUsersAdminScopeScopeGroupMemberEntity {
		return vs[0].([]GetAdminUsersAdminScopeScopeGroupMemberEntity)[vs[1].(int)]
	}).(GetAdminUsersAdminScopeScopeGroupMemberEntityOutput)
}

type GetAdminUsersExecMobileAppToken struct {
	// (String)
	Cloud string `pulumi:"cloud"`
	// (Number)
	CreateTime int `pulumi:"createTime"`
	// (String)
	DeviceId string `pulumi:"deviceId"`
	// (String)
	DeviceName string `pulumi:"deviceName"`
	// (String)
	Name string `pulumi:"name"`
	// (Number)
	OrgId int `pulumi:"orgId"`
	// (String)
	Token string `pulumi:"token"`
	// (Number)
	TokenExpiry int `pulumi:"tokenExpiry"`
	// (String)
	TokenId string `pulumi:"tokenId"`
}

// GetAdminUsersExecMobileAppTokenInput is an input type that accepts GetAdminUsersExecMobileAppTokenArgs and GetAdminUsersExecMobileAppTokenOutput values.
// You can construct a concrete instance of `GetAdminUsersExecMobileAppTokenInput` via:
//
//	GetAdminUsersExecMobileAppTokenArgs{...}
type GetAdminUsersExecMobileAppTokenInput interface {
	pulumi.Input

	ToGetAdminUsersExecMobileAppTokenOutput() GetAdminUsersExecMobileAppTokenOutput
	ToGetAdminUsersExecMobileAppTokenOutputWithContext(context.Context) GetAdminUsersExecMobileAppTokenOutput
}

type GetAdminUsersExecMobileAppTokenArgs struct {
	// (String)
	Cloud pulumi.StringInput `pulumi:"cloud"`
	// (Number)
	CreateTime pulumi.IntInput `pulumi:"createTime"`
	// (String)
	DeviceId pulumi.StringInput `pulumi:"deviceId"`
	// (String)
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// (String)
	Name pulumi.StringInput `pulumi:"name"`
	// (Number)
	OrgId pulumi.IntInput `pulumi:"orgId"`
	// (String)
	Token pulumi.StringInput `pulumi:"token"`
	// (Number)
	TokenExpiry pulumi.IntInput `pulumi:"tokenExpiry"`
	// (String)
	TokenId pulumi.StringInput `pulumi:"tokenId"`
}

func (GetAdminUsersExecMobileAppTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdminUsersExecMobileAppToken)(nil)).Elem()
}

func (i GetAdminUsersExecMobileAppTokenArgs) ToGetAdminUsersExecMobileAppTokenOutput() GetAdminUsersExecMobileAppTokenOutput {
	return i.ToGetAdminUsersExecMobileAppTokenOutputWithContext(context.Background())
}

func (i GetAdminUsersExecMobileAppTokenArgs) ToGetAdminUsersExecMobileAppTokenOutputWithContext(ctx context.Context) GetAdminUsersExecMobileAppTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdminUsersExecMobileAppTokenOutput)
}

// GetAdminUsersExecMobileAppTokenArrayInput is an input type that accepts GetAdminUsersExecMobileAppTokenArray and GetAdminUsersExecMobileAppTokenArrayOutput values.
// You can construct a concrete instance of `GetAdminUsersExecMobileAppTokenArrayInput` via:
//
//	GetAdminUsersExecMobileAppTokenArray{ GetAdminUsersExecMobileAppTokenArgs{...} }
type GetAdminUsersExecMobileAppTokenArrayInput interface {
	pulumi.Input

	ToGetAdminUsersExecMobileAppTokenArrayOutput() GetAdminUsersExecMobileAppTokenArrayOutput
	ToGetAdminUsersExecMobileAppTokenArrayOutputWithContext(context.Context) GetAdminUsersExecMobileAppTokenArrayOutput
}

type GetAdminUsersExecMobileAppTokenArray []GetAdminUsersExecMobileAppTokenInput

func (GetAdminUsersExecMobileAppTokenArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdminUsersExecMobileAppToken)(nil)).Elem()
}

func (i GetAdminUsersExecMobileAppTokenArray) ToGetAdminUsersExecMobileAppTokenArrayOutput() GetAdminUsersExecMobileAppTokenArrayOutput {
	return i.ToGetAdminUsersExecMobileAppTokenArrayOutputWithContext(context.Background())
}

func (i GetAdminUsersExecMobileAppTokenArray) ToGetAdminUsersExecMobileAppTokenArrayOutputWithContext(ctx context.Context) GetAdminUsersExecMobileAppTokenArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdminUsersExecMobileAppTokenArrayOutput)
}

type GetAdminUsersExecMobileAppTokenOutput struct{ *pulumi.OutputState }

func (GetAdminUsersExecMobileAppTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdminUsersExecMobileAppToken)(nil)).Elem()
}

func (o GetAdminUsersExecMobileAppTokenOutput) ToGetAdminUsersExecMobileAppTokenOutput() GetAdminUsersExecMobileAppTokenOutput {
	return o
}

func (o GetAdminUsersExecMobileAppTokenOutput) ToGetAdminUsersExecMobileAppTokenOutputWithContext(ctx context.Context) GetAdminUsersExecMobileAppTokenOutput {
	return o
}

// (String)
func (o GetAdminUsersExecMobileAppTokenOutput) Cloud() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdminUsersExecMobileAppToken) string { return v.Cloud }).(pulumi.StringOutput)
}

// (Number)
func (o GetAdminUsersExecMobileAppTokenOutput) CreateTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdminUsersExecMobileAppToken) int { return v.CreateTime }).(pulumi.IntOutput)
}

// (String)
func (o GetAdminUsersExecMobileAppTokenOutput) DeviceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdminUsersExecMobileAppToken) string { return v.DeviceId }).(pulumi.StringOutput)
}

// (String)
func (o GetAdminUsersExecMobileAppTokenOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdminUsersExecMobileAppToken) string { return v.DeviceName }).(pulumi.StringOutput)
}

// (String)
func (o GetAdminUsersExecMobileAppTokenOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdminUsersExecMobileAppToken) string { return v.Name }).(pulumi.StringOutput)
}

// (Number)
func (o GetAdminUsersExecMobileAppTokenOutput) OrgId() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdminUsersExecMobileAppToken) int { return v.OrgId }).(pulumi.IntOutput)
}

// (String)
func (o GetAdminUsersExecMobileAppTokenOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdminUsersExecMobileAppToken) string { return v.Token }).(pulumi.StringOutput)
}

// (Number)
func (o GetAdminUsersExecMobileAppTokenOutput) TokenExpiry() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdminUsersExecMobileAppToken) int { return v.TokenExpiry }).(pulumi.IntOutput)
}

// (String)
func (o GetAdminUsersExecMobileAppTokenOutput) TokenId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdminUsersExecMobileAppToken) string { return v.TokenId }).(pulumi.StringOutput)
}

type GetAdminUsersExecMobileAppTokenArrayOutput struct{ *pulumi.OutputState }

func (GetAdminUsersExecMobileAppTokenArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdminUsersExecMobileAppToken)(nil)).Elem()
}

func (o GetAdminUsersExecMobileAppTokenArrayOutput) ToGetAdminUsersExecMobileAppTokenArrayOutput() GetAdminUsersExecMobileAppTokenArrayOutput {
	return o
}

func (o GetAdminUsersExecMobileAppTokenArrayOutput) ToGetAdminUsersExecMobileAppTokenArrayOutputWithContext(ctx context.Context) GetAdminUsersExecMobileAppTokenArrayOutput {
	return o
}

func (o GetAdminUsersExecMobileAppTokenArrayOutput) Index(i pulumi.IntInput) GetAdminUsersExecMobileAppTokenOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdminUsersExecMobileAppToken {
		return vs[0].([]GetAdminUsersExecMobileAppToken)[vs[1].(int)]
	}).(GetAdminUsersExecMobileAppTokenOutput)
}

type GetAdminUsersRole struct {
	Extensions map[string]string `pulumi:"extensions"`
	// The ID of the admin user to be exported.
	Id int `pulumi:"id"`
	// (String)
	Name string `pulumi:"name"`
}

// GetAdminUsersRoleInput is an input type that accepts GetAdminUsersRoleArgs and GetAdminUsersRoleOutput values.
// You can construct a concrete instance of `GetAdminUsersRoleInput` via:
//
//	GetAdminUsersRoleArgs{...}
type GetAdminUsersRoleInput interface {
	pulumi.Input

	ToGetAdminUsersRoleOutput() GetAdminUsersRoleOutput
	ToGetAdminUsersRoleOutputWithContext(context.Context) GetAdminUsersRoleOutput
}

type GetAdminUsersRoleArgs struct {
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// The ID of the admin user to be exported.
	Id pulumi.IntInput `pulumi:"id"`
	// (String)
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetAdminUsersRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdminUsersRole)(nil)).Elem()
}

func (i GetAdminUsersRoleArgs) ToGetAdminUsersRoleOutput() GetAdminUsersRoleOutput {
	return i.ToGetAdminUsersRoleOutputWithContext(context.Background())
}

func (i GetAdminUsersRoleArgs) ToGetAdminUsersRoleOutputWithContext(ctx context.Context) GetAdminUsersRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdminUsersRoleOutput)
}

// GetAdminUsersRoleArrayInput is an input type that accepts GetAdminUsersRoleArray and GetAdminUsersRoleArrayOutput values.
// You can construct a concrete instance of `GetAdminUsersRoleArrayInput` via:
//
//	GetAdminUsersRoleArray{ GetAdminUsersRoleArgs{...} }
type GetAdminUsersRoleArrayInput interface {
	pulumi.Input

	ToGetAdminUsersRoleArrayOutput() GetAdminUsersRoleArrayOutput
	ToGetAdminUsersRoleArrayOutputWithContext(context.Context) GetAdminUsersRoleArrayOutput
}

type GetAdminUsersRoleArray []GetAdminUsersRoleInput

func (GetAdminUsersRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdminUsersRole)(nil)).Elem()
}

func (i GetAdminUsersRoleArray) ToGetAdminUsersRoleArrayOutput() GetAdminUsersRoleArrayOutput {
	return i.ToGetAdminUsersRoleArrayOutputWithContext(context.Background())
}

func (i GetAdminUsersRoleArray) ToGetAdminUsersRoleArrayOutputWithContext(ctx context.Context) GetAdminUsersRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdminUsersRoleArrayOutput)
}

type GetAdminUsersRoleOutput struct{ *pulumi.OutputState }

func (GetAdminUsersRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdminUsersRole)(nil)).Elem()
}

func (o GetAdminUsersRoleOutput) ToGetAdminUsersRoleOutput() GetAdminUsersRoleOutput {
	return o
}

func (o GetAdminUsersRoleOutput) ToGetAdminUsersRoleOutputWithContext(ctx context.Context) GetAdminUsersRoleOutput {
	return o
}

func (o GetAdminUsersRoleOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetAdminUsersRole) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// The ID of the admin user to be exported.
func (o GetAdminUsersRoleOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdminUsersRole) int { return v.Id }).(pulumi.IntOutput)
}

// (String)
func (o GetAdminUsersRoleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdminUsersRole) string { return v.Name }).(pulumi.StringOutput)
}

type GetAdminUsersRoleArrayOutput struct{ *pulumi.OutputState }

func (GetAdminUsersRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdminUsersRole)(nil)).Elem()
}

func (o GetAdminUsersRoleArrayOutput) ToGetAdminUsersRoleArrayOutput() GetAdminUsersRoleArrayOutput {
	return o
}

func (o GetAdminUsersRoleArrayOutput) ToGetAdminUsersRoleArrayOutputWithContext(ctx context.Context) GetAdminUsersRoleArrayOutput {
	return o
}

func (o GetAdminUsersRoleArrayOutput) Index(i pulumi.IntInput) GetAdminUsersRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdminUsersRole {
		return vs[0].([]GetAdminUsersRole)[vs[1].(int)]
	}).(GetAdminUsersRoleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AdminUsersAdminScopeInput)(nil)).Elem(), AdminUsersAdminScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdminUsersAdminScopeArrayInput)(nil)).Elem(), AdminUsersAdminScopeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdminUsersAdminScopeScopeEntitiesInput)(nil)).Elem(), AdminUsersAdminScopeScopeEntitiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdminUsersAdminScopeScopeEntitiesPtrInput)(nil)).Elem(), AdminUsersAdminScopeScopeEntitiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdminUsersAdminScopeScopeGroupMemberEntitiesInput)(nil)).Elem(), AdminUsersAdminScopeScopeGroupMemberEntitiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdminUsersAdminScopeScopeGroupMemberEntitiesPtrInput)(nil)).Elem(), AdminUsersAdminScopeScopeGroupMemberEntitiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdminUsersRoleInput)(nil)).Elem(), AdminUsersRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdminUsersRoleArrayInput)(nil)).Elem(), AdminUsersRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdminUsersAdminScopeInput)(nil)).Elem(), GetAdminUsersAdminScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdminUsersAdminScopeArrayInput)(nil)).Elem(), GetAdminUsersAdminScopeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdminUsersAdminScopeScopeEntityInput)(nil)).Elem(), GetAdminUsersAdminScopeScopeEntityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdminUsersAdminScopeScopeEntityArrayInput)(nil)).Elem(), GetAdminUsersAdminScopeScopeEntityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdminUsersAdminScopeScopeGroupMemberEntityInput)(nil)).Elem(), GetAdminUsersAdminScopeScopeGroupMemberEntityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdminUsersAdminScopeScopeGroupMemberEntityArrayInput)(nil)).Elem(), GetAdminUsersAdminScopeScopeGroupMemberEntityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdminUsersExecMobileAppTokenInput)(nil)).Elem(), GetAdminUsersExecMobileAppTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdminUsersExecMobileAppTokenArrayInput)(nil)).Elem(), GetAdminUsersExecMobileAppTokenArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdminUsersRoleInput)(nil)).Elem(), GetAdminUsersRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdminUsersRoleArrayInput)(nil)).Elem(), GetAdminUsersRoleArray{})
	pulumi.RegisterOutputType(AdminUsersAdminScopeOutput{})
	pulumi.RegisterOutputType(AdminUsersAdminScopeArrayOutput{})
	pulumi.RegisterOutputType(AdminUsersAdminScopeScopeEntitiesOutput{})
	pulumi.RegisterOutputType(AdminUsersAdminScopeScopeEntitiesPtrOutput{})
	pulumi.RegisterOutputType(AdminUsersAdminScopeScopeGroupMemberEntitiesOutput{})
	pulumi.RegisterOutputType(AdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutput{})
	pulumi.RegisterOutputType(AdminUsersRoleOutput{})
	pulumi.RegisterOutputType(AdminUsersRoleArrayOutput{})
	pulumi.RegisterOutputType(GetAdminUsersAdminScopeOutput{})
	pulumi.RegisterOutputType(GetAdminUsersAdminScopeArrayOutput{})
	pulumi.RegisterOutputType(GetAdminUsersAdminScopeScopeEntityOutput{})
	pulumi.RegisterOutputType(GetAdminUsersAdminScopeScopeEntityArrayOutput{})
	pulumi.RegisterOutputType(GetAdminUsersAdminScopeScopeGroupMemberEntityOutput{})
	pulumi.RegisterOutputType(GetAdminUsersAdminScopeScopeGroupMemberEntityArrayOutput{})
	pulumi.RegisterOutputType(GetAdminUsersExecMobileAppTokenOutput{})
	pulumi.RegisterOutputType(GetAdminUsersExecMobileAppTokenArrayOutput{})
	pulumi.RegisterOutputType(GetAdminUsersRoleOutput{})
	pulumi.RegisterOutputType(GetAdminUsersRoleArrayOutput{})
}
