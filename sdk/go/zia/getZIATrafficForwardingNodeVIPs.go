// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zia

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use the **zia_traffic_forwarding_public_node_vips** data source to retrieve a paginated list of virtual IP addresses (VIPs) available in the Zscaler cloud.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-zia/sdk/go/zia"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			yvr1, err := zia.GetZIATrafficForwardingNodeVIPs(ctx, &zia.GetZIATrafficForwardingNodeVIPsArgs{
//				Datacenter: pulumi.StringRef("YVR1"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("ziaTrafficForwardingPublicNodeVipsYvr1", yvr1)
//			return nil
//		})
//	}
//
// ```
func GetZIATrafficForwardingNodeVIPs(ctx *pulumi.Context, args *GetZIATrafficForwardingNodeVIPsArgs, opts ...pulumi.InvokeOption) (*GetZIATrafficForwardingNodeVIPsResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetZIATrafficForwardingNodeVIPsResult
	err := ctx.Invoke("zia:index/getZIATrafficForwardingNodeVIPs:getZIATrafficForwardingNodeVIPs", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getZIATrafficForwardingNodeVIPs.
type GetZIATrafficForwardingNodeVIPsArgs struct {
	// Data-center Name
	Datacenter *string `pulumi:"datacenter"`
}

// A collection of values returned by getZIATrafficForwardingNodeVIPs.
type GetZIATrafficForwardingNodeVIPsResult struct {
	City          string   `pulumi:"city"`
	CloudName     string   `pulumi:"cloudName"`
	Datacenter    *string  `pulumi:"datacenter"`
	GreDomainName string   `pulumi:"greDomainName"`
	GreIps        []string `pulumi:"greIps"`
	// The provider-assigned unique ID for this managed resource.
	Id            string   `pulumi:"id"`
	Location      string   `pulumi:"location"`
	PacDomainName string   `pulumi:"pacDomainName"`
	PacIps        []string `pulumi:"pacIps"`
	Region        string   `pulumi:"region"`
	VpnDomainName string   `pulumi:"vpnDomainName"`
	VpnIps        []string `pulumi:"vpnIps"`
}

func GetZIATrafficForwardingNodeVIPsOutput(ctx *pulumi.Context, args GetZIATrafficForwardingNodeVIPsOutputArgs, opts ...pulumi.InvokeOption) GetZIATrafficForwardingNodeVIPsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetZIATrafficForwardingNodeVIPsResult, error) {
			args := v.(GetZIATrafficForwardingNodeVIPsArgs)
			r, err := GetZIATrafficForwardingNodeVIPs(ctx, &args, opts...)
			var s GetZIATrafficForwardingNodeVIPsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetZIATrafficForwardingNodeVIPsResultOutput)
}

// A collection of arguments for invoking getZIATrafficForwardingNodeVIPs.
type GetZIATrafficForwardingNodeVIPsOutputArgs struct {
	// Data-center Name
	Datacenter pulumi.StringPtrInput `pulumi:"datacenter"`
}

func (GetZIATrafficForwardingNodeVIPsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIATrafficForwardingNodeVIPsArgs)(nil)).Elem()
}

// A collection of values returned by getZIATrafficForwardingNodeVIPs.
type GetZIATrafficForwardingNodeVIPsResultOutput struct{ *pulumi.OutputState }

func (GetZIATrafficForwardingNodeVIPsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIATrafficForwardingNodeVIPsResult)(nil)).Elem()
}

func (o GetZIATrafficForwardingNodeVIPsResultOutput) ToGetZIATrafficForwardingNodeVIPsResultOutput() GetZIATrafficForwardingNodeVIPsResultOutput {
	return o
}

func (o GetZIATrafficForwardingNodeVIPsResultOutput) ToGetZIATrafficForwardingNodeVIPsResultOutputWithContext(ctx context.Context) GetZIATrafficForwardingNodeVIPsResultOutput {
	return o
}

func (o GetZIATrafficForwardingNodeVIPsResultOutput) City() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingNodeVIPsResult) string { return v.City }).(pulumi.StringOutput)
}

func (o GetZIATrafficForwardingNodeVIPsResultOutput) CloudName() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingNodeVIPsResult) string { return v.CloudName }).(pulumi.StringOutput)
}

func (o GetZIATrafficForwardingNodeVIPsResultOutput) Datacenter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingNodeVIPsResult) *string { return v.Datacenter }).(pulumi.StringPtrOutput)
}

func (o GetZIATrafficForwardingNodeVIPsResultOutput) GreDomainName() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingNodeVIPsResult) string { return v.GreDomainName }).(pulumi.StringOutput)
}

func (o GetZIATrafficForwardingNodeVIPsResultOutput) GreIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingNodeVIPsResult) []string { return v.GreIps }).(pulumi.StringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetZIATrafficForwardingNodeVIPsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingNodeVIPsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetZIATrafficForwardingNodeVIPsResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingNodeVIPsResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o GetZIATrafficForwardingNodeVIPsResultOutput) PacDomainName() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingNodeVIPsResult) string { return v.PacDomainName }).(pulumi.StringOutput)
}

func (o GetZIATrafficForwardingNodeVIPsResultOutput) PacIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingNodeVIPsResult) []string { return v.PacIps }).(pulumi.StringArrayOutput)
}

func (o GetZIATrafficForwardingNodeVIPsResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingNodeVIPsResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetZIATrafficForwardingNodeVIPsResultOutput) VpnDomainName() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingNodeVIPsResult) string { return v.VpnDomainName }).(pulumi.StringOutput)
}

func (o GetZIATrafficForwardingNodeVIPsResultOutput) VpnIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingNodeVIPsResult) []string { return v.VpnIps }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetZIATrafficForwardingNodeVIPsResultOutput{})
}
