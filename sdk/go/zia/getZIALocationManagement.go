// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zia

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use the **zia_location_management** data source to get information about a location resource available in the Zscaler Internet Access Location Management. This resource can then be referenced in multiple other resources, such as URL Filtering Rules, Firewall rules etc.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-zia/sdk/go/zia"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := zia.LookupZIALocationManagement(ctx, &zia.LookupZIALocationManagementArgs{
//				Name: pulumi.StringRef("San Jose"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupZIALocationManagement(ctx *pulumi.Context, args *LookupZIALocationManagementArgs, opts ...pulumi.InvokeOption) (*LookupZIALocationManagementResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupZIALocationManagementResult
	err := ctx.Invoke("zia:index/getZIALocationManagement:getZIALocationManagement", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getZIALocationManagement.
type LookupZIALocationManagementArgs struct {
	// The ID of the location to be exported.
	Id *int `pulumi:"id"`
	// The name of the location to be exported.
	Name *string `pulumi:"name"`
}

// A collection of values returned by getZIALocationManagement.
type LookupZIALocationManagementResult struct {
	// (Boolean) For First Time AUP Behavior, Block Internet Access. When set, all internet access (including non-HTTP traffic) is disabled until the user accepts the AUP.
	AupBlockInternetUntilAccepted bool `pulumi:"aupBlockInternetUntilAccepted"`
	// (Boolean) Enable AUP. When set to true, AUP is enabled for the location.
	AupEnabled bool `pulumi:"aupEnabled"`
	// (Boolean) For First Time AUP Behavior, Force SSL Inspection. When set, Zscaler will force SSL Inspection in order to enforce AUP for HTTPS traffic.
	AupForceSslInspection bool `pulumi:"aupForceSslInspection"`
	// (Number) Custom AUP Frequency. Refresh time (in days) to re-validate the AUP.
	AupTimeoutInDays int `pulumi:"aupTimeoutInDays"`
	// (Boolean) Enforce Authentication. Required when ports are enabled, IP Surrogate is enabled, or Kerberos Authentication is enabled.
	AuthRequired bool `pulumi:"authRequired"`
	// (Boolean) Enable Caution. When set to true, a caution notifcation is enabled for the location.
	CautionEnabled bool `pulumi:"cautionEnabled"`
	// (String) Country
	Country string `pulumi:"country"`
	// (String) Additional notes or information regarding the location or sub-location. The description cannot exceed 1024 characters.
	Description string `pulumi:"description"`
	// (String) Display Time Unit. The time unit to display for IP Surrogate idle time to disassociation.
	DisplayTimeUnit string `pulumi:"displayTimeUnit"`
	// (Number) Download bandwidth in bytes. The value `0` implies no Bandwidth Control enforcement.
	DnBandwidth int `pulumi:"dnBandwidth"`
	// (Number) Identifier that uniquely identifies an entity
	Id *int `pulumi:"id"`
	// (Number) Idle Time to Disassociation. The user mapping idle time (in minutes) is required if a Surrogate IP is enabled.
	IdleTimeInMinutes int `pulumi:"idleTimeInMinutes"`
	// (List of String) For locations: IP addresses of the egress points that are provisioned in the Zscaler Cloud. Each entry is a single IP address (e.g., `238.10.33.9`). For sub-locations: Egress, internal, or GRE tunnel IP addresses. Each entry is either a single IP address, CIDR (e.g., `10.10.33.0/24`), or range (e.g., `10.10.33.1-10.10.33.10`)).
	IpAddresses []string `pulumi:"ipAddresses"`
	// (Boolean) Enable IPS Control. When set to true, IPS Control is enabled for the location if Firewall is enabled.
	IpsControl bool `pulumi:"ipsControl"`
	// (String) The configured name of the entity
	Name *string `pulumi:"name"`
	// (Boolean) Enable Firewall. When set to true, Firewall is enabled for the location.
	OfwEnabled bool `pulumi:"ofwEnabled"`
	// (Number) - Parent Location ID. If this ID does not exist or is `0`, it is implied that it is a parent location. Otherwise, it is a sub-location whose parent has this ID. x-applicableTo: `SUB`
	ParentId int `pulumi:"parentId"`
	// (String) IP ports that are associated with the location.
	Ports string `pulumi:"ports"`
	// (String) Profile tag that specifies the location traffic type. If not specified, this tag defaults to `Unassigned`.
	Profile string `pulumi:"profile"`
	// (Boolean) This parameter was deprecated and no longer has an effect on SSL policy. It remains supported in the API payload in order to maintain backwards compatibility with existing scripts, but it will be removed in future.
	SslScanEnabled bool `pulumi:"sslScanEnabled"`
	// (Boolean) Enable Surrogate IP. When set to true, users are mapped to internal device IP addresses.
	SurrogateIp bool `pulumi:"surrogateIp"`
	// (Boolean) Enforce Surrogate IP for Known Browsers. When set to true, IP Surrogate is enforced for all known browsers.
	SurrogateIpEnforcedForKnownBrowsers bool `pulumi:"surrogateIpEnforcedForKnownBrowsers"`
	// (Number) Refresh Time for re-validation of Surrogacy. The surrogate refresh time (in minutes) to re-validate the IP surrogates.
	SurrogateRefreshTimeInMinutes int `pulumi:"surrogateRefreshTimeInMinutes"`
	// (String) Display Refresh Time Unit. The time unit to display for refresh time for re-validation of surrogacy.
	SurrogateRefreshTimeUnit string `pulumi:"surrogateRefreshTimeUnit"`
	// (String) Timezone of the location. If not specified, it defaults to GMT.
	Tz string `pulumi:"tz"`
	// (Number) Upload bandwidth in bytes. The value `0` implies no Bandwidth Control enforcement.
	UpBandwidth    int                                     `pulumi:"upBandwidth"`
	VpnCredentials []GetZIALocationManagementVpnCredential `pulumi:"vpnCredentials"`
	// (Boolean) Enable XFF Forwarding. When set to true, traffic is passed to Zscaler Cloud via the X-Forwarded-For (XFF) header.
	XffForwardEnabled bool `pulumi:"xffForwardEnabled"`
	// (Boolean) This parameter was deprecated and no longer has an effect on SSL policy. It remains supported in the API payload in order to maintain backwards compatibility with existing scripts, but it will be removed in future.
	ZappSslScanEnabled bool `pulumi:"zappSslScanEnabled"`
}

func LookupZIALocationManagementOutput(ctx *pulumi.Context, args LookupZIALocationManagementOutputArgs, opts ...pulumi.InvokeOption) LookupZIALocationManagementResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupZIALocationManagementResult, error) {
			args := v.(LookupZIALocationManagementArgs)
			r, err := LookupZIALocationManagement(ctx, &args, opts...)
			var s LookupZIALocationManagementResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupZIALocationManagementResultOutput)
}

// A collection of arguments for invoking getZIALocationManagement.
type LookupZIALocationManagementOutputArgs struct {
	// The ID of the location to be exported.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// The name of the location to be exported.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupZIALocationManagementOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupZIALocationManagementArgs)(nil)).Elem()
}

// A collection of values returned by getZIALocationManagement.
type LookupZIALocationManagementResultOutput struct{ *pulumi.OutputState }

func (LookupZIALocationManagementResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupZIALocationManagementResult)(nil)).Elem()
}

func (o LookupZIALocationManagementResultOutput) ToLookupZIALocationManagementResultOutput() LookupZIALocationManagementResultOutput {
	return o
}

func (o LookupZIALocationManagementResultOutput) ToLookupZIALocationManagementResultOutputWithContext(ctx context.Context) LookupZIALocationManagementResultOutput {
	return o
}

// (Boolean) For First Time AUP Behavior, Block Internet Access. When set, all internet access (including non-HTTP traffic) is disabled until the user accepts the AUP.
func (o LookupZIALocationManagementResultOutput) AupBlockInternetUntilAccepted() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupZIALocationManagementResult) bool { return v.AupBlockInternetUntilAccepted }).(pulumi.BoolOutput)
}

// (Boolean) Enable AUP. When set to true, AUP is enabled for the location.
func (o LookupZIALocationManagementResultOutput) AupEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupZIALocationManagementResult) bool { return v.AupEnabled }).(pulumi.BoolOutput)
}

// (Boolean) For First Time AUP Behavior, Force SSL Inspection. When set, Zscaler will force SSL Inspection in order to enforce AUP for HTTPS traffic.
func (o LookupZIALocationManagementResultOutput) AupForceSslInspection() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupZIALocationManagementResult) bool { return v.AupForceSslInspection }).(pulumi.BoolOutput)
}

// (Number) Custom AUP Frequency. Refresh time (in days) to re-validate the AUP.
func (o LookupZIALocationManagementResultOutput) AupTimeoutInDays() pulumi.IntOutput {
	return o.ApplyT(func(v LookupZIALocationManagementResult) int { return v.AupTimeoutInDays }).(pulumi.IntOutput)
}

// (Boolean) Enforce Authentication. Required when ports are enabled, IP Surrogate is enabled, or Kerberos Authentication is enabled.
func (o LookupZIALocationManagementResultOutput) AuthRequired() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupZIALocationManagementResult) bool { return v.AuthRequired }).(pulumi.BoolOutput)
}

// (Boolean) Enable Caution. When set to true, a caution notifcation is enabled for the location.
func (o LookupZIALocationManagementResultOutput) CautionEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupZIALocationManagementResult) bool { return v.CautionEnabled }).(pulumi.BoolOutput)
}

// (String) Country
func (o LookupZIALocationManagementResultOutput) Country() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZIALocationManagementResult) string { return v.Country }).(pulumi.StringOutput)
}

// (String) Additional notes or information regarding the location or sub-location. The description cannot exceed 1024 characters.
func (o LookupZIALocationManagementResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZIALocationManagementResult) string { return v.Description }).(pulumi.StringOutput)
}

// (String) Display Time Unit. The time unit to display for IP Surrogate idle time to disassociation.
func (o LookupZIALocationManagementResultOutput) DisplayTimeUnit() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZIALocationManagementResult) string { return v.DisplayTimeUnit }).(pulumi.StringOutput)
}

// (Number) Download bandwidth in bytes. The value `0` implies no Bandwidth Control enforcement.
func (o LookupZIALocationManagementResultOutput) DnBandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v LookupZIALocationManagementResult) int { return v.DnBandwidth }).(pulumi.IntOutput)
}

// (Number) Identifier that uniquely identifies an entity
func (o LookupZIALocationManagementResultOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupZIALocationManagementResult) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// (Number) Idle Time to Disassociation. The user mapping idle time (in minutes) is required if a Surrogate IP is enabled.
func (o LookupZIALocationManagementResultOutput) IdleTimeInMinutes() pulumi.IntOutput {
	return o.ApplyT(func(v LookupZIALocationManagementResult) int { return v.IdleTimeInMinutes }).(pulumi.IntOutput)
}

// (List of String) For locations: IP addresses of the egress points that are provisioned in the Zscaler Cloud. Each entry is a single IP address (e.g., `238.10.33.9`). For sub-locations: Egress, internal, or GRE tunnel IP addresses. Each entry is either a single IP address, CIDR (e.g., `10.10.33.0/24`), or range (e.g., `10.10.33.1-10.10.33.10`)).
func (o LookupZIALocationManagementResultOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupZIALocationManagementResult) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

// (Boolean) Enable IPS Control. When set to true, IPS Control is enabled for the location if Firewall is enabled.
func (o LookupZIALocationManagementResultOutput) IpsControl() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupZIALocationManagementResult) bool { return v.IpsControl }).(pulumi.BoolOutput)
}

// (String) The configured name of the entity
func (o LookupZIALocationManagementResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupZIALocationManagementResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (Boolean) Enable Firewall. When set to true, Firewall is enabled for the location.
func (o LookupZIALocationManagementResultOutput) OfwEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupZIALocationManagementResult) bool { return v.OfwEnabled }).(pulumi.BoolOutput)
}

// (Number) - Parent Location ID. If this ID does not exist or is `0`, it is implied that it is a parent location. Otherwise, it is a sub-location whose parent has this ID. x-applicableTo: `SUB`
func (o LookupZIALocationManagementResultOutput) ParentId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupZIALocationManagementResult) int { return v.ParentId }).(pulumi.IntOutput)
}

// (String) IP ports that are associated with the location.
func (o LookupZIALocationManagementResultOutput) Ports() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZIALocationManagementResult) string { return v.Ports }).(pulumi.StringOutput)
}

// (String) Profile tag that specifies the location traffic type. If not specified, this tag defaults to `Unassigned`.
func (o LookupZIALocationManagementResultOutput) Profile() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZIALocationManagementResult) string { return v.Profile }).(pulumi.StringOutput)
}

// (Boolean) This parameter was deprecated and no longer has an effect on SSL policy. It remains supported in the API payload in order to maintain backwards compatibility with existing scripts, but it will be removed in future.
func (o LookupZIALocationManagementResultOutput) SslScanEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupZIALocationManagementResult) bool { return v.SslScanEnabled }).(pulumi.BoolOutput)
}

// (Boolean) Enable Surrogate IP. When set to true, users are mapped to internal device IP addresses.
func (o LookupZIALocationManagementResultOutput) SurrogateIp() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupZIALocationManagementResult) bool { return v.SurrogateIp }).(pulumi.BoolOutput)
}

// (Boolean) Enforce Surrogate IP for Known Browsers. When set to true, IP Surrogate is enforced for all known browsers.
func (o LookupZIALocationManagementResultOutput) SurrogateIpEnforcedForKnownBrowsers() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupZIALocationManagementResult) bool { return v.SurrogateIpEnforcedForKnownBrowsers }).(pulumi.BoolOutput)
}

// (Number) Refresh Time for re-validation of Surrogacy. The surrogate refresh time (in minutes) to re-validate the IP surrogates.
func (o LookupZIALocationManagementResultOutput) SurrogateRefreshTimeInMinutes() pulumi.IntOutput {
	return o.ApplyT(func(v LookupZIALocationManagementResult) int { return v.SurrogateRefreshTimeInMinutes }).(pulumi.IntOutput)
}

// (String) Display Refresh Time Unit. The time unit to display for refresh time for re-validation of surrogacy.
func (o LookupZIALocationManagementResultOutput) SurrogateRefreshTimeUnit() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZIALocationManagementResult) string { return v.SurrogateRefreshTimeUnit }).(pulumi.StringOutput)
}

// (String) Timezone of the location. If not specified, it defaults to GMT.
func (o LookupZIALocationManagementResultOutput) Tz() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZIALocationManagementResult) string { return v.Tz }).(pulumi.StringOutput)
}

// (Number) Upload bandwidth in bytes. The value `0` implies no Bandwidth Control enforcement.
func (o LookupZIALocationManagementResultOutput) UpBandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v LookupZIALocationManagementResult) int { return v.UpBandwidth }).(pulumi.IntOutput)
}

func (o LookupZIALocationManagementResultOutput) VpnCredentials() GetZIALocationManagementVpnCredentialArrayOutput {
	return o.ApplyT(func(v LookupZIALocationManagementResult) []GetZIALocationManagementVpnCredential {
		return v.VpnCredentials
	}).(GetZIALocationManagementVpnCredentialArrayOutput)
}

// (Boolean) Enable XFF Forwarding. When set to true, traffic is passed to Zscaler Cloud via the X-Forwarded-For (XFF) header.
func (o LookupZIALocationManagementResultOutput) XffForwardEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupZIALocationManagementResult) bool { return v.XffForwardEnabled }).(pulumi.BoolOutput)
}

// (Boolean) This parameter was deprecated and no longer has an effect on SSL policy. It remains supported in the API payload in order to maintain backwards compatibility with existing scripts, but it will be removed in future.
func (o LookupZIALocationManagementResultOutput) ZappSslScanEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupZIALocationManagementResult) bool { return v.ZappSslScanEnabled }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupZIALocationManagementResultOutput{})
}
