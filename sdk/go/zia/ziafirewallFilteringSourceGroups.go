// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zia

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The **zia_firewall_filtering_ip_source_groups** resource allows the creation and management of ZIA Cloud Firewall IP source groups in the Zscaler Internet Access. This resource can then be associated with a ZIA cloud firewall filtering rule.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-zia/sdk/go/zia"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := zia.NewZIAFirewallFilteringSourceGroups(ctx, "example", &zia.ZIAFirewallFilteringSourceGroupsArgs{
//				Description: pulumi.String("Example"),
//				IpAddresses: pulumi.StringArray{
//					pulumi.String("192.168.100.1"),
//					pulumi.String("192.168.100.2"),
//					pulumi.String("192.168.100.3"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-zia/sdk/go/zia"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := zia.NewZIAFirewallFilteringSourceGroups(ctx, "example", &zia.ZIAFirewallFilteringSourceGroupsArgs{
//				Description: pulumi.String("Example"),
//				IpAddresses: pulumi.StringArray{
//					pulumi.String("192.0.2.1-192.0.2.10"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-zia/sdk/go/zia"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := zia.NewZIAFirewallFilteringSourceGroups(ctx, "example", &zia.ZIAFirewallFilteringSourceGroupsArgs{
//				Description: pulumi.String("Example"),
//				IpAddresses: pulumi.StringArray{
//					pulumi.String("203.0.113.0/24"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type ZIAFirewallFilteringSourceGroups struct {
	pulumi.CustomResourceState

	// Description of the source IP group
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Source IP addresses to be added to the group. Enter any number of IP addresses. You can enter:
	// * An IP address (198.51.100.100)
	// * A range of IP addresses 192.0.2.1-192.0.2.10
	// * An IP address with a netmask 203.0.113.0/24
	IpAddresses     pulumi.StringArrayOutput `pulumi:"ipAddresses"`
	IpSourceGroupId pulumi.IntOutput         `pulumi:"ipSourceGroupId"`
	// Source IP group name
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewZIAFirewallFilteringSourceGroups registers a new resource with the given unique name, arguments, and options.
func NewZIAFirewallFilteringSourceGroups(ctx *pulumi.Context,
	name string, args *ZIAFirewallFilteringSourceGroupsArgs, opts ...pulumi.ResourceOption) (*ZIAFirewallFilteringSourceGroups, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IpAddresses == nil {
		return nil, errors.New("invalid value for required argument 'IpAddresses'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource ZIAFirewallFilteringSourceGroups
	err := ctx.RegisterResource("zia:index/zIAFirewallFilteringSourceGroups:ZIAFirewallFilteringSourceGroups", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetZIAFirewallFilteringSourceGroups gets an existing ZIAFirewallFilteringSourceGroups resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetZIAFirewallFilteringSourceGroups(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ZIAFirewallFilteringSourceGroupsState, opts ...pulumi.ResourceOption) (*ZIAFirewallFilteringSourceGroups, error) {
	var resource ZIAFirewallFilteringSourceGroups
	err := ctx.ReadResource("zia:index/zIAFirewallFilteringSourceGroups:ZIAFirewallFilteringSourceGroups", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ZIAFirewallFilteringSourceGroups resources.
type ziafirewallFilteringSourceGroupsState struct {
	// Description of the source IP group
	Description *string `pulumi:"description"`
	// Source IP addresses to be added to the group. Enter any number of IP addresses. You can enter:
	// * An IP address (198.51.100.100)
	// * A range of IP addresses 192.0.2.1-192.0.2.10
	// * An IP address with a netmask 203.0.113.0/24
	IpAddresses     []string `pulumi:"ipAddresses"`
	IpSourceGroupId *int     `pulumi:"ipSourceGroupId"`
	// Source IP group name
	Name *string `pulumi:"name"`
}

type ZIAFirewallFilteringSourceGroupsState struct {
	// Description of the source IP group
	Description pulumi.StringPtrInput
	// Source IP addresses to be added to the group. Enter any number of IP addresses. You can enter:
	// * An IP address (198.51.100.100)
	// * A range of IP addresses 192.0.2.1-192.0.2.10
	// * An IP address with a netmask 203.0.113.0/24
	IpAddresses     pulumi.StringArrayInput
	IpSourceGroupId pulumi.IntPtrInput
	// Source IP group name
	Name pulumi.StringPtrInput
}

func (ZIAFirewallFilteringSourceGroupsState) ElementType() reflect.Type {
	return reflect.TypeOf((*ziafirewallFilteringSourceGroupsState)(nil)).Elem()
}

type ziafirewallFilteringSourceGroupsArgs struct {
	// Description of the source IP group
	Description *string `pulumi:"description"`
	// Source IP addresses to be added to the group. Enter any number of IP addresses. You can enter:
	// * An IP address (198.51.100.100)
	// * A range of IP addresses 192.0.2.1-192.0.2.10
	// * An IP address with a netmask 203.0.113.0/24
	IpAddresses []string `pulumi:"ipAddresses"`
	// Source IP group name
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a ZIAFirewallFilteringSourceGroups resource.
type ZIAFirewallFilteringSourceGroupsArgs struct {
	// Description of the source IP group
	Description pulumi.StringPtrInput
	// Source IP addresses to be added to the group. Enter any number of IP addresses. You can enter:
	// * An IP address (198.51.100.100)
	// * A range of IP addresses 192.0.2.1-192.0.2.10
	// * An IP address with a netmask 203.0.113.0/24
	IpAddresses pulumi.StringArrayInput
	// Source IP group name
	Name pulumi.StringPtrInput
}

func (ZIAFirewallFilteringSourceGroupsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ziafirewallFilteringSourceGroupsArgs)(nil)).Elem()
}

type ZIAFirewallFilteringSourceGroupsInput interface {
	pulumi.Input

	ToZIAFirewallFilteringSourceGroupsOutput() ZIAFirewallFilteringSourceGroupsOutput
	ToZIAFirewallFilteringSourceGroupsOutputWithContext(ctx context.Context) ZIAFirewallFilteringSourceGroupsOutput
}

func (*ZIAFirewallFilteringSourceGroups) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAFirewallFilteringSourceGroups)(nil)).Elem()
}

func (i *ZIAFirewallFilteringSourceGroups) ToZIAFirewallFilteringSourceGroupsOutput() ZIAFirewallFilteringSourceGroupsOutput {
	return i.ToZIAFirewallFilteringSourceGroupsOutputWithContext(context.Background())
}

func (i *ZIAFirewallFilteringSourceGroups) ToZIAFirewallFilteringSourceGroupsOutputWithContext(ctx context.Context) ZIAFirewallFilteringSourceGroupsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringSourceGroupsOutput)
}

// ZIAFirewallFilteringSourceGroupsArrayInput is an input type that accepts ZIAFirewallFilteringSourceGroupsArray and ZIAFirewallFilteringSourceGroupsArrayOutput values.
// You can construct a concrete instance of `ZIAFirewallFilteringSourceGroupsArrayInput` via:
//
//	ZIAFirewallFilteringSourceGroupsArray{ ZIAFirewallFilteringSourceGroupsArgs{...} }
type ZIAFirewallFilteringSourceGroupsArrayInput interface {
	pulumi.Input

	ToZIAFirewallFilteringSourceGroupsArrayOutput() ZIAFirewallFilteringSourceGroupsArrayOutput
	ToZIAFirewallFilteringSourceGroupsArrayOutputWithContext(context.Context) ZIAFirewallFilteringSourceGroupsArrayOutput
}

type ZIAFirewallFilteringSourceGroupsArray []ZIAFirewallFilteringSourceGroupsInput

func (ZIAFirewallFilteringSourceGroupsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZIAFirewallFilteringSourceGroups)(nil)).Elem()
}

func (i ZIAFirewallFilteringSourceGroupsArray) ToZIAFirewallFilteringSourceGroupsArrayOutput() ZIAFirewallFilteringSourceGroupsArrayOutput {
	return i.ToZIAFirewallFilteringSourceGroupsArrayOutputWithContext(context.Background())
}

func (i ZIAFirewallFilteringSourceGroupsArray) ToZIAFirewallFilteringSourceGroupsArrayOutputWithContext(ctx context.Context) ZIAFirewallFilteringSourceGroupsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringSourceGroupsArrayOutput)
}

// ZIAFirewallFilteringSourceGroupsMapInput is an input type that accepts ZIAFirewallFilteringSourceGroupsMap and ZIAFirewallFilteringSourceGroupsMapOutput values.
// You can construct a concrete instance of `ZIAFirewallFilteringSourceGroupsMapInput` via:
//
//	ZIAFirewallFilteringSourceGroupsMap{ "key": ZIAFirewallFilteringSourceGroupsArgs{...} }
type ZIAFirewallFilteringSourceGroupsMapInput interface {
	pulumi.Input

	ToZIAFirewallFilteringSourceGroupsMapOutput() ZIAFirewallFilteringSourceGroupsMapOutput
	ToZIAFirewallFilteringSourceGroupsMapOutputWithContext(context.Context) ZIAFirewallFilteringSourceGroupsMapOutput
}

type ZIAFirewallFilteringSourceGroupsMap map[string]ZIAFirewallFilteringSourceGroupsInput

func (ZIAFirewallFilteringSourceGroupsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZIAFirewallFilteringSourceGroups)(nil)).Elem()
}

func (i ZIAFirewallFilteringSourceGroupsMap) ToZIAFirewallFilteringSourceGroupsMapOutput() ZIAFirewallFilteringSourceGroupsMapOutput {
	return i.ToZIAFirewallFilteringSourceGroupsMapOutputWithContext(context.Background())
}

func (i ZIAFirewallFilteringSourceGroupsMap) ToZIAFirewallFilteringSourceGroupsMapOutputWithContext(ctx context.Context) ZIAFirewallFilteringSourceGroupsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringSourceGroupsMapOutput)
}

type ZIAFirewallFilteringSourceGroupsOutput struct{ *pulumi.OutputState }

func (ZIAFirewallFilteringSourceGroupsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAFirewallFilteringSourceGroups)(nil)).Elem()
}

func (o ZIAFirewallFilteringSourceGroupsOutput) ToZIAFirewallFilteringSourceGroupsOutput() ZIAFirewallFilteringSourceGroupsOutput {
	return o
}

func (o ZIAFirewallFilteringSourceGroupsOutput) ToZIAFirewallFilteringSourceGroupsOutputWithContext(ctx context.Context) ZIAFirewallFilteringSourceGroupsOutput {
	return o
}

// Description of the source IP group
func (o ZIAFirewallFilteringSourceGroupsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZIAFirewallFilteringSourceGroups) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Source IP addresses to be added to the group. Enter any number of IP addresses. You can enter:
// * An IP address (198.51.100.100)
// * A range of IP addresses 192.0.2.1-192.0.2.10
// * An IP address with a netmask 203.0.113.0/24
func (o ZIAFirewallFilteringSourceGroupsOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ZIAFirewallFilteringSourceGroups) pulumi.StringArrayOutput { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

func (o ZIAFirewallFilteringSourceGroupsOutput) IpSourceGroupId() pulumi.IntOutput {
	return o.ApplyT(func(v *ZIAFirewallFilteringSourceGroups) pulumi.IntOutput { return v.IpSourceGroupId }).(pulumi.IntOutput)
}

// Source IP group name
func (o ZIAFirewallFilteringSourceGroupsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ZIAFirewallFilteringSourceGroups) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

type ZIAFirewallFilteringSourceGroupsArrayOutput struct{ *pulumi.OutputState }

func (ZIAFirewallFilteringSourceGroupsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZIAFirewallFilteringSourceGroups)(nil)).Elem()
}

func (o ZIAFirewallFilteringSourceGroupsArrayOutput) ToZIAFirewallFilteringSourceGroupsArrayOutput() ZIAFirewallFilteringSourceGroupsArrayOutput {
	return o
}

func (o ZIAFirewallFilteringSourceGroupsArrayOutput) ToZIAFirewallFilteringSourceGroupsArrayOutputWithContext(ctx context.Context) ZIAFirewallFilteringSourceGroupsArrayOutput {
	return o
}

func (o ZIAFirewallFilteringSourceGroupsArrayOutput) Index(i pulumi.IntInput) ZIAFirewallFilteringSourceGroupsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ZIAFirewallFilteringSourceGroups {
		return vs[0].([]*ZIAFirewallFilteringSourceGroups)[vs[1].(int)]
	}).(ZIAFirewallFilteringSourceGroupsOutput)
}

type ZIAFirewallFilteringSourceGroupsMapOutput struct{ *pulumi.OutputState }

func (ZIAFirewallFilteringSourceGroupsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZIAFirewallFilteringSourceGroups)(nil)).Elem()
}

func (o ZIAFirewallFilteringSourceGroupsMapOutput) ToZIAFirewallFilteringSourceGroupsMapOutput() ZIAFirewallFilteringSourceGroupsMapOutput {
	return o
}

func (o ZIAFirewallFilteringSourceGroupsMapOutput) ToZIAFirewallFilteringSourceGroupsMapOutputWithContext(ctx context.Context) ZIAFirewallFilteringSourceGroupsMapOutput {
	return o
}

func (o ZIAFirewallFilteringSourceGroupsMapOutput) MapIndex(k pulumi.StringInput) ZIAFirewallFilteringSourceGroupsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ZIAFirewallFilteringSourceGroups {
		return vs[0].(map[string]*ZIAFirewallFilteringSourceGroups)[vs[1].(string)]
	}).(ZIAFirewallFilteringSourceGroupsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAFirewallFilteringSourceGroupsInput)(nil)).Elem(), &ZIAFirewallFilteringSourceGroups{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAFirewallFilteringSourceGroupsArrayInput)(nil)).Elem(), ZIAFirewallFilteringSourceGroupsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAFirewallFilteringSourceGroupsMapInput)(nil)).Elem(), ZIAFirewallFilteringSourceGroupsMap{})
	pulumi.RegisterOutputType(ZIAFirewallFilteringSourceGroupsOutput{})
	pulumi.RegisterOutputType(ZIAFirewallFilteringSourceGroupsArrayOutput{})
	pulumi.RegisterOutputType(ZIAFirewallFilteringSourceGroupsMapOutput{})
}
