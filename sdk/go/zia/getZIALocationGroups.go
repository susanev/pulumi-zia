// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zia

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use the **zia_location_groups** data source to get information about a location group option available in the Zscaler Internet Access.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-zia/sdk/go/zia"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := zia.GetZIALocationGroups(ctx, &zia.GetZIALocationGroupsArgs{
//				Name: pulumi.StringRef("Corporate User Traffic Group"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-zia/sdk/go/zia"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := zia.GetZIALocationGroups(ctx, &zia.GetZIALocationGroupsArgs{
//				Name: pulumi.StringRef("Guest Wifi Group"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-zia/sdk/go/zia"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := zia.GetZIALocationGroups(ctx, &zia.GetZIALocationGroupsArgs{
//				Name: pulumi.StringRef("IoT Traffic Group"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-zia/sdk/go/zia"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := zia.GetZIALocationGroups(ctx, &zia.GetZIALocationGroupsArgs{
//				Name: pulumi.StringRef("Server Traffic Group"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-zia/sdk/go/zia"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := zia.GetZIALocationGroups(ctx, &zia.GetZIALocationGroupsArgs{
//				Name: pulumi.StringRef("Server Traffic Group"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetZIALocationGroups(ctx *pulumi.Context, args *GetZIALocationGroupsArgs, opts ...pulumi.InvokeOption) (*GetZIALocationGroupsResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetZIALocationGroupsResult
	err := ctx.Invoke("zia:index/getZIALocationGroups:getZIALocationGroups", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getZIALocationGroups.
type GetZIALocationGroupsArgs struct {
	// (Block Set) Dynamic location group information.
	DynamicLocationGroupCriterias []GetZIALocationGroupsDynamicLocationGroupCriteria `pulumi:"dynamicLocationGroupCriterias"`
	// Location group name
	Name *string `pulumi:"name"`
}

// A collection of values returned by getZIALocationGroups.
type GetZIALocationGroupsResult struct {
	// (List of Object)
	Comments string `pulumi:"comments"`
	// (Boolean) Indicates the location group was deleted
	Deleted bool `pulumi:"deleted"`
	// (Block Set) Dynamic location group information.
	DynamicLocationGroupCriterias []GetZIALocationGroupsDynamicLocationGroupCriteria `pulumi:"dynamicLocationGroupCriterias"`
	// (String) The location group's type (i.e., Static or Dynamic)
	GroupType string `pulumi:"groupType"`
	// (Number) Identifier that uniquely identifies an entity
	Id int `pulumi:"id"`
	// (List of Object) Automatically populated with the current time, after a successful POST or PUT request.
	LastModTime int `pulumi:"lastModTime"`
	// (List of Object)
	LastModUsers []GetZIALocationGroupsLastModUser `pulumi:"lastModUsers"`
	// (List of Object) The Name-ID pairs of the locations that are assigned to the static location group. This is ignored if the groupType is Dynamic.
	Locations []GetZIALocationGroupsLocation `pulumi:"locations"`
	// (String) The configured name of the entity
	Name *string `pulumi:"name"`
	// (Boolean)
	Predefined bool `pulumi:"predefined"`
}

func GetZIALocationGroupsOutput(ctx *pulumi.Context, args GetZIALocationGroupsOutputArgs, opts ...pulumi.InvokeOption) GetZIALocationGroupsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetZIALocationGroupsResult, error) {
			args := v.(GetZIALocationGroupsArgs)
			r, err := GetZIALocationGroups(ctx, &args, opts...)
			var s GetZIALocationGroupsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetZIALocationGroupsResultOutput)
}

// A collection of arguments for invoking getZIALocationGroups.
type GetZIALocationGroupsOutputArgs struct {
	// (Block Set) Dynamic location group information.
	DynamicLocationGroupCriterias GetZIALocationGroupsDynamicLocationGroupCriteriaArrayInput `pulumi:"dynamicLocationGroupCriterias"`
	// Location group name
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (GetZIALocationGroupsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIALocationGroupsArgs)(nil)).Elem()
}

// A collection of values returned by getZIALocationGroups.
type GetZIALocationGroupsResultOutput struct{ *pulumi.OutputState }

func (GetZIALocationGroupsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIALocationGroupsResult)(nil)).Elem()
}

func (o GetZIALocationGroupsResultOutput) ToGetZIALocationGroupsResultOutput() GetZIALocationGroupsResultOutput {
	return o
}

func (o GetZIALocationGroupsResultOutput) ToGetZIALocationGroupsResultOutputWithContext(ctx context.Context) GetZIALocationGroupsResultOutput {
	return o
}

// (List of Object)
func (o GetZIALocationGroupsResultOutput) Comments() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIALocationGroupsResult) string { return v.Comments }).(pulumi.StringOutput)
}

// (Boolean) Indicates the location group was deleted
func (o GetZIALocationGroupsResultOutput) Deleted() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZIALocationGroupsResult) bool { return v.Deleted }).(pulumi.BoolOutput)
}

// (Block Set) Dynamic location group information.
func (o GetZIALocationGroupsResultOutput) DynamicLocationGroupCriterias() GetZIALocationGroupsDynamicLocationGroupCriteriaArrayOutput {
	return o.ApplyT(func(v GetZIALocationGroupsResult) []GetZIALocationGroupsDynamicLocationGroupCriteria {
		return v.DynamicLocationGroupCriterias
	}).(GetZIALocationGroupsDynamicLocationGroupCriteriaArrayOutput)
}

// (String) The location group's type (i.e., Static or Dynamic)
func (o GetZIALocationGroupsResultOutput) GroupType() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIALocationGroupsResult) string { return v.GroupType }).(pulumi.StringOutput)
}

// (Number) Identifier that uniquely identifies an entity
func (o GetZIALocationGroupsResultOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIALocationGroupsResult) int { return v.Id }).(pulumi.IntOutput)
}

// (List of Object) Automatically populated with the current time, after a successful POST or PUT request.
func (o GetZIALocationGroupsResultOutput) LastModTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIALocationGroupsResult) int { return v.LastModTime }).(pulumi.IntOutput)
}

// (List of Object)
func (o GetZIALocationGroupsResultOutput) LastModUsers() GetZIALocationGroupsLastModUserArrayOutput {
	return o.ApplyT(func(v GetZIALocationGroupsResult) []GetZIALocationGroupsLastModUser { return v.LastModUsers }).(GetZIALocationGroupsLastModUserArrayOutput)
}

// (List of Object) The Name-ID pairs of the locations that are assigned to the static location group. This is ignored if the groupType is Dynamic.
func (o GetZIALocationGroupsResultOutput) Locations() GetZIALocationGroupsLocationArrayOutput {
	return o.ApplyT(func(v GetZIALocationGroupsResult) []GetZIALocationGroupsLocation { return v.Locations }).(GetZIALocationGroupsLocationArrayOutput)
}

// (String) The configured name of the entity
func (o GetZIALocationGroupsResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZIALocationGroupsResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (Boolean)
func (o GetZIALocationGroupsResultOutput) Predefined() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZIALocationGroupsResult) bool { return v.Predefined }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterOutputType(GetZIALocationGroupsResultOutput{})
}
