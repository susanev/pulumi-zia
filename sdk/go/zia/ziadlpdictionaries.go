// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zia

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The **zia_dlp_dictionaries** resource allows the creation and management of ZIA DLP dictionaries in the Zscaler Internet Access cloud or via the API.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-zia/sdk/go/zia"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := zia.NewZIADLPDictionaries(ctx, "example", &zia.ZIADLPDictionariesArgs{
//				CustomPhraseMatchType: pulumi.String("MATCH_ALL_CUSTOM_PHRASE_PATTERN_DICTIONARY"),
//				Description:           pulumi.String("Your Description"),
//				DictionaryType:        pulumi.String("PATTERNS_AND_PHRASES"),
//				Patterns: zia.ZIADLPDictionariesPatternArray{
//					&zia.ZIADLPDictionariesPatternArgs{
//						Action:  pulumi.String("PATTERN_COUNT_TYPE_UNIQUE"),
//						Pattern: pulumi.String("YourPattern"),
//					},
//				},
//				Phrases: zia.ZIADLPDictionariesPhraseArray{
//					&zia.ZIADLPDictionariesPhraseArgs{
//						Action: pulumi.String("PHRASE_COUNT_TYPE_ALL"),
//						Phrase: pulumi.String("YourPhrase"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type ZIADLPDictionaries struct {
	pulumi.CustomResourceState

	// The DLP confidence threshold. The following values are supported:
	ConfidenceThreshold pulumi.StringPtrOutput `pulumi:"confidenceThreshold"`
	// The DLP custom phrase match type. Supported values are:
	CustomPhraseMatchType pulumi.StringPtrOutput `pulumi:"customPhraseMatchType"`
	// The desciption of the DLP dictionary
	Description  pulumi.StringPtrOutput `pulumi:"description"`
	DictionaryId pulumi.IntOutput       `pulumi:"dictionaryId"`
	// The DLP dictionary type. The following values are supported:
	DictionaryType pulumi.StringPtrOutput `pulumi:"dictionaryType"`
	// Exact Data Match (EDM) related information for custom DLP dictionaries.
	ExactDataMatchDetails ZIADLPDictionariesExactDataMatchDetailArrayOutput `pulumi:"exactDataMatchDetails"`
	// List of Indexed Document Match (IDM) profiles and their corresponding match accuracy for custom DLP dictionaries.
	IdmProfileMatchAccuracies ZIADLPDictionariesIdmProfileMatchAccuracyArrayOutput `pulumi:"idmProfileMatchAccuracies"`
	// The DLP dictionary's name
	Name pulumi.StringOutput `pulumi:"name"`
	// Indicates whether the name is localized or not. This is always set to True for predefined DLP dictionaries.
	NameL10nTag pulumi.BoolOutput `pulumi:"nameL10nTag"`
	// List containing the patterns used within a custom DLP dictionary. This attribute is not applicable to predefined DLP dictionaries. Required when `dictionaryType` is `PATTERNS_AND_PHRASES`
	Patterns ZIADLPDictionariesPatternArrayOutput `pulumi:"patterns"`
	// List containing the phrases used within a custom DLP dictionary. This attribute is not applicable to predefined DLP dictionaries. Required when `dictionaryType` is `PATTERNS_AND_PHRASES`
	Phrases ZIADLPDictionariesPhraseArrayOutput `pulumi:"phrases"`
	// The DLP dictionary proximity length.
	Proximity pulumi.IntPtrOutput `pulumi:"proximity"`
	// The DLP threshold type. The following values are supported:
	ThresholdType pulumi.StringOutput `pulumi:"thresholdType"`
}

// NewZIADLPDictionaries registers a new resource with the given unique name, arguments, and options.
func NewZIADLPDictionaries(ctx *pulumi.Context,
	name string, args *ZIADLPDictionariesArgs, opts ...pulumi.ResourceOption) (*ZIADLPDictionaries, error) {
	if args == nil {
		args = &ZIADLPDictionariesArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource ZIADLPDictionaries
	err := ctx.RegisterResource("zia:index/zIADLPDictionaries:ZIADLPDictionaries", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetZIADLPDictionaries gets an existing ZIADLPDictionaries resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetZIADLPDictionaries(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ZIADLPDictionariesState, opts ...pulumi.ResourceOption) (*ZIADLPDictionaries, error) {
	var resource ZIADLPDictionaries
	err := ctx.ReadResource("zia:index/zIADLPDictionaries:ZIADLPDictionaries", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ZIADLPDictionaries resources.
type ziadlpdictionariesState struct {
	// The DLP confidence threshold. The following values are supported:
	ConfidenceThreshold *string `pulumi:"confidenceThreshold"`
	// The DLP custom phrase match type. Supported values are:
	CustomPhraseMatchType *string `pulumi:"customPhraseMatchType"`
	// The desciption of the DLP dictionary
	Description  *string `pulumi:"description"`
	DictionaryId *int    `pulumi:"dictionaryId"`
	// The DLP dictionary type. The following values are supported:
	DictionaryType *string `pulumi:"dictionaryType"`
	// Exact Data Match (EDM) related information for custom DLP dictionaries.
	ExactDataMatchDetails []ZIADLPDictionariesExactDataMatchDetail `pulumi:"exactDataMatchDetails"`
	// List of Indexed Document Match (IDM) profiles and their corresponding match accuracy for custom DLP dictionaries.
	IdmProfileMatchAccuracies []ZIADLPDictionariesIdmProfileMatchAccuracy `pulumi:"idmProfileMatchAccuracies"`
	// The DLP dictionary's name
	Name *string `pulumi:"name"`
	// Indicates whether the name is localized or not. This is always set to True for predefined DLP dictionaries.
	NameL10nTag *bool `pulumi:"nameL10nTag"`
	// List containing the patterns used within a custom DLP dictionary. This attribute is not applicable to predefined DLP dictionaries. Required when `dictionaryType` is `PATTERNS_AND_PHRASES`
	Patterns []ZIADLPDictionariesPattern `pulumi:"patterns"`
	// List containing the phrases used within a custom DLP dictionary. This attribute is not applicable to predefined DLP dictionaries. Required when `dictionaryType` is `PATTERNS_AND_PHRASES`
	Phrases []ZIADLPDictionariesPhrase `pulumi:"phrases"`
	// The DLP dictionary proximity length.
	Proximity *int `pulumi:"proximity"`
	// The DLP threshold type. The following values are supported:
	ThresholdType *string `pulumi:"thresholdType"`
}

type ZIADLPDictionariesState struct {
	// The DLP confidence threshold. The following values are supported:
	ConfidenceThreshold pulumi.StringPtrInput
	// The DLP custom phrase match type. Supported values are:
	CustomPhraseMatchType pulumi.StringPtrInput
	// The desciption of the DLP dictionary
	Description  pulumi.StringPtrInput
	DictionaryId pulumi.IntPtrInput
	// The DLP dictionary type. The following values are supported:
	DictionaryType pulumi.StringPtrInput
	// Exact Data Match (EDM) related information for custom DLP dictionaries.
	ExactDataMatchDetails ZIADLPDictionariesExactDataMatchDetailArrayInput
	// List of Indexed Document Match (IDM) profiles and their corresponding match accuracy for custom DLP dictionaries.
	IdmProfileMatchAccuracies ZIADLPDictionariesIdmProfileMatchAccuracyArrayInput
	// The DLP dictionary's name
	Name pulumi.StringPtrInput
	// Indicates whether the name is localized or not. This is always set to True for predefined DLP dictionaries.
	NameL10nTag pulumi.BoolPtrInput
	// List containing the patterns used within a custom DLP dictionary. This attribute is not applicable to predefined DLP dictionaries. Required when `dictionaryType` is `PATTERNS_AND_PHRASES`
	Patterns ZIADLPDictionariesPatternArrayInput
	// List containing the phrases used within a custom DLP dictionary. This attribute is not applicable to predefined DLP dictionaries. Required when `dictionaryType` is `PATTERNS_AND_PHRASES`
	Phrases ZIADLPDictionariesPhraseArrayInput
	// The DLP dictionary proximity length.
	Proximity pulumi.IntPtrInput
	// The DLP threshold type. The following values are supported:
	ThresholdType pulumi.StringPtrInput
}

func (ZIADLPDictionariesState) ElementType() reflect.Type {
	return reflect.TypeOf((*ziadlpdictionariesState)(nil)).Elem()
}

type ziadlpdictionariesArgs struct {
	// The DLP confidence threshold. The following values are supported:
	ConfidenceThreshold *string `pulumi:"confidenceThreshold"`
	// The DLP custom phrase match type. Supported values are:
	CustomPhraseMatchType *string `pulumi:"customPhraseMatchType"`
	// The desciption of the DLP dictionary
	Description *string `pulumi:"description"`
	// The DLP dictionary type. The following values are supported:
	DictionaryType *string `pulumi:"dictionaryType"`
	// Exact Data Match (EDM) related information for custom DLP dictionaries.
	ExactDataMatchDetails []ZIADLPDictionariesExactDataMatchDetail `pulumi:"exactDataMatchDetails"`
	// List of Indexed Document Match (IDM) profiles and their corresponding match accuracy for custom DLP dictionaries.
	IdmProfileMatchAccuracies []ZIADLPDictionariesIdmProfileMatchAccuracy `pulumi:"idmProfileMatchAccuracies"`
	// The DLP dictionary's name
	Name *string `pulumi:"name"`
	// List containing the patterns used within a custom DLP dictionary. This attribute is not applicable to predefined DLP dictionaries. Required when `dictionaryType` is `PATTERNS_AND_PHRASES`
	Patterns []ZIADLPDictionariesPattern `pulumi:"patterns"`
	// List containing the phrases used within a custom DLP dictionary. This attribute is not applicable to predefined DLP dictionaries. Required when `dictionaryType` is `PATTERNS_AND_PHRASES`
	Phrases []ZIADLPDictionariesPhrase `pulumi:"phrases"`
	// The DLP dictionary proximity length.
	Proximity *int `pulumi:"proximity"`
}

// The set of arguments for constructing a ZIADLPDictionaries resource.
type ZIADLPDictionariesArgs struct {
	// The DLP confidence threshold. The following values are supported:
	ConfidenceThreshold pulumi.StringPtrInput
	// The DLP custom phrase match type. Supported values are:
	CustomPhraseMatchType pulumi.StringPtrInput
	// The desciption of the DLP dictionary
	Description pulumi.StringPtrInput
	// The DLP dictionary type. The following values are supported:
	DictionaryType pulumi.StringPtrInput
	// Exact Data Match (EDM) related information for custom DLP dictionaries.
	ExactDataMatchDetails ZIADLPDictionariesExactDataMatchDetailArrayInput
	// List of Indexed Document Match (IDM) profiles and their corresponding match accuracy for custom DLP dictionaries.
	IdmProfileMatchAccuracies ZIADLPDictionariesIdmProfileMatchAccuracyArrayInput
	// The DLP dictionary's name
	Name pulumi.StringPtrInput
	// List containing the patterns used within a custom DLP dictionary. This attribute is not applicable to predefined DLP dictionaries. Required when `dictionaryType` is `PATTERNS_AND_PHRASES`
	Patterns ZIADLPDictionariesPatternArrayInput
	// List containing the phrases used within a custom DLP dictionary. This attribute is not applicable to predefined DLP dictionaries. Required when `dictionaryType` is `PATTERNS_AND_PHRASES`
	Phrases ZIADLPDictionariesPhraseArrayInput
	// The DLP dictionary proximity length.
	Proximity pulumi.IntPtrInput
}

func (ZIADLPDictionariesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ziadlpdictionariesArgs)(nil)).Elem()
}

type ZIADLPDictionariesInput interface {
	pulumi.Input

	ToZIADLPDictionariesOutput() ZIADLPDictionariesOutput
	ToZIADLPDictionariesOutputWithContext(ctx context.Context) ZIADLPDictionariesOutput
}

func (*ZIADLPDictionaries) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIADLPDictionaries)(nil)).Elem()
}

func (i *ZIADLPDictionaries) ToZIADLPDictionariesOutput() ZIADLPDictionariesOutput {
	return i.ToZIADLPDictionariesOutputWithContext(context.Background())
}

func (i *ZIADLPDictionaries) ToZIADLPDictionariesOutputWithContext(ctx context.Context) ZIADLPDictionariesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIADLPDictionariesOutput)
}

// ZIADLPDictionariesArrayInput is an input type that accepts ZIADLPDictionariesArray and ZIADLPDictionariesArrayOutput values.
// You can construct a concrete instance of `ZIADLPDictionariesArrayInput` via:
//
//	ZIADLPDictionariesArray{ ZIADLPDictionariesArgs{...} }
type ZIADLPDictionariesArrayInput interface {
	pulumi.Input

	ToZIADLPDictionariesArrayOutput() ZIADLPDictionariesArrayOutput
	ToZIADLPDictionariesArrayOutputWithContext(context.Context) ZIADLPDictionariesArrayOutput
}

type ZIADLPDictionariesArray []ZIADLPDictionariesInput

func (ZIADLPDictionariesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZIADLPDictionaries)(nil)).Elem()
}

func (i ZIADLPDictionariesArray) ToZIADLPDictionariesArrayOutput() ZIADLPDictionariesArrayOutput {
	return i.ToZIADLPDictionariesArrayOutputWithContext(context.Background())
}

func (i ZIADLPDictionariesArray) ToZIADLPDictionariesArrayOutputWithContext(ctx context.Context) ZIADLPDictionariesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIADLPDictionariesArrayOutput)
}

// ZIADLPDictionariesMapInput is an input type that accepts ZIADLPDictionariesMap and ZIADLPDictionariesMapOutput values.
// You can construct a concrete instance of `ZIADLPDictionariesMapInput` via:
//
//	ZIADLPDictionariesMap{ "key": ZIADLPDictionariesArgs{...} }
type ZIADLPDictionariesMapInput interface {
	pulumi.Input

	ToZIADLPDictionariesMapOutput() ZIADLPDictionariesMapOutput
	ToZIADLPDictionariesMapOutputWithContext(context.Context) ZIADLPDictionariesMapOutput
}

type ZIADLPDictionariesMap map[string]ZIADLPDictionariesInput

func (ZIADLPDictionariesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZIADLPDictionaries)(nil)).Elem()
}

func (i ZIADLPDictionariesMap) ToZIADLPDictionariesMapOutput() ZIADLPDictionariesMapOutput {
	return i.ToZIADLPDictionariesMapOutputWithContext(context.Background())
}

func (i ZIADLPDictionariesMap) ToZIADLPDictionariesMapOutputWithContext(ctx context.Context) ZIADLPDictionariesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIADLPDictionariesMapOutput)
}

type ZIADLPDictionariesOutput struct{ *pulumi.OutputState }

func (ZIADLPDictionariesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIADLPDictionaries)(nil)).Elem()
}

func (o ZIADLPDictionariesOutput) ToZIADLPDictionariesOutput() ZIADLPDictionariesOutput {
	return o
}

func (o ZIADLPDictionariesOutput) ToZIADLPDictionariesOutputWithContext(ctx context.Context) ZIADLPDictionariesOutput {
	return o
}

// The DLP confidence threshold. The following values are supported:
func (o ZIADLPDictionariesOutput) ConfidenceThreshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZIADLPDictionaries) pulumi.StringPtrOutput { return v.ConfidenceThreshold }).(pulumi.StringPtrOutput)
}

// The DLP custom phrase match type. Supported values are:
func (o ZIADLPDictionariesOutput) CustomPhraseMatchType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZIADLPDictionaries) pulumi.StringPtrOutput { return v.CustomPhraseMatchType }).(pulumi.StringPtrOutput)
}

// The desciption of the DLP dictionary
func (o ZIADLPDictionariesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZIADLPDictionaries) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ZIADLPDictionariesOutput) DictionaryId() pulumi.IntOutput {
	return o.ApplyT(func(v *ZIADLPDictionaries) pulumi.IntOutput { return v.DictionaryId }).(pulumi.IntOutput)
}

// The DLP dictionary type. The following values are supported:
func (o ZIADLPDictionariesOutput) DictionaryType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZIADLPDictionaries) pulumi.StringPtrOutput { return v.DictionaryType }).(pulumi.StringPtrOutput)
}

// Exact Data Match (EDM) related information for custom DLP dictionaries.
func (o ZIADLPDictionariesOutput) ExactDataMatchDetails() ZIADLPDictionariesExactDataMatchDetailArrayOutput {
	return o.ApplyT(func(v *ZIADLPDictionaries) ZIADLPDictionariesExactDataMatchDetailArrayOutput {
		return v.ExactDataMatchDetails
	}).(ZIADLPDictionariesExactDataMatchDetailArrayOutput)
}

// List of Indexed Document Match (IDM) profiles and their corresponding match accuracy for custom DLP dictionaries.
func (o ZIADLPDictionariesOutput) IdmProfileMatchAccuracies() ZIADLPDictionariesIdmProfileMatchAccuracyArrayOutput {
	return o.ApplyT(func(v *ZIADLPDictionaries) ZIADLPDictionariesIdmProfileMatchAccuracyArrayOutput {
		return v.IdmProfileMatchAccuracies
	}).(ZIADLPDictionariesIdmProfileMatchAccuracyArrayOutput)
}

// The DLP dictionary's name
func (o ZIADLPDictionariesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ZIADLPDictionaries) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Indicates whether the name is localized or not. This is always set to True for predefined DLP dictionaries.
func (o ZIADLPDictionariesOutput) NameL10nTag() pulumi.BoolOutput {
	return o.ApplyT(func(v *ZIADLPDictionaries) pulumi.BoolOutput { return v.NameL10nTag }).(pulumi.BoolOutput)
}

// List containing the patterns used within a custom DLP dictionary. This attribute is not applicable to predefined DLP dictionaries. Required when `dictionaryType` is `PATTERNS_AND_PHRASES`
func (o ZIADLPDictionariesOutput) Patterns() ZIADLPDictionariesPatternArrayOutput {
	return o.ApplyT(func(v *ZIADLPDictionaries) ZIADLPDictionariesPatternArrayOutput { return v.Patterns }).(ZIADLPDictionariesPatternArrayOutput)
}

// List containing the phrases used within a custom DLP dictionary. This attribute is not applicable to predefined DLP dictionaries. Required when `dictionaryType` is `PATTERNS_AND_PHRASES`
func (o ZIADLPDictionariesOutput) Phrases() ZIADLPDictionariesPhraseArrayOutput {
	return o.ApplyT(func(v *ZIADLPDictionaries) ZIADLPDictionariesPhraseArrayOutput { return v.Phrases }).(ZIADLPDictionariesPhraseArrayOutput)
}

// The DLP dictionary proximity length.
func (o ZIADLPDictionariesOutput) Proximity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ZIADLPDictionaries) pulumi.IntPtrOutput { return v.Proximity }).(pulumi.IntPtrOutput)
}

// The DLP threshold type. The following values are supported:
func (o ZIADLPDictionariesOutput) ThresholdType() pulumi.StringOutput {
	return o.ApplyT(func(v *ZIADLPDictionaries) pulumi.StringOutput { return v.ThresholdType }).(pulumi.StringOutput)
}

type ZIADLPDictionariesArrayOutput struct{ *pulumi.OutputState }

func (ZIADLPDictionariesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZIADLPDictionaries)(nil)).Elem()
}

func (o ZIADLPDictionariesArrayOutput) ToZIADLPDictionariesArrayOutput() ZIADLPDictionariesArrayOutput {
	return o
}

func (o ZIADLPDictionariesArrayOutput) ToZIADLPDictionariesArrayOutputWithContext(ctx context.Context) ZIADLPDictionariesArrayOutput {
	return o
}

func (o ZIADLPDictionariesArrayOutput) Index(i pulumi.IntInput) ZIADLPDictionariesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ZIADLPDictionaries {
		return vs[0].([]*ZIADLPDictionaries)[vs[1].(int)]
	}).(ZIADLPDictionariesOutput)
}

type ZIADLPDictionariesMapOutput struct{ *pulumi.OutputState }

func (ZIADLPDictionariesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZIADLPDictionaries)(nil)).Elem()
}

func (o ZIADLPDictionariesMapOutput) ToZIADLPDictionariesMapOutput() ZIADLPDictionariesMapOutput {
	return o
}

func (o ZIADLPDictionariesMapOutput) ToZIADLPDictionariesMapOutputWithContext(ctx context.Context) ZIADLPDictionariesMapOutput {
	return o
}

func (o ZIADLPDictionariesMapOutput) MapIndex(k pulumi.StringInput) ZIADLPDictionariesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ZIADLPDictionaries {
		return vs[0].(map[string]*ZIADLPDictionaries)[vs[1].(string)]
	}).(ZIADLPDictionariesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ZIADLPDictionariesInput)(nil)).Elem(), &ZIADLPDictionaries{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIADLPDictionariesArrayInput)(nil)).Elem(), ZIADLPDictionariesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIADLPDictionariesMapInput)(nil)).Elem(), ZIADLPDictionariesMap{})
	pulumi.RegisterOutputType(ZIADLPDictionariesOutput{})
	pulumi.RegisterOutputType(ZIADLPDictionariesArrayOutput{})
	pulumi.RegisterOutputType(ZIADLPDictionariesMapOutput{})
}
