// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zia

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ZIAAdminUsersAdminScope struct {
	// Based on the admin scope type, the entities can be the ID/name pair of departments, locations, or location groups.
	ScopeEntities *ZIAAdminUsersAdminScopeScopeEntities `pulumi:"scopeEntities"`
	// Only applicable for the LOCATION_GROUP admin scope type, in which case this attribute gives the list of ID/name pairs of locations within the location group.
	ScopeGroupMemberEntities *ZIAAdminUsersAdminScopeScopeGroupMemberEntities `pulumi:"scopeGroupMemberEntities"`
	// The admin scope type. The attribute name is subject to change.
	Type *string `pulumi:"type"`
}

// ZIAAdminUsersAdminScopeInput is an input type that accepts ZIAAdminUsersAdminScopeArgs and ZIAAdminUsersAdminScopeOutput values.
// You can construct a concrete instance of `ZIAAdminUsersAdminScopeInput` via:
//
//	ZIAAdminUsersAdminScopeArgs{...}
type ZIAAdminUsersAdminScopeInput interface {
	pulumi.Input

	ToZIAAdminUsersAdminScopeOutput() ZIAAdminUsersAdminScopeOutput
	ToZIAAdminUsersAdminScopeOutputWithContext(context.Context) ZIAAdminUsersAdminScopeOutput
}

type ZIAAdminUsersAdminScopeArgs struct {
	// Based on the admin scope type, the entities can be the ID/name pair of departments, locations, or location groups.
	ScopeEntities ZIAAdminUsersAdminScopeScopeEntitiesPtrInput `pulumi:"scopeEntities"`
	// Only applicable for the LOCATION_GROUP admin scope type, in which case this attribute gives the list of ID/name pairs of locations within the location group.
	ScopeGroupMemberEntities ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesPtrInput `pulumi:"scopeGroupMemberEntities"`
	// The admin scope type. The attribute name is subject to change.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ZIAAdminUsersAdminScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAAdminUsersAdminScope)(nil)).Elem()
}

func (i ZIAAdminUsersAdminScopeArgs) ToZIAAdminUsersAdminScopeOutput() ZIAAdminUsersAdminScopeOutput {
	return i.ToZIAAdminUsersAdminScopeOutputWithContext(context.Background())
}

func (i ZIAAdminUsersAdminScopeArgs) ToZIAAdminUsersAdminScopeOutputWithContext(ctx context.Context) ZIAAdminUsersAdminScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAAdminUsersAdminScopeOutput)
}

// ZIAAdminUsersAdminScopeArrayInput is an input type that accepts ZIAAdminUsersAdminScopeArray and ZIAAdminUsersAdminScopeArrayOutput values.
// You can construct a concrete instance of `ZIAAdminUsersAdminScopeArrayInput` via:
//
//	ZIAAdminUsersAdminScopeArray{ ZIAAdminUsersAdminScopeArgs{...} }
type ZIAAdminUsersAdminScopeArrayInput interface {
	pulumi.Input

	ToZIAAdminUsersAdminScopeArrayOutput() ZIAAdminUsersAdminScopeArrayOutput
	ToZIAAdminUsersAdminScopeArrayOutputWithContext(context.Context) ZIAAdminUsersAdminScopeArrayOutput
}

type ZIAAdminUsersAdminScopeArray []ZIAAdminUsersAdminScopeInput

func (ZIAAdminUsersAdminScopeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZIAAdminUsersAdminScope)(nil)).Elem()
}

func (i ZIAAdminUsersAdminScopeArray) ToZIAAdminUsersAdminScopeArrayOutput() ZIAAdminUsersAdminScopeArrayOutput {
	return i.ToZIAAdminUsersAdminScopeArrayOutputWithContext(context.Background())
}

func (i ZIAAdminUsersAdminScopeArray) ToZIAAdminUsersAdminScopeArrayOutputWithContext(ctx context.Context) ZIAAdminUsersAdminScopeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAAdminUsersAdminScopeArrayOutput)
}

type ZIAAdminUsersAdminScopeOutput struct{ *pulumi.OutputState }

func (ZIAAdminUsersAdminScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAAdminUsersAdminScope)(nil)).Elem()
}

func (o ZIAAdminUsersAdminScopeOutput) ToZIAAdminUsersAdminScopeOutput() ZIAAdminUsersAdminScopeOutput {
	return o
}

func (o ZIAAdminUsersAdminScopeOutput) ToZIAAdminUsersAdminScopeOutputWithContext(ctx context.Context) ZIAAdminUsersAdminScopeOutput {
	return o
}

// Based on the admin scope type, the entities can be the ID/name pair of departments, locations, or location groups.
func (o ZIAAdminUsersAdminScopeOutput) ScopeEntities() ZIAAdminUsersAdminScopeScopeEntitiesPtrOutput {
	return o.ApplyT(func(v ZIAAdminUsersAdminScope) *ZIAAdminUsersAdminScopeScopeEntities { return v.ScopeEntities }).(ZIAAdminUsersAdminScopeScopeEntitiesPtrOutput)
}

// Only applicable for the LOCATION_GROUP admin scope type, in which case this attribute gives the list of ID/name pairs of locations within the location group.
func (o ZIAAdminUsersAdminScopeOutput) ScopeGroupMemberEntities() ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutput {
	return o.ApplyT(func(v ZIAAdminUsersAdminScope) *ZIAAdminUsersAdminScopeScopeGroupMemberEntities {
		return v.ScopeGroupMemberEntities
	}).(ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutput)
}

// The admin scope type. The attribute name is subject to change.
func (o ZIAAdminUsersAdminScopeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZIAAdminUsersAdminScope) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ZIAAdminUsersAdminScopeArrayOutput struct{ *pulumi.OutputState }

func (ZIAAdminUsersAdminScopeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZIAAdminUsersAdminScope)(nil)).Elem()
}

func (o ZIAAdminUsersAdminScopeArrayOutput) ToZIAAdminUsersAdminScopeArrayOutput() ZIAAdminUsersAdminScopeArrayOutput {
	return o
}

func (o ZIAAdminUsersAdminScopeArrayOutput) ToZIAAdminUsersAdminScopeArrayOutputWithContext(ctx context.Context) ZIAAdminUsersAdminScopeArrayOutput {
	return o
}

func (o ZIAAdminUsersAdminScopeArrayOutput) Index(i pulumi.IntInput) ZIAAdminUsersAdminScopeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZIAAdminUsersAdminScope {
		return vs[0].([]ZIAAdminUsersAdminScope)[vs[1].(int)]
	}).(ZIAAdminUsersAdminScopeOutput)
}

type ZIAAdminUsersAdminScopeScopeEntities struct {
	// Identifier that uniquely identifies an entity
	Ids []int `pulumi:"ids"`
}

// ZIAAdminUsersAdminScopeScopeEntitiesInput is an input type that accepts ZIAAdminUsersAdminScopeScopeEntitiesArgs and ZIAAdminUsersAdminScopeScopeEntitiesOutput values.
// You can construct a concrete instance of `ZIAAdminUsersAdminScopeScopeEntitiesInput` via:
//
//	ZIAAdminUsersAdminScopeScopeEntitiesArgs{...}
type ZIAAdminUsersAdminScopeScopeEntitiesInput interface {
	pulumi.Input

	ToZIAAdminUsersAdminScopeScopeEntitiesOutput() ZIAAdminUsersAdminScopeScopeEntitiesOutput
	ToZIAAdminUsersAdminScopeScopeEntitiesOutputWithContext(context.Context) ZIAAdminUsersAdminScopeScopeEntitiesOutput
}

type ZIAAdminUsersAdminScopeScopeEntitiesArgs struct {
	// Identifier that uniquely identifies an entity
	Ids pulumi.IntArrayInput `pulumi:"ids"`
}

func (ZIAAdminUsersAdminScopeScopeEntitiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAAdminUsersAdminScopeScopeEntities)(nil)).Elem()
}

func (i ZIAAdminUsersAdminScopeScopeEntitiesArgs) ToZIAAdminUsersAdminScopeScopeEntitiesOutput() ZIAAdminUsersAdminScopeScopeEntitiesOutput {
	return i.ToZIAAdminUsersAdminScopeScopeEntitiesOutputWithContext(context.Background())
}

func (i ZIAAdminUsersAdminScopeScopeEntitiesArgs) ToZIAAdminUsersAdminScopeScopeEntitiesOutputWithContext(ctx context.Context) ZIAAdminUsersAdminScopeScopeEntitiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAAdminUsersAdminScopeScopeEntitiesOutput)
}

func (i ZIAAdminUsersAdminScopeScopeEntitiesArgs) ToZIAAdminUsersAdminScopeScopeEntitiesPtrOutput() ZIAAdminUsersAdminScopeScopeEntitiesPtrOutput {
	return i.ToZIAAdminUsersAdminScopeScopeEntitiesPtrOutputWithContext(context.Background())
}

func (i ZIAAdminUsersAdminScopeScopeEntitiesArgs) ToZIAAdminUsersAdminScopeScopeEntitiesPtrOutputWithContext(ctx context.Context) ZIAAdminUsersAdminScopeScopeEntitiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAAdminUsersAdminScopeScopeEntitiesOutput).ToZIAAdminUsersAdminScopeScopeEntitiesPtrOutputWithContext(ctx)
}

// ZIAAdminUsersAdminScopeScopeEntitiesPtrInput is an input type that accepts ZIAAdminUsersAdminScopeScopeEntitiesArgs, ZIAAdminUsersAdminScopeScopeEntitiesPtr and ZIAAdminUsersAdminScopeScopeEntitiesPtrOutput values.
// You can construct a concrete instance of `ZIAAdminUsersAdminScopeScopeEntitiesPtrInput` via:
//
//	        ZIAAdminUsersAdminScopeScopeEntitiesArgs{...}
//
//	or:
//
//	        nil
type ZIAAdminUsersAdminScopeScopeEntitiesPtrInput interface {
	pulumi.Input

	ToZIAAdminUsersAdminScopeScopeEntitiesPtrOutput() ZIAAdminUsersAdminScopeScopeEntitiesPtrOutput
	ToZIAAdminUsersAdminScopeScopeEntitiesPtrOutputWithContext(context.Context) ZIAAdminUsersAdminScopeScopeEntitiesPtrOutput
}

type ziaadminUsersAdminScopeScopeEntitiesPtrType ZIAAdminUsersAdminScopeScopeEntitiesArgs

func ZIAAdminUsersAdminScopeScopeEntitiesPtr(v *ZIAAdminUsersAdminScopeScopeEntitiesArgs) ZIAAdminUsersAdminScopeScopeEntitiesPtrInput {
	return (*ziaadminUsersAdminScopeScopeEntitiesPtrType)(v)
}

func (*ziaadminUsersAdminScopeScopeEntitiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAAdminUsersAdminScopeScopeEntities)(nil)).Elem()
}

func (i *ziaadminUsersAdminScopeScopeEntitiesPtrType) ToZIAAdminUsersAdminScopeScopeEntitiesPtrOutput() ZIAAdminUsersAdminScopeScopeEntitiesPtrOutput {
	return i.ToZIAAdminUsersAdminScopeScopeEntitiesPtrOutputWithContext(context.Background())
}

func (i *ziaadminUsersAdminScopeScopeEntitiesPtrType) ToZIAAdminUsersAdminScopeScopeEntitiesPtrOutputWithContext(ctx context.Context) ZIAAdminUsersAdminScopeScopeEntitiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAAdminUsersAdminScopeScopeEntitiesPtrOutput)
}

type ZIAAdminUsersAdminScopeScopeEntitiesOutput struct{ *pulumi.OutputState }

func (ZIAAdminUsersAdminScopeScopeEntitiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAAdminUsersAdminScopeScopeEntities)(nil)).Elem()
}

func (o ZIAAdminUsersAdminScopeScopeEntitiesOutput) ToZIAAdminUsersAdminScopeScopeEntitiesOutput() ZIAAdminUsersAdminScopeScopeEntitiesOutput {
	return o
}

func (o ZIAAdminUsersAdminScopeScopeEntitiesOutput) ToZIAAdminUsersAdminScopeScopeEntitiesOutputWithContext(ctx context.Context) ZIAAdminUsersAdminScopeScopeEntitiesOutput {
	return o
}

func (o ZIAAdminUsersAdminScopeScopeEntitiesOutput) ToZIAAdminUsersAdminScopeScopeEntitiesPtrOutput() ZIAAdminUsersAdminScopeScopeEntitiesPtrOutput {
	return o.ToZIAAdminUsersAdminScopeScopeEntitiesPtrOutputWithContext(context.Background())
}

func (o ZIAAdminUsersAdminScopeScopeEntitiesOutput) ToZIAAdminUsersAdminScopeScopeEntitiesPtrOutputWithContext(ctx context.Context) ZIAAdminUsersAdminScopeScopeEntitiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZIAAdminUsersAdminScopeScopeEntities) *ZIAAdminUsersAdminScopeScopeEntities {
		return &v
	}).(ZIAAdminUsersAdminScopeScopeEntitiesPtrOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIAAdminUsersAdminScopeScopeEntitiesOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ZIAAdminUsersAdminScopeScopeEntities) []int { return v.Ids }).(pulumi.IntArrayOutput)
}

type ZIAAdminUsersAdminScopeScopeEntitiesPtrOutput struct{ *pulumi.OutputState }

func (ZIAAdminUsersAdminScopeScopeEntitiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAAdminUsersAdminScopeScopeEntities)(nil)).Elem()
}

func (o ZIAAdminUsersAdminScopeScopeEntitiesPtrOutput) ToZIAAdminUsersAdminScopeScopeEntitiesPtrOutput() ZIAAdminUsersAdminScopeScopeEntitiesPtrOutput {
	return o
}

func (o ZIAAdminUsersAdminScopeScopeEntitiesPtrOutput) ToZIAAdminUsersAdminScopeScopeEntitiesPtrOutputWithContext(ctx context.Context) ZIAAdminUsersAdminScopeScopeEntitiesPtrOutput {
	return o
}

func (o ZIAAdminUsersAdminScopeScopeEntitiesPtrOutput) Elem() ZIAAdminUsersAdminScopeScopeEntitiesOutput {
	return o.ApplyT(func(v *ZIAAdminUsersAdminScopeScopeEntities) ZIAAdminUsersAdminScopeScopeEntities {
		if v != nil {
			return *v
		}
		var ret ZIAAdminUsersAdminScopeScopeEntities
		return ret
	}).(ZIAAdminUsersAdminScopeScopeEntitiesOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIAAdminUsersAdminScopeScopeEntitiesPtrOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *ZIAAdminUsersAdminScopeScopeEntities) []int {
		if v == nil {
			return nil
		}
		return v.Ids
	}).(pulumi.IntArrayOutput)
}

type ZIAAdminUsersAdminScopeScopeGroupMemberEntities struct {
	// Identifier that uniquely identifies an entity
	Ids []int `pulumi:"ids"`
}

// ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesInput is an input type that accepts ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesArgs and ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesOutput values.
// You can construct a concrete instance of `ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesInput` via:
//
//	ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesArgs{...}
type ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesInput interface {
	pulumi.Input

	ToZIAAdminUsersAdminScopeScopeGroupMemberEntitiesOutput() ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesOutput
	ToZIAAdminUsersAdminScopeScopeGroupMemberEntitiesOutputWithContext(context.Context) ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesOutput
}

type ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesArgs struct {
	// Identifier that uniquely identifies an entity
	Ids pulumi.IntArrayInput `pulumi:"ids"`
}

func (ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAAdminUsersAdminScopeScopeGroupMemberEntities)(nil)).Elem()
}

func (i ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesArgs) ToZIAAdminUsersAdminScopeScopeGroupMemberEntitiesOutput() ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesOutput {
	return i.ToZIAAdminUsersAdminScopeScopeGroupMemberEntitiesOutputWithContext(context.Background())
}

func (i ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesArgs) ToZIAAdminUsersAdminScopeScopeGroupMemberEntitiesOutputWithContext(ctx context.Context) ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesOutput)
}

func (i ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesArgs) ToZIAAdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutput() ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutput {
	return i.ToZIAAdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutputWithContext(context.Background())
}

func (i ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesArgs) ToZIAAdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutputWithContext(ctx context.Context) ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesOutput).ToZIAAdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutputWithContext(ctx)
}

// ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesPtrInput is an input type that accepts ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesArgs, ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesPtr and ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutput values.
// You can construct a concrete instance of `ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesPtrInput` via:
//
//	        ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesArgs{...}
//
//	or:
//
//	        nil
type ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesPtrInput interface {
	pulumi.Input

	ToZIAAdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutput() ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutput
	ToZIAAdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutputWithContext(context.Context) ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutput
}

type ziaadminUsersAdminScopeScopeGroupMemberEntitiesPtrType ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesArgs

func ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesPtr(v *ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesArgs) ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesPtrInput {
	return (*ziaadminUsersAdminScopeScopeGroupMemberEntitiesPtrType)(v)
}

func (*ziaadminUsersAdminScopeScopeGroupMemberEntitiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAAdminUsersAdminScopeScopeGroupMemberEntities)(nil)).Elem()
}

func (i *ziaadminUsersAdminScopeScopeGroupMemberEntitiesPtrType) ToZIAAdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutput() ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutput {
	return i.ToZIAAdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutputWithContext(context.Background())
}

func (i *ziaadminUsersAdminScopeScopeGroupMemberEntitiesPtrType) ToZIAAdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutputWithContext(ctx context.Context) ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutput)
}

type ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesOutput struct{ *pulumi.OutputState }

func (ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAAdminUsersAdminScopeScopeGroupMemberEntities)(nil)).Elem()
}

func (o ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesOutput) ToZIAAdminUsersAdminScopeScopeGroupMemberEntitiesOutput() ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesOutput {
	return o
}

func (o ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesOutput) ToZIAAdminUsersAdminScopeScopeGroupMemberEntitiesOutputWithContext(ctx context.Context) ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesOutput {
	return o
}

func (o ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesOutput) ToZIAAdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutput() ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutput {
	return o.ToZIAAdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutputWithContext(context.Background())
}

func (o ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesOutput) ToZIAAdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutputWithContext(ctx context.Context) ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZIAAdminUsersAdminScopeScopeGroupMemberEntities) *ZIAAdminUsersAdminScopeScopeGroupMemberEntities {
		return &v
	}).(ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ZIAAdminUsersAdminScopeScopeGroupMemberEntities) []int { return v.Ids }).(pulumi.IntArrayOutput)
}

type ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutput struct{ *pulumi.OutputState }

func (ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAAdminUsersAdminScopeScopeGroupMemberEntities)(nil)).Elem()
}

func (o ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutput) ToZIAAdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutput() ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutput {
	return o
}

func (o ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutput) ToZIAAdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutputWithContext(ctx context.Context) ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutput {
	return o
}

func (o ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutput) Elem() ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesOutput {
	return o.ApplyT(func(v *ZIAAdminUsersAdminScopeScopeGroupMemberEntities) ZIAAdminUsersAdminScopeScopeGroupMemberEntities {
		if v != nil {
			return *v
		}
		var ret ZIAAdminUsersAdminScopeScopeGroupMemberEntities
		return ret
	}).(ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *ZIAAdminUsersAdminScopeScopeGroupMemberEntities) []int {
		if v == nil {
			return nil
		}
		return v.Ids
	}).(pulumi.IntArrayOutput)
}

type ZIAAdminUsersRole struct {
	Extensions map[string]string `pulumi:"extensions"`
	// Identifier that uniquely identifies an entity
	Id            *int  `pulumi:"id"`
	IsNameL10nTag *bool `pulumi:"isNameL10nTag"`
	// The configured name of the entity
	Name *string `pulumi:"name"`
}

// ZIAAdminUsersRoleInput is an input type that accepts ZIAAdminUsersRoleArgs and ZIAAdminUsersRoleOutput values.
// You can construct a concrete instance of `ZIAAdminUsersRoleInput` via:
//
//	ZIAAdminUsersRoleArgs{...}
type ZIAAdminUsersRoleInput interface {
	pulumi.Input

	ToZIAAdminUsersRoleOutput() ZIAAdminUsersRoleOutput
	ToZIAAdminUsersRoleOutputWithContext(context.Context) ZIAAdminUsersRoleOutput
}

type ZIAAdminUsersRoleArgs struct {
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// Identifier that uniquely identifies an entity
	Id            pulumi.IntPtrInput  `pulumi:"id"`
	IsNameL10nTag pulumi.BoolPtrInput `pulumi:"isNameL10nTag"`
	// The configured name of the entity
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ZIAAdminUsersRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAAdminUsersRole)(nil)).Elem()
}

func (i ZIAAdminUsersRoleArgs) ToZIAAdminUsersRoleOutput() ZIAAdminUsersRoleOutput {
	return i.ToZIAAdminUsersRoleOutputWithContext(context.Background())
}

func (i ZIAAdminUsersRoleArgs) ToZIAAdminUsersRoleOutputWithContext(ctx context.Context) ZIAAdminUsersRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAAdminUsersRoleOutput)
}

// ZIAAdminUsersRoleArrayInput is an input type that accepts ZIAAdminUsersRoleArray and ZIAAdminUsersRoleArrayOutput values.
// You can construct a concrete instance of `ZIAAdminUsersRoleArrayInput` via:
//
//	ZIAAdminUsersRoleArray{ ZIAAdminUsersRoleArgs{...} }
type ZIAAdminUsersRoleArrayInput interface {
	pulumi.Input

	ToZIAAdminUsersRoleArrayOutput() ZIAAdminUsersRoleArrayOutput
	ToZIAAdminUsersRoleArrayOutputWithContext(context.Context) ZIAAdminUsersRoleArrayOutput
}

type ZIAAdminUsersRoleArray []ZIAAdminUsersRoleInput

func (ZIAAdminUsersRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZIAAdminUsersRole)(nil)).Elem()
}

func (i ZIAAdminUsersRoleArray) ToZIAAdminUsersRoleArrayOutput() ZIAAdminUsersRoleArrayOutput {
	return i.ToZIAAdminUsersRoleArrayOutputWithContext(context.Background())
}

func (i ZIAAdminUsersRoleArray) ToZIAAdminUsersRoleArrayOutputWithContext(ctx context.Context) ZIAAdminUsersRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAAdminUsersRoleArrayOutput)
}

type ZIAAdminUsersRoleOutput struct{ *pulumi.OutputState }

func (ZIAAdminUsersRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAAdminUsersRole)(nil)).Elem()
}

func (o ZIAAdminUsersRoleOutput) ToZIAAdminUsersRoleOutput() ZIAAdminUsersRoleOutput {
	return o
}

func (o ZIAAdminUsersRoleOutput) ToZIAAdminUsersRoleOutputWithContext(ctx context.Context) ZIAAdminUsersRoleOutput {
	return o
}

func (o ZIAAdminUsersRoleOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v ZIAAdminUsersRole) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIAAdminUsersRoleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZIAAdminUsersRole) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o ZIAAdminUsersRoleOutput) IsNameL10nTag() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ZIAAdminUsersRole) *bool { return v.IsNameL10nTag }).(pulumi.BoolPtrOutput)
}

// The configured name of the entity
func (o ZIAAdminUsersRoleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZIAAdminUsersRole) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ZIAAdminUsersRoleArrayOutput struct{ *pulumi.OutputState }

func (ZIAAdminUsersRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZIAAdminUsersRole)(nil)).Elem()
}

func (o ZIAAdminUsersRoleArrayOutput) ToZIAAdminUsersRoleArrayOutput() ZIAAdminUsersRoleArrayOutput {
	return o
}

func (o ZIAAdminUsersRoleArrayOutput) ToZIAAdminUsersRoleArrayOutputWithContext(ctx context.Context) ZIAAdminUsersRoleArrayOutput {
	return o
}

func (o ZIAAdminUsersRoleArrayOutput) Index(i pulumi.IntInput) ZIAAdminUsersRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZIAAdminUsersRole {
		return vs[0].([]ZIAAdminUsersRole)[vs[1].(int)]
	}).(ZIAAdminUsersRoleOutput)
}

type ZIADLPDictionariesExactDataMatchDetail struct {
	// The unique identifier for the EDM mapping.
	DictionaryEdmMappingId *int `pulumi:"dictionaryEdmMappingId"`
	// The EDM template's primary field.
	PrimaryField *int `pulumi:"primaryField"`
	// The unique identifier for the EDM template (or schema).
	SchemaId *int `pulumi:"schemaId"`
	// The EDM secondary field to match on.
	// - `"MATCHON_NONE"`
	// - `"MATCHON_ANY_1"`
	// - `"MATCHON_ANY_2"`
	// - `"MATCHON_ANY_3"`
	// - `"MATCHON_ANY_4"`
	// - `"MATCHON_ANY_5"`
	// - `"MATCHON_ANY_6"`
	// - `"MATCHON_ANY_7"`
	// - `"MATCHON_ANY_8"`
	// - `"MATCHON_ANY_9"`
	// - `"MATCHON_ANY_10"`
	// - `"MATCHON_ANY_11"`
	// - `"MATCHON_ANY_12"`
	// - `"MATCHON_ANY_13"`
	// - `"MATCHON_ANY_14"`
	// - `"MATCHON_ANY_15"`
	// - `"MATCHON_ALL"`
	SecondaryFieldMatchOn *string `pulumi:"secondaryFieldMatchOn"`
	// The EDM template's secondary fields.
	SecondaryFields []int `pulumi:"secondaryFields"`
}

// ZIADLPDictionariesExactDataMatchDetailInput is an input type that accepts ZIADLPDictionariesExactDataMatchDetailArgs and ZIADLPDictionariesExactDataMatchDetailOutput values.
// You can construct a concrete instance of `ZIADLPDictionariesExactDataMatchDetailInput` via:
//
//	ZIADLPDictionariesExactDataMatchDetailArgs{...}
type ZIADLPDictionariesExactDataMatchDetailInput interface {
	pulumi.Input

	ToZIADLPDictionariesExactDataMatchDetailOutput() ZIADLPDictionariesExactDataMatchDetailOutput
	ToZIADLPDictionariesExactDataMatchDetailOutputWithContext(context.Context) ZIADLPDictionariesExactDataMatchDetailOutput
}

type ZIADLPDictionariesExactDataMatchDetailArgs struct {
	// The unique identifier for the EDM mapping.
	DictionaryEdmMappingId pulumi.IntPtrInput `pulumi:"dictionaryEdmMappingId"`
	// The EDM template's primary field.
	PrimaryField pulumi.IntPtrInput `pulumi:"primaryField"`
	// The unique identifier for the EDM template (or schema).
	SchemaId pulumi.IntPtrInput `pulumi:"schemaId"`
	// The EDM secondary field to match on.
	// - `"MATCHON_NONE"`
	// - `"MATCHON_ANY_1"`
	// - `"MATCHON_ANY_2"`
	// - `"MATCHON_ANY_3"`
	// - `"MATCHON_ANY_4"`
	// - `"MATCHON_ANY_5"`
	// - `"MATCHON_ANY_6"`
	// - `"MATCHON_ANY_7"`
	// - `"MATCHON_ANY_8"`
	// - `"MATCHON_ANY_9"`
	// - `"MATCHON_ANY_10"`
	// - `"MATCHON_ANY_11"`
	// - `"MATCHON_ANY_12"`
	// - `"MATCHON_ANY_13"`
	// - `"MATCHON_ANY_14"`
	// - `"MATCHON_ANY_15"`
	// - `"MATCHON_ALL"`
	SecondaryFieldMatchOn pulumi.StringPtrInput `pulumi:"secondaryFieldMatchOn"`
	// The EDM template's secondary fields.
	SecondaryFields pulumi.IntArrayInput `pulumi:"secondaryFields"`
}

func (ZIADLPDictionariesExactDataMatchDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIADLPDictionariesExactDataMatchDetail)(nil)).Elem()
}

func (i ZIADLPDictionariesExactDataMatchDetailArgs) ToZIADLPDictionariesExactDataMatchDetailOutput() ZIADLPDictionariesExactDataMatchDetailOutput {
	return i.ToZIADLPDictionariesExactDataMatchDetailOutputWithContext(context.Background())
}

func (i ZIADLPDictionariesExactDataMatchDetailArgs) ToZIADLPDictionariesExactDataMatchDetailOutputWithContext(ctx context.Context) ZIADLPDictionariesExactDataMatchDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIADLPDictionariesExactDataMatchDetailOutput)
}

// ZIADLPDictionariesExactDataMatchDetailArrayInput is an input type that accepts ZIADLPDictionariesExactDataMatchDetailArray and ZIADLPDictionariesExactDataMatchDetailArrayOutput values.
// You can construct a concrete instance of `ZIADLPDictionariesExactDataMatchDetailArrayInput` via:
//
//	ZIADLPDictionariesExactDataMatchDetailArray{ ZIADLPDictionariesExactDataMatchDetailArgs{...} }
type ZIADLPDictionariesExactDataMatchDetailArrayInput interface {
	pulumi.Input

	ToZIADLPDictionariesExactDataMatchDetailArrayOutput() ZIADLPDictionariesExactDataMatchDetailArrayOutput
	ToZIADLPDictionariesExactDataMatchDetailArrayOutputWithContext(context.Context) ZIADLPDictionariesExactDataMatchDetailArrayOutput
}

type ZIADLPDictionariesExactDataMatchDetailArray []ZIADLPDictionariesExactDataMatchDetailInput

func (ZIADLPDictionariesExactDataMatchDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZIADLPDictionariesExactDataMatchDetail)(nil)).Elem()
}

func (i ZIADLPDictionariesExactDataMatchDetailArray) ToZIADLPDictionariesExactDataMatchDetailArrayOutput() ZIADLPDictionariesExactDataMatchDetailArrayOutput {
	return i.ToZIADLPDictionariesExactDataMatchDetailArrayOutputWithContext(context.Background())
}

func (i ZIADLPDictionariesExactDataMatchDetailArray) ToZIADLPDictionariesExactDataMatchDetailArrayOutputWithContext(ctx context.Context) ZIADLPDictionariesExactDataMatchDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIADLPDictionariesExactDataMatchDetailArrayOutput)
}

type ZIADLPDictionariesExactDataMatchDetailOutput struct{ *pulumi.OutputState }

func (ZIADLPDictionariesExactDataMatchDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIADLPDictionariesExactDataMatchDetail)(nil)).Elem()
}

func (o ZIADLPDictionariesExactDataMatchDetailOutput) ToZIADLPDictionariesExactDataMatchDetailOutput() ZIADLPDictionariesExactDataMatchDetailOutput {
	return o
}

func (o ZIADLPDictionariesExactDataMatchDetailOutput) ToZIADLPDictionariesExactDataMatchDetailOutputWithContext(ctx context.Context) ZIADLPDictionariesExactDataMatchDetailOutput {
	return o
}

// The unique identifier for the EDM mapping.
func (o ZIADLPDictionariesExactDataMatchDetailOutput) DictionaryEdmMappingId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZIADLPDictionariesExactDataMatchDetail) *int { return v.DictionaryEdmMappingId }).(pulumi.IntPtrOutput)
}

// The EDM template's primary field.
func (o ZIADLPDictionariesExactDataMatchDetailOutput) PrimaryField() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZIADLPDictionariesExactDataMatchDetail) *int { return v.PrimaryField }).(pulumi.IntPtrOutput)
}

// The unique identifier for the EDM template (or schema).
func (o ZIADLPDictionariesExactDataMatchDetailOutput) SchemaId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZIADLPDictionariesExactDataMatchDetail) *int { return v.SchemaId }).(pulumi.IntPtrOutput)
}

// The EDM secondary field to match on.
// - `"MATCHON_NONE"`
// - `"MATCHON_ANY_1"`
// - `"MATCHON_ANY_2"`
// - `"MATCHON_ANY_3"`
// - `"MATCHON_ANY_4"`
// - `"MATCHON_ANY_5"`
// - `"MATCHON_ANY_6"`
// - `"MATCHON_ANY_7"`
// - `"MATCHON_ANY_8"`
// - `"MATCHON_ANY_9"`
// - `"MATCHON_ANY_10"`
// - `"MATCHON_ANY_11"`
// - `"MATCHON_ANY_12"`
// - `"MATCHON_ANY_13"`
// - `"MATCHON_ANY_14"`
// - `"MATCHON_ANY_15"`
// - `"MATCHON_ALL"`
func (o ZIADLPDictionariesExactDataMatchDetailOutput) SecondaryFieldMatchOn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZIADLPDictionariesExactDataMatchDetail) *string { return v.SecondaryFieldMatchOn }).(pulumi.StringPtrOutput)
}

// The EDM template's secondary fields.
func (o ZIADLPDictionariesExactDataMatchDetailOutput) SecondaryFields() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ZIADLPDictionariesExactDataMatchDetail) []int { return v.SecondaryFields }).(pulumi.IntArrayOutput)
}

type ZIADLPDictionariesExactDataMatchDetailArrayOutput struct{ *pulumi.OutputState }

func (ZIADLPDictionariesExactDataMatchDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZIADLPDictionariesExactDataMatchDetail)(nil)).Elem()
}

func (o ZIADLPDictionariesExactDataMatchDetailArrayOutput) ToZIADLPDictionariesExactDataMatchDetailArrayOutput() ZIADLPDictionariesExactDataMatchDetailArrayOutput {
	return o
}

func (o ZIADLPDictionariesExactDataMatchDetailArrayOutput) ToZIADLPDictionariesExactDataMatchDetailArrayOutputWithContext(ctx context.Context) ZIADLPDictionariesExactDataMatchDetailArrayOutput {
	return o
}

func (o ZIADLPDictionariesExactDataMatchDetailArrayOutput) Index(i pulumi.IntInput) ZIADLPDictionariesExactDataMatchDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZIADLPDictionariesExactDataMatchDetail {
		return vs[0].([]ZIADLPDictionariesExactDataMatchDetail)[vs[1].(int)]
	}).(ZIADLPDictionariesExactDataMatchDetailOutput)
}

type ZIADLPDictionariesIdmProfileMatchAccuracy struct {
	// The IDM template reference.
	AdpIdmProfile *ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfile `pulumi:"adpIdmProfile"`
	// The IDM template match accuracy.
	// - `"LOW"`
	// - `"MEDIUM"`
	// - `"HEAVY"`
	MatchAccuracy *string `pulumi:"matchAccuracy"`
}

// ZIADLPDictionariesIdmProfileMatchAccuracyInput is an input type that accepts ZIADLPDictionariesIdmProfileMatchAccuracyArgs and ZIADLPDictionariesIdmProfileMatchAccuracyOutput values.
// You can construct a concrete instance of `ZIADLPDictionariesIdmProfileMatchAccuracyInput` via:
//
//	ZIADLPDictionariesIdmProfileMatchAccuracyArgs{...}
type ZIADLPDictionariesIdmProfileMatchAccuracyInput interface {
	pulumi.Input

	ToZIADLPDictionariesIdmProfileMatchAccuracyOutput() ZIADLPDictionariesIdmProfileMatchAccuracyOutput
	ToZIADLPDictionariesIdmProfileMatchAccuracyOutputWithContext(context.Context) ZIADLPDictionariesIdmProfileMatchAccuracyOutput
}

type ZIADLPDictionariesIdmProfileMatchAccuracyArgs struct {
	// The IDM template reference.
	AdpIdmProfile ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfilePtrInput `pulumi:"adpIdmProfile"`
	// The IDM template match accuracy.
	// - `"LOW"`
	// - `"MEDIUM"`
	// - `"HEAVY"`
	MatchAccuracy pulumi.StringPtrInput `pulumi:"matchAccuracy"`
}

func (ZIADLPDictionariesIdmProfileMatchAccuracyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIADLPDictionariesIdmProfileMatchAccuracy)(nil)).Elem()
}

func (i ZIADLPDictionariesIdmProfileMatchAccuracyArgs) ToZIADLPDictionariesIdmProfileMatchAccuracyOutput() ZIADLPDictionariesIdmProfileMatchAccuracyOutput {
	return i.ToZIADLPDictionariesIdmProfileMatchAccuracyOutputWithContext(context.Background())
}

func (i ZIADLPDictionariesIdmProfileMatchAccuracyArgs) ToZIADLPDictionariesIdmProfileMatchAccuracyOutputWithContext(ctx context.Context) ZIADLPDictionariesIdmProfileMatchAccuracyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIADLPDictionariesIdmProfileMatchAccuracyOutput)
}

// ZIADLPDictionariesIdmProfileMatchAccuracyArrayInput is an input type that accepts ZIADLPDictionariesIdmProfileMatchAccuracyArray and ZIADLPDictionariesIdmProfileMatchAccuracyArrayOutput values.
// You can construct a concrete instance of `ZIADLPDictionariesIdmProfileMatchAccuracyArrayInput` via:
//
//	ZIADLPDictionariesIdmProfileMatchAccuracyArray{ ZIADLPDictionariesIdmProfileMatchAccuracyArgs{...} }
type ZIADLPDictionariesIdmProfileMatchAccuracyArrayInput interface {
	pulumi.Input

	ToZIADLPDictionariesIdmProfileMatchAccuracyArrayOutput() ZIADLPDictionariesIdmProfileMatchAccuracyArrayOutput
	ToZIADLPDictionariesIdmProfileMatchAccuracyArrayOutputWithContext(context.Context) ZIADLPDictionariesIdmProfileMatchAccuracyArrayOutput
}

type ZIADLPDictionariesIdmProfileMatchAccuracyArray []ZIADLPDictionariesIdmProfileMatchAccuracyInput

func (ZIADLPDictionariesIdmProfileMatchAccuracyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZIADLPDictionariesIdmProfileMatchAccuracy)(nil)).Elem()
}

func (i ZIADLPDictionariesIdmProfileMatchAccuracyArray) ToZIADLPDictionariesIdmProfileMatchAccuracyArrayOutput() ZIADLPDictionariesIdmProfileMatchAccuracyArrayOutput {
	return i.ToZIADLPDictionariesIdmProfileMatchAccuracyArrayOutputWithContext(context.Background())
}

func (i ZIADLPDictionariesIdmProfileMatchAccuracyArray) ToZIADLPDictionariesIdmProfileMatchAccuracyArrayOutputWithContext(ctx context.Context) ZIADLPDictionariesIdmProfileMatchAccuracyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIADLPDictionariesIdmProfileMatchAccuracyArrayOutput)
}

type ZIADLPDictionariesIdmProfileMatchAccuracyOutput struct{ *pulumi.OutputState }

func (ZIADLPDictionariesIdmProfileMatchAccuracyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIADLPDictionariesIdmProfileMatchAccuracy)(nil)).Elem()
}

func (o ZIADLPDictionariesIdmProfileMatchAccuracyOutput) ToZIADLPDictionariesIdmProfileMatchAccuracyOutput() ZIADLPDictionariesIdmProfileMatchAccuracyOutput {
	return o
}

func (o ZIADLPDictionariesIdmProfileMatchAccuracyOutput) ToZIADLPDictionariesIdmProfileMatchAccuracyOutputWithContext(ctx context.Context) ZIADLPDictionariesIdmProfileMatchAccuracyOutput {
	return o
}

// The IDM template reference.
func (o ZIADLPDictionariesIdmProfileMatchAccuracyOutput) AdpIdmProfile() ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfilePtrOutput {
	return o.ApplyT(func(v ZIADLPDictionariesIdmProfileMatchAccuracy) *ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfile {
		return v.AdpIdmProfile
	}).(ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfilePtrOutput)
}

// The IDM template match accuracy.
// - `"LOW"`
// - `"MEDIUM"`
// - `"HEAVY"`
func (o ZIADLPDictionariesIdmProfileMatchAccuracyOutput) MatchAccuracy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZIADLPDictionariesIdmProfileMatchAccuracy) *string { return v.MatchAccuracy }).(pulumi.StringPtrOutput)
}

type ZIADLPDictionariesIdmProfileMatchAccuracyArrayOutput struct{ *pulumi.OutputState }

func (ZIADLPDictionariesIdmProfileMatchAccuracyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZIADLPDictionariesIdmProfileMatchAccuracy)(nil)).Elem()
}

func (o ZIADLPDictionariesIdmProfileMatchAccuracyArrayOutput) ToZIADLPDictionariesIdmProfileMatchAccuracyArrayOutput() ZIADLPDictionariesIdmProfileMatchAccuracyArrayOutput {
	return o
}

func (o ZIADLPDictionariesIdmProfileMatchAccuracyArrayOutput) ToZIADLPDictionariesIdmProfileMatchAccuracyArrayOutputWithContext(ctx context.Context) ZIADLPDictionariesIdmProfileMatchAccuracyArrayOutput {
	return o
}

func (o ZIADLPDictionariesIdmProfileMatchAccuracyArrayOutput) Index(i pulumi.IntInput) ZIADLPDictionariesIdmProfileMatchAccuracyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZIADLPDictionariesIdmProfileMatchAccuracy {
		return vs[0].([]ZIADLPDictionariesIdmProfileMatchAccuracy)[vs[1].(int)]
	}).(ZIADLPDictionariesIdmProfileMatchAccuracyOutput)
}

type ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfile struct {
	Extensions map[string]string `pulumi:"extensions"`
	Id         *int              `pulumi:"id"`
}

// ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileInput is an input type that accepts ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileArgs and ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileOutput values.
// You can construct a concrete instance of `ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileInput` via:
//
//	ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileArgs{...}
type ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileInput interface {
	pulumi.Input

	ToZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileOutput() ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileOutput
	ToZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileOutputWithContext(context.Context) ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileOutput
}

type ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileArgs struct {
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	Id         pulumi.IntPtrInput    `pulumi:"id"`
}

func (ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfile)(nil)).Elem()
}

func (i ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileArgs) ToZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileOutput() ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileOutput {
	return i.ToZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileOutputWithContext(context.Background())
}

func (i ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileArgs) ToZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileOutputWithContext(ctx context.Context) ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileOutput)
}

func (i ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileArgs) ToZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfilePtrOutput() ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfilePtrOutput {
	return i.ToZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfilePtrOutputWithContext(context.Background())
}

func (i ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileArgs) ToZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfilePtrOutputWithContext(ctx context.Context) ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileOutput).ToZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfilePtrOutputWithContext(ctx)
}

// ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfilePtrInput is an input type that accepts ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileArgs, ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfilePtr and ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfilePtrOutput values.
// You can construct a concrete instance of `ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfilePtrInput` via:
//
//	        ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileArgs{...}
//
//	or:
//
//	        nil
type ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfilePtrInput interface {
	pulumi.Input

	ToZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfilePtrOutput() ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfilePtrOutput
	ToZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfilePtrOutputWithContext(context.Context) ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfilePtrOutput
}

type ziadlpdictionariesIdmProfileMatchAccuracyAdpIdmProfilePtrType ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileArgs

func ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfilePtr(v *ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileArgs) ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfilePtrInput {
	return (*ziadlpdictionariesIdmProfileMatchAccuracyAdpIdmProfilePtrType)(v)
}

func (*ziadlpdictionariesIdmProfileMatchAccuracyAdpIdmProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfile)(nil)).Elem()
}

func (i *ziadlpdictionariesIdmProfileMatchAccuracyAdpIdmProfilePtrType) ToZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfilePtrOutput() ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfilePtrOutput {
	return i.ToZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfilePtrOutputWithContext(context.Background())
}

func (i *ziadlpdictionariesIdmProfileMatchAccuracyAdpIdmProfilePtrType) ToZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfilePtrOutputWithContext(ctx context.Context) ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfilePtrOutput)
}

type ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileOutput struct{ *pulumi.OutputState }

func (ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfile)(nil)).Elem()
}

func (o ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileOutput) ToZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileOutput() ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileOutput {
	return o
}

func (o ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileOutput) ToZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileOutputWithContext(ctx context.Context) ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileOutput {
	return o
}

func (o ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileOutput) ToZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfilePtrOutput() ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfilePtrOutput {
	return o.ToZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfilePtrOutputWithContext(context.Background())
}

func (o ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileOutput) ToZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfilePtrOutputWithContext(ctx context.Context) ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfile) *ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfile {
		return &v
	}).(ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfilePtrOutput)
}

func (o ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfile) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

func (o ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfile) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfilePtrOutput struct{ *pulumi.OutputState }

func (ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfile)(nil)).Elem()
}

func (o ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfilePtrOutput) ToZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfilePtrOutput() ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfilePtrOutput {
	return o
}

func (o ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfilePtrOutput) ToZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfilePtrOutputWithContext(ctx context.Context) ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfilePtrOutput {
	return o
}

func (o ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfilePtrOutput) Elem() ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileOutput {
	return o.ApplyT(func(v *ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfile) ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfile {
		if v != nil {
			return *v
		}
		var ret ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfile
		return ret
	}).(ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileOutput)
}

func (o ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfilePtrOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfile) map[string]string {
		if v == nil {
			return nil
		}
		return v.Extensions
	}).(pulumi.StringMapOutput)
}

func (o ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfilePtrOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfile) *int {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.IntPtrOutput)
}

type ZIADLPDictionariesPattern struct {
	// The action applied to a DLP dictionary using patterns. The following values are supported:
	Action *string `pulumi:"action"`
	// DLP dictionary pattern
	Pattern *string `pulumi:"pattern"`
}

// ZIADLPDictionariesPatternInput is an input type that accepts ZIADLPDictionariesPatternArgs and ZIADLPDictionariesPatternOutput values.
// You can construct a concrete instance of `ZIADLPDictionariesPatternInput` via:
//
//	ZIADLPDictionariesPatternArgs{...}
type ZIADLPDictionariesPatternInput interface {
	pulumi.Input

	ToZIADLPDictionariesPatternOutput() ZIADLPDictionariesPatternOutput
	ToZIADLPDictionariesPatternOutputWithContext(context.Context) ZIADLPDictionariesPatternOutput
}

type ZIADLPDictionariesPatternArgs struct {
	// The action applied to a DLP dictionary using patterns. The following values are supported:
	Action pulumi.StringPtrInput `pulumi:"action"`
	// DLP dictionary pattern
	Pattern pulumi.StringPtrInput `pulumi:"pattern"`
}

func (ZIADLPDictionariesPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIADLPDictionariesPattern)(nil)).Elem()
}

func (i ZIADLPDictionariesPatternArgs) ToZIADLPDictionariesPatternOutput() ZIADLPDictionariesPatternOutput {
	return i.ToZIADLPDictionariesPatternOutputWithContext(context.Background())
}

func (i ZIADLPDictionariesPatternArgs) ToZIADLPDictionariesPatternOutputWithContext(ctx context.Context) ZIADLPDictionariesPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIADLPDictionariesPatternOutput)
}

// ZIADLPDictionariesPatternArrayInput is an input type that accepts ZIADLPDictionariesPatternArray and ZIADLPDictionariesPatternArrayOutput values.
// You can construct a concrete instance of `ZIADLPDictionariesPatternArrayInput` via:
//
//	ZIADLPDictionariesPatternArray{ ZIADLPDictionariesPatternArgs{...} }
type ZIADLPDictionariesPatternArrayInput interface {
	pulumi.Input

	ToZIADLPDictionariesPatternArrayOutput() ZIADLPDictionariesPatternArrayOutput
	ToZIADLPDictionariesPatternArrayOutputWithContext(context.Context) ZIADLPDictionariesPatternArrayOutput
}

type ZIADLPDictionariesPatternArray []ZIADLPDictionariesPatternInput

func (ZIADLPDictionariesPatternArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZIADLPDictionariesPattern)(nil)).Elem()
}

func (i ZIADLPDictionariesPatternArray) ToZIADLPDictionariesPatternArrayOutput() ZIADLPDictionariesPatternArrayOutput {
	return i.ToZIADLPDictionariesPatternArrayOutputWithContext(context.Background())
}

func (i ZIADLPDictionariesPatternArray) ToZIADLPDictionariesPatternArrayOutputWithContext(ctx context.Context) ZIADLPDictionariesPatternArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIADLPDictionariesPatternArrayOutput)
}

type ZIADLPDictionariesPatternOutput struct{ *pulumi.OutputState }

func (ZIADLPDictionariesPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIADLPDictionariesPattern)(nil)).Elem()
}

func (o ZIADLPDictionariesPatternOutput) ToZIADLPDictionariesPatternOutput() ZIADLPDictionariesPatternOutput {
	return o
}

func (o ZIADLPDictionariesPatternOutput) ToZIADLPDictionariesPatternOutputWithContext(ctx context.Context) ZIADLPDictionariesPatternOutput {
	return o
}

// The action applied to a DLP dictionary using patterns. The following values are supported:
func (o ZIADLPDictionariesPatternOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZIADLPDictionariesPattern) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// DLP dictionary pattern
func (o ZIADLPDictionariesPatternOutput) Pattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZIADLPDictionariesPattern) *string { return v.Pattern }).(pulumi.StringPtrOutput)
}

type ZIADLPDictionariesPatternArrayOutput struct{ *pulumi.OutputState }

func (ZIADLPDictionariesPatternArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZIADLPDictionariesPattern)(nil)).Elem()
}

func (o ZIADLPDictionariesPatternArrayOutput) ToZIADLPDictionariesPatternArrayOutput() ZIADLPDictionariesPatternArrayOutput {
	return o
}

func (o ZIADLPDictionariesPatternArrayOutput) ToZIADLPDictionariesPatternArrayOutputWithContext(ctx context.Context) ZIADLPDictionariesPatternArrayOutput {
	return o
}

func (o ZIADLPDictionariesPatternArrayOutput) Index(i pulumi.IntInput) ZIADLPDictionariesPatternOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZIADLPDictionariesPattern {
		return vs[0].([]ZIADLPDictionariesPattern)[vs[1].(int)]
	}).(ZIADLPDictionariesPatternOutput)
}

type ZIADLPDictionariesPhrase struct {
	// The action applied to a DLP dictionary using patterns. The following values are supported:
	Action *string `pulumi:"action"`
	// DLP dictionary phrase
	Phrase *string `pulumi:"phrase"`
}

// ZIADLPDictionariesPhraseInput is an input type that accepts ZIADLPDictionariesPhraseArgs and ZIADLPDictionariesPhraseOutput values.
// You can construct a concrete instance of `ZIADLPDictionariesPhraseInput` via:
//
//	ZIADLPDictionariesPhraseArgs{...}
type ZIADLPDictionariesPhraseInput interface {
	pulumi.Input

	ToZIADLPDictionariesPhraseOutput() ZIADLPDictionariesPhraseOutput
	ToZIADLPDictionariesPhraseOutputWithContext(context.Context) ZIADLPDictionariesPhraseOutput
}

type ZIADLPDictionariesPhraseArgs struct {
	// The action applied to a DLP dictionary using patterns. The following values are supported:
	Action pulumi.StringPtrInput `pulumi:"action"`
	// DLP dictionary phrase
	Phrase pulumi.StringPtrInput `pulumi:"phrase"`
}

func (ZIADLPDictionariesPhraseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIADLPDictionariesPhrase)(nil)).Elem()
}

func (i ZIADLPDictionariesPhraseArgs) ToZIADLPDictionariesPhraseOutput() ZIADLPDictionariesPhraseOutput {
	return i.ToZIADLPDictionariesPhraseOutputWithContext(context.Background())
}

func (i ZIADLPDictionariesPhraseArgs) ToZIADLPDictionariesPhraseOutputWithContext(ctx context.Context) ZIADLPDictionariesPhraseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIADLPDictionariesPhraseOutput)
}

// ZIADLPDictionariesPhraseArrayInput is an input type that accepts ZIADLPDictionariesPhraseArray and ZIADLPDictionariesPhraseArrayOutput values.
// You can construct a concrete instance of `ZIADLPDictionariesPhraseArrayInput` via:
//
//	ZIADLPDictionariesPhraseArray{ ZIADLPDictionariesPhraseArgs{...} }
type ZIADLPDictionariesPhraseArrayInput interface {
	pulumi.Input

	ToZIADLPDictionariesPhraseArrayOutput() ZIADLPDictionariesPhraseArrayOutput
	ToZIADLPDictionariesPhraseArrayOutputWithContext(context.Context) ZIADLPDictionariesPhraseArrayOutput
}

type ZIADLPDictionariesPhraseArray []ZIADLPDictionariesPhraseInput

func (ZIADLPDictionariesPhraseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZIADLPDictionariesPhrase)(nil)).Elem()
}

func (i ZIADLPDictionariesPhraseArray) ToZIADLPDictionariesPhraseArrayOutput() ZIADLPDictionariesPhraseArrayOutput {
	return i.ToZIADLPDictionariesPhraseArrayOutputWithContext(context.Background())
}

func (i ZIADLPDictionariesPhraseArray) ToZIADLPDictionariesPhraseArrayOutputWithContext(ctx context.Context) ZIADLPDictionariesPhraseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIADLPDictionariesPhraseArrayOutput)
}

type ZIADLPDictionariesPhraseOutput struct{ *pulumi.OutputState }

func (ZIADLPDictionariesPhraseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIADLPDictionariesPhrase)(nil)).Elem()
}

func (o ZIADLPDictionariesPhraseOutput) ToZIADLPDictionariesPhraseOutput() ZIADLPDictionariesPhraseOutput {
	return o
}

func (o ZIADLPDictionariesPhraseOutput) ToZIADLPDictionariesPhraseOutputWithContext(ctx context.Context) ZIADLPDictionariesPhraseOutput {
	return o
}

// The action applied to a DLP dictionary using patterns. The following values are supported:
func (o ZIADLPDictionariesPhraseOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZIADLPDictionariesPhrase) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// DLP dictionary phrase
func (o ZIADLPDictionariesPhraseOutput) Phrase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZIADLPDictionariesPhrase) *string { return v.Phrase }).(pulumi.StringPtrOutput)
}

type ZIADLPDictionariesPhraseArrayOutput struct{ *pulumi.OutputState }

func (ZIADLPDictionariesPhraseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZIADLPDictionariesPhrase)(nil)).Elem()
}

func (o ZIADLPDictionariesPhraseArrayOutput) ToZIADLPDictionariesPhraseArrayOutput() ZIADLPDictionariesPhraseArrayOutput {
	return o
}

func (o ZIADLPDictionariesPhraseArrayOutput) ToZIADLPDictionariesPhraseArrayOutputWithContext(ctx context.Context) ZIADLPDictionariesPhraseArrayOutput {
	return o
}

func (o ZIADLPDictionariesPhraseArrayOutput) Index(i pulumi.IntInput) ZIADLPDictionariesPhraseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZIADLPDictionariesPhrase {
		return vs[0].([]ZIADLPDictionariesPhrase)[vs[1].(int)]
	}).(ZIADLPDictionariesPhraseOutput)
}

type ZIADLPWebRulesAuditor struct {
	// Identifier that uniquely identifies an entity
	Id int `pulumi:"id"`
}

// ZIADLPWebRulesAuditorInput is an input type that accepts ZIADLPWebRulesAuditorArgs and ZIADLPWebRulesAuditorOutput values.
// You can construct a concrete instance of `ZIADLPWebRulesAuditorInput` via:
//
//	ZIADLPWebRulesAuditorArgs{...}
type ZIADLPWebRulesAuditorInput interface {
	pulumi.Input

	ToZIADLPWebRulesAuditorOutput() ZIADLPWebRulesAuditorOutput
	ToZIADLPWebRulesAuditorOutputWithContext(context.Context) ZIADLPWebRulesAuditorOutput
}

type ZIADLPWebRulesAuditorArgs struct {
	// Identifier that uniquely identifies an entity
	Id pulumi.IntInput `pulumi:"id"`
}

func (ZIADLPWebRulesAuditorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIADLPWebRulesAuditor)(nil)).Elem()
}

func (i ZIADLPWebRulesAuditorArgs) ToZIADLPWebRulesAuditorOutput() ZIADLPWebRulesAuditorOutput {
	return i.ToZIADLPWebRulesAuditorOutputWithContext(context.Background())
}

func (i ZIADLPWebRulesAuditorArgs) ToZIADLPWebRulesAuditorOutputWithContext(ctx context.Context) ZIADLPWebRulesAuditorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIADLPWebRulesAuditorOutput)
}

func (i ZIADLPWebRulesAuditorArgs) ToZIADLPWebRulesAuditorPtrOutput() ZIADLPWebRulesAuditorPtrOutput {
	return i.ToZIADLPWebRulesAuditorPtrOutputWithContext(context.Background())
}

func (i ZIADLPWebRulesAuditorArgs) ToZIADLPWebRulesAuditorPtrOutputWithContext(ctx context.Context) ZIADLPWebRulesAuditorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIADLPWebRulesAuditorOutput).ToZIADLPWebRulesAuditorPtrOutputWithContext(ctx)
}

// ZIADLPWebRulesAuditorPtrInput is an input type that accepts ZIADLPWebRulesAuditorArgs, ZIADLPWebRulesAuditorPtr and ZIADLPWebRulesAuditorPtrOutput values.
// You can construct a concrete instance of `ZIADLPWebRulesAuditorPtrInput` via:
//
//	        ZIADLPWebRulesAuditorArgs{...}
//
//	or:
//
//	        nil
type ZIADLPWebRulesAuditorPtrInput interface {
	pulumi.Input

	ToZIADLPWebRulesAuditorPtrOutput() ZIADLPWebRulesAuditorPtrOutput
	ToZIADLPWebRulesAuditorPtrOutputWithContext(context.Context) ZIADLPWebRulesAuditorPtrOutput
}

type ziadlpwebRulesAuditorPtrType ZIADLPWebRulesAuditorArgs

func ZIADLPWebRulesAuditorPtr(v *ZIADLPWebRulesAuditorArgs) ZIADLPWebRulesAuditorPtrInput {
	return (*ziadlpwebRulesAuditorPtrType)(v)
}

func (*ziadlpwebRulesAuditorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIADLPWebRulesAuditor)(nil)).Elem()
}

func (i *ziadlpwebRulesAuditorPtrType) ToZIADLPWebRulesAuditorPtrOutput() ZIADLPWebRulesAuditorPtrOutput {
	return i.ToZIADLPWebRulesAuditorPtrOutputWithContext(context.Background())
}

func (i *ziadlpwebRulesAuditorPtrType) ToZIADLPWebRulesAuditorPtrOutputWithContext(ctx context.Context) ZIADLPWebRulesAuditorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIADLPWebRulesAuditorPtrOutput)
}

type ZIADLPWebRulesAuditorOutput struct{ *pulumi.OutputState }

func (ZIADLPWebRulesAuditorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIADLPWebRulesAuditor)(nil)).Elem()
}

func (o ZIADLPWebRulesAuditorOutput) ToZIADLPWebRulesAuditorOutput() ZIADLPWebRulesAuditorOutput {
	return o
}

func (o ZIADLPWebRulesAuditorOutput) ToZIADLPWebRulesAuditorOutputWithContext(ctx context.Context) ZIADLPWebRulesAuditorOutput {
	return o
}

func (o ZIADLPWebRulesAuditorOutput) ToZIADLPWebRulesAuditorPtrOutput() ZIADLPWebRulesAuditorPtrOutput {
	return o.ToZIADLPWebRulesAuditorPtrOutputWithContext(context.Background())
}

func (o ZIADLPWebRulesAuditorOutput) ToZIADLPWebRulesAuditorPtrOutputWithContext(ctx context.Context) ZIADLPWebRulesAuditorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZIADLPWebRulesAuditor) *ZIADLPWebRulesAuditor {
		return &v
	}).(ZIADLPWebRulesAuditorPtrOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIADLPWebRulesAuditorOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v ZIADLPWebRulesAuditor) int { return v.Id }).(pulumi.IntOutput)
}

type ZIADLPWebRulesAuditorPtrOutput struct{ *pulumi.OutputState }

func (ZIADLPWebRulesAuditorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIADLPWebRulesAuditor)(nil)).Elem()
}

func (o ZIADLPWebRulesAuditorPtrOutput) ToZIADLPWebRulesAuditorPtrOutput() ZIADLPWebRulesAuditorPtrOutput {
	return o
}

func (o ZIADLPWebRulesAuditorPtrOutput) ToZIADLPWebRulesAuditorPtrOutputWithContext(ctx context.Context) ZIADLPWebRulesAuditorPtrOutput {
	return o
}

func (o ZIADLPWebRulesAuditorPtrOutput) Elem() ZIADLPWebRulesAuditorOutput {
	return o.ApplyT(func(v *ZIADLPWebRulesAuditor) ZIADLPWebRulesAuditor {
		if v != nil {
			return *v
		}
		var ret ZIADLPWebRulesAuditor
		return ret
	}).(ZIADLPWebRulesAuditorOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIADLPWebRulesAuditorPtrOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ZIADLPWebRulesAuditor) *int {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.IntPtrOutput)
}

type ZIADLPWebRulesDepartments struct {
	// Identifier that uniquely identifies an entity
	Ids []int `pulumi:"ids"`
}

// ZIADLPWebRulesDepartmentsInput is an input type that accepts ZIADLPWebRulesDepartmentsArgs and ZIADLPWebRulesDepartmentsOutput values.
// You can construct a concrete instance of `ZIADLPWebRulesDepartmentsInput` via:
//
//	ZIADLPWebRulesDepartmentsArgs{...}
type ZIADLPWebRulesDepartmentsInput interface {
	pulumi.Input

	ToZIADLPWebRulesDepartmentsOutput() ZIADLPWebRulesDepartmentsOutput
	ToZIADLPWebRulesDepartmentsOutputWithContext(context.Context) ZIADLPWebRulesDepartmentsOutput
}

type ZIADLPWebRulesDepartmentsArgs struct {
	// Identifier that uniquely identifies an entity
	Ids pulumi.IntArrayInput `pulumi:"ids"`
}

func (ZIADLPWebRulesDepartmentsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIADLPWebRulesDepartments)(nil)).Elem()
}

func (i ZIADLPWebRulesDepartmentsArgs) ToZIADLPWebRulesDepartmentsOutput() ZIADLPWebRulesDepartmentsOutput {
	return i.ToZIADLPWebRulesDepartmentsOutputWithContext(context.Background())
}

func (i ZIADLPWebRulesDepartmentsArgs) ToZIADLPWebRulesDepartmentsOutputWithContext(ctx context.Context) ZIADLPWebRulesDepartmentsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIADLPWebRulesDepartmentsOutput)
}

func (i ZIADLPWebRulesDepartmentsArgs) ToZIADLPWebRulesDepartmentsPtrOutput() ZIADLPWebRulesDepartmentsPtrOutput {
	return i.ToZIADLPWebRulesDepartmentsPtrOutputWithContext(context.Background())
}

func (i ZIADLPWebRulesDepartmentsArgs) ToZIADLPWebRulesDepartmentsPtrOutputWithContext(ctx context.Context) ZIADLPWebRulesDepartmentsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIADLPWebRulesDepartmentsOutput).ToZIADLPWebRulesDepartmentsPtrOutputWithContext(ctx)
}

// ZIADLPWebRulesDepartmentsPtrInput is an input type that accepts ZIADLPWebRulesDepartmentsArgs, ZIADLPWebRulesDepartmentsPtr and ZIADLPWebRulesDepartmentsPtrOutput values.
// You can construct a concrete instance of `ZIADLPWebRulesDepartmentsPtrInput` via:
//
//	        ZIADLPWebRulesDepartmentsArgs{...}
//
//	or:
//
//	        nil
type ZIADLPWebRulesDepartmentsPtrInput interface {
	pulumi.Input

	ToZIADLPWebRulesDepartmentsPtrOutput() ZIADLPWebRulesDepartmentsPtrOutput
	ToZIADLPWebRulesDepartmentsPtrOutputWithContext(context.Context) ZIADLPWebRulesDepartmentsPtrOutput
}

type ziadlpwebRulesDepartmentsPtrType ZIADLPWebRulesDepartmentsArgs

func ZIADLPWebRulesDepartmentsPtr(v *ZIADLPWebRulesDepartmentsArgs) ZIADLPWebRulesDepartmentsPtrInput {
	return (*ziadlpwebRulesDepartmentsPtrType)(v)
}

func (*ziadlpwebRulesDepartmentsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIADLPWebRulesDepartments)(nil)).Elem()
}

func (i *ziadlpwebRulesDepartmentsPtrType) ToZIADLPWebRulesDepartmentsPtrOutput() ZIADLPWebRulesDepartmentsPtrOutput {
	return i.ToZIADLPWebRulesDepartmentsPtrOutputWithContext(context.Background())
}

func (i *ziadlpwebRulesDepartmentsPtrType) ToZIADLPWebRulesDepartmentsPtrOutputWithContext(ctx context.Context) ZIADLPWebRulesDepartmentsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIADLPWebRulesDepartmentsPtrOutput)
}

type ZIADLPWebRulesDepartmentsOutput struct{ *pulumi.OutputState }

func (ZIADLPWebRulesDepartmentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIADLPWebRulesDepartments)(nil)).Elem()
}

func (o ZIADLPWebRulesDepartmentsOutput) ToZIADLPWebRulesDepartmentsOutput() ZIADLPWebRulesDepartmentsOutput {
	return o
}

func (o ZIADLPWebRulesDepartmentsOutput) ToZIADLPWebRulesDepartmentsOutputWithContext(ctx context.Context) ZIADLPWebRulesDepartmentsOutput {
	return o
}

func (o ZIADLPWebRulesDepartmentsOutput) ToZIADLPWebRulesDepartmentsPtrOutput() ZIADLPWebRulesDepartmentsPtrOutput {
	return o.ToZIADLPWebRulesDepartmentsPtrOutputWithContext(context.Background())
}

func (o ZIADLPWebRulesDepartmentsOutput) ToZIADLPWebRulesDepartmentsPtrOutputWithContext(ctx context.Context) ZIADLPWebRulesDepartmentsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZIADLPWebRulesDepartments) *ZIADLPWebRulesDepartments {
		return &v
	}).(ZIADLPWebRulesDepartmentsPtrOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIADLPWebRulesDepartmentsOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ZIADLPWebRulesDepartments) []int { return v.Ids }).(pulumi.IntArrayOutput)
}

type ZIADLPWebRulesDepartmentsPtrOutput struct{ *pulumi.OutputState }

func (ZIADLPWebRulesDepartmentsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIADLPWebRulesDepartments)(nil)).Elem()
}

func (o ZIADLPWebRulesDepartmentsPtrOutput) ToZIADLPWebRulesDepartmentsPtrOutput() ZIADLPWebRulesDepartmentsPtrOutput {
	return o
}

func (o ZIADLPWebRulesDepartmentsPtrOutput) ToZIADLPWebRulesDepartmentsPtrOutputWithContext(ctx context.Context) ZIADLPWebRulesDepartmentsPtrOutput {
	return o
}

func (o ZIADLPWebRulesDepartmentsPtrOutput) Elem() ZIADLPWebRulesDepartmentsOutput {
	return o.ApplyT(func(v *ZIADLPWebRulesDepartments) ZIADLPWebRulesDepartments {
		if v != nil {
			return *v
		}
		var ret ZIADLPWebRulesDepartments
		return ret
	}).(ZIADLPWebRulesDepartmentsOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIADLPWebRulesDepartmentsPtrOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *ZIADLPWebRulesDepartments) []int {
		if v == nil {
			return nil
		}
		return v.Ids
	}).(pulumi.IntArrayOutput)
}

type ZIADLPWebRulesDlpEngines struct {
	// Identifier that uniquely identifies an entity
	Ids []int `pulumi:"ids"`
}

// ZIADLPWebRulesDlpEnginesInput is an input type that accepts ZIADLPWebRulesDlpEnginesArgs and ZIADLPWebRulesDlpEnginesOutput values.
// You can construct a concrete instance of `ZIADLPWebRulesDlpEnginesInput` via:
//
//	ZIADLPWebRulesDlpEnginesArgs{...}
type ZIADLPWebRulesDlpEnginesInput interface {
	pulumi.Input

	ToZIADLPWebRulesDlpEnginesOutput() ZIADLPWebRulesDlpEnginesOutput
	ToZIADLPWebRulesDlpEnginesOutputWithContext(context.Context) ZIADLPWebRulesDlpEnginesOutput
}

type ZIADLPWebRulesDlpEnginesArgs struct {
	// Identifier that uniquely identifies an entity
	Ids pulumi.IntArrayInput `pulumi:"ids"`
}

func (ZIADLPWebRulesDlpEnginesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIADLPWebRulesDlpEngines)(nil)).Elem()
}

func (i ZIADLPWebRulesDlpEnginesArgs) ToZIADLPWebRulesDlpEnginesOutput() ZIADLPWebRulesDlpEnginesOutput {
	return i.ToZIADLPWebRulesDlpEnginesOutputWithContext(context.Background())
}

func (i ZIADLPWebRulesDlpEnginesArgs) ToZIADLPWebRulesDlpEnginesOutputWithContext(ctx context.Context) ZIADLPWebRulesDlpEnginesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIADLPWebRulesDlpEnginesOutput)
}

func (i ZIADLPWebRulesDlpEnginesArgs) ToZIADLPWebRulesDlpEnginesPtrOutput() ZIADLPWebRulesDlpEnginesPtrOutput {
	return i.ToZIADLPWebRulesDlpEnginesPtrOutputWithContext(context.Background())
}

func (i ZIADLPWebRulesDlpEnginesArgs) ToZIADLPWebRulesDlpEnginesPtrOutputWithContext(ctx context.Context) ZIADLPWebRulesDlpEnginesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIADLPWebRulesDlpEnginesOutput).ToZIADLPWebRulesDlpEnginesPtrOutputWithContext(ctx)
}

// ZIADLPWebRulesDlpEnginesPtrInput is an input type that accepts ZIADLPWebRulesDlpEnginesArgs, ZIADLPWebRulesDlpEnginesPtr and ZIADLPWebRulesDlpEnginesPtrOutput values.
// You can construct a concrete instance of `ZIADLPWebRulesDlpEnginesPtrInput` via:
//
//	        ZIADLPWebRulesDlpEnginesArgs{...}
//
//	or:
//
//	        nil
type ZIADLPWebRulesDlpEnginesPtrInput interface {
	pulumi.Input

	ToZIADLPWebRulesDlpEnginesPtrOutput() ZIADLPWebRulesDlpEnginesPtrOutput
	ToZIADLPWebRulesDlpEnginesPtrOutputWithContext(context.Context) ZIADLPWebRulesDlpEnginesPtrOutput
}

type ziadlpwebRulesDlpEnginesPtrType ZIADLPWebRulesDlpEnginesArgs

func ZIADLPWebRulesDlpEnginesPtr(v *ZIADLPWebRulesDlpEnginesArgs) ZIADLPWebRulesDlpEnginesPtrInput {
	return (*ziadlpwebRulesDlpEnginesPtrType)(v)
}

func (*ziadlpwebRulesDlpEnginesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIADLPWebRulesDlpEngines)(nil)).Elem()
}

func (i *ziadlpwebRulesDlpEnginesPtrType) ToZIADLPWebRulesDlpEnginesPtrOutput() ZIADLPWebRulesDlpEnginesPtrOutput {
	return i.ToZIADLPWebRulesDlpEnginesPtrOutputWithContext(context.Background())
}

func (i *ziadlpwebRulesDlpEnginesPtrType) ToZIADLPWebRulesDlpEnginesPtrOutputWithContext(ctx context.Context) ZIADLPWebRulesDlpEnginesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIADLPWebRulesDlpEnginesPtrOutput)
}

type ZIADLPWebRulesDlpEnginesOutput struct{ *pulumi.OutputState }

func (ZIADLPWebRulesDlpEnginesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIADLPWebRulesDlpEngines)(nil)).Elem()
}

func (o ZIADLPWebRulesDlpEnginesOutput) ToZIADLPWebRulesDlpEnginesOutput() ZIADLPWebRulesDlpEnginesOutput {
	return o
}

func (o ZIADLPWebRulesDlpEnginesOutput) ToZIADLPWebRulesDlpEnginesOutputWithContext(ctx context.Context) ZIADLPWebRulesDlpEnginesOutput {
	return o
}

func (o ZIADLPWebRulesDlpEnginesOutput) ToZIADLPWebRulesDlpEnginesPtrOutput() ZIADLPWebRulesDlpEnginesPtrOutput {
	return o.ToZIADLPWebRulesDlpEnginesPtrOutputWithContext(context.Background())
}

func (o ZIADLPWebRulesDlpEnginesOutput) ToZIADLPWebRulesDlpEnginesPtrOutputWithContext(ctx context.Context) ZIADLPWebRulesDlpEnginesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZIADLPWebRulesDlpEngines) *ZIADLPWebRulesDlpEngines {
		return &v
	}).(ZIADLPWebRulesDlpEnginesPtrOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIADLPWebRulesDlpEnginesOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ZIADLPWebRulesDlpEngines) []int { return v.Ids }).(pulumi.IntArrayOutput)
}

type ZIADLPWebRulesDlpEnginesPtrOutput struct{ *pulumi.OutputState }

func (ZIADLPWebRulesDlpEnginesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIADLPWebRulesDlpEngines)(nil)).Elem()
}

func (o ZIADLPWebRulesDlpEnginesPtrOutput) ToZIADLPWebRulesDlpEnginesPtrOutput() ZIADLPWebRulesDlpEnginesPtrOutput {
	return o
}

func (o ZIADLPWebRulesDlpEnginesPtrOutput) ToZIADLPWebRulesDlpEnginesPtrOutputWithContext(ctx context.Context) ZIADLPWebRulesDlpEnginesPtrOutput {
	return o
}

func (o ZIADLPWebRulesDlpEnginesPtrOutput) Elem() ZIADLPWebRulesDlpEnginesOutput {
	return o.ApplyT(func(v *ZIADLPWebRulesDlpEngines) ZIADLPWebRulesDlpEngines {
		if v != nil {
			return *v
		}
		var ret ZIADLPWebRulesDlpEngines
		return ret
	}).(ZIADLPWebRulesDlpEnginesOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIADLPWebRulesDlpEnginesPtrOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *ZIADLPWebRulesDlpEngines) []int {
		if v == nil {
			return nil
		}
		return v.Ids
	}).(pulumi.IntArrayOutput)
}

type ZIADLPWebRulesExcludedDepartments struct {
	// Identifier that uniquely identifies an entity
	Ids []int `pulumi:"ids"`
}

// ZIADLPWebRulesExcludedDepartmentsInput is an input type that accepts ZIADLPWebRulesExcludedDepartmentsArgs and ZIADLPWebRulesExcludedDepartmentsOutput values.
// You can construct a concrete instance of `ZIADLPWebRulesExcludedDepartmentsInput` via:
//
//	ZIADLPWebRulesExcludedDepartmentsArgs{...}
type ZIADLPWebRulesExcludedDepartmentsInput interface {
	pulumi.Input

	ToZIADLPWebRulesExcludedDepartmentsOutput() ZIADLPWebRulesExcludedDepartmentsOutput
	ToZIADLPWebRulesExcludedDepartmentsOutputWithContext(context.Context) ZIADLPWebRulesExcludedDepartmentsOutput
}

type ZIADLPWebRulesExcludedDepartmentsArgs struct {
	// Identifier that uniquely identifies an entity
	Ids pulumi.IntArrayInput `pulumi:"ids"`
}

func (ZIADLPWebRulesExcludedDepartmentsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIADLPWebRulesExcludedDepartments)(nil)).Elem()
}

func (i ZIADLPWebRulesExcludedDepartmentsArgs) ToZIADLPWebRulesExcludedDepartmentsOutput() ZIADLPWebRulesExcludedDepartmentsOutput {
	return i.ToZIADLPWebRulesExcludedDepartmentsOutputWithContext(context.Background())
}

func (i ZIADLPWebRulesExcludedDepartmentsArgs) ToZIADLPWebRulesExcludedDepartmentsOutputWithContext(ctx context.Context) ZIADLPWebRulesExcludedDepartmentsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIADLPWebRulesExcludedDepartmentsOutput)
}

func (i ZIADLPWebRulesExcludedDepartmentsArgs) ToZIADLPWebRulesExcludedDepartmentsPtrOutput() ZIADLPWebRulesExcludedDepartmentsPtrOutput {
	return i.ToZIADLPWebRulesExcludedDepartmentsPtrOutputWithContext(context.Background())
}

func (i ZIADLPWebRulesExcludedDepartmentsArgs) ToZIADLPWebRulesExcludedDepartmentsPtrOutputWithContext(ctx context.Context) ZIADLPWebRulesExcludedDepartmentsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIADLPWebRulesExcludedDepartmentsOutput).ToZIADLPWebRulesExcludedDepartmentsPtrOutputWithContext(ctx)
}

// ZIADLPWebRulesExcludedDepartmentsPtrInput is an input type that accepts ZIADLPWebRulesExcludedDepartmentsArgs, ZIADLPWebRulesExcludedDepartmentsPtr and ZIADLPWebRulesExcludedDepartmentsPtrOutput values.
// You can construct a concrete instance of `ZIADLPWebRulesExcludedDepartmentsPtrInput` via:
//
//	        ZIADLPWebRulesExcludedDepartmentsArgs{...}
//
//	or:
//
//	        nil
type ZIADLPWebRulesExcludedDepartmentsPtrInput interface {
	pulumi.Input

	ToZIADLPWebRulesExcludedDepartmentsPtrOutput() ZIADLPWebRulesExcludedDepartmentsPtrOutput
	ToZIADLPWebRulesExcludedDepartmentsPtrOutputWithContext(context.Context) ZIADLPWebRulesExcludedDepartmentsPtrOutput
}

type ziadlpwebRulesExcludedDepartmentsPtrType ZIADLPWebRulesExcludedDepartmentsArgs

func ZIADLPWebRulesExcludedDepartmentsPtr(v *ZIADLPWebRulesExcludedDepartmentsArgs) ZIADLPWebRulesExcludedDepartmentsPtrInput {
	return (*ziadlpwebRulesExcludedDepartmentsPtrType)(v)
}

func (*ziadlpwebRulesExcludedDepartmentsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIADLPWebRulesExcludedDepartments)(nil)).Elem()
}

func (i *ziadlpwebRulesExcludedDepartmentsPtrType) ToZIADLPWebRulesExcludedDepartmentsPtrOutput() ZIADLPWebRulesExcludedDepartmentsPtrOutput {
	return i.ToZIADLPWebRulesExcludedDepartmentsPtrOutputWithContext(context.Background())
}

func (i *ziadlpwebRulesExcludedDepartmentsPtrType) ToZIADLPWebRulesExcludedDepartmentsPtrOutputWithContext(ctx context.Context) ZIADLPWebRulesExcludedDepartmentsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIADLPWebRulesExcludedDepartmentsPtrOutput)
}

type ZIADLPWebRulesExcludedDepartmentsOutput struct{ *pulumi.OutputState }

func (ZIADLPWebRulesExcludedDepartmentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIADLPWebRulesExcludedDepartments)(nil)).Elem()
}

func (o ZIADLPWebRulesExcludedDepartmentsOutput) ToZIADLPWebRulesExcludedDepartmentsOutput() ZIADLPWebRulesExcludedDepartmentsOutput {
	return o
}

func (o ZIADLPWebRulesExcludedDepartmentsOutput) ToZIADLPWebRulesExcludedDepartmentsOutputWithContext(ctx context.Context) ZIADLPWebRulesExcludedDepartmentsOutput {
	return o
}

func (o ZIADLPWebRulesExcludedDepartmentsOutput) ToZIADLPWebRulesExcludedDepartmentsPtrOutput() ZIADLPWebRulesExcludedDepartmentsPtrOutput {
	return o.ToZIADLPWebRulesExcludedDepartmentsPtrOutputWithContext(context.Background())
}

func (o ZIADLPWebRulesExcludedDepartmentsOutput) ToZIADLPWebRulesExcludedDepartmentsPtrOutputWithContext(ctx context.Context) ZIADLPWebRulesExcludedDepartmentsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZIADLPWebRulesExcludedDepartments) *ZIADLPWebRulesExcludedDepartments {
		return &v
	}).(ZIADLPWebRulesExcludedDepartmentsPtrOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIADLPWebRulesExcludedDepartmentsOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ZIADLPWebRulesExcludedDepartments) []int { return v.Ids }).(pulumi.IntArrayOutput)
}

type ZIADLPWebRulesExcludedDepartmentsPtrOutput struct{ *pulumi.OutputState }

func (ZIADLPWebRulesExcludedDepartmentsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIADLPWebRulesExcludedDepartments)(nil)).Elem()
}

func (o ZIADLPWebRulesExcludedDepartmentsPtrOutput) ToZIADLPWebRulesExcludedDepartmentsPtrOutput() ZIADLPWebRulesExcludedDepartmentsPtrOutput {
	return o
}

func (o ZIADLPWebRulesExcludedDepartmentsPtrOutput) ToZIADLPWebRulesExcludedDepartmentsPtrOutputWithContext(ctx context.Context) ZIADLPWebRulesExcludedDepartmentsPtrOutput {
	return o
}

func (o ZIADLPWebRulesExcludedDepartmentsPtrOutput) Elem() ZIADLPWebRulesExcludedDepartmentsOutput {
	return o.ApplyT(func(v *ZIADLPWebRulesExcludedDepartments) ZIADLPWebRulesExcludedDepartments {
		if v != nil {
			return *v
		}
		var ret ZIADLPWebRulesExcludedDepartments
		return ret
	}).(ZIADLPWebRulesExcludedDepartmentsOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIADLPWebRulesExcludedDepartmentsPtrOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *ZIADLPWebRulesExcludedDepartments) []int {
		if v == nil {
			return nil
		}
		return v.Ids
	}).(pulumi.IntArrayOutput)
}

type ZIADLPWebRulesExcludedGroups struct {
	// Identifier that uniquely identifies an entity
	Ids []int `pulumi:"ids"`
}

// ZIADLPWebRulesExcludedGroupsInput is an input type that accepts ZIADLPWebRulesExcludedGroupsArgs and ZIADLPWebRulesExcludedGroupsOutput values.
// You can construct a concrete instance of `ZIADLPWebRulesExcludedGroupsInput` via:
//
//	ZIADLPWebRulesExcludedGroupsArgs{...}
type ZIADLPWebRulesExcludedGroupsInput interface {
	pulumi.Input

	ToZIADLPWebRulesExcludedGroupsOutput() ZIADLPWebRulesExcludedGroupsOutput
	ToZIADLPWebRulesExcludedGroupsOutputWithContext(context.Context) ZIADLPWebRulesExcludedGroupsOutput
}

type ZIADLPWebRulesExcludedGroupsArgs struct {
	// Identifier that uniquely identifies an entity
	Ids pulumi.IntArrayInput `pulumi:"ids"`
}

func (ZIADLPWebRulesExcludedGroupsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIADLPWebRulesExcludedGroups)(nil)).Elem()
}

func (i ZIADLPWebRulesExcludedGroupsArgs) ToZIADLPWebRulesExcludedGroupsOutput() ZIADLPWebRulesExcludedGroupsOutput {
	return i.ToZIADLPWebRulesExcludedGroupsOutputWithContext(context.Background())
}

func (i ZIADLPWebRulesExcludedGroupsArgs) ToZIADLPWebRulesExcludedGroupsOutputWithContext(ctx context.Context) ZIADLPWebRulesExcludedGroupsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIADLPWebRulesExcludedGroupsOutput)
}

func (i ZIADLPWebRulesExcludedGroupsArgs) ToZIADLPWebRulesExcludedGroupsPtrOutput() ZIADLPWebRulesExcludedGroupsPtrOutput {
	return i.ToZIADLPWebRulesExcludedGroupsPtrOutputWithContext(context.Background())
}

func (i ZIADLPWebRulesExcludedGroupsArgs) ToZIADLPWebRulesExcludedGroupsPtrOutputWithContext(ctx context.Context) ZIADLPWebRulesExcludedGroupsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIADLPWebRulesExcludedGroupsOutput).ToZIADLPWebRulesExcludedGroupsPtrOutputWithContext(ctx)
}

// ZIADLPWebRulesExcludedGroupsPtrInput is an input type that accepts ZIADLPWebRulesExcludedGroupsArgs, ZIADLPWebRulesExcludedGroupsPtr and ZIADLPWebRulesExcludedGroupsPtrOutput values.
// You can construct a concrete instance of `ZIADLPWebRulesExcludedGroupsPtrInput` via:
//
//	        ZIADLPWebRulesExcludedGroupsArgs{...}
//
//	or:
//
//	        nil
type ZIADLPWebRulesExcludedGroupsPtrInput interface {
	pulumi.Input

	ToZIADLPWebRulesExcludedGroupsPtrOutput() ZIADLPWebRulesExcludedGroupsPtrOutput
	ToZIADLPWebRulesExcludedGroupsPtrOutputWithContext(context.Context) ZIADLPWebRulesExcludedGroupsPtrOutput
}

type ziadlpwebRulesExcludedGroupsPtrType ZIADLPWebRulesExcludedGroupsArgs

func ZIADLPWebRulesExcludedGroupsPtr(v *ZIADLPWebRulesExcludedGroupsArgs) ZIADLPWebRulesExcludedGroupsPtrInput {
	return (*ziadlpwebRulesExcludedGroupsPtrType)(v)
}

func (*ziadlpwebRulesExcludedGroupsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIADLPWebRulesExcludedGroups)(nil)).Elem()
}

func (i *ziadlpwebRulesExcludedGroupsPtrType) ToZIADLPWebRulesExcludedGroupsPtrOutput() ZIADLPWebRulesExcludedGroupsPtrOutput {
	return i.ToZIADLPWebRulesExcludedGroupsPtrOutputWithContext(context.Background())
}

func (i *ziadlpwebRulesExcludedGroupsPtrType) ToZIADLPWebRulesExcludedGroupsPtrOutputWithContext(ctx context.Context) ZIADLPWebRulesExcludedGroupsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIADLPWebRulesExcludedGroupsPtrOutput)
}

type ZIADLPWebRulesExcludedGroupsOutput struct{ *pulumi.OutputState }

func (ZIADLPWebRulesExcludedGroupsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIADLPWebRulesExcludedGroups)(nil)).Elem()
}

func (o ZIADLPWebRulesExcludedGroupsOutput) ToZIADLPWebRulesExcludedGroupsOutput() ZIADLPWebRulesExcludedGroupsOutput {
	return o
}

func (o ZIADLPWebRulesExcludedGroupsOutput) ToZIADLPWebRulesExcludedGroupsOutputWithContext(ctx context.Context) ZIADLPWebRulesExcludedGroupsOutput {
	return o
}

func (o ZIADLPWebRulesExcludedGroupsOutput) ToZIADLPWebRulesExcludedGroupsPtrOutput() ZIADLPWebRulesExcludedGroupsPtrOutput {
	return o.ToZIADLPWebRulesExcludedGroupsPtrOutputWithContext(context.Background())
}

func (o ZIADLPWebRulesExcludedGroupsOutput) ToZIADLPWebRulesExcludedGroupsPtrOutputWithContext(ctx context.Context) ZIADLPWebRulesExcludedGroupsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZIADLPWebRulesExcludedGroups) *ZIADLPWebRulesExcludedGroups {
		return &v
	}).(ZIADLPWebRulesExcludedGroupsPtrOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIADLPWebRulesExcludedGroupsOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ZIADLPWebRulesExcludedGroups) []int { return v.Ids }).(pulumi.IntArrayOutput)
}

type ZIADLPWebRulesExcludedGroupsPtrOutput struct{ *pulumi.OutputState }

func (ZIADLPWebRulesExcludedGroupsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIADLPWebRulesExcludedGroups)(nil)).Elem()
}

func (o ZIADLPWebRulesExcludedGroupsPtrOutput) ToZIADLPWebRulesExcludedGroupsPtrOutput() ZIADLPWebRulesExcludedGroupsPtrOutput {
	return o
}

func (o ZIADLPWebRulesExcludedGroupsPtrOutput) ToZIADLPWebRulesExcludedGroupsPtrOutputWithContext(ctx context.Context) ZIADLPWebRulesExcludedGroupsPtrOutput {
	return o
}

func (o ZIADLPWebRulesExcludedGroupsPtrOutput) Elem() ZIADLPWebRulesExcludedGroupsOutput {
	return o.ApplyT(func(v *ZIADLPWebRulesExcludedGroups) ZIADLPWebRulesExcludedGroups {
		if v != nil {
			return *v
		}
		var ret ZIADLPWebRulesExcludedGroups
		return ret
	}).(ZIADLPWebRulesExcludedGroupsOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIADLPWebRulesExcludedGroupsPtrOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *ZIADLPWebRulesExcludedGroups) []int {
		if v == nil {
			return nil
		}
		return v.Ids
	}).(pulumi.IntArrayOutput)
}

type ZIADLPWebRulesExcludedUsers struct {
	// Identifier that uniquely identifies an entity
	Ids []int `pulumi:"ids"`
}

// ZIADLPWebRulesExcludedUsersInput is an input type that accepts ZIADLPWebRulesExcludedUsersArgs and ZIADLPWebRulesExcludedUsersOutput values.
// You can construct a concrete instance of `ZIADLPWebRulesExcludedUsersInput` via:
//
//	ZIADLPWebRulesExcludedUsersArgs{...}
type ZIADLPWebRulesExcludedUsersInput interface {
	pulumi.Input

	ToZIADLPWebRulesExcludedUsersOutput() ZIADLPWebRulesExcludedUsersOutput
	ToZIADLPWebRulesExcludedUsersOutputWithContext(context.Context) ZIADLPWebRulesExcludedUsersOutput
}

type ZIADLPWebRulesExcludedUsersArgs struct {
	// Identifier that uniquely identifies an entity
	Ids pulumi.IntArrayInput `pulumi:"ids"`
}

func (ZIADLPWebRulesExcludedUsersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIADLPWebRulesExcludedUsers)(nil)).Elem()
}

func (i ZIADLPWebRulesExcludedUsersArgs) ToZIADLPWebRulesExcludedUsersOutput() ZIADLPWebRulesExcludedUsersOutput {
	return i.ToZIADLPWebRulesExcludedUsersOutputWithContext(context.Background())
}

func (i ZIADLPWebRulesExcludedUsersArgs) ToZIADLPWebRulesExcludedUsersOutputWithContext(ctx context.Context) ZIADLPWebRulesExcludedUsersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIADLPWebRulesExcludedUsersOutput)
}

func (i ZIADLPWebRulesExcludedUsersArgs) ToZIADLPWebRulesExcludedUsersPtrOutput() ZIADLPWebRulesExcludedUsersPtrOutput {
	return i.ToZIADLPWebRulesExcludedUsersPtrOutputWithContext(context.Background())
}

func (i ZIADLPWebRulesExcludedUsersArgs) ToZIADLPWebRulesExcludedUsersPtrOutputWithContext(ctx context.Context) ZIADLPWebRulesExcludedUsersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIADLPWebRulesExcludedUsersOutput).ToZIADLPWebRulesExcludedUsersPtrOutputWithContext(ctx)
}

// ZIADLPWebRulesExcludedUsersPtrInput is an input type that accepts ZIADLPWebRulesExcludedUsersArgs, ZIADLPWebRulesExcludedUsersPtr and ZIADLPWebRulesExcludedUsersPtrOutput values.
// You can construct a concrete instance of `ZIADLPWebRulesExcludedUsersPtrInput` via:
//
//	        ZIADLPWebRulesExcludedUsersArgs{...}
//
//	or:
//
//	        nil
type ZIADLPWebRulesExcludedUsersPtrInput interface {
	pulumi.Input

	ToZIADLPWebRulesExcludedUsersPtrOutput() ZIADLPWebRulesExcludedUsersPtrOutput
	ToZIADLPWebRulesExcludedUsersPtrOutputWithContext(context.Context) ZIADLPWebRulesExcludedUsersPtrOutput
}

type ziadlpwebRulesExcludedUsersPtrType ZIADLPWebRulesExcludedUsersArgs

func ZIADLPWebRulesExcludedUsersPtr(v *ZIADLPWebRulesExcludedUsersArgs) ZIADLPWebRulesExcludedUsersPtrInput {
	return (*ziadlpwebRulesExcludedUsersPtrType)(v)
}

func (*ziadlpwebRulesExcludedUsersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIADLPWebRulesExcludedUsers)(nil)).Elem()
}

func (i *ziadlpwebRulesExcludedUsersPtrType) ToZIADLPWebRulesExcludedUsersPtrOutput() ZIADLPWebRulesExcludedUsersPtrOutput {
	return i.ToZIADLPWebRulesExcludedUsersPtrOutputWithContext(context.Background())
}

func (i *ziadlpwebRulesExcludedUsersPtrType) ToZIADLPWebRulesExcludedUsersPtrOutputWithContext(ctx context.Context) ZIADLPWebRulesExcludedUsersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIADLPWebRulesExcludedUsersPtrOutput)
}

type ZIADLPWebRulesExcludedUsersOutput struct{ *pulumi.OutputState }

func (ZIADLPWebRulesExcludedUsersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIADLPWebRulesExcludedUsers)(nil)).Elem()
}

func (o ZIADLPWebRulesExcludedUsersOutput) ToZIADLPWebRulesExcludedUsersOutput() ZIADLPWebRulesExcludedUsersOutput {
	return o
}

func (o ZIADLPWebRulesExcludedUsersOutput) ToZIADLPWebRulesExcludedUsersOutputWithContext(ctx context.Context) ZIADLPWebRulesExcludedUsersOutput {
	return o
}

func (o ZIADLPWebRulesExcludedUsersOutput) ToZIADLPWebRulesExcludedUsersPtrOutput() ZIADLPWebRulesExcludedUsersPtrOutput {
	return o.ToZIADLPWebRulesExcludedUsersPtrOutputWithContext(context.Background())
}

func (o ZIADLPWebRulesExcludedUsersOutput) ToZIADLPWebRulesExcludedUsersPtrOutputWithContext(ctx context.Context) ZIADLPWebRulesExcludedUsersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZIADLPWebRulesExcludedUsers) *ZIADLPWebRulesExcludedUsers {
		return &v
	}).(ZIADLPWebRulesExcludedUsersPtrOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIADLPWebRulesExcludedUsersOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ZIADLPWebRulesExcludedUsers) []int { return v.Ids }).(pulumi.IntArrayOutput)
}

type ZIADLPWebRulesExcludedUsersPtrOutput struct{ *pulumi.OutputState }

func (ZIADLPWebRulesExcludedUsersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIADLPWebRulesExcludedUsers)(nil)).Elem()
}

func (o ZIADLPWebRulesExcludedUsersPtrOutput) ToZIADLPWebRulesExcludedUsersPtrOutput() ZIADLPWebRulesExcludedUsersPtrOutput {
	return o
}

func (o ZIADLPWebRulesExcludedUsersPtrOutput) ToZIADLPWebRulesExcludedUsersPtrOutputWithContext(ctx context.Context) ZIADLPWebRulesExcludedUsersPtrOutput {
	return o
}

func (o ZIADLPWebRulesExcludedUsersPtrOutput) Elem() ZIADLPWebRulesExcludedUsersOutput {
	return o.ApplyT(func(v *ZIADLPWebRulesExcludedUsers) ZIADLPWebRulesExcludedUsers {
		if v != nil {
			return *v
		}
		var ret ZIADLPWebRulesExcludedUsers
		return ret
	}).(ZIADLPWebRulesExcludedUsersOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIADLPWebRulesExcludedUsersPtrOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *ZIADLPWebRulesExcludedUsers) []int {
		if v == nil {
			return nil
		}
		return v.Ids
	}).(pulumi.IntArrayOutput)
}

type ZIADLPWebRulesGroups struct {
	// Identifier that uniquely identifies an entity
	Ids []int `pulumi:"ids"`
}

// ZIADLPWebRulesGroupsInput is an input type that accepts ZIADLPWebRulesGroupsArgs and ZIADLPWebRulesGroupsOutput values.
// You can construct a concrete instance of `ZIADLPWebRulesGroupsInput` via:
//
//	ZIADLPWebRulesGroupsArgs{...}
type ZIADLPWebRulesGroupsInput interface {
	pulumi.Input

	ToZIADLPWebRulesGroupsOutput() ZIADLPWebRulesGroupsOutput
	ToZIADLPWebRulesGroupsOutputWithContext(context.Context) ZIADLPWebRulesGroupsOutput
}

type ZIADLPWebRulesGroupsArgs struct {
	// Identifier that uniquely identifies an entity
	Ids pulumi.IntArrayInput `pulumi:"ids"`
}

func (ZIADLPWebRulesGroupsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIADLPWebRulesGroups)(nil)).Elem()
}

func (i ZIADLPWebRulesGroupsArgs) ToZIADLPWebRulesGroupsOutput() ZIADLPWebRulesGroupsOutput {
	return i.ToZIADLPWebRulesGroupsOutputWithContext(context.Background())
}

func (i ZIADLPWebRulesGroupsArgs) ToZIADLPWebRulesGroupsOutputWithContext(ctx context.Context) ZIADLPWebRulesGroupsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIADLPWebRulesGroupsOutput)
}

func (i ZIADLPWebRulesGroupsArgs) ToZIADLPWebRulesGroupsPtrOutput() ZIADLPWebRulesGroupsPtrOutput {
	return i.ToZIADLPWebRulesGroupsPtrOutputWithContext(context.Background())
}

func (i ZIADLPWebRulesGroupsArgs) ToZIADLPWebRulesGroupsPtrOutputWithContext(ctx context.Context) ZIADLPWebRulesGroupsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIADLPWebRulesGroupsOutput).ToZIADLPWebRulesGroupsPtrOutputWithContext(ctx)
}

// ZIADLPWebRulesGroupsPtrInput is an input type that accepts ZIADLPWebRulesGroupsArgs, ZIADLPWebRulesGroupsPtr and ZIADLPWebRulesGroupsPtrOutput values.
// You can construct a concrete instance of `ZIADLPWebRulesGroupsPtrInput` via:
//
//	        ZIADLPWebRulesGroupsArgs{...}
//
//	or:
//
//	        nil
type ZIADLPWebRulesGroupsPtrInput interface {
	pulumi.Input

	ToZIADLPWebRulesGroupsPtrOutput() ZIADLPWebRulesGroupsPtrOutput
	ToZIADLPWebRulesGroupsPtrOutputWithContext(context.Context) ZIADLPWebRulesGroupsPtrOutput
}

type ziadlpwebRulesGroupsPtrType ZIADLPWebRulesGroupsArgs

func ZIADLPWebRulesGroupsPtr(v *ZIADLPWebRulesGroupsArgs) ZIADLPWebRulesGroupsPtrInput {
	return (*ziadlpwebRulesGroupsPtrType)(v)
}

func (*ziadlpwebRulesGroupsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIADLPWebRulesGroups)(nil)).Elem()
}

func (i *ziadlpwebRulesGroupsPtrType) ToZIADLPWebRulesGroupsPtrOutput() ZIADLPWebRulesGroupsPtrOutput {
	return i.ToZIADLPWebRulesGroupsPtrOutputWithContext(context.Background())
}

func (i *ziadlpwebRulesGroupsPtrType) ToZIADLPWebRulesGroupsPtrOutputWithContext(ctx context.Context) ZIADLPWebRulesGroupsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIADLPWebRulesGroupsPtrOutput)
}

type ZIADLPWebRulesGroupsOutput struct{ *pulumi.OutputState }

func (ZIADLPWebRulesGroupsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIADLPWebRulesGroups)(nil)).Elem()
}

func (o ZIADLPWebRulesGroupsOutput) ToZIADLPWebRulesGroupsOutput() ZIADLPWebRulesGroupsOutput {
	return o
}

func (o ZIADLPWebRulesGroupsOutput) ToZIADLPWebRulesGroupsOutputWithContext(ctx context.Context) ZIADLPWebRulesGroupsOutput {
	return o
}

func (o ZIADLPWebRulesGroupsOutput) ToZIADLPWebRulesGroupsPtrOutput() ZIADLPWebRulesGroupsPtrOutput {
	return o.ToZIADLPWebRulesGroupsPtrOutputWithContext(context.Background())
}

func (o ZIADLPWebRulesGroupsOutput) ToZIADLPWebRulesGroupsPtrOutputWithContext(ctx context.Context) ZIADLPWebRulesGroupsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZIADLPWebRulesGroups) *ZIADLPWebRulesGroups {
		return &v
	}).(ZIADLPWebRulesGroupsPtrOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIADLPWebRulesGroupsOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ZIADLPWebRulesGroups) []int { return v.Ids }).(pulumi.IntArrayOutput)
}

type ZIADLPWebRulesGroupsPtrOutput struct{ *pulumi.OutputState }

func (ZIADLPWebRulesGroupsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIADLPWebRulesGroups)(nil)).Elem()
}

func (o ZIADLPWebRulesGroupsPtrOutput) ToZIADLPWebRulesGroupsPtrOutput() ZIADLPWebRulesGroupsPtrOutput {
	return o
}

func (o ZIADLPWebRulesGroupsPtrOutput) ToZIADLPWebRulesGroupsPtrOutputWithContext(ctx context.Context) ZIADLPWebRulesGroupsPtrOutput {
	return o
}

func (o ZIADLPWebRulesGroupsPtrOutput) Elem() ZIADLPWebRulesGroupsOutput {
	return o.ApplyT(func(v *ZIADLPWebRulesGroups) ZIADLPWebRulesGroups {
		if v != nil {
			return *v
		}
		var ret ZIADLPWebRulesGroups
		return ret
	}).(ZIADLPWebRulesGroupsOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIADLPWebRulesGroupsPtrOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *ZIADLPWebRulesGroups) []int {
		if v == nil {
			return nil
		}
		return v.Ids
	}).(pulumi.IntArrayOutput)
}

type ZIADLPWebRulesIcapServer struct {
	// Identifier that uniquely identifies an entity
	Id int `pulumi:"id"`
}

// ZIADLPWebRulesIcapServerInput is an input type that accepts ZIADLPWebRulesIcapServerArgs and ZIADLPWebRulesIcapServerOutput values.
// You can construct a concrete instance of `ZIADLPWebRulesIcapServerInput` via:
//
//	ZIADLPWebRulesIcapServerArgs{...}
type ZIADLPWebRulesIcapServerInput interface {
	pulumi.Input

	ToZIADLPWebRulesIcapServerOutput() ZIADLPWebRulesIcapServerOutput
	ToZIADLPWebRulesIcapServerOutputWithContext(context.Context) ZIADLPWebRulesIcapServerOutput
}

type ZIADLPWebRulesIcapServerArgs struct {
	// Identifier that uniquely identifies an entity
	Id pulumi.IntInput `pulumi:"id"`
}

func (ZIADLPWebRulesIcapServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIADLPWebRulesIcapServer)(nil)).Elem()
}

func (i ZIADLPWebRulesIcapServerArgs) ToZIADLPWebRulesIcapServerOutput() ZIADLPWebRulesIcapServerOutput {
	return i.ToZIADLPWebRulesIcapServerOutputWithContext(context.Background())
}

func (i ZIADLPWebRulesIcapServerArgs) ToZIADLPWebRulesIcapServerOutputWithContext(ctx context.Context) ZIADLPWebRulesIcapServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIADLPWebRulesIcapServerOutput)
}

func (i ZIADLPWebRulesIcapServerArgs) ToZIADLPWebRulesIcapServerPtrOutput() ZIADLPWebRulesIcapServerPtrOutput {
	return i.ToZIADLPWebRulesIcapServerPtrOutputWithContext(context.Background())
}

func (i ZIADLPWebRulesIcapServerArgs) ToZIADLPWebRulesIcapServerPtrOutputWithContext(ctx context.Context) ZIADLPWebRulesIcapServerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIADLPWebRulesIcapServerOutput).ToZIADLPWebRulesIcapServerPtrOutputWithContext(ctx)
}

// ZIADLPWebRulesIcapServerPtrInput is an input type that accepts ZIADLPWebRulesIcapServerArgs, ZIADLPWebRulesIcapServerPtr and ZIADLPWebRulesIcapServerPtrOutput values.
// You can construct a concrete instance of `ZIADLPWebRulesIcapServerPtrInput` via:
//
//	        ZIADLPWebRulesIcapServerArgs{...}
//
//	or:
//
//	        nil
type ZIADLPWebRulesIcapServerPtrInput interface {
	pulumi.Input

	ToZIADLPWebRulesIcapServerPtrOutput() ZIADLPWebRulesIcapServerPtrOutput
	ToZIADLPWebRulesIcapServerPtrOutputWithContext(context.Context) ZIADLPWebRulesIcapServerPtrOutput
}

type ziadlpwebRulesIcapServerPtrType ZIADLPWebRulesIcapServerArgs

func ZIADLPWebRulesIcapServerPtr(v *ZIADLPWebRulesIcapServerArgs) ZIADLPWebRulesIcapServerPtrInput {
	return (*ziadlpwebRulesIcapServerPtrType)(v)
}

func (*ziadlpwebRulesIcapServerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIADLPWebRulesIcapServer)(nil)).Elem()
}

func (i *ziadlpwebRulesIcapServerPtrType) ToZIADLPWebRulesIcapServerPtrOutput() ZIADLPWebRulesIcapServerPtrOutput {
	return i.ToZIADLPWebRulesIcapServerPtrOutputWithContext(context.Background())
}

func (i *ziadlpwebRulesIcapServerPtrType) ToZIADLPWebRulesIcapServerPtrOutputWithContext(ctx context.Context) ZIADLPWebRulesIcapServerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIADLPWebRulesIcapServerPtrOutput)
}

type ZIADLPWebRulesIcapServerOutput struct{ *pulumi.OutputState }

func (ZIADLPWebRulesIcapServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIADLPWebRulesIcapServer)(nil)).Elem()
}

func (o ZIADLPWebRulesIcapServerOutput) ToZIADLPWebRulesIcapServerOutput() ZIADLPWebRulesIcapServerOutput {
	return o
}

func (o ZIADLPWebRulesIcapServerOutput) ToZIADLPWebRulesIcapServerOutputWithContext(ctx context.Context) ZIADLPWebRulesIcapServerOutput {
	return o
}

func (o ZIADLPWebRulesIcapServerOutput) ToZIADLPWebRulesIcapServerPtrOutput() ZIADLPWebRulesIcapServerPtrOutput {
	return o.ToZIADLPWebRulesIcapServerPtrOutputWithContext(context.Background())
}

func (o ZIADLPWebRulesIcapServerOutput) ToZIADLPWebRulesIcapServerPtrOutputWithContext(ctx context.Context) ZIADLPWebRulesIcapServerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZIADLPWebRulesIcapServer) *ZIADLPWebRulesIcapServer {
		return &v
	}).(ZIADLPWebRulesIcapServerPtrOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIADLPWebRulesIcapServerOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v ZIADLPWebRulesIcapServer) int { return v.Id }).(pulumi.IntOutput)
}

type ZIADLPWebRulesIcapServerPtrOutput struct{ *pulumi.OutputState }

func (ZIADLPWebRulesIcapServerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIADLPWebRulesIcapServer)(nil)).Elem()
}

func (o ZIADLPWebRulesIcapServerPtrOutput) ToZIADLPWebRulesIcapServerPtrOutput() ZIADLPWebRulesIcapServerPtrOutput {
	return o
}

func (o ZIADLPWebRulesIcapServerPtrOutput) ToZIADLPWebRulesIcapServerPtrOutputWithContext(ctx context.Context) ZIADLPWebRulesIcapServerPtrOutput {
	return o
}

func (o ZIADLPWebRulesIcapServerPtrOutput) Elem() ZIADLPWebRulesIcapServerOutput {
	return o.ApplyT(func(v *ZIADLPWebRulesIcapServer) ZIADLPWebRulesIcapServer {
		if v != nil {
			return *v
		}
		var ret ZIADLPWebRulesIcapServer
		return ret
	}).(ZIADLPWebRulesIcapServerOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIADLPWebRulesIcapServerPtrOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ZIADLPWebRulesIcapServer) *int {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.IntPtrOutput)
}

type ZIADLPWebRulesLabels struct {
	// Identifier that uniquely identifies an entity
	Ids []int `pulumi:"ids"`
}

// ZIADLPWebRulesLabelsInput is an input type that accepts ZIADLPWebRulesLabelsArgs and ZIADLPWebRulesLabelsOutput values.
// You can construct a concrete instance of `ZIADLPWebRulesLabelsInput` via:
//
//	ZIADLPWebRulesLabelsArgs{...}
type ZIADLPWebRulesLabelsInput interface {
	pulumi.Input

	ToZIADLPWebRulesLabelsOutput() ZIADLPWebRulesLabelsOutput
	ToZIADLPWebRulesLabelsOutputWithContext(context.Context) ZIADLPWebRulesLabelsOutput
}

type ZIADLPWebRulesLabelsArgs struct {
	// Identifier that uniquely identifies an entity
	Ids pulumi.IntArrayInput `pulumi:"ids"`
}

func (ZIADLPWebRulesLabelsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIADLPWebRulesLabels)(nil)).Elem()
}

func (i ZIADLPWebRulesLabelsArgs) ToZIADLPWebRulesLabelsOutput() ZIADLPWebRulesLabelsOutput {
	return i.ToZIADLPWebRulesLabelsOutputWithContext(context.Background())
}

func (i ZIADLPWebRulesLabelsArgs) ToZIADLPWebRulesLabelsOutputWithContext(ctx context.Context) ZIADLPWebRulesLabelsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIADLPWebRulesLabelsOutput)
}

func (i ZIADLPWebRulesLabelsArgs) ToZIADLPWebRulesLabelsPtrOutput() ZIADLPWebRulesLabelsPtrOutput {
	return i.ToZIADLPWebRulesLabelsPtrOutputWithContext(context.Background())
}

func (i ZIADLPWebRulesLabelsArgs) ToZIADLPWebRulesLabelsPtrOutputWithContext(ctx context.Context) ZIADLPWebRulesLabelsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIADLPWebRulesLabelsOutput).ToZIADLPWebRulesLabelsPtrOutputWithContext(ctx)
}

// ZIADLPWebRulesLabelsPtrInput is an input type that accepts ZIADLPWebRulesLabelsArgs, ZIADLPWebRulesLabelsPtr and ZIADLPWebRulesLabelsPtrOutput values.
// You can construct a concrete instance of `ZIADLPWebRulesLabelsPtrInput` via:
//
//	        ZIADLPWebRulesLabelsArgs{...}
//
//	or:
//
//	        nil
type ZIADLPWebRulesLabelsPtrInput interface {
	pulumi.Input

	ToZIADLPWebRulesLabelsPtrOutput() ZIADLPWebRulesLabelsPtrOutput
	ToZIADLPWebRulesLabelsPtrOutputWithContext(context.Context) ZIADLPWebRulesLabelsPtrOutput
}

type ziadlpwebRulesLabelsPtrType ZIADLPWebRulesLabelsArgs

func ZIADLPWebRulesLabelsPtr(v *ZIADLPWebRulesLabelsArgs) ZIADLPWebRulesLabelsPtrInput {
	return (*ziadlpwebRulesLabelsPtrType)(v)
}

func (*ziadlpwebRulesLabelsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIADLPWebRulesLabels)(nil)).Elem()
}

func (i *ziadlpwebRulesLabelsPtrType) ToZIADLPWebRulesLabelsPtrOutput() ZIADLPWebRulesLabelsPtrOutput {
	return i.ToZIADLPWebRulesLabelsPtrOutputWithContext(context.Background())
}

func (i *ziadlpwebRulesLabelsPtrType) ToZIADLPWebRulesLabelsPtrOutputWithContext(ctx context.Context) ZIADLPWebRulesLabelsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIADLPWebRulesLabelsPtrOutput)
}

type ZIADLPWebRulesLabelsOutput struct{ *pulumi.OutputState }

func (ZIADLPWebRulesLabelsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIADLPWebRulesLabels)(nil)).Elem()
}

func (o ZIADLPWebRulesLabelsOutput) ToZIADLPWebRulesLabelsOutput() ZIADLPWebRulesLabelsOutput {
	return o
}

func (o ZIADLPWebRulesLabelsOutput) ToZIADLPWebRulesLabelsOutputWithContext(ctx context.Context) ZIADLPWebRulesLabelsOutput {
	return o
}

func (o ZIADLPWebRulesLabelsOutput) ToZIADLPWebRulesLabelsPtrOutput() ZIADLPWebRulesLabelsPtrOutput {
	return o.ToZIADLPWebRulesLabelsPtrOutputWithContext(context.Background())
}

func (o ZIADLPWebRulesLabelsOutput) ToZIADLPWebRulesLabelsPtrOutputWithContext(ctx context.Context) ZIADLPWebRulesLabelsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZIADLPWebRulesLabels) *ZIADLPWebRulesLabels {
		return &v
	}).(ZIADLPWebRulesLabelsPtrOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIADLPWebRulesLabelsOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ZIADLPWebRulesLabels) []int { return v.Ids }).(pulumi.IntArrayOutput)
}

type ZIADLPWebRulesLabelsPtrOutput struct{ *pulumi.OutputState }

func (ZIADLPWebRulesLabelsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIADLPWebRulesLabels)(nil)).Elem()
}

func (o ZIADLPWebRulesLabelsPtrOutput) ToZIADLPWebRulesLabelsPtrOutput() ZIADLPWebRulesLabelsPtrOutput {
	return o
}

func (o ZIADLPWebRulesLabelsPtrOutput) ToZIADLPWebRulesLabelsPtrOutputWithContext(ctx context.Context) ZIADLPWebRulesLabelsPtrOutput {
	return o
}

func (o ZIADLPWebRulesLabelsPtrOutput) Elem() ZIADLPWebRulesLabelsOutput {
	return o.ApplyT(func(v *ZIADLPWebRulesLabels) ZIADLPWebRulesLabels {
		if v != nil {
			return *v
		}
		var ret ZIADLPWebRulesLabels
		return ret
	}).(ZIADLPWebRulesLabelsOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIADLPWebRulesLabelsPtrOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *ZIADLPWebRulesLabels) []int {
		if v == nil {
			return nil
		}
		return v.Ids
	}).(pulumi.IntArrayOutput)
}

type ZIADLPWebRulesLocationGroups struct {
	// Identifier that uniquely identifies an entity
	Ids []int `pulumi:"ids"`
}

// ZIADLPWebRulesLocationGroupsInput is an input type that accepts ZIADLPWebRulesLocationGroupsArgs and ZIADLPWebRulesLocationGroupsOutput values.
// You can construct a concrete instance of `ZIADLPWebRulesLocationGroupsInput` via:
//
//	ZIADLPWebRulesLocationGroupsArgs{...}
type ZIADLPWebRulesLocationGroupsInput interface {
	pulumi.Input

	ToZIADLPWebRulesLocationGroupsOutput() ZIADLPWebRulesLocationGroupsOutput
	ToZIADLPWebRulesLocationGroupsOutputWithContext(context.Context) ZIADLPWebRulesLocationGroupsOutput
}

type ZIADLPWebRulesLocationGroupsArgs struct {
	// Identifier that uniquely identifies an entity
	Ids pulumi.IntArrayInput `pulumi:"ids"`
}

func (ZIADLPWebRulesLocationGroupsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIADLPWebRulesLocationGroups)(nil)).Elem()
}

func (i ZIADLPWebRulesLocationGroupsArgs) ToZIADLPWebRulesLocationGroupsOutput() ZIADLPWebRulesLocationGroupsOutput {
	return i.ToZIADLPWebRulesLocationGroupsOutputWithContext(context.Background())
}

func (i ZIADLPWebRulesLocationGroupsArgs) ToZIADLPWebRulesLocationGroupsOutputWithContext(ctx context.Context) ZIADLPWebRulesLocationGroupsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIADLPWebRulesLocationGroupsOutput)
}

func (i ZIADLPWebRulesLocationGroupsArgs) ToZIADLPWebRulesLocationGroupsPtrOutput() ZIADLPWebRulesLocationGroupsPtrOutput {
	return i.ToZIADLPWebRulesLocationGroupsPtrOutputWithContext(context.Background())
}

func (i ZIADLPWebRulesLocationGroupsArgs) ToZIADLPWebRulesLocationGroupsPtrOutputWithContext(ctx context.Context) ZIADLPWebRulesLocationGroupsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIADLPWebRulesLocationGroupsOutput).ToZIADLPWebRulesLocationGroupsPtrOutputWithContext(ctx)
}

// ZIADLPWebRulesLocationGroupsPtrInput is an input type that accepts ZIADLPWebRulesLocationGroupsArgs, ZIADLPWebRulesLocationGroupsPtr and ZIADLPWebRulesLocationGroupsPtrOutput values.
// You can construct a concrete instance of `ZIADLPWebRulesLocationGroupsPtrInput` via:
//
//	        ZIADLPWebRulesLocationGroupsArgs{...}
//
//	or:
//
//	        nil
type ZIADLPWebRulesLocationGroupsPtrInput interface {
	pulumi.Input

	ToZIADLPWebRulesLocationGroupsPtrOutput() ZIADLPWebRulesLocationGroupsPtrOutput
	ToZIADLPWebRulesLocationGroupsPtrOutputWithContext(context.Context) ZIADLPWebRulesLocationGroupsPtrOutput
}

type ziadlpwebRulesLocationGroupsPtrType ZIADLPWebRulesLocationGroupsArgs

func ZIADLPWebRulesLocationGroupsPtr(v *ZIADLPWebRulesLocationGroupsArgs) ZIADLPWebRulesLocationGroupsPtrInput {
	return (*ziadlpwebRulesLocationGroupsPtrType)(v)
}

func (*ziadlpwebRulesLocationGroupsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIADLPWebRulesLocationGroups)(nil)).Elem()
}

func (i *ziadlpwebRulesLocationGroupsPtrType) ToZIADLPWebRulesLocationGroupsPtrOutput() ZIADLPWebRulesLocationGroupsPtrOutput {
	return i.ToZIADLPWebRulesLocationGroupsPtrOutputWithContext(context.Background())
}

func (i *ziadlpwebRulesLocationGroupsPtrType) ToZIADLPWebRulesLocationGroupsPtrOutputWithContext(ctx context.Context) ZIADLPWebRulesLocationGroupsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIADLPWebRulesLocationGroupsPtrOutput)
}

type ZIADLPWebRulesLocationGroupsOutput struct{ *pulumi.OutputState }

func (ZIADLPWebRulesLocationGroupsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIADLPWebRulesLocationGroups)(nil)).Elem()
}

func (o ZIADLPWebRulesLocationGroupsOutput) ToZIADLPWebRulesLocationGroupsOutput() ZIADLPWebRulesLocationGroupsOutput {
	return o
}

func (o ZIADLPWebRulesLocationGroupsOutput) ToZIADLPWebRulesLocationGroupsOutputWithContext(ctx context.Context) ZIADLPWebRulesLocationGroupsOutput {
	return o
}

func (o ZIADLPWebRulesLocationGroupsOutput) ToZIADLPWebRulesLocationGroupsPtrOutput() ZIADLPWebRulesLocationGroupsPtrOutput {
	return o.ToZIADLPWebRulesLocationGroupsPtrOutputWithContext(context.Background())
}

func (o ZIADLPWebRulesLocationGroupsOutput) ToZIADLPWebRulesLocationGroupsPtrOutputWithContext(ctx context.Context) ZIADLPWebRulesLocationGroupsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZIADLPWebRulesLocationGroups) *ZIADLPWebRulesLocationGroups {
		return &v
	}).(ZIADLPWebRulesLocationGroupsPtrOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIADLPWebRulesLocationGroupsOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ZIADLPWebRulesLocationGroups) []int { return v.Ids }).(pulumi.IntArrayOutput)
}

type ZIADLPWebRulesLocationGroupsPtrOutput struct{ *pulumi.OutputState }

func (ZIADLPWebRulesLocationGroupsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIADLPWebRulesLocationGroups)(nil)).Elem()
}

func (o ZIADLPWebRulesLocationGroupsPtrOutput) ToZIADLPWebRulesLocationGroupsPtrOutput() ZIADLPWebRulesLocationGroupsPtrOutput {
	return o
}

func (o ZIADLPWebRulesLocationGroupsPtrOutput) ToZIADLPWebRulesLocationGroupsPtrOutputWithContext(ctx context.Context) ZIADLPWebRulesLocationGroupsPtrOutput {
	return o
}

func (o ZIADLPWebRulesLocationGroupsPtrOutput) Elem() ZIADLPWebRulesLocationGroupsOutput {
	return o.ApplyT(func(v *ZIADLPWebRulesLocationGroups) ZIADLPWebRulesLocationGroups {
		if v != nil {
			return *v
		}
		var ret ZIADLPWebRulesLocationGroups
		return ret
	}).(ZIADLPWebRulesLocationGroupsOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIADLPWebRulesLocationGroupsPtrOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *ZIADLPWebRulesLocationGroups) []int {
		if v == nil {
			return nil
		}
		return v.Ids
	}).(pulumi.IntArrayOutput)
}

type ZIADLPWebRulesLocations struct {
	// Identifier that uniquely identifies an entity
	Ids []int `pulumi:"ids"`
}

// ZIADLPWebRulesLocationsInput is an input type that accepts ZIADLPWebRulesLocationsArgs and ZIADLPWebRulesLocationsOutput values.
// You can construct a concrete instance of `ZIADLPWebRulesLocationsInput` via:
//
//	ZIADLPWebRulesLocationsArgs{...}
type ZIADLPWebRulesLocationsInput interface {
	pulumi.Input

	ToZIADLPWebRulesLocationsOutput() ZIADLPWebRulesLocationsOutput
	ToZIADLPWebRulesLocationsOutputWithContext(context.Context) ZIADLPWebRulesLocationsOutput
}

type ZIADLPWebRulesLocationsArgs struct {
	// Identifier that uniquely identifies an entity
	Ids pulumi.IntArrayInput `pulumi:"ids"`
}

func (ZIADLPWebRulesLocationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIADLPWebRulesLocations)(nil)).Elem()
}

func (i ZIADLPWebRulesLocationsArgs) ToZIADLPWebRulesLocationsOutput() ZIADLPWebRulesLocationsOutput {
	return i.ToZIADLPWebRulesLocationsOutputWithContext(context.Background())
}

func (i ZIADLPWebRulesLocationsArgs) ToZIADLPWebRulesLocationsOutputWithContext(ctx context.Context) ZIADLPWebRulesLocationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIADLPWebRulesLocationsOutput)
}

func (i ZIADLPWebRulesLocationsArgs) ToZIADLPWebRulesLocationsPtrOutput() ZIADLPWebRulesLocationsPtrOutput {
	return i.ToZIADLPWebRulesLocationsPtrOutputWithContext(context.Background())
}

func (i ZIADLPWebRulesLocationsArgs) ToZIADLPWebRulesLocationsPtrOutputWithContext(ctx context.Context) ZIADLPWebRulesLocationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIADLPWebRulesLocationsOutput).ToZIADLPWebRulesLocationsPtrOutputWithContext(ctx)
}

// ZIADLPWebRulesLocationsPtrInput is an input type that accepts ZIADLPWebRulesLocationsArgs, ZIADLPWebRulesLocationsPtr and ZIADLPWebRulesLocationsPtrOutput values.
// You can construct a concrete instance of `ZIADLPWebRulesLocationsPtrInput` via:
//
//	        ZIADLPWebRulesLocationsArgs{...}
//
//	or:
//
//	        nil
type ZIADLPWebRulesLocationsPtrInput interface {
	pulumi.Input

	ToZIADLPWebRulesLocationsPtrOutput() ZIADLPWebRulesLocationsPtrOutput
	ToZIADLPWebRulesLocationsPtrOutputWithContext(context.Context) ZIADLPWebRulesLocationsPtrOutput
}

type ziadlpwebRulesLocationsPtrType ZIADLPWebRulesLocationsArgs

func ZIADLPWebRulesLocationsPtr(v *ZIADLPWebRulesLocationsArgs) ZIADLPWebRulesLocationsPtrInput {
	return (*ziadlpwebRulesLocationsPtrType)(v)
}

func (*ziadlpwebRulesLocationsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIADLPWebRulesLocations)(nil)).Elem()
}

func (i *ziadlpwebRulesLocationsPtrType) ToZIADLPWebRulesLocationsPtrOutput() ZIADLPWebRulesLocationsPtrOutput {
	return i.ToZIADLPWebRulesLocationsPtrOutputWithContext(context.Background())
}

func (i *ziadlpwebRulesLocationsPtrType) ToZIADLPWebRulesLocationsPtrOutputWithContext(ctx context.Context) ZIADLPWebRulesLocationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIADLPWebRulesLocationsPtrOutput)
}

type ZIADLPWebRulesLocationsOutput struct{ *pulumi.OutputState }

func (ZIADLPWebRulesLocationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIADLPWebRulesLocations)(nil)).Elem()
}

func (o ZIADLPWebRulesLocationsOutput) ToZIADLPWebRulesLocationsOutput() ZIADLPWebRulesLocationsOutput {
	return o
}

func (o ZIADLPWebRulesLocationsOutput) ToZIADLPWebRulesLocationsOutputWithContext(ctx context.Context) ZIADLPWebRulesLocationsOutput {
	return o
}

func (o ZIADLPWebRulesLocationsOutput) ToZIADLPWebRulesLocationsPtrOutput() ZIADLPWebRulesLocationsPtrOutput {
	return o.ToZIADLPWebRulesLocationsPtrOutputWithContext(context.Background())
}

func (o ZIADLPWebRulesLocationsOutput) ToZIADLPWebRulesLocationsPtrOutputWithContext(ctx context.Context) ZIADLPWebRulesLocationsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZIADLPWebRulesLocations) *ZIADLPWebRulesLocations {
		return &v
	}).(ZIADLPWebRulesLocationsPtrOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIADLPWebRulesLocationsOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ZIADLPWebRulesLocations) []int { return v.Ids }).(pulumi.IntArrayOutput)
}

type ZIADLPWebRulesLocationsPtrOutput struct{ *pulumi.OutputState }

func (ZIADLPWebRulesLocationsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIADLPWebRulesLocations)(nil)).Elem()
}

func (o ZIADLPWebRulesLocationsPtrOutput) ToZIADLPWebRulesLocationsPtrOutput() ZIADLPWebRulesLocationsPtrOutput {
	return o
}

func (o ZIADLPWebRulesLocationsPtrOutput) ToZIADLPWebRulesLocationsPtrOutputWithContext(ctx context.Context) ZIADLPWebRulesLocationsPtrOutput {
	return o
}

func (o ZIADLPWebRulesLocationsPtrOutput) Elem() ZIADLPWebRulesLocationsOutput {
	return o.ApplyT(func(v *ZIADLPWebRulesLocations) ZIADLPWebRulesLocations {
		if v != nil {
			return *v
		}
		var ret ZIADLPWebRulesLocations
		return ret
	}).(ZIADLPWebRulesLocationsOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIADLPWebRulesLocationsPtrOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *ZIADLPWebRulesLocations) []int {
		if v == nil {
			return nil
		}
		return v.Ids
	}).(pulumi.IntArrayOutput)
}

type ZIADLPWebRulesNotificationTemplate struct {
	// Identifier that uniquely identifies an entity
	Id int `pulumi:"id"`
}

// ZIADLPWebRulesNotificationTemplateInput is an input type that accepts ZIADLPWebRulesNotificationTemplateArgs and ZIADLPWebRulesNotificationTemplateOutput values.
// You can construct a concrete instance of `ZIADLPWebRulesNotificationTemplateInput` via:
//
//	ZIADLPWebRulesNotificationTemplateArgs{...}
type ZIADLPWebRulesNotificationTemplateInput interface {
	pulumi.Input

	ToZIADLPWebRulesNotificationTemplateOutput() ZIADLPWebRulesNotificationTemplateOutput
	ToZIADLPWebRulesNotificationTemplateOutputWithContext(context.Context) ZIADLPWebRulesNotificationTemplateOutput
}

type ZIADLPWebRulesNotificationTemplateArgs struct {
	// Identifier that uniquely identifies an entity
	Id pulumi.IntInput `pulumi:"id"`
}

func (ZIADLPWebRulesNotificationTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIADLPWebRulesNotificationTemplate)(nil)).Elem()
}

func (i ZIADLPWebRulesNotificationTemplateArgs) ToZIADLPWebRulesNotificationTemplateOutput() ZIADLPWebRulesNotificationTemplateOutput {
	return i.ToZIADLPWebRulesNotificationTemplateOutputWithContext(context.Background())
}

func (i ZIADLPWebRulesNotificationTemplateArgs) ToZIADLPWebRulesNotificationTemplateOutputWithContext(ctx context.Context) ZIADLPWebRulesNotificationTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIADLPWebRulesNotificationTemplateOutput)
}

func (i ZIADLPWebRulesNotificationTemplateArgs) ToZIADLPWebRulesNotificationTemplatePtrOutput() ZIADLPWebRulesNotificationTemplatePtrOutput {
	return i.ToZIADLPWebRulesNotificationTemplatePtrOutputWithContext(context.Background())
}

func (i ZIADLPWebRulesNotificationTemplateArgs) ToZIADLPWebRulesNotificationTemplatePtrOutputWithContext(ctx context.Context) ZIADLPWebRulesNotificationTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIADLPWebRulesNotificationTemplateOutput).ToZIADLPWebRulesNotificationTemplatePtrOutputWithContext(ctx)
}

// ZIADLPWebRulesNotificationTemplatePtrInput is an input type that accepts ZIADLPWebRulesNotificationTemplateArgs, ZIADLPWebRulesNotificationTemplatePtr and ZIADLPWebRulesNotificationTemplatePtrOutput values.
// You can construct a concrete instance of `ZIADLPWebRulesNotificationTemplatePtrInput` via:
//
//	        ZIADLPWebRulesNotificationTemplateArgs{...}
//
//	or:
//
//	        nil
type ZIADLPWebRulesNotificationTemplatePtrInput interface {
	pulumi.Input

	ToZIADLPWebRulesNotificationTemplatePtrOutput() ZIADLPWebRulesNotificationTemplatePtrOutput
	ToZIADLPWebRulesNotificationTemplatePtrOutputWithContext(context.Context) ZIADLPWebRulesNotificationTemplatePtrOutput
}

type ziadlpwebRulesNotificationTemplatePtrType ZIADLPWebRulesNotificationTemplateArgs

func ZIADLPWebRulesNotificationTemplatePtr(v *ZIADLPWebRulesNotificationTemplateArgs) ZIADLPWebRulesNotificationTemplatePtrInput {
	return (*ziadlpwebRulesNotificationTemplatePtrType)(v)
}

func (*ziadlpwebRulesNotificationTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIADLPWebRulesNotificationTemplate)(nil)).Elem()
}

func (i *ziadlpwebRulesNotificationTemplatePtrType) ToZIADLPWebRulesNotificationTemplatePtrOutput() ZIADLPWebRulesNotificationTemplatePtrOutput {
	return i.ToZIADLPWebRulesNotificationTemplatePtrOutputWithContext(context.Background())
}

func (i *ziadlpwebRulesNotificationTemplatePtrType) ToZIADLPWebRulesNotificationTemplatePtrOutputWithContext(ctx context.Context) ZIADLPWebRulesNotificationTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIADLPWebRulesNotificationTemplatePtrOutput)
}

type ZIADLPWebRulesNotificationTemplateOutput struct{ *pulumi.OutputState }

func (ZIADLPWebRulesNotificationTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIADLPWebRulesNotificationTemplate)(nil)).Elem()
}

func (o ZIADLPWebRulesNotificationTemplateOutput) ToZIADLPWebRulesNotificationTemplateOutput() ZIADLPWebRulesNotificationTemplateOutput {
	return o
}

func (o ZIADLPWebRulesNotificationTemplateOutput) ToZIADLPWebRulesNotificationTemplateOutputWithContext(ctx context.Context) ZIADLPWebRulesNotificationTemplateOutput {
	return o
}

func (o ZIADLPWebRulesNotificationTemplateOutput) ToZIADLPWebRulesNotificationTemplatePtrOutput() ZIADLPWebRulesNotificationTemplatePtrOutput {
	return o.ToZIADLPWebRulesNotificationTemplatePtrOutputWithContext(context.Background())
}

func (o ZIADLPWebRulesNotificationTemplateOutput) ToZIADLPWebRulesNotificationTemplatePtrOutputWithContext(ctx context.Context) ZIADLPWebRulesNotificationTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZIADLPWebRulesNotificationTemplate) *ZIADLPWebRulesNotificationTemplate {
		return &v
	}).(ZIADLPWebRulesNotificationTemplatePtrOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIADLPWebRulesNotificationTemplateOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v ZIADLPWebRulesNotificationTemplate) int { return v.Id }).(pulumi.IntOutput)
}

type ZIADLPWebRulesNotificationTemplatePtrOutput struct{ *pulumi.OutputState }

func (ZIADLPWebRulesNotificationTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIADLPWebRulesNotificationTemplate)(nil)).Elem()
}

func (o ZIADLPWebRulesNotificationTemplatePtrOutput) ToZIADLPWebRulesNotificationTemplatePtrOutput() ZIADLPWebRulesNotificationTemplatePtrOutput {
	return o
}

func (o ZIADLPWebRulesNotificationTemplatePtrOutput) ToZIADLPWebRulesNotificationTemplatePtrOutputWithContext(ctx context.Context) ZIADLPWebRulesNotificationTemplatePtrOutput {
	return o
}

func (o ZIADLPWebRulesNotificationTemplatePtrOutput) Elem() ZIADLPWebRulesNotificationTemplateOutput {
	return o.ApplyT(func(v *ZIADLPWebRulesNotificationTemplate) ZIADLPWebRulesNotificationTemplate {
		if v != nil {
			return *v
		}
		var ret ZIADLPWebRulesNotificationTemplate
		return ret
	}).(ZIADLPWebRulesNotificationTemplateOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIADLPWebRulesNotificationTemplatePtrOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ZIADLPWebRulesNotificationTemplate) *int {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.IntPtrOutput)
}

type ZIADLPWebRulesTimeWindows struct {
	// Identifier that uniquely identifies an entity
	Ids []int `pulumi:"ids"`
}

// ZIADLPWebRulesTimeWindowsInput is an input type that accepts ZIADLPWebRulesTimeWindowsArgs and ZIADLPWebRulesTimeWindowsOutput values.
// You can construct a concrete instance of `ZIADLPWebRulesTimeWindowsInput` via:
//
//	ZIADLPWebRulesTimeWindowsArgs{...}
type ZIADLPWebRulesTimeWindowsInput interface {
	pulumi.Input

	ToZIADLPWebRulesTimeWindowsOutput() ZIADLPWebRulesTimeWindowsOutput
	ToZIADLPWebRulesTimeWindowsOutputWithContext(context.Context) ZIADLPWebRulesTimeWindowsOutput
}

type ZIADLPWebRulesTimeWindowsArgs struct {
	// Identifier that uniquely identifies an entity
	Ids pulumi.IntArrayInput `pulumi:"ids"`
}

func (ZIADLPWebRulesTimeWindowsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIADLPWebRulesTimeWindows)(nil)).Elem()
}

func (i ZIADLPWebRulesTimeWindowsArgs) ToZIADLPWebRulesTimeWindowsOutput() ZIADLPWebRulesTimeWindowsOutput {
	return i.ToZIADLPWebRulesTimeWindowsOutputWithContext(context.Background())
}

func (i ZIADLPWebRulesTimeWindowsArgs) ToZIADLPWebRulesTimeWindowsOutputWithContext(ctx context.Context) ZIADLPWebRulesTimeWindowsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIADLPWebRulesTimeWindowsOutput)
}

func (i ZIADLPWebRulesTimeWindowsArgs) ToZIADLPWebRulesTimeWindowsPtrOutput() ZIADLPWebRulesTimeWindowsPtrOutput {
	return i.ToZIADLPWebRulesTimeWindowsPtrOutputWithContext(context.Background())
}

func (i ZIADLPWebRulesTimeWindowsArgs) ToZIADLPWebRulesTimeWindowsPtrOutputWithContext(ctx context.Context) ZIADLPWebRulesTimeWindowsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIADLPWebRulesTimeWindowsOutput).ToZIADLPWebRulesTimeWindowsPtrOutputWithContext(ctx)
}

// ZIADLPWebRulesTimeWindowsPtrInput is an input type that accepts ZIADLPWebRulesTimeWindowsArgs, ZIADLPWebRulesTimeWindowsPtr and ZIADLPWebRulesTimeWindowsPtrOutput values.
// You can construct a concrete instance of `ZIADLPWebRulesTimeWindowsPtrInput` via:
//
//	        ZIADLPWebRulesTimeWindowsArgs{...}
//
//	or:
//
//	        nil
type ZIADLPWebRulesTimeWindowsPtrInput interface {
	pulumi.Input

	ToZIADLPWebRulesTimeWindowsPtrOutput() ZIADLPWebRulesTimeWindowsPtrOutput
	ToZIADLPWebRulesTimeWindowsPtrOutputWithContext(context.Context) ZIADLPWebRulesTimeWindowsPtrOutput
}

type ziadlpwebRulesTimeWindowsPtrType ZIADLPWebRulesTimeWindowsArgs

func ZIADLPWebRulesTimeWindowsPtr(v *ZIADLPWebRulesTimeWindowsArgs) ZIADLPWebRulesTimeWindowsPtrInput {
	return (*ziadlpwebRulesTimeWindowsPtrType)(v)
}

func (*ziadlpwebRulesTimeWindowsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIADLPWebRulesTimeWindows)(nil)).Elem()
}

func (i *ziadlpwebRulesTimeWindowsPtrType) ToZIADLPWebRulesTimeWindowsPtrOutput() ZIADLPWebRulesTimeWindowsPtrOutput {
	return i.ToZIADLPWebRulesTimeWindowsPtrOutputWithContext(context.Background())
}

func (i *ziadlpwebRulesTimeWindowsPtrType) ToZIADLPWebRulesTimeWindowsPtrOutputWithContext(ctx context.Context) ZIADLPWebRulesTimeWindowsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIADLPWebRulesTimeWindowsPtrOutput)
}

type ZIADLPWebRulesTimeWindowsOutput struct{ *pulumi.OutputState }

func (ZIADLPWebRulesTimeWindowsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIADLPWebRulesTimeWindows)(nil)).Elem()
}

func (o ZIADLPWebRulesTimeWindowsOutput) ToZIADLPWebRulesTimeWindowsOutput() ZIADLPWebRulesTimeWindowsOutput {
	return o
}

func (o ZIADLPWebRulesTimeWindowsOutput) ToZIADLPWebRulesTimeWindowsOutputWithContext(ctx context.Context) ZIADLPWebRulesTimeWindowsOutput {
	return o
}

func (o ZIADLPWebRulesTimeWindowsOutput) ToZIADLPWebRulesTimeWindowsPtrOutput() ZIADLPWebRulesTimeWindowsPtrOutput {
	return o.ToZIADLPWebRulesTimeWindowsPtrOutputWithContext(context.Background())
}

func (o ZIADLPWebRulesTimeWindowsOutput) ToZIADLPWebRulesTimeWindowsPtrOutputWithContext(ctx context.Context) ZIADLPWebRulesTimeWindowsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZIADLPWebRulesTimeWindows) *ZIADLPWebRulesTimeWindows {
		return &v
	}).(ZIADLPWebRulesTimeWindowsPtrOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIADLPWebRulesTimeWindowsOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ZIADLPWebRulesTimeWindows) []int { return v.Ids }).(pulumi.IntArrayOutput)
}

type ZIADLPWebRulesTimeWindowsPtrOutput struct{ *pulumi.OutputState }

func (ZIADLPWebRulesTimeWindowsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIADLPWebRulesTimeWindows)(nil)).Elem()
}

func (o ZIADLPWebRulesTimeWindowsPtrOutput) ToZIADLPWebRulesTimeWindowsPtrOutput() ZIADLPWebRulesTimeWindowsPtrOutput {
	return o
}

func (o ZIADLPWebRulesTimeWindowsPtrOutput) ToZIADLPWebRulesTimeWindowsPtrOutputWithContext(ctx context.Context) ZIADLPWebRulesTimeWindowsPtrOutput {
	return o
}

func (o ZIADLPWebRulesTimeWindowsPtrOutput) Elem() ZIADLPWebRulesTimeWindowsOutput {
	return o.ApplyT(func(v *ZIADLPWebRulesTimeWindows) ZIADLPWebRulesTimeWindows {
		if v != nil {
			return *v
		}
		var ret ZIADLPWebRulesTimeWindows
		return ret
	}).(ZIADLPWebRulesTimeWindowsOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIADLPWebRulesTimeWindowsPtrOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *ZIADLPWebRulesTimeWindows) []int {
		if v == nil {
			return nil
		}
		return v.Ids
	}).(pulumi.IntArrayOutput)
}

type ZIADLPWebRulesUrlCategories struct {
	// Identifier that uniquely identifies an entity
	Ids []int `pulumi:"ids"`
}

// ZIADLPWebRulesUrlCategoriesInput is an input type that accepts ZIADLPWebRulesUrlCategoriesArgs and ZIADLPWebRulesUrlCategoriesOutput values.
// You can construct a concrete instance of `ZIADLPWebRulesUrlCategoriesInput` via:
//
//	ZIADLPWebRulesUrlCategoriesArgs{...}
type ZIADLPWebRulesUrlCategoriesInput interface {
	pulumi.Input

	ToZIADLPWebRulesUrlCategoriesOutput() ZIADLPWebRulesUrlCategoriesOutput
	ToZIADLPWebRulesUrlCategoriesOutputWithContext(context.Context) ZIADLPWebRulesUrlCategoriesOutput
}

type ZIADLPWebRulesUrlCategoriesArgs struct {
	// Identifier that uniquely identifies an entity
	Ids pulumi.IntArrayInput `pulumi:"ids"`
}

func (ZIADLPWebRulesUrlCategoriesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIADLPWebRulesUrlCategories)(nil)).Elem()
}

func (i ZIADLPWebRulesUrlCategoriesArgs) ToZIADLPWebRulesUrlCategoriesOutput() ZIADLPWebRulesUrlCategoriesOutput {
	return i.ToZIADLPWebRulesUrlCategoriesOutputWithContext(context.Background())
}

func (i ZIADLPWebRulesUrlCategoriesArgs) ToZIADLPWebRulesUrlCategoriesOutputWithContext(ctx context.Context) ZIADLPWebRulesUrlCategoriesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIADLPWebRulesUrlCategoriesOutput)
}

func (i ZIADLPWebRulesUrlCategoriesArgs) ToZIADLPWebRulesUrlCategoriesPtrOutput() ZIADLPWebRulesUrlCategoriesPtrOutput {
	return i.ToZIADLPWebRulesUrlCategoriesPtrOutputWithContext(context.Background())
}

func (i ZIADLPWebRulesUrlCategoriesArgs) ToZIADLPWebRulesUrlCategoriesPtrOutputWithContext(ctx context.Context) ZIADLPWebRulesUrlCategoriesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIADLPWebRulesUrlCategoriesOutput).ToZIADLPWebRulesUrlCategoriesPtrOutputWithContext(ctx)
}

// ZIADLPWebRulesUrlCategoriesPtrInput is an input type that accepts ZIADLPWebRulesUrlCategoriesArgs, ZIADLPWebRulesUrlCategoriesPtr and ZIADLPWebRulesUrlCategoriesPtrOutput values.
// You can construct a concrete instance of `ZIADLPWebRulesUrlCategoriesPtrInput` via:
//
//	        ZIADLPWebRulesUrlCategoriesArgs{...}
//
//	or:
//
//	        nil
type ZIADLPWebRulesUrlCategoriesPtrInput interface {
	pulumi.Input

	ToZIADLPWebRulesUrlCategoriesPtrOutput() ZIADLPWebRulesUrlCategoriesPtrOutput
	ToZIADLPWebRulesUrlCategoriesPtrOutputWithContext(context.Context) ZIADLPWebRulesUrlCategoriesPtrOutput
}

type ziadlpwebRulesUrlCategoriesPtrType ZIADLPWebRulesUrlCategoriesArgs

func ZIADLPWebRulesUrlCategoriesPtr(v *ZIADLPWebRulesUrlCategoriesArgs) ZIADLPWebRulesUrlCategoriesPtrInput {
	return (*ziadlpwebRulesUrlCategoriesPtrType)(v)
}

func (*ziadlpwebRulesUrlCategoriesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIADLPWebRulesUrlCategories)(nil)).Elem()
}

func (i *ziadlpwebRulesUrlCategoriesPtrType) ToZIADLPWebRulesUrlCategoriesPtrOutput() ZIADLPWebRulesUrlCategoriesPtrOutput {
	return i.ToZIADLPWebRulesUrlCategoriesPtrOutputWithContext(context.Background())
}

func (i *ziadlpwebRulesUrlCategoriesPtrType) ToZIADLPWebRulesUrlCategoriesPtrOutputWithContext(ctx context.Context) ZIADLPWebRulesUrlCategoriesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIADLPWebRulesUrlCategoriesPtrOutput)
}

type ZIADLPWebRulesUrlCategoriesOutput struct{ *pulumi.OutputState }

func (ZIADLPWebRulesUrlCategoriesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIADLPWebRulesUrlCategories)(nil)).Elem()
}

func (o ZIADLPWebRulesUrlCategoriesOutput) ToZIADLPWebRulesUrlCategoriesOutput() ZIADLPWebRulesUrlCategoriesOutput {
	return o
}

func (o ZIADLPWebRulesUrlCategoriesOutput) ToZIADLPWebRulesUrlCategoriesOutputWithContext(ctx context.Context) ZIADLPWebRulesUrlCategoriesOutput {
	return o
}

func (o ZIADLPWebRulesUrlCategoriesOutput) ToZIADLPWebRulesUrlCategoriesPtrOutput() ZIADLPWebRulesUrlCategoriesPtrOutput {
	return o.ToZIADLPWebRulesUrlCategoriesPtrOutputWithContext(context.Background())
}

func (o ZIADLPWebRulesUrlCategoriesOutput) ToZIADLPWebRulesUrlCategoriesPtrOutputWithContext(ctx context.Context) ZIADLPWebRulesUrlCategoriesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZIADLPWebRulesUrlCategories) *ZIADLPWebRulesUrlCategories {
		return &v
	}).(ZIADLPWebRulesUrlCategoriesPtrOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIADLPWebRulesUrlCategoriesOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ZIADLPWebRulesUrlCategories) []int { return v.Ids }).(pulumi.IntArrayOutput)
}

type ZIADLPWebRulesUrlCategoriesPtrOutput struct{ *pulumi.OutputState }

func (ZIADLPWebRulesUrlCategoriesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIADLPWebRulesUrlCategories)(nil)).Elem()
}

func (o ZIADLPWebRulesUrlCategoriesPtrOutput) ToZIADLPWebRulesUrlCategoriesPtrOutput() ZIADLPWebRulesUrlCategoriesPtrOutput {
	return o
}

func (o ZIADLPWebRulesUrlCategoriesPtrOutput) ToZIADLPWebRulesUrlCategoriesPtrOutputWithContext(ctx context.Context) ZIADLPWebRulesUrlCategoriesPtrOutput {
	return o
}

func (o ZIADLPWebRulesUrlCategoriesPtrOutput) Elem() ZIADLPWebRulesUrlCategoriesOutput {
	return o.ApplyT(func(v *ZIADLPWebRulesUrlCategories) ZIADLPWebRulesUrlCategories {
		if v != nil {
			return *v
		}
		var ret ZIADLPWebRulesUrlCategories
		return ret
	}).(ZIADLPWebRulesUrlCategoriesOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIADLPWebRulesUrlCategoriesPtrOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *ZIADLPWebRulesUrlCategories) []int {
		if v == nil {
			return nil
		}
		return v.Ids
	}).(pulumi.IntArrayOutput)
}

type ZIADLPWebRulesUsers struct {
	// Identifier that uniquely identifies an entity
	Ids []int `pulumi:"ids"`
}

// ZIADLPWebRulesUsersInput is an input type that accepts ZIADLPWebRulesUsersArgs and ZIADLPWebRulesUsersOutput values.
// You can construct a concrete instance of `ZIADLPWebRulesUsersInput` via:
//
//	ZIADLPWebRulesUsersArgs{...}
type ZIADLPWebRulesUsersInput interface {
	pulumi.Input

	ToZIADLPWebRulesUsersOutput() ZIADLPWebRulesUsersOutput
	ToZIADLPWebRulesUsersOutputWithContext(context.Context) ZIADLPWebRulesUsersOutput
}

type ZIADLPWebRulesUsersArgs struct {
	// Identifier that uniquely identifies an entity
	Ids pulumi.IntArrayInput `pulumi:"ids"`
}

func (ZIADLPWebRulesUsersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIADLPWebRulesUsers)(nil)).Elem()
}

func (i ZIADLPWebRulesUsersArgs) ToZIADLPWebRulesUsersOutput() ZIADLPWebRulesUsersOutput {
	return i.ToZIADLPWebRulesUsersOutputWithContext(context.Background())
}

func (i ZIADLPWebRulesUsersArgs) ToZIADLPWebRulesUsersOutputWithContext(ctx context.Context) ZIADLPWebRulesUsersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIADLPWebRulesUsersOutput)
}

func (i ZIADLPWebRulesUsersArgs) ToZIADLPWebRulesUsersPtrOutput() ZIADLPWebRulesUsersPtrOutput {
	return i.ToZIADLPWebRulesUsersPtrOutputWithContext(context.Background())
}

func (i ZIADLPWebRulesUsersArgs) ToZIADLPWebRulesUsersPtrOutputWithContext(ctx context.Context) ZIADLPWebRulesUsersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIADLPWebRulesUsersOutput).ToZIADLPWebRulesUsersPtrOutputWithContext(ctx)
}

// ZIADLPWebRulesUsersPtrInput is an input type that accepts ZIADLPWebRulesUsersArgs, ZIADLPWebRulesUsersPtr and ZIADLPWebRulesUsersPtrOutput values.
// You can construct a concrete instance of `ZIADLPWebRulesUsersPtrInput` via:
//
//	        ZIADLPWebRulesUsersArgs{...}
//
//	or:
//
//	        nil
type ZIADLPWebRulesUsersPtrInput interface {
	pulumi.Input

	ToZIADLPWebRulesUsersPtrOutput() ZIADLPWebRulesUsersPtrOutput
	ToZIADLPWebRulesUsersPtrOutputWithContext(context.Context) ZIADLPWebRulesUsersPtrOutput
}

type ziadlpwebRulesUsersPtrType ZIADLPWebRulesUsersArgs

func ZIADLPWebRulesUsersPtr(v *ZIADLPWebRulesUsersArgs) ZIADLPWebRulesUsersPtrInput {
	return (*ziadlpwebRulesUsersPtrType)(v)
}

func (*ziadlpwebRulesUsersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIADLPWebRulesUsers)(nil)).Elem()
}

func (i *ziadlpwebRulesUsersPtrType) ToZIADLPWebRulesUsersPtrOutput() ZIADLPWebRulesUsersPtrOutput {
	return i.ToZIADLPWebRulesUsersPtrOutputWithContext(context.Background())
}

func (i *ziadlpwebRulesUsersPtrType) ToZIADLPWebRulesUsersPtrOutputWithContext(ctx context.Context) ZIADLPWebRulesUsersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIADLPWebRulesUsersPtrOutput)
}

type ZIADLPWebRulesUsersOutput struct{ *pulumi.OutputState }

func (ZIADLPWebRulesUsersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIADLPWebRulesUsers)(nil)).Elem()
}

func (o ZIADLPWebRulesUsersOutput) ToZIADLPWebRulesUsersOutput() ZIADLPWebRulesUsersOutput {
	return o
}

func (o ZIADLPWebRulesUsersOutput) ToZIADLPWebRulesUsersOutputWithContext(ctx context.Context) ZIADLPWebRulesUsersOutput {
	return o
}

func (o ZIADLPWebRulesUsersOutput) ToZIADLPWebRulesUsersPtrOutput() ZIADLPWebRulesUsersPtrOutput {
	return o.ToZIADLPWebRulesUsersPtrOutputWithContext(context.Background())
}

func (o ZIADLPWebRulesUsersOutput) ToZIADLPWebRulesUsersPtrOutputWithContext(ctx context.Context) ZIADLPWebRulesUsersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZIADLPWebRulesUsers) *ZIADLPWebRulesUsers {
		return &v
	}).(ZIADLPWebRulesUsersPtrOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIADLPWebRulesUsersOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ZIADLPWebRulesUsers) []int { return v.Ids }).(pulumi.IntArrayOutput)
}

type ZIADLPWebRulesUsersPtrOutput struct{ *pulumi.OutputState }

func (ZIADLPWebRulesUsersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIADLPWebRulesUsers)(nil)).Elem()
}

func (o ZIADLPWebRulesUsersPtrOutput) ToZIADLPWebRulesUsersPtrOutput() ZIADLPWebRulesUsersPtrOutput {
	return o
}

func (o ZIADLPWebRulesUsersPtrOutput) ToZIADLPWebRulesUsersPtrOutputWithContext(ctx context.Context) ZIADLPWebRulesUsersPtrOutput {
	return o
}

func (o ZIADLPWebRulesUsersPtrOutput) Elem() ZIADLPWebRulesUsersOutput {
	return o.ApplyT(func(v *ZIADLPWebRulesUsers) ZIADLPWebRulesUsers {
		if v != nil {
			return *v
		}
		var ret ZIADLPWebRulesUsers
		return ret
	}).(ZIADLPWebRulesUsersOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIADLPWebRulesUsersPtrOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *ZIADLPWebRulesUsers) []int {
		if v == nil {
			return nil
		}
		return v.Ids
	}).(pulumi.IntArrayOutput)
}

type ZIAFirewallFilteringNetworkServicesDestTcpPort struct {
	End   *int `pulumi:"end"`
	Start *int `pulumi:"start"`
}

// ZIAFirewallFilteringNetworkServicesDestTcpPortInput is an input type that accepts ZIAFirewallFilteringNetworkServicesDestTcpPortArgs and ZIAFirewallFilteringNetworkServicesDestTcpPortOutput values.
// You can construct a concrete instance of `ZIAFirewallFilteringNetworkServicesDestTcpPortInput` via:
//
//	ZIAFirewallFilteringNetworkServicesDestTcpPortArgs{...}
type ZIAFirewallFilteringNetworkServicesDestTcpPortInput interface {
	pulumi.Input

	ToZIAFirewallFilteringNetworkServicesDestTcpPortOutput() ZIAFirewallFilteringNetworkServicesDestTcpPortOutput
	ToZIAFirewallFilteringNetworkServicesDestTcpPortOutputWithContext(context.Context) ZIAFirewallFilteringNetworkServicesDestTcpPortOutput
}

type ZIAFirewallFilteringNetworkServicesDestTcpPortArgs struct {
	End   pulumi.IntPtrInput `pulumi:"end"`
	Start pulumi.IntPtrInput `pulumi:"start"`
}

func (ZIAFirewallFilteringNetworkServicesDestTcpPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAFirewallFilteringNetworkServicesDestTcpPort)(nil)).Elem()
}

func (i ZIAFirewallFilteringNetworkServicesDestTcpPortArgs) ToZIAFirewallFilteringNetworkServicesDestTcpPortOutput() ZIAFirewallFilteringNetworkServicesDestTcpPortOutput {
	return i.ToZIAFirewallFilteringNetworkServicesDestTcpPortOutputWithContext(context.Background())
}

func (i ZIAFirewallFilteringNetworkServicesDestTcpPortArgs) ToZIAFirewallFilteringNetworkServicesDestTcpPortOutputWithContext(ctx context.Context) ZIAFirewallFilteringNetworkServicesDestTcpPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringNetworkServicesDestTcpPortOutput)
}

// ZIAFirewallFilteringNetworkServicesDestTcpPortArrayInput is an input type that accepts ZIAFirewallFilteringNetworkServicesDestTcpPortArray and ZIAFirewallFilteringNetworkServicesDestTcpPortArrayOutput values.
// You can construct a concrete instance of `ZIAFirewallFilteringNetworkServicesDestTcpPortArrayInput` via:
//
//	ZIAFirewallFilteringNetworkServicesDestTcpPortArray{ ZIAFirewallFilteringNetworkServicesDestTcpPortArgs{...} }
type ZIAFirewallFilteringNetworkServicesDestTcpPortArrayInput interface {
	pulumi.Input

	ToZIAFirewallFilteringNetworkServicesDestTcpPortArrayOutput() ZIAFirewallFilteringNetworkServicesDestTcpPortArrayOutput
	ToZIAFirewallFilteringNetworkServicesDestTcpPortArrayOutputWithContext(context.Context) ZIAFirewallFilteringNetworkServicesDestTcpPortArrayOutput
}

type ZIAFirewallFilteringNetworkServicesDestTcpPortArray []ZIAFirewallFilteringNetworkServicesDestTcpPortInput

func (ZIAFirewallFilteringNetworkServicesDestTcpPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZIAFirewallFilteringNetworkServicesDestTcpPort)(nil)).Elem()
}

func (i ZIAFirewallFilteringNetworkServicesDestTcpPortArray) ToZIAFirewallFilteringNetworkServicesDestTcpPortArrayOutput() ZIAFirewallFilteringNetworkServicesDestTcpPortArrayOutput {
	return i.ToZIAFirewallFilteringNetworkServicesDestTcpPortArrayOutputWithContext(context.Background())
}

func (i ZIAFirewallFilteringNetworkServicesDestTcpPortArray) ToZIAFirewallFilteringNetworkServicesDestTcpPortArrayOutputWithContext(ctx context.Context) ZIAFirewallFilteringNetworkServicesDestTcpPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringNetworkServicesDestTcpPortArrayOutput)
}

type ZIAFirewallFilteringNetworkServicesDestTcpPortOutput struct{ *pulumi.OutputState }

func (ZIAFirewallFilteringNetworkServicesDestTcpPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAFirewallFilteringNetworkServicesDestTcpPort)(nil)).Elem()
}

func (o ZIAFirewallFilteringNetworkServicesDestTcpPortOutput) ToZIAFirewallFilteringNetworkServicesDestTcpPortOutput() ZIAFirewallFilteringNetworkServicesDestTcpPortOutput {
	return o
}

func (o ZIAFirewallFilteringNetworkServicesDestTcpPortOutput) ToZIAFirewallFilteringNetworkServicesDestTcpPortOutputWithContext(ctx context.Context) ZIAFirewallFilteringNetworkServicesDestTcpPortOutput {
	return o
}

func (o ZIAFirewallFilteringNetworkServicesDestTcpPortOutput) End() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZIAFirewallFilteringNetworkServicesDestTcpPort) *int { return v.End }).(pulumi.IntPtrOutput)
}

func (o ZIAFirewallFilteringNetworkServicesDestTcpPortOutput) Start() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZIAFirewallFilteringNetworkServicesDestTcpPort) *int { return v.Start }).(pulumi.IntPtrOutput)
}

type ZIAFirewallFilteringNetworkServicesDestTcpPortArrayOutput struct{ *pulumi.OutputState }

func (ZIAFirewallFilteringNetworkServicesDestTcpPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZIAFirewallFilteringNetworkServicesDestTcpPort)(nil)).Elem()
}

func (o ZIAFirewallFilteringNetworkServicesDestTcpPortArrayOutput) ToZIAFirewallFilteringNetworkServicesDestTcpPortArrayOutput() ZIAFirewallFilteringNetworkServicesDestTcpPortArrayOutput {
	return o
}

func (o ZIAFirewallFilteringNetworkServicesDestTcpPortArrayOutput) ToZIAFirewallFilteringNetworkServicesDestTcpPortArrayOutputWithContext(ctx context.Context) ZIAFirewallFilteringNetworkServicesDestTcpPortArrayOutput {
	return o
}

func (o ZIAFirewallFilteringNetworkServicesDestTcpPortArrayOutput) Index(i pulumi.IntInput) ZIAFirewallFilteringNetworkServicesDestTcpPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZIAFirewallFilteringNetworkServicesDestTcpPort {
		return vs[0].([]ZIAFirewallFilteringNetworkServicesDestTcpPort)[vs[1].(int)]
	}).(ZIAFirewallFilteringNetworkServicesDestTcpPortOutput)
}

type ZIAFirewallFilteringNetworkServicesDestUdpPort struct {
	End   *int `pulumi:"end"`
	Start *int `pulumi:"start"`
}

// ZIAFirewallFilteringNetworkServicesDestUdpPortInput is an input type that accepts ZIAFirewallFilteringNetworkServicesDestUdpPortArgs and ZIAFirewallFilteringNetworkServicesDestUdpPortOutput values.
// You can construct a concrete instance of `ZIAFirewallFilteringNetworkServicesDestUdpPortInput` via:
//
//	ZIAFirewallFilteringNetworkServicesDestUdpPortArgs{...}
type ZIAFirewallFilteringNetworkServicesDestUdpPortInput interface {
	pulumi.Input

	ToZIAFirewallFilteringNetworkServicesDestUdpPortOutput() ZIAFirewallFilteringNetworkServicesDestUdpPortOutput
	ToZIAFirewallFilteringNetworkServicesDestUdpPortOutputWithContext(context.Context) ZIAFirewallFilteringNetworkServicesDestUdpPortOutput
}

type ZIAFirewallFilteringNetworkServicesDestUdpPortArgs struct {
	End   pulumi.IntPtrInput `pulumi:"end"`
	Start pulumi.IntPtrInput `pulumi:"start"`
}

func (ZIAFirewallFilteringNetworkServicesDestUdpPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAFirewallFilteringNetworkServicesDestUdpPort)(nil)).Elem()
}

func (i ZIAFirewallFilteringNetworkServicesDestUdpPortArgs) ToZIAFirewallFilteringNetworkServicesDestUdpPortOutput() ZIAFirewallFilteringNetworkServicesDestUdpPortOutput {
	return i.ToZIAFirewallFilteringNetworkServicesDestUdpPortOutputWithContext(context.Background())
}

func (i ZIAFirewallFilteringNetworkServicesDestUdpPortArgs) ToZIAFirewallFilteringNetworkServicesDestUdpPortOutputWithContext(ctx context.Context) ZIAFirewallFilteringNetworkServicesDestUdpPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringNetworkServicesDestUdpPortOutput)
}

// ZIAFirewallFilteringNetworkServicesDestUdpPortArrayInput is an input type that accepts ZIAFirewallFilteringNetworkServicesDestUdpPortArray and ZIAFirewallFilteringNetworkServicesDestUdpPortArrayOutput values.
// You can construct a concrete instance of `ZIAFirewallFilteringNetworkServicesDestUdpPortArrayInput` via:
//
//	ZIAFirewallFilteringNetworkServicesDestUdpPortArray{ ZIAFirewallFilteringNetworkServicesDestUdpPortArgs{...} }
type ZIAFirewallFilteringNetworkServicesDestUdpPortArrayInput interface {
	pulumi.Input

	ToZIAFirewallFilteringNetworkServicesDestUdpPortArrayOutput() ZIAFirewallFilteringNetworkServicesDestUdpPortArrayOutput
	ToZIAFirewallFilteringNetworkServicesDestUdpPortArrayOutputWithContext(context.Context) ZIAFirewallFilteringNetworkServicesDestUdpPortArrayOutput
}

type ZIAFirewallFilteringNetworkServicesDestUdpPortArray []ZIAFirewallFilteringNetworkServicesDestUdpPortInput

func (ZIAFirewallFilteringNetworkServicesDestUdpPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZIAFirewallFilteringNetworkServicesDestUdpPort)(nil)).Elem()
}

func (i ZIAFirewallFilteringNetworkServicesDestUdpPortArray) ToZIAFirewallFilteringNetworkServicesDestUdpPortArrayOutput() ZIAFirewallFilteringNetworkServicesDestUdpPortArrayOutput {
	return i.ToZIAFirewallFilteringNetworkServicesDestUdpPortArrayOutputWithContext(context.Background())
}

func (i ZIAFirewallFilteringNetworkServicesDestUdpPortArray) ToZIAFirewallFilteringNetworkServicesDestUdpPortArrayOutputWithContext(ctx context.Context) ZIAFirewallFilteringNetworkServicesDestUdpPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringNetworkServicesDestUdpPortArrayOutput)
}

type ZIAFirewallFilteringNetworkServicesDestUdpPortOutput struct{ *pulumi.OutputState }

func (ZIAFirewallFilteringNetworkServicesDestUdpPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAFirewallFilteringNetworkServicesDestUdpPort)(nil)).Elem()
}

func (o ZIAFirewallFilteringNetworkServicesDestUdpPortOutput) ToZIAFirewallFilteringNetworkServicesDestUdpPortOutput() ZIAFirewallFilteringNetworkServicesDestUdpPortOutput {
	return o
}

func (o ZIAFirewallFilteringNetworkServicesDestUdpPortOutput) ToZIAFirewallFilteringNetworkServicesDestUdpPortOutputWithContext(ctx context.Context) ZIAFirewallFilteringNetworkServicesDestUdpPortOutput {
	return o
}

func (o ZIAFirewallFilteringNetworkServicesDestUdpPortOutput) End() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZIAFirewallFilteringNetworkServicesDestUdpPort) *int { return v.End }).(pulumi.IntPtrOutput)
}

func (o ZIAFirewallFilteringNetworkServicesDestUdpPortOutput) Start() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZIAFirewallFilteringNetworkServicesDestUdpPort) *int { return v.Start }).(pulumi.IntPtrOutput)
}

type ZIAFirewallFilteringNetworkServicesDestUdpPortArrayOutput struct{ *pulumi.OutputState }

func (ZIAFirewallFilteringNetworkServicesDestUdpPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZIAFirewallFilteringNetworkServicesDestUdpPort)(nil)).Elem()
}

func (o ZIAFirewallFilteringNetworkServicesDestUdpPortArrayOutput) ToZIAFirewallFilteringNetworkServicesDestUdpPortArrayOutput() ZIAFirewallFilteringNetworkServicesDestUdpPortArrayOutput {
	return o
}

func (o ZIAFirewallFilteringNetworkServicesDestUdpPortArrayOutput) ToZIAFirewallFilteringNetworkServicesDestUdpPortArrayOutputWithContext(ctx context.Context) ZIAFirewallFilteringNetworkServicesDestUdpPortArrayOutput {
	return o
}

func (o ZIAFirewallFilteringNetworkServicesDestUdpPortArrayOutput) Index(i pulumi.IntInput) ZIAFirewallFilteringNetworkServicesDestUdpPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZIAFirewallFilteringNetworkServicesDestUdpPort {
		return vs[0].([]ZIAFirewallFilteringNetworkServicesDestUdpPort)[vs[1].(int)]
	}).(ZIAFirewallFilteringNetworkServicesDestUdpPortOutput)
}

type ZIAFirewallFilteringNetworkServicesSrcTcpPort struct {
	End   *int `pulumi:"end"`
	Start *int `pulumi:"start"`
}

// ZIAFirewallFilteringNetworkServicesSrcTcpPortInput is an input type that accepts ZIAFirewallFilteringNetworkServicesSrcTcpPortArgs and ZIAFirewallFilteringNetworkServicesSrcTcpPortOutput values.
// You can construct a concrete instance of `ZIAFirewallFilteringNetworkServicesSrcTcpPortInput` via:
//
//	ZIAFirewallFilteringNetworkServicesSrcTcpPortArgs{...}
type ZIAFirewallFilteringNetworkServicesSrcTcpPortInput interface {
	pulumi.Input

	ToZIAFirewallFilteringNetworkServicesSrcTcpPortOutput() ZIAFirewallFilteringNetworkServicesSrcTcpPortOutput
	ToZIAFirewallFilteringNetworkServicesSrcTcpPortOutputWithContext(context.Context) ZIAFirewallFilteringNetworkServicesSrcTcpPortOutput
}

type ZIAFirewallFilteringNetworkServicesSrcTcpPortArgs struct {
	End   pulumi.IntPtrInput `pulumi:"end"`
	Start pulumi.IntPtrInput `pulumi:"start"`
}

func (ZIAFirewallFilteringNetworkServicesSrcTcpPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAFirewallFilteringNetworkServicesSrcTcpPort)(nil)).Elem()
}

func (i ZIAFirewallFilteringNetworkServicesSrcTcpPortArgs) ToZIAFirewallFilteringNetworkServicesSrcTcpPortOutput() ZIAFirewallFilteringNetworkServicesSrcTcpPortOutput {
	return i.ToZIAFirewallFilteringNetworkServicesSrcTcpPortOutputWithContext(context.Background())
}

func (i ZIAFirewallFilteringNetworkServicesSrcTcpPortArgs) ToZIAFirewallFilteringNetworkServicesSrcTcpPortOutputWithContext(ctx context.Context) ZIAFirewallFilteringNetworkServicesSrcTcpPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringNetworkServicesSrcTcpPortOutput)
}

// ZIAFirewallFilteringNetworkServicesSrcTcpPortArrayInput is an input type that accepts ZIAFirewallFilteringNetworkServicesSrcTcpPortArray and ZIAFirewallFilteringNetworkServicesSrcTcpPortArrayOutput values.
// You can construct a concrete instance of `ZIAFirewallFilteringNetworkServicesSrcTcpPortArrayInput` via:
//
//	ZIAFirewallFilteringNetworkServicesSrcTcpPortArray{ ZIAFirewallFilteringNetworkServicesSrcTcpPortArgs{...} }
type ZIAFirewallFilteringNetworkServicesSrcTcpPortArrayInput interface {
	pulumi.Input

	ToZIAFirewallFilteringNetworkServicesSrcTcpPortArrayOutput() ZIAFirewallFilteringNetworkServicesSrcTcpPortArrayOutput
	ToZIAFirewallFilteringNetworkServicesSrcTcpPortArrayOutputWithContext(context.Context) ZIAFirewallFilteringNetworkServicesSrcTcpPortArrayOutput
}

type ZIAFirewallFilteringNetworkServicesSrcTcpPortArray []ZIAFirewallFilteringNetworkServicesSrcTcpPortInput

func (ZIAFirewallFilteringNetworkServicesSrcTcpPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZIAFirewallFilteringNetworkServicesSrcTcpPort)(nil)).Elem()
}

func (i ZIAFirewallFilteringNetworkServicesSrcTcpPortArray) ToZIAFirewallFilteringNetworkServicesSrcTcpPortArrayOutput() ZIAFirewallFilteringNetworkServicesSrcTcpPortArrayOutput {
	return i.ToZIAFirewallFilteringNetworkServicesSrcTcpPortArrayOutputWithContext(context.Background())
}

func (i ZIAFirewallFilteringNetworkServicesSrcTcpPortArray) ToZIAFirewallFilteringNetworkServicesSrcTcpPortArrayOutputWithContext(ctx context.Context) ZIAFirewallFilteringNetworkServicesSrcTcpPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringNetworkServicesSrcTcpPortArrayOutput)
}

type ZIAFirewallFilteringNetworkServicesSrcTcpPortOutput struct{ *pulumi.OutputState }

func (ZIAFirewallFilteringNetworkServicesSrcTcpPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAFirewallFilteringNetworkServicesSrcTcpPort)(nil)).Elem()
}

func (o ZIAFirewallFilteringNetworkServicesSrcTcpPortOutput) ToZIAFirewallFilteringNetworkServicesSrcTcpPortOutput() ZIAFirewallFilteringNetworkServicesSrcTcpPortOutput {
	return o
}

func (o ZIAFirewallFilteringNetworkServicesSrcTcpPortOutput) ToZIAFirewallFilteringNetworkServicesSrcTcpPortOutputWithContext(ctx context.Context) ZIAFirewallFilteringNetworkServicesSrcTcpPortOutput {
	return o
}

func (o ZIAFirewallFilteringNetworkServicesSrcTcpPortOutput) End() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZIAFirewallFilteringNetworkServicesSrcTcpPort) *int { return v.End }).(pulumi.IntPtrOutput)
}

func (o ZIAFirewallFilteringNetworkServicesSrcTcpPortOutput) Start() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZIAFirewallFilteringNetworkServicesSrcTcpPort) *int { return v.Start }).(pulumi.IntPtrOutput)
}

type ZIAFirewallFilteringNetworkServicesSrcTcpPortArrayOutput struct{ *pulumi.OutputState }

func (ZIAFirewallFilteringNetworkServicesSrcTcpPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZIAFirewallFilteringNetworkServicesSrcTcpPort)(nil)).Elem()
}

func (o ZIAFirewallFilteringNetworkServicesSrcTcpPortArrayOutput) ToZIAFirewallFilteringNetworkServicesSrcTcpPortArrayOutput() ZIAFirewallFilteringNetworkServicesSrcTcpPortArrayOutput {
	return o
}

func (o ZIAFirewallFilteringNetworkServicesSrcTcpPortArrayOutput) ToZIAFirewallFilteringNetworkServicesSrcTcpPortArrayOutputWithContext(ctx context.Context) ZIAFirewallFilteringNetworkServicesSrcTcpPortArrayOutput {
	return o
}

func (o ZIAFirewallFilteringNetworkServicesSrcTcpPortArrayOutput) Index(i pulumi.IntInput) ZIAFirewallFilteringNetworkServicesSrcTcpPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZIAFirewallFilteringNetworkServicesSrcTcpPort {
		return vs[0].([]ZIAFirewallFilteringNetworkServicesSrcTcpPort)[vs[1].(int)]
	}).(ZIAFirewallFilteringNetworkServicesSrcTcpPortOutput)
}

type ZIAFirewallFilteringNetworkServicesSrcUdpPort struct {
	End   *int `pulumi:"end"`
	Start *int `pulumi:"start"`
}

// ZIAFirewallFilteringNetworkServicesSrcUdpPortInput is an input type that accepts ZIAFirewallFilteringNetworkServicesSrcUdpPortArgs and ZIAFirewallFilteringNetworkServicesSrcUdpPortOutput values.
// You can construct a concrete instance of `ZIAFirewallFilteringNetworkServicesSrcUdpPortInput` via:
//
//	ZIAFirewallFilteringNetworkServicesSrcUdpPortArgs{...}
type ZIAFirewallFilteringNetworkServicesSrcUdpPortInput interface {
	pulumi.Input

	ToZIAFirewallFilteringNetworkServicesSrcUdpPortOutput() ZIAFirewallFilteringNetworkServicesSrcUdpPortOutput
	ToZIAFirewallFilteringNetworkServicesSrcUdpPortOutputWithContext(context.Context) ZIAFirewallFilteringNetworkServicesSrcUdpPortOutput
}

type ZIAFirewallFilteringNetworkServicesSrcUdpPortArgs struct {
	End   pulumi.IntPtrInput `pulumi:"end"`
	Start pulumi.IntPtrInput `pulumi:"start"`
}

func (ZIAFirewallFilteringNetworkServicesSrcUdpPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAFirewallFilteringNetworkServicesSrcUdpPort)(nil)).Elem()
}

func (i ZIAFirewallFilteringNetworkServicesSrcUdpPortArgs) ToZIAFirewallFilteringNetworkServicesSrcUdpPortOutput() ZIAFirewallFilteringNetworkServicesSrcUdpPortOutput {
	return i.ToZIAFirewallFilteringNetworkServicesSrcUdpPortOutputWithContext(context.Background())
}

func (i ZIAFirewallFilteringNetworkServicesSrcUdpPortArgs) ToZIAFirewallFilteringNetworkServicesSrcUdpPortOutputWithContext(ctx context.Context) ZIAFirewallFilteringNetworkServicesSrcUdpPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringNetworkServicesSrcUdpPortOutput)
}

// ZIAFirewallFilteringNetworkServicesSrcUdpPortArrayInput is an input type that accepts ZIAFirewallFilteringNetworkServicesSrcUdpPortArray and ZIAFirewallFilteringNetworkServicesSrcUdpPortArrayOutput values.
// You can construct a concrete instance of `ZIAFirewallFilteringNetworkServicesSrcUdpPortArrayInput` via:
//
//	ZIAFirewallFilteringNetworkServicesSrcUdpPortArray{ ZIAFirewallFilteringNetworkServicesSrcUdpPortArgs{...} }
type ZIAFirewallFilteringNetworkServicesSrcUdpPortArrayInput interface {
	pulumi.Input

	ToZIAFirewallFilteringNetworkServicesSrcUdpPortArrayOutput() ZIAFirewallFilteringNetworkServicesSrcUdpPortArrayOutput
	ToZIAFirewallFilteringNetworkServicesSrcUdpPortArrayOutputWithContext(context.Context) ZIAFirewallFilteringNetworkServicesSrcUdpPortArrayOutput
}

type ZIAFirewallFilteringNetworkServicesSrcUdpPortArray []ZIAFirewallFilteringNetworkServicesSrcUdpPortInput

func (ZIAFirewallFilteringNetworkServicesSrcUdpPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZIAFirewallFilteringNetworkServicesSrcUdpPort)(nil)).Elem()
}

func (i ZIAFirewallFilteringNetworkServicesSrcUdpPortArray) ToZIAFirewallFilteringNetworkServicesSrcUdpPortArrayOutput() ZIAFirewallFilteringNetworkServicesSrcUdpPortArrayOutput {
	return i.ToZIAFirewallFilteringNetworkServicesSrcUdpPortArrayOutputWithContext(context.Background())
}

func (i ZIAFirewallFilteringNetworkServicesSrcUdpPortArray) ToZIAFirewallFilteringNetworkServicesSrcUdpPortArrayOutputWithContext(ctx context.Context) ZIAFirewallFilteringNetworkServicesSrcUdpPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringNetworkServicesSrcUdpPortArrayOutput)
}

type ZIAFirewallFilteringNetworkServicesSrcUdpPortOutput struct{ *pulumi.OutputState }

func (ZIAFirewallFilteringNetworkServicesSrcUdpPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAFirewallFilteringNetworkServicesSrcUdpPort)(nil)).Elem()
}

func (o ZIAFirewallFilteringNetworkServicesSrcUdpPortOutput) ToZIAFirewallFilteringNetworkServicesSrcUdpPortOutput() ZIAFirewallFilteringNetworkServicesSrcUdpPortOutput {
	return o
}

func (o ZIAFirewallFilteringNetworkServicesSrcUdpPortOutput) ToZIAFirewallFilteringNetworkServicesSrcUdpPortOutputWithContext(ctx context.Context) ZIAFirewallFilteringNetworkServicesSrcUdpPortOutput {
	return o
}

func (o ZIAFirewallFilteringNetworkServicesSrcUdpPortOutput) End() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZIAFirewallFilteringNetworkServicesSrcUdpPort) *int { return v.End }).(pulumi.IntPtrOutput)
}

func (o ZIAFirewallFilteringNetworkServicesSrcUdpPortOutput) Start() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZIAFirewallFilteringNetworkServicesSrcUdpPort) *int { return v.Start }).(pulumi.IntPtrOutput)
}

type ZIAFirewallFilteringNetworkServicesSrcUdpPortArrayOutput struct{ *pulumi.OutputState }

func (ZIAFirewallFilteringNetworkServicesSrcUdpPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZIAFirewallFilteringNetworkServicesSrcUdpPort)(nil)).Elem()
}

func (o ZIAFirewallFilteringNetworkServicesSrcUdpPortArrayOutput) ToZIAFirewallFilteringNetworkServicesSrcUdpPortArrayOutput() ZIAFirewallFilteringNetworkServicesSrcUdpPortArrayOutput {
	return o
}

func (o ZIAFirewallFilteringNetworkServicesSrcUdpPortArrayOutput) ToZIAFirewallFilteringNetworkServicesSrcUdpPortArrayOutputWithContext(ctx context.Context) ZIAFirewallFilteringNetworkServicesSrcUdpPortArrayOutput {
	return o
}

func (o ZIAFirewallFilteringNetworkServicesSrcUdpPortArrayOutput) Index(i pulumi.IntInput) ZIAFirewallFilteringNetworkServicesSrcUdpPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZIAFirewallFilteringNetworkServicesSrcUdpPort {
		return vs[0].([]ZIAFirewallFilteringNetworkServicesSrcUdpPort)[vs[1].(int)]
	}).(ZIAFirewallFilteringNetworkServicesSrcUdpPortOutput)
}

type ZIAFirewallFilteringRuleAppServiceGroups struct {
	// Identifier that uniquely identifies an entity
	Ids []int `pulumi:"ids"`
}

// ZIAFirewallFilteringRuleAppServiceGroupsInput is an input type that accepts ZIAFirewallFilteringRuleAppServiceGroupsArgs and ZIAFirewallFilteringRuleAppServiceGroupsOutput values.
// You can construct a concrete instance of `ZIAFirewallFilteringRuleAppServiceGroupsInput` via:
//
//	ZIAFirewallFilteringRuleAppServiceGroupsArgs{...}
type ZIAFirewallFilteringRuleAppServiceGroupsInput interface {
	pulumi.Input

	ToZIAFirewallFilteringRuleAppServiceGroupsOutput() ZIAFirewallFilteringRuleAppServiceGroupsOutput
	ToZIAFirewallFilteringRuleAppServiceGroupsOutputWithContext(context.Context) ZIAFirewallFilteringRuleAppServiceGroupsOutput
}

type ZIAFirewallFilteringRuleAppServiceGroupsArgs struct {
	// Identifier that uniquely identifies an entity
	Ids pulumi.IntArrayInput `pulumi:"ids"`
}

func (ZIAFirewallFilteringRuleAppServiceGroupsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAFirewallFilteringRuleAppServiceGroups)(nil)).Elem()
}

func (i ZIAFirewallFilteringRuleAppServiceGroupsArgs) ToZIAFirewallFilteringRuleAppServiceGroupsOutput() ZIAFirewallFilteringRuleAppServiceGroupsOutput {
	return i.ToZIAFirewallFilteringRuleAppServiceGroupsOutputWithContext(context.Background())
}

func (i ZIAFirewallFilteringRuleAppServiceGroupsArgs) ToZIAFirewallFilteringRuleAppServiceGroupsOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleAppServiceGroupsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringRuleAppServiceGroupsOutput)
}

func (i ZIAFirewallFilteringRuleAppServiceGroupsArgs) ToZIAFirewallFilteringRuleAppServiceGroupsPtrOutput() ZIAFirewallFilteringRuleAppServiceGroupsPtrOutput {
	return i.ToZIAFirewallFilteringRuleAppServiceGroupsPtrOutputWithContext(context.Background())
}

func (i ZIAFirewallFilteringRuleAppServiceGroupsArgs) ToZIAFirewallFilteringRuleAppServiceGroupsPtrOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleAppServiceGroupsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringRuleAppServiceGroupsOutput).ToZIAFirewallFilteringRuleAppServiceGroupsPtrOutputWithContext(ctx)
}

// ZIAFirewallFilteringRuleAppServiceGroupsPtrInput is an input type that accepts ZIAFirewallFilteringRuleAppServiceGroupsArgs, ZIAFirewallFilteringRuleAppServiceGroupsPtr and ZIAFirewallFilteringRuleAppServiceGroupsPtrOutput values.
// You can construct a concrete instance of `ZIAFirewallFilteringRuleAppServiceGroupsPtrInput` via:
//
//	        ZIAFirewallFilteringRuleAppServiceGroupsArgs{...}
//
//	or:
//
//	        nil
type ZIAFirewallFilteringRuleAppServiceGroupsPtrInput interface {
	pulumi.Input

	ToZIAFirewallFilteringRuleAppServiceGroupsPtrOutput() ZIAFirewallFilteringRuleAppServiceGroupsPtrOutput
	ToZIAFirewallFilteringRuleAppServiceGroupsPtrOutputWithContext(context.Context) ZIAFirewallFilteringRuleAppServiceGroupsPtrOutput
}

type ziafirewallFilteringRuleAppServiceGroupsPtrType ZIAFirewallFilteringRuleAppServiceGroupsArgs

func ZIAFirewallFilteringRuleAppServiceGroupsPtr(v *ZIAFirewallFilteringRuleAppServiceGroupsArgs) ZIAFirewallFilteringRuleAppServiceGroupsPtrInput {
	return (*ziafirewallFilteringRuleAppServiceGroupsPtrType)(v)
}

func (*ziafirewallFilteringRuleAppServiceGroupsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAFirewallFilteringRuleAppServiceGroups)(nil)).Elem()
}

func (i *ziafirewallFilteringRuleAppServiceGroupsPtrType) ToZIAFirewallFilteringRuleAppServiceGroupsPtrOutput() ZIAFirewallFilteringRuleAppServiceGroupsPtrOutput {
	return i.ToZIAFirewallFilteringRuleAppServiceGroupsPtrOutputWithContext(context.Background())
}

func (i *ziafirewallFilteringRuleAppServiceGroupsPtrType) ToZIAFirewallFilteringRuleAppServiceGroupsPtrOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleAppServiceGroupsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringRuleAppServiceGroupsPtrOutput)
}

type ZIAFirewallFilteringRuleAppServiceGroupsOutput struct{ *pulumi.OutputState }

func (ZIAFirewallFilteringRuleAppServiceGroupsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAFirewallFilteringRuleAppServiceGroups)(nil)).Elem()
}

func (o ZIAFirewallFilteringRuleAppServiceGroupsOutput) ToZIAFirewallFilteringRuleAppServiceGroupsOutput() ZIAFirewallFilteringRuleAppServiceGroupsOutput {
	return o
}

func (o ZIAFirewallFilteringRuleAppServiceGroupsOutput) ToZIAFirewallFilteringRuleAppServiceGroupsOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleAppServiceGroupsOutput {
	return o
}

func (o ZIAFirewallFilteringRuleAppServiceGroupsOutput) ToZIAFirewallFilteringRuleAppServiceGroupsPtrOutput() ZIAFirewallFilteringRuleAppServiceGroupsPtrOutput {
	return o.ToZIAFirewallFilteringRuleAppServiceGroupsPtrOutputWithContext(context.Background())
}

func (o ZIAFirewallFilteringRuleAppServiceGroupsOutput) ToZIAFirewallFilteringRuleAppServiceGroupsPtrOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleAppServiceGroupsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZIAFirewallFilteringRuleAppServiceGroups) *ZIAFirewallFilteringRuleAppServiceGroups {
		return &v
	}).(ZIAFirewallFilteringRuleAppServiceGroupsPtrOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIAFirewallFilteringRuleAppServiceGroupsOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ZIAFirewallFilteringRuleAppServiceGroups) []int { return v.Ids }).(pulumi.IntArrayOutput)
}

type ZIAFirewallFilteringRuleAppServiceGroupsPtrOutput struct{ *pulumi.OutputState }

func (ZIAFirewallFilteringRuleAppServiceGroupsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAFirewallFilteringRuleAppServiceGroups)(nil)).Elem()
}

func (o ZIAFirewallFilteringRuleAppServiceGroupsPtrOutput) ToZIAFirewallFilteringRuleAppServiceGroupsPtrOutput() ZIAFirewallFilteringRuleAppServiceGroupsPtrOutput {
	return o
}

func (o ZIAFirewallFilteringRuleAppServiceGroupsPtrOutput) ToZIAFirewallFilteringRuleAppServiceGroupsPtrOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleAppServiceGroupsPtrOutput {
	return o
}

func (o ZIAFirewallFilteringRuleAppServiceGroupsPtrOutput) Elem() ZIAFirewallFilteringRuleAppServiceGroupsOutput {
	return o.ApplyT(func(v *ZIAFirewallFilteringRuleAppServiceGroups) ZIAFirewallFilteringRuleAppServiceGroups {
		if v != nil {
			return *v
		}
		var ret ZIAFirewallFilteringRuleAppServiceGroups
		return ret
	}).(ZIAFirewallFilteringRuleAppServiceGroupsOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIAFirewallFilteringRuleAppServiceGroupsPtrOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *ZIAFirewallFilteringRuleAppServiceGroups) []int {
		if v == nil {
			return nil
		}
		return v.Ids
	}).(pulumi.IntArrayOutput)
}

type ZIAFirewallFilteringRuleAppServices struct {
	// Identifier that uniquely identifies an entity
	Ids []int `pulumi:"ids"`
}

// ZIAFirewallFilteringRuleAppServicesInput is an input type that accepts ZIAFirewallFilteringRuleAppServicesArgs and ZIAFirewallFilteringRuleAppServicesOutput values.
// You can construct a concrete instance of `ZIAFirewallFilteringRuleAppServicesInput` via:
//
//	ZIAFirewallFilteringRuleAppServicesArgs{...}
type ZIAFirewallFilteringRuleAppServicesInput interface {
	pulumi.Input

	ToZIAFirewallFilteringRuleAppServicesOutput() ZIAFirewallFilteringRuleAppServicesOutput
	ToZIAFirewallFilteringRuleAppServicesOutputWithContext(context.Context) ZIAFirewallFilteringRuleAppServicesOutput
}

type ZIAFirewallFilteringRuleAppServicesArgs struct {
	// Identifier that uniquely identifies an entity
	Ids pulumi.IntArrayInput `pulumi:"ids"`
}

func (ZIAFirewallFilteringRuleAppServicesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAFirewallFilteringRuleAppServices)(nil)).Elem()
}

func (i ZIAFirewallFilteringRuleAppServicesArgs) ToZIAFirewallFilteringRuleAppServicesOutput() ZIAFirewallFilteringRuleAppServicesOutput {
	return i.ToZIAFirewallFilteringRuleAppServicesOutputWithContext(context.Background())
}

func (i ZIAFirewallFilteringRuleAppServicesArgs) ToZIAFirewallFilteringRuleAppServicesOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleAppServicesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringRuleAppServicesOutput)
}

func (i ZIAFirewallFilteringRuleAppServicesArgs) ToZIAFirewallFilteringRuleAppServicesPtrOutput() ZIAFirewallFilteringRuleAppServicesPtrOutput {
	return i.ToZIAFirewallFilteringRuleAppServicesPtrOutputWithContext(context.Background())
}

func (i ZIAFirewallFilteringRuleAppServicesArgs) ToZIAFirewallFilteringRuleAppServicesPtrOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleAppServicesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringRuleAppServicesOutput).ToZIAFirewallFilteringRuleAppServicesPtrOutputWithContext(ctx)
}

// ZIAFirewallFilteringRuleAppServicesPtrInput is an input type that accepts ZIAFirewallFilteringRuleAppServicesArgs, ZIAFirewallFilteringRuleAppServicesPtr and ZIAFirewallFilteringRuleAppServicesPtrOutput values.
// You can construct a concrete instance of `ZIAFirewallFilteringRuleAppServicesPtrInput` via:
//
//	        ZIAFirewallFilteringRuleAppServicesArgs{...}
//
//	or:
//
//	        nil
type ZIAFirewallFilteringRuleAppServicesPtrInput interface {
	pulumi.Input

	ToZIAFirewallFilteringRuleAppServicesPtrOutput() ZIAFirewallFilteringRuleAppServicesPtrOutput
	ToZIAFirewallFilteringRuleAppServicesPtrOutputWithContext(context.Context) ZIAFirewallFilteringRuleAppServicesPtrOutput
}

type ziafirewallFilteringRuleAppServicesPtrType ZIAFirewallFilteringRuleAppServicesArgs

func ZIAFirewallFilteringRuleAppServicesPtr(v *ZIAFirewallFilteringRuleAppServicesArgs) ZIAFirewallFilteringRuleAppServicesPtrInput {
	return (*ziafirewallFilteringRuleAppServicesPtrType)(v)
}

func (*ziafirewallFilteringRuleAppServicesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAFirewallFilteringRuleAppServices)(nil)).Elem()
}

func (i *ziafirewallFilteringRuleAppServicesPtrType) ToZIAFirewallFilteringRuleAppServicesPtrOutput() ZIAFirewallFilteringRuleAppServicesPtrOutput {
	return i.ToZIAFirewallFilteringRuleAppServicesPtrOutputWithContext(context.Background())
}

func (i *ziafirewallFilteringRuleAppServicesPtrType) ToZIAFirewallFilteringRuleAppServicesPtrOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleAppServicesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringRuleAppServicesPtrOutput)
}

type ZIAFirewallFilteringRuleAppServicesOutput struct{ *pulumi.OutputState }

func (ZIAFirewallFilteringRuleAppServicesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAFirewallFilteringRuleAppServices)(nil)).Elem()
}

func (o ZIAFirewallFilteringRuleAppServicesOutput) ToZIAFirewallFilteringRuleAppServicesOutput() ZIAFirewallFilteringRuleAppServicesOutput {
	return o
}

func (o ZIAFirewallFilteringRuleAppServicesOutput) ToZIAFirewallFilteringRuleAppServicesOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleAppServicesOutput {
	return o
}

func (o ZIAFirewallFilteringRuleAppServicesOutput) ToZIAFirewallFilteringRuleAppServicesPtrOutput() ZIAFirewallFilteringRuleAppServicesPtrOutput {
	return o.ToZIAFirewallFilteringRuleAppServicesPtrOutputWithContext(context.Background())
}

func (o ZIAFirewallFilteringRuleAppServicesOutput) ToZIAFirewallFilteringRuleAppServicesPtrOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleAppServicesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZIAFirewallFilteringRuleAppServices) *ZIAFirewallFilteringRuleAppServices {
		return &v
	}).(ZIAFirewallFilteringRuleAppServicesPtrOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIAFirewallFilteringRuleAppServicesOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ZIAFirewallFilteringRuleAppServices) []int { return v.Ids }).(pulumi.IntArrayOutput)
}

type ZIAFirewallFilteringRuleAppServicesPtrOutput struct{ *pulumi.OutputState }

func (ZIAFirewallFilteringRuleAppServicesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAFirewallFilteringRuleAppServices)(nil)).Elem()
}

func (o ZIAFirewallFilteringRuleAppServicesPtrOutput) ToZIAFirewallFilteringRuleAppServicesPtrOutput() ZIAFirewallFilteringRuleAppServicesPtrOutput {
	return o
}

func (o ZIAFirewallFilteringRuleAppServicesPtrOutput) ToZIAFirewallFilteringRuleAppServicesPtrOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleAppServicesPtrOutput {
	return o
}

func (o ZIAFirewallFilteringRuleAppServicesPtrOutput) Elem() ZIAFirewallFilteringRuleAppServicesOutput {
	return o.ApplyT(func(v *ZIAFirewallFilteringRuleAppServices) ZIAFirewallFilteringRuleAppServices {
		if v != nil {
			return *v
		}
		var ret ZIAFirewallFilteringRuleAppServices
		return ret
	}).(ZIAFirewallFilteringRuleAppServicesOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIAFirewallFilteringRuleAppServicesPtrOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *ZIAFirewallFilteringRuleAppServices) []int {
		if v == nil {
			return nil
		}
		return v.Ids
	}).(pulumi.IntArrayOutput)
}

type ZIAFirewallFilteringRuleDepartments struct {
	// Identifier that uniquely identifies an entity
	Ids []int `pulumi:"ids"`
}

// ZIAFirewallFilteringRuleDepartmentsInput is an input type that accepts ZIAFirewallFilteringRuleDepartmentsArgs and ZIAFirewallFilteringRuleDepartmentsOutput values.
// You can construct a concrete instance of `ZIAFirewallFilteringRuleDepartmentsInput` via:
//
//	ZIAFirewallFilteringRuleDepartmentsArgs{...}
type ZIAFirewallFilteringRuleDepartmentsInput interface {
	pulumi.Input

	ToZIAFirewallFilteringRuleDepartmentsOutput() ZIAFirewallFilteringRuleDepartmentsOutput
	ToZIAFirewallFilteringRuleDepartmentsOutputWithContext(context.Context) ZIAFirewallFilteringRuleDepartmentsOutput
}

type ZIAFirewallFilteringRuleDepartmentsArgs struct {
	// Identifier that uniquely identifies an entity
	Ids pulumi.IntArrayInput `pulumi:"ids"`
}

func (ZIAFirewallFilteringRuleDepartmentsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAFirewallFilteringRuleDepartments)(nil)).Elem()
}

func (i ZIAFirewallFilteringRuleDepartmentsArgs) ToZIAFirewallFilteringRuleDepartmentsOutput() ZIAFirewallFilteringRuleDepartmentsOutput {
	return i.ToZIAFirewallFilteringRuleDepartmentsOutputWithContext(context.Background())
}

func (i ZIAFirewallFilteringRuleDepartmentsArgs) ToZIAFirewallFilteringRuleDepartmentsOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleDepartmentsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringRuleDepartmentsOutput)
}

func (i ZIAFirewallFilteringRuleDepartmentsArgs) ToZIAFirewallFilteringRuleDepartmentsPtrOutput() ZIAFirewallFilteringRuleDepartmentsPtrOutput {
	return i.ToZIAFirewallFilteringRuleDepartmentsPtrOutputWithContext(context.Background())
}

func (i ZIAFirewallFilteringRuleDepartmentsArgs) ToZIAFirewallFilteringRuleDepartmentsPtrOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleDepartmentsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringRuleDepartmentsOutput).ToZIAFirewallFilteringRuleDepartmentsPtrOutputWithContext(ctx)
}

// ZIAFirewallFilteringRuleDepartmentsPtrInput is an input type that accepts ZIAFirewallFilteringRuleDepartmentsArgs, ZIAFirewallFilteringRuleDepartmentsPtr and ZIAFirewallFilteringRuleDepartmentsPtrOutput values.
// You can construct a concrete instance of `ZIAFirewallFilteringRuleDepartmentsPtrInput` via:
//
//	        ZIAFirewallFilteringRuleDepartmentsArgs{...}
//
//	or:
//
//	        nil
type ZIAFirewallFilteringRuleDepartmentsPtrInput interface {
	pulumi.Input

	ToZIAFirewallFilteringRuleDepartmentsPtrOutput() ZIAFirewallFilteringRuleDepartmentsPtrOutput
	ToZIAFirewallFilteringRuleDepartmentsPtrOutputWithContext(context.Context) ZIAFirewallFilteringRuleDepartmentsPtrOutput
}

type ziafirewallFilteringRuleDepartmentsPtrType ZIAFirewallFilteringRuleDepartmentsArgs

func ZIAFirewallFilteringRuleDepartmentsPtr(v *ZIAFirewallFilteringRuleDepartmentsArgs) ZIAFirewallFilteringRuleDepartmentsPtrInput {
	return (*ziafirewallFilteringRuleDepartmentsPtrType)(v)
}

func (*ziafirewallFilteringRuleDepartmentsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAFirewallFilteringRuleDepartments)(nil)).Elem()
}

func (i *ziafirewallFilteringRuleDepartmentsPtrType) ToZIAFirewallFilteringRuleDepartmentsPtrOutput() ZIAFirewallFilteringRuleDepartmentsPtrOutput {
	return i.ToZIAFirewallFilteringRuleDepartmentsPtrOutputWithContext(context.Background())
}

func (i *ziafirewallFilteringRuleDepartmentsPtrType) ToZIAFirewallFilteringRuleDepartmentsPtrOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleDepartmentsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringRuleDepartmentsPtrOutput)
}

type ZIAFirewallFilteringRuleDepartmentsOutput struct{ *pulumi.OutputState }

func (ZIAFirewallFilteringRuleDepartmentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAFirewallFilteringRuleDepartments)(nil)).Elem()
}

func (o ZIAFirewallFilteringRuleDepartmentsOutput) ToZIAFirewallFilteringRuleDepartmentsOutput() ZIAFirewallFilteringRuleDepartmentsOutput {
	return o
}

func (o ZIAFirewallFilteringRuleDepartmentsOutput) ToZIAFirewallFilteringRuleDepartmentsOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleDepartmentsOutput {
	return o
}

func (o ZIAFirewallFilteringRuleDepartmentsOutput) ToZIAFirewallFilteringRuleDepartmentsPtrOutput() ZIAFirewallFilteringRuleDepartmentsPtrOutput {
	return o.ToZIAFirewallFilteringRuleDepartmentsPtrOutputWithContext(context.Background())
}

func (o ZIAFirewallFilteringRuleDepartmentsOutput) ToZIAFirewallFilteringRuleDepartmentsPtrOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleDepartmentsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZIAFirewallFilteringRuleDepartments) *ZIAFirewallFilteringRuleDepartments {
		return &v
	}).(ZIAFirewallFilteringRuleDepartmentsPtrOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIAFirewallFilteringRuleDepartmentsOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ZIAFirewallFilteringRuleDepartments) []int { return v.Ids }).(pulumi.IntArrayOutput)
}

type ZIAFirewallFilteringRuleDepartmentsPtrOutput struct{ *pulumi.OutputState }

func (ZIAFirewallFilteringRuleDepartmentsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAFirewallFilteringRuleDepartments)(nil)).Elem()
}

func (o ZIAFirewallFilteringRuleDepartmentsPtrOutput) ToZIAFirewallFilteringRuleDepartmentsPtrOutput() ZIAFirewallFilteringRuleDepartmentsPtrOutput {
	return o
}

func (o ZIAFirewallFilteringRuleDepartmentsPtrOutput) ToZIAFirewallFilteringRuleDepartmentsPtrOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleDepartmentsPtrOutput {
	return o
}

func (o ZIAFirewallFilteringRuleDepartmentsPtrOutput) Elem() ZIAFirewallFilteringRuleDepartmentsOutput {
	return o.ApplyT(func(v *ZIAFirewallFilteringRuleDepartments) ZIAFirewallFilteringRuleDepartments {
		if v != nil {
			return *v
		}
		var ret ZIAFirewallFilteringRuleDepartments
		return ret
	}).(ZIAFirewallFilteringRuleDepartmentsOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIAFirewallFilteringRuleDepartmentsPtrOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *ZIAFirewallFilteringRuleDepartments) []int {
		if v == nil {
			return nil
		}
		return v.Ids
	}).(pulumi.IntArrayOutput)
}

type ZIAFirewallFilteringRuleDestIpGroups struct {
	// Identifier that uniquely identifies an entity
	Ids []int `pulumi:"ids"`
}

// ZIAFirewallFilteringRuleDestIpGroupsInput is an input type that accepts ZIAFirewallFilteringRuleDestIpGroupsArgs and ZIAFirewallFilteringRuleDestIpGroupsOutput values.
// You can construct a concrete instance of `ZIAFirewallFilteringRuleDestIpGroupsInput` via:
//
//	ZIAFirewallFilteringRuleDestIpGroupsArgs{...}
type ZIAFirewallFilteringRuleDestIpGroupsInput interface {
	pulumi.Input

	ToZIAFirewallFilteringRuleDestIpGroupsOutput() ZIAFirewallFilteringRuleDestIpGroupsOutput
	ToZIAFirewallFilteringRuleDestIpGroupsOutputWithContext(context.Context) ZIAFirewallFilteringRuleDestIpGroupsOutput
}

type ZIAFirewallFilteringRuleDestIpGroupsArgs struct {
	// Identifier that uniquely identifies an entity
	Ids pulumi.IntArrayInput `pulumi:"ids"`
}

func (ZIAFirewallFilteringRuleDestIpGroupsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAFirewallFilteringRuleDestIpGroups)(nil)).Elem()
}

func (i ZIAFirewallFilteringRuleDestIpGroupsArgs) ToZIAFirewallFilteringRuleDestIpGroupsOutput() ZIAFirewallFilteringRuleDestIpGroupsOutput {
	return i.ToZIAFirewallFilteringRuleDestIpGroupsOutputWithContext(context.Background())
}

func (i ZIAFirewallFilteringRuleDestIpGroupsArgs) ToZIAFirewallFilteringRuleDestIpGroupsOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleDestIpGroupsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringRuleDestIpGroupsOutput)
}

func (i ZIAFirewallFilteringRuleDestIpGroupsArgs) ToZIAFirewallFilteringRuleDestIpGroupsPtrOutput() ZIAFirewallFilteringRuleDestIpGroupsPtrOutput {
	return i.ToZIAFirewallFilteringRuleDestIpGroupsPtrOutputWithContext(context.Background())
}

func (i ZIAFirewallFilteringRuleDestIpGroupsArgs) ToZIAFirewallFilteringRuleDestIpGroupsPtrOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleDestIpGroupsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringRuleDestIpGroupsOutput).ToZIAFirewallFilteringRuleDestIpGroupsPtrOutputWithContext(ctx)
}

// ZIAFirewallFilteringRuleDestIpGroupsPtrInput is an input type that accepts ZIAFirewallFilteringRuleDestIpGroupsArgs, ZIAFirewallFilteringRuleDestIpGroupsPtr and ZIAFirewallFilteringRuleDestIpGroupsPtrOutput values.
// You can construct a concrete instance of `ZIAFirewallFilteringRuleDestIpGroupsPtrInput` via:
//
//	        ZIAFirewallFilteringRuleDestIpGroupsArgs{...}
//
//	or:
//
//	        nil
type ZIAFirewallFilteringRuleDestIpGroupsPtrInput interface {
	pulumi.Input

	ToZIAFirewallFilteringRuleDestIpGroupsPtrOutput() ZIAFirewallFilteringRuleDestIpGroupsPtrOutput
	ToZIAFirewallFilteringRuleDestIpGroupsPtrOutputWithContext(context.Context) ZIAFirewallFilteringRuleDestIpGroupsPtrOutput
}

type ziafirewallFilteringRuleDestIpGroupsPtrType ZIAFirewallFilteringRuleDestIpGroupsArgs

func ZIAFirewallFilteringRuleDestIpGroupsPtr(v *ZIAFirewallFilteringRuleDestIpGroupsArgs) ZIAFirewallFilteringRuleDestIpGroupsPtrInput {
	return (*ziafirewallFilteringRuleDestIpGroupsPtrType)(v)
}

func (*ziafirewallFilteringRuleDestIpGroupsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAFirewallFilteringRuleDestIpGroups)(nil)).Elem()
}

func (i *ziafirewallFilteringRuleDestIpGroupsPtrType) ToZIAFirewallFilteringRuleDestIpGroupsPtrOutput() ZIAFirewallFilteringRuleDestIpGroupsPtrOutput {
	return i.ToZIAFirewallFilteringRuleDestIpGroupsPtrOutputWithContext(context.Background())
}

func (i *ziafirewallFilteringRuleDestIpGroupsPtrType) ToZIAFirewallFilteringRuleDestIpGroupsPtrOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleDestIpGroupsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringRuleDestIpGroupsPtrOutput)
}

type ZIAFirewallFilteringRuleDestIpGroupsOutput struct{ *pulumi.OutputState }

func (ZIAFirewallFilteringRuleDestIpGroupsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAFirewallFilteringRuleDestIpGroups)(nil)).Elem()
}

func (o ZIAFirewallFilteringRuleDestIpGroupsOutput) ToZIAFirewallFilteringRuleDestIpGroupsOutput() ZIAFirewallFilteringRuleDestIpGroupsOutput {
	return o
}

func (o ZIAFirewallFilteringRuleDestIpGroupsOutput) ToZIAFirewallFilteringRuleDestIpGroupsOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleDestIpGroupsOutput {
	return o
}

func (o ZIAFirewallFilteringRuleDestIpGroupsOutput) ToZIAFirewallFilteringRuleDestIpGroupsPtrOutput() ZIAFirewallFilteringRuleDestIpGroupsPtrOutput {
	return o.ToZIAFirewallFilteringRuleDestIpGroupsPtrOutputWithContext(context.Background())
}

func (o ZIAFirewallFilteringRuleDestIpGroupsOutput) ToZIAFirewallFilteringRuleDestIpGroupsPtrOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleDestIpGroupsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZIAFirewallFilteringRuleDestIpGroups) *ZIAFirewallFilteringRuleDestIpGroups {
		return &v
	}).(ZIAFirewallFilteringRuleDestIpGroupsPtrOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIAFirewallFilteringRuleDestIpGroupsOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ZIAFirewallFilteringRuleDestIpGroups) []int { return v.Ids }).(pulumi.IntArrayOutput)
}

type ZIAFirewallFilteringRuleDestIpGroupsPtrOutput struct{ *pulumi.OutputState }

func (ZIAFirewallFilteringRuleDestIpGroupsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAFirewallFilteringRuleDestIpGroups)(nil)).Elem()
}

func (o ZIAFirewallFilteringRuleDestIpGroupsPtrOutput) ToZIAFirewallFilteringRuleDestIpGroupsPtrOutput() ZIAFirewallFilteringRuleDestIpGroupsPtrOutput {
	return o
}

func (o ZIAFirewallFilteringRuleDestIpGroupsPtrOutput) ToZIAFirewallFilteringRuleDestIpGroupsPtrOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleDestIpGroupsPtrOutput {
	return o
}

func (o ZIAFirewallFilteringRuleDestIpGroupsPtrOutput) Elem() ZIAFirewallFilteringRuleDestIpGroupsOutput {
	return o.ApplyT(func(v *ZIAFirewallFilteringRuleDestIpGroups) ZIAFirewallFilteringRuleDestIpGroups {
		if v != nil {
			return *v
		}
		var ret ZIAFirewallFilteringRuleDestIpGroups
		return ret
	}).(ZIAFirewallFilteringRuleDestIpGroupsOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIAFirewallFilteringRuleDestIpGroupsPtrOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *ZIAFirewallFilteringRuleDestIpGroups) []int {
		if v == nil {
			return nil
		}
		return v.Ids
	}).(pulumi.IntArrayOutput)
}

type ZIAFirewallFilteringRuleGroups struct {
	// Identifier that uniquely identifies an entity
	Ids []int `pulumi:"ids"`
}

// ZIAFirewallFilteringRuleGroupsInput is an input type that accepts ZIAFirewallFilteringRuleGroupsArgs and ZIAFirewallFilteringRuleGroupsOutput values.
// You can construct a concrete instance of `ZIAFirewallFilteringRuleGroupsInput` via:
//
//	ZIAFirewallFilteringRuleGroupsArgs{...}
type ZIAFirewallFilteringRuleGroupsInput interface {
	pulumi.Input

	ToZIAFirewallFilteringRuleGroupsOutput() ZIAFirewallFilteringRuleGroupsOutput
	ToZIAFirewallFilteringRuleGroupsOutputWithContext(context.Context) ZIAFirewallFilteringRuleGroupsOutput
}

type ZIAFirewallFilteringRuleGroupsArgs struct {
	// Identifier that uniquely identifies an entity
	Ids pulumi.IntArrayInput `pulumi:"ids"`
}

func (ZIAFirewallFilteringRuleGroupsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAFirewallFilteringRuleGroups)(nil)).Elem()
}

func (i ZIAFirewallFilteringRuleGroupsArgs) ToZIAFirewallFilteringRuleGroupsOutput() ZIAFirewallFilteringRuleGroupsOutput {
	return i.ToZIAFirewallFilteringRuleGroupsOutputWithContext(context.Background())
}

func (i ZIAFirewallFilteringRuleGroupsArgs) ToZIAFirewallFilteringRuleGroupsOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleGroupsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringRuleGroupsOutput)
}

func (i ZIAFirewallFilteringRuleGroupsArgs) ToZIAFirewallFilteringRuleGroupsPtrOutput() ZIAFirewallFilteringRuleGroupsPtrOutput {
	return i.ToZIAFirewallFilteringRuleGroupsPtrOutputWithContext(context.Background())
}

func (i ZIAFirewallFilteringRuleGroupsArgs) ToZIAFirewallFilteringRuleGroupsPtrOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleGroupsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringRuleGroupsOutput).ToZIAFirewallFilteringRuleGroupsPtrOutputWithContext(ctx)
}

// ZIAFirewallFilteringRuleGroupsPtrInput is an input type that accepts ZIAFirewallFilteringRuleGroupsArgs, ZIAFirewallFilteringRuleGroupsPtr and ZIAFirewallFilteringRuleGroupsPtrOutput values.
// You can construct a concrete instance of `ZIAFirewallFilteringRuleGroupsPtrInput` via:
//
//	        ZIAFirewallFilteringRuleGroupsArgs{...}
//
//	or:
//
//	        nil
type ZIAFirewallFilteringRuleGroupsPtrInput interface {
	pulumi.Input

	ToZIAFirewallFilteringRuleGroupsPtrOutput() ZIAFirewallFilteringRuleGroupsPtrOutput
	ToZIAFirewallFilteringRuleGroupsPtrOutputWithContext(context.Context) ZIAFirewallFilteringRuleGroupsPtrOutput
}

type ziafirewallFilteringRuleGroupsPtrType ZIAFirewallFilteringRuleGroupsArgs

func ZIAFirewallFilteringRuleGroupsPtr(v *ZIAFirewallFilteringRuleGroupsArgs) ZIAFirewallFilteringRuleGroupsPtrInput {
	return (*ziafirewallFilteringRuleGroupsPtrType)(v)
}

func (*ziafirewallFilteringRuleGroupsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAFirewallFilteringRuleGroups)(nil)).Elem()
}

func (i *ziafirewallFilteringRuleGroupsPtrType) ToZIAFirewallFilteringRuleGroupsPtrOutput() ZIAFirewallFilteringRuleGroupsPtrOutput {
	return i.ToZIAFirewallFilteringRuleGroupsPtrOutputWithContext(context.Background())
}

func (i *ziafirewallFilteringRuleGroupsPtrType) ToZIAFirewallFilteringRuleGroupsPtrOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleGroupsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringRuleGroupsPtrOutput)
}

type ZIAFirewallFilteringRuleGroupsOutput struct{ *pulumi.OutputState }

func (ZIAFirewallFilteringRuleGroupsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAFirewallFilteringRuleGroups)(nil)).Elem()
}

func (o ZIAFirewallFilteringRuleGroupsOutput) ToZIAFirewallFilteringRuleGroupsOutput() ZIAFirewallFilteringRuleGroupsOutput {
	return o
}

func (o ZIAFirewallFilteringRuleGroupsOutput) ToZIAFirewallFilteringRuleGroupsOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleGroupsOutput {
	return o
}

func (o ZIAFirewallFilteringRuleGroupsOutput) ToZIAFirewallFilteringRuleGroupsPtrOutput() ZIAFirewallFilteringRuleGroupsPtrOutput {
	return o.ToZIAFirewallFilteringRuleGroupsPtrOutputWithContext(context.Background())
}

func (o ZIAFirewallFilteringRuleGroupsOutput) ToZIAFirewallFilteringRuleGroupsPtrOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleGroupsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZIAFirewallFilteringRuleGroups) *ZIAFirewallFilteringRuleGroups {
		return &v
	}).(ZIAFirewallFilteringRuleGroupsPtrOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIAFirewallFilteringRuleGroupsOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ZIAFirewallFilteringRuleGroups) []int { return v.Ids }).(pulumi.IntArrayOutput)
}

type ZIAFirewallFilteringRuleGroupsPtrOutput struct{ *pulumi.OutputState }

func (ZIAFirewallFilteringRuleGroupsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAFirewallFilteringRuleGroups)(nil)).Elem()
}

func (o ZIAFirewallFilteringRuleGroupsPtrOutput) ToZIAFirewallFilteringRuleGroupsPtrOutput() ZIAFirewallFilteringRuleGroupsPtrOutput {
	return o
}

func (o ZIAFirewallFilteringRuleGroupsPtrOutput) ToZIAFirewallFilteringRuleGroupsPtrOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleGroupsPtrOutput {
	return o
}

func (o ZIAFirewallFilteringRuleGroupsPtrOutput) Elem() ZIAFirewallFilteringRuleGroupsOutput {
	return o.ApplyT(func(v *ZIAFirewallFilteringRuleGroups) ZIAFirewallFilteringRuleGroups {
		if v != nil {
			return *v
		}
		var ret ZIAFirewallFilteringRuleGroups
		return ret
	}).(ZIAFirewallFilteringRuleGroupsOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIAFirewallFilteringRuleGroupsPtrOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *ZIAFirewallFilteringRuleGroups) []int {
		if v == nil {
			return nil
		}
		return v.Ids
	}).(pulumi.IntArrayOutput)
}

type ZIAFirewallFilteringRuleLabels struct {
	// Identifier that uniquely identifies an entity
	Ids []int `pulumi:"ids"`
}

// ZIAFirewallFilteringRuleLabelsInput is an input type that accepts ZIAFirewallFilteringRuleLabelsArgs and ZIAFirewallFilteringRuleLabelsOutput values.
// You can construct a concrete instance of `ZIAFirewallFilteringRuleLabelsInput` via:
//
//	ZIAFirewallFilteringRuleLabelsArgs{...}
type ZIAFirewallFilteringRuleLabelsInput interface {
	pulumi.Input

	ToZIAFirewallFilteringRuleLabelsOutput() ZIAFirewallFilteringRuleLabelsOutput
	ToZIAFirewallFilteringRuleLabelsOutputWithContext(context.Context) ZIAFirewallFilteringRuleLabelsOutput
}

type ZIAFirewallFilteringRuleLabelsArgs struct {
	// Identifier that uniquely identifies an entity
	Ids pulumi.IntArrayInput `pulumi:"ids"`
}

func (ZIAFirewallFilteringRuleLabelsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAFirewallFilteringRuleLabels)(nil)).Elem()
}

func (i ZIAFirewallFilteringRuleLabelsArgs) ToZIAFirewallFilteringRuleLabelsOutput() ZIAFirewallFilteringRuleLabelsOutput {
	return i.ToZIAFirewallFilteringRuleLabelsOutputWithContext(context.Background())
}

func (i ZIAFirewallFilteringRuleLabelsArgs) ToZIAFirewallFilteringRuleLabelsOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleLabelsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringRuleLabelsOutput)
}

func (i ZIAFirewallFilteringRuleLabelsArgs) ToZIAFirewallFilteringRuleLabelsPtrOutput() ZIAFirewallFilteringRuleLabelsPtrOutput {
	return i.ToZIAFirewallFilteringRuleLabelsPtrOutputWithContext(context.Background())
}

func (i ZIAFirewallFilteringRuleLabelsArgs) ToZIAFirewallFilteringRuleLabelsPtrOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleLabelsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringRuleLabelsOutput).ToZIAFirewallFilteringRuleLabelsPtrOutputWithContext(ctx)
}

// ZIAFirewallFilteringRuleLabelsPtrInput is an input type that accepts ZIAFirewallFilteringRuleLabelsArgs, ZIAFirewallFilteringRuleLabelsPtr and ZIAFirewallFilteringRuleLabelsPtrOutput values.
// You can construct a concrete instance of `ZIAFirewallFilteringRuleLabelsPtrInput` via:
//
//	        ZIAFirewallFilteringRuleLabelsArgs{...}
//
//	or:
//
//	        nil
type ZIAFirewallFilteringRuleLabelsPtrInput interface {
	pulumi.Input

	ToZIAFirewallFilteringRuleLabelsPtrOutput() ZIAFirewallFilteringRuleLabelsPtrOutput
	ToZIAFirewallFilteringRuleLabelsPtrOutputWithContext(context.Context) ZIAFirewallFilteringRuleLabelsPtrOutput
}

type ziafirewallFilteringRuleLabelsPtrType ZIAFirewallFilteringRuleLabelsArgs

func ZIAFirewallFilteringRuleLabelsPtr(v *ZIAFirewallFilteringRuleLabelsArgs) ZIAFirewallFilteringRuleLabelsPtrInput {
	return (*ziafirewallFilteringRuleLabelsPtrType)(v)
}

func (*ziafirewallFilteringRuleLabelsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAFirewallFilteringRuleLabels)(nil)).Elem()
}

func (i *ziafirewallFilteringRuleLabelsPtrType) ToZIAFirewallFilteringRuleLabelsPtrOutput() ZIAFirewallFilteringRuleLabelsPtrOutput {
	return i.ToZIAFirewallFilteringRuleLabelsPtrOutputWithContext(context.Background())
}

func (i *ziafirewallFilteringRuleLabelsPtrType) ToZIAFirewallFilteringRuleLabelsPtrOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleLabelsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringRuleLabelsPtrOutput)
}

type ZIAFirewallFilteringRuleLabelsOutput struct{ *pulumi.OutputState }

func (ZIAFirewallFilteringRuleLabelsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAFirewallFilteringRuleLabels)(nil)).Elem()
}

func (o ZIAFirewallFilteringRuleLabelsOutput) ToZIAFirewallFilteringRuleLabelsOutput() ZIAFirewallFilteringRuleLabelsOutput {
	return o
}

func (o ZIAFirewallFilteringRuleLabelsOutput) ToZIAFirewallFilteringRuleLabelsOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleLabelsOutput {
	return o
}

func (o ZIAFirewallFilteringRuleLabelsOutput) ToZIAFirewallFilteringRuleLabelsPtrOutput() ZIAFirewallFilteringRuleLabelsPtrOutput {
	return o.ToZIAFirewallFilteringRuleLabelsPtrOutputWithContext(context.Background())
}

func (o ZIAFirewallFilteringRuleLabelsOutput) ToZIAFirewallFilteringRuleLabelsPtrOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleLabelsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZIAFirewallFilteringRuleLabels) *ZIAFirewallFilteringRuleLabels {
		return &v
	}).(ZIAFirewallFilteringRuleLabelsPtrOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIAFirewallFilteringRuleLabelsOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ZIAFirewallFilteringRuleLabels) []int { return v.Ids }).(pulumi.IntArrayOutput)
}

type ZIAFirewallFilteringRuleLabelsPtrOutput struct{ *pulumi.OutputState }

func (ZIAFirewallFilteringRuleLabelsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAFirewallFilteringRuleLabels)(nil)).Elem()
}

func (o ZIAFirewallFilteringRuleLabelsPtrOutput) ToZIAFirewallFilteringRuleLabelsPtrOutput() ZIAFirewallFilteringRuleLabelsPtrOutput {
	return o
}

func (o ZIAFirewallFilteringRuleLabelsPtrOutput) ToZIAFirewallFilteringRuleLabelsPtrOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleLabelsPtrOutput {
	return o
}

func (o ZIAFirewallFilteringRuleLabelsPtrOutput) Elem() ZIAFirewallFilteringRuleLabelsOutput {
	return o.ApplyT(func(v *ZIAFirewallFilteringRuleLabels) ZIAFirewallFilteringRuleLabels {
		if v != nil {
			return *v
		}
		var ret ZIAFirewallFilteringRuleLabels
		return ret
	}).(ZIAFirewallFilteringRuleLabelsOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIAFirewallFilteringRuleLabelsPtrOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *ZIAFirewallFilteringRuleLabels) []int {
		if v == nil {
			return nil
		}
		return v.Ids
	}).(pulumi.IntArrayOutput)
}

type ZIAFirewallFilteringRuleLastModifiedBy struct {
	Extensions map[string]string `pulumi:"extensions"`
	// Identifier that uniquely identifies an entity
	Id *int `pulumi:"id"`
}

// ZIAFirewallFilteringRuleLastModifiedByInput is an input type that accepts ZIAFirewallFilteringRuleLastModifiedByArgs and ZIAFirewallFilteringRuleLastModifiedByOutput values.
// You can construct a concrete instance of `ZIAFirewallFilteringRuleLastModifiedByInput` via:
//
//	ZIAFirewallFilteringRuleLastModifiedByArgs{...}
type ZIAFirewallFilteringRuleLastModifiedByInput interface {
	pulumi.Input

	ToZIAFirewallFilteringRuleLastModifiedByOutput() ZIAFirewallFilteringRuleLastModifiedByOutput
	ToZIAFirewallFilteringRuleLastModifiedByOutputWithContext(context.Context) ZIAFirewallFilteringRuleLastModifiedByOutput
}

type ZIAFirewallFilteringRuleLastModifiedByArgs struct {
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// Identifier that uniquely identifies an entity
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (ZIAFirewallFilteringRuleLastModifiedByArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAFirewallFilteringRuleLastModifiedBy)(nil)).Elem()
}

func (i ZIAFirewallFilteringRuleLastModifiedByArgs) ToZIAFirewallFilteringRuleLastModifiedByOutput() ZIAFirewallFilteringRuleLastModifiedByOutput {
	return i.ToZIAFirewallFilteringRuleLastModifiedByOutputWithContext(context.Background())
}

func (i ZIAFirewallFilteringRuleLastModifiedByArgs) ToZIAFirewallFilteringRuleLastModifiedByOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleLastModifiedByOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringRuleLastModifiedByOutput)
}

// ZIAFirewallFilteringRuleLastModifiedByArrayInput is an input type that accepts ZIAFirewallFilteringRuleLastModifiedByArray and ZIAFirewallFilteringRuleLastModifiedByArrayOutput values.
// You can construct a concrete instance of `ZIAFirewallFilteringRuleLastModifiedByArrayInput` via:
//
//	ZIAFirewallFilteringRuleLastModifiedByArray{ ZIAFirewallFilteringRuleLastModifiedByArgs{...} }
type ZIAFirewallFilteringRuleLastModifiedByArrayInput interface {
	pulumi.Input

	ToZIAFirewallFilteringRuleLastModifiedByArrayOutput() ZIAFirewallFilteringRuleLastModifiedByArrayOutput
	ToZIAFirewallFilteringRuleLastModifiedByArrayOutputWithContext(context.Context) ZIAFirewallFilteringRuleLastModifiedByArrayOutput
}

type ZIAFirewallFilteringRuleLastModifiedByArray []ZIAFirewallFilteringRuleLastModifiedByInput

func (ZIAFirewallFilteringRuleLastModifiedByArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZIAFirewallFilteringRuleLastModifiedBy)(nil)).Elem()
}

func (i ZIAFirewallFilteringRuleLastModifiedByArray) ToZIAFirewallFilteringRuleLastModifiedByArrayOutput() ZIAFirewallFilteringRuleLastModifiedByArrayOutput {
	return i.ToZIAFirewallFilteringRuleLastModifiedByArrayOutputWithContext(context.Background())
}

func (i ZIAFirewallFilteringRuleLastModifiedByArray) ToZIAFirewallFilteringRuleLastModifiedByArrayOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleLastModifiedByArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringRuleLastModifiedByArrayOutput)
}

type ZIAFirewallFilteringRuleLastModifiedByOutput struct{ *pulumi.OutputState }

func (ZIAFirewallFilteringRuleLastModifiedByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAFirewallFilteringRuleLastModifiedBy)(nil)).Elem()
}

func (o ZIAFirewallFilteringRuleLastModifiedByOutput) ToZIAFirewallFilteringRuleLastModifiedByOutput() ZIAFirewallFilteringRuleLastModifiedByOutput {
	return o
}

func (o ZIAFirewallFilteringRuleLastModifiedByOutput) ToZIAFirewallFilteringRuleLastModifiedByOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleLastModifiedByOutput {
	return o
}

func (o ZIAFirewallFilteringRuleLastModifiedByOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v ZIAFirewallFilteringRuleLastModifiedBy) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIAFirewallFilteringRuleLastModifiedByOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZIAFirewallFilteringRuleLastModifiedBy) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type ZIAFirewallFilteringRuleLastModifiedByArrayOutput struct{ *pulumi.OutputState }

func (ZIAFirewallFilteringRuleLastModifiedByArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZIAFirewallFilteringRuleLastModifiedBy)(nil)).Elem()
}

func (o ZIAFirewallFilteringRuleLastModifiedByArrayOutput) ToZIAFirewallFilteringRuleLastModifiedByArrayOutput() ZIAFirewallFilteringRuleLastModifiedByArrayOutput {
	return o
}

func (o ZIAFirewallFilteringRuleLastModifiedByArrayOutput) ToZIAFirewallFilteringRuleLastModifiedByArrayOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleLastModifiedByArrayOutput {
	return o
}

func (o ZIAFirewallFilteringRuleLastModifiedByArrayOutput) Index(i pulumi.IntInput) ZIAFirewallFilteringRuleLastModifiedByOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZIAFirewallFilteringRuleLastModifiedBy {
		return vs[0].([]ZIAFirewallFilteringRuleLastModifiedBy)[vs[1].(int)]
	}).(ZIAFirewallFilteringRuleLastModifiedByOutput)
}

type ZIAFirewallFilteringRuleLocationGroups struct {
	// Identifier that uniquely identifies an entity
	Ids []int `pulumi:"ids"`
}

// ZIAFirewallFilteringRuleLocationGroupsInput is an input type that accepts ZIAFirewallFilteringRuleLocationGroupsArgs and ZIAFirewallFilteringRuleLocationGroupsOutput values.
// You can construct a concrete instance of `ZIAFirewallFilteringRuleLocationGroupsInput` via:
//
//	ZIAFirewallFilteringRuleLocationGroupsArgs{...}
type ZIAFirewallFilteringRuleLocationGroupsInput interface {
	pulumi.Input

	ToZIAFirewallFilteringRuleLocationGroupsOutput() ZIAFirewallFilteringRuleLocationGroupsOutput
	ToZIAFirewallFilteringRuleLocationGroupsOutputWithContext(context.Context) ZIAFirewallFilteringRuleLocationGroupsOutput
}

type ZIAFirewallFilteringRuleLocationGroupsArgs struct {
	// Identifier that uniquely identifies an entity
	Ids pulumi.IntArrayInput `pulumi:"ids"`
}

func (ZIAFirewallFilteringRuleLocationGroupsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAFirewallFilteringRuleLocationGroups)(nil)).Elem()
}

func (i ZIAFirewallFilteringRuleLocationGroupsArgs) ToZIAFirewallFilteringRuleLocationGroupsOutput() ZIAFirewallFilteringRuleLocationGroupsOutput {
	return i.ToZIAFirewallFilteringRuleLocationGroupsOutputWithContext(context.Background())
}

func (i ZIAFirewallFilteringRuleLocationGroupsArgs) ToZIAFirewallFilteringRuleLocationGroupsOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleLocationGroupsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringRuleLocationGroupsOutput)
}

func (i ZIAFirewallFilteringRuleLocationGroupsArgs) ToZIAFirewallFilteringRuleLocationGroupsPtrOutput() ZIAFirewallFilteringRuleLocationGroupsPtrOutput {
	return i.ToZIAFirewallFilteringRuleLocationGroupsPtrOutputWithContext(context.Background())
}

func (i ZIAFirewallFilteringRuleLocationGroupsArgs) ToZIAFirewallFilteringRuleLocationGroupsPtrOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleLocationGroupsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringRuleLocationGroupsOutput).ToZIAFirewallFilteringRuleLocationGroupsPtrOutputWithContext(ctx)
}

// ZIAFirewallFilteringRuleLocationGroupsPtrInput is an input type that accepts ZIAFirewallFilteringRuleLocationGroupsArgs, ZIAFirewallFilteringRuleLocationGroupsPtr and ZIAFirewallFilteringRuleLocationGroupsPtrOutput values.
// You can construct a concrete instance of `ZIAFirewallFilteringRuleLocationGroupsPtrInput` via:
//
//	        ZIAFirewallFilteringRuleLocationGroupsArgs{...}
//
//	or:
//
//	        nil
type ZIAFirewallFilteringRuleLocationGroupsPtrInput interface {
	pulumi.Input

	ToZIAFirewallFilteringRuleLocationGroupsPtrOutput() ZIAFirewallFilteringRuleLocationGroupsPtrOutput
	ToZIAFirewallFilteringRuleLocationGroupsPtrOutputWithContext(context.Context) ZIAFirewallFilteringRuleLocationGroupsPtrOutput
}

type ziafirewallFilteringRuleLocationGroupsPtrType ZIAFirewallFilteringRuleLocationGroupsArgs

func ZIAFirewallFilteringRuleLocationGroupsPtr(v *ZIAFirewallFilteringRuleLocationGroupsArgs) ZIAFirewallFilteringRuleLocationGroupsPtrInput {
	return (*ziafirewallFilteringRuleLocationGroupsPtrType)(v)
}

func (*ziafirewallFilteringRuleLocationGroupsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAFirewallFilteringRuleLocationGroups)(nil)).Elem()
}

func (i *ziafirewallFilteringRuleLocationGroupsPtrType) ToZIAFirewallFilteringRuleLocationGroupsPtrOutput() ZIAFirewallFilteringRuleLocationGroupsPtrOutput {
	return i.ToZIAFirewallFilteringRuleLocationGroupsPtrOutputWithContext(context.Background())
}

func (i *ziafirewallFilteringRuleLocationGroupsPtrType) ToZIAFirewallFilteringRuleLocationGroupsPtrOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleLocationGroupsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringRuleLocationGroupsPtrOutput)
}

type ZIAFirewallFilteringRuleLocationGroupsOutput struct{ *pulumi.OutputState }

func (ZIAFirewallFilteringRuleLocationGroupsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAFirewallFilteringRuleLocationGroups)(nil)).Elem()
}

func (o ZIAFirewallFilteringRuleLocationGroupsOutput) ToZIAFirewallFilteringRuleLocationGroupsOutput() ZIAFirewallFilteringRuleLocationGroupsOutput {
	return o
}

func (o ZIAFirewallFilteringRuleLocationGroupsOutput) ToZIAFirewallFilteringRuleLocationGroupsOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleLocationGroupsOutput {
	return o
}

func (o ZIAFirewallFilteringRuleLocationGroupsOutput) ToZIAFirewallFilteringRuleLocationGroupsPtrOutput() ZIAFirewallFilteringRuleLocationGroupsPtrOutput {
	return o.ToZIAFirewallFilteringRuleLocationGroupsPtrOutputWithContext(context.Background())
}

func (o ZIAFirewallFilteringRuleLocationGroupsOutput) ToZIAFirewallFilteringRuleLocationGroupsPtrOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleLocationGroupsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZIAFirewallFilteringRuleLocationGroups) *ZIAFirewallFilteringRuleLocationGroups {
		return &v
	}).(ZIAFirewallFilteringRuleLocationGroupsPtrOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIAFirewallFilteringRuleLocationGroupsOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ZIAFirewallFilteringRuleLocationGroups) []int { return v.Ids }).(pulumi.IntArrayOutput)
}

type ZIAFirewallFilteringRuleLocationGroupsPtrOutput struct{ *pulumi.OutputState }

func (ZIAFirewallFilteringRuleLocationGroupsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAFirewallFilteringRuleLocationGroups)(nil)).Elem()
}

func (o ZIAFirewallFilteringRuleLocationGroupsPtrOutput) ToZIAFirewallFilteringRuleLocationGroupsPtrOutput() ZIAFirewallFilteringRuleLocationGroupsPtrOutput {
	return o
}

func (o ZIAFirewallFilteringRuleLocationGroupsPtrOutput) ToZIAFirewallFilteringRuleLocationGroupsPtrOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleLocationGroupsPtrOutput {
	return o
}

func (o ZIAFirewallFilteringRuleLocationGroupsPtrOutput) Elem() ZIAFirewallFilteringRuleLocationGroupsOutput {
	return o.ApplyT(func(v *ZIAFirewallFilteringRuleLocationGroups) ZIAFirewallFilteringRuleLocationGroups {
		if v != nil {
			return *v
		}
		var ret ZIAFirewallFilteringRuleLocationGroups
		return ret
	}).(ZIAFirewallFilteringRuleLocationGroupsOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIAFirewallFilteringRuleLocationGroupsPtrOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *ZIAFirewallFilteringRuleLocationGroups) []int {
		if v == nil {
			return nil
		}
		return v.Ids
	}).(pulumi.IntArrayOutput)
}

type ZIAFirewallFilteringRuleLocations struct {
	// Identifier that uniquely identifies an entity
	Ids []int `pulumi:"ids"`
}

// ZIAFirewallFilteringRuleLocationsInput is an input type that accepts ZIAFirewallFilteringRuleLocationsArgs and ZIAFirewallFilteringRuleLocationsOutput values.
// You can construct a concrete instance of `ZIAFirewallFilteringRuleLocationsInput` via:
//
//	ZIAFirewallFilteringRuleLocationsArgs{...}
type ZIAFirewallFilteringRuleLocationsInput interface {
	pulumi.Input

	ToZIAFirewallFilteringRuleLocationsOutput() ZIAFirewallFilteringRuleLocationsOutput
	ToZIAFirewallFilteringRuleLocationsOutputWithContext(context.Context) ZIAFirewallFilteringRuleLocationsOutput
}

type ZIAFirewallFilteringRuleLocationsArgs struct {
	// Identifier that uniquely identifies an entity
	Ids pulumi.IntArrayInput `pulumi:"ids"`
}

func (ZIAFirewallFilteringRuleLocationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAFirewallFilteringRuleLocations)(nil)).Elem()
}

func (i ZIAFirewallFilteringRuleLocationsArgs) ToZIAFirewallFilteringRuleLocationsOutput() ZIAFirewallFilteringRuleLocationsOutput {
	return i.ToZIAFirewallFilteringRuleLocationsOutputWithContext(context.Background())
}

func (i ZIAFirewallFilteringRuleLocationsArgs) ToZIAFirewallFilteringRuleLocationsOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleLocationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringRuleLocationsOutput)
}

func (i ZIAFirewallFilteringRuleLocationsArgs) ToZIAFirewallFilteringRuleLocationsPtrOutput() ZIAFirewallFilteringRuleLocationsPtrOutput {
	return i.ToZIAFirewallFilteringRuleLocationsPtrOutputWithContext(context.Background())
}

func (i ZIAFirewallFilteringRuleLocationsArgs) ToZIAFirewallFilteringRuleLocationsPtrOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleLocationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringRuleLocationsOutput).ToZIAFirewallFilteringRuleLocationsPtrOutputWithContext(ctx)
}

// ZIAFirewallFilteringRuleLocationsPtrInput is an input type that accepts ZIAFirewallFilteringRuleLocationsArgs, ZIAFirewallFilteringRuleLocationsPtr and ZIAFirewallFilteringRuleLocationsPtrOutput values.
// You can construct a concrete instance of `ZIAFirewallFilteringRuleLocationsPtrInput` via:
//
//	        ZIAFirewallFilteringRuleLocationsArgs{...}
//
//	or:
//
//	        nil
type ZIAFirewallFilteringRuleLocationsPtrInput interface {
	pulumi.Input

	ToZIAFirewallFilteringRuleLocationsPtrOutput() ZIAFirewallFilteringRuleLocationsPtrOutput
	ToZIAFirewallFilteringRuleLocationsPtrOutputWithContext(context.Context) ZIAFirewallFilteringRuleLocationsPtrOutput
}

type ziafirewallFilteringRuleLocationsPtrType ZIAFirewallFilteringRuleLocationsArgs

func ZIAFirewallFilteringRuleLocationsPtr(v *ZIAFirewallFilteringRuleLocationsArgs) ZIAFirewallFilteringRuleLocationsPtrInput {
	return (*ziafirewallFilteringRuleLocationsPtrType)(v)
}

func (*ziafirewallFilteringRuleLocationsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAFirewallFilteringRuleLocations)(nil)).Elem()
}

func (i *ziafirewallFilteringRuleLocationsPtrType) ToZIAFirewallFilteringRuleLocationsPtrOutput() ZIAFirewallFilteringRuleLocationsPtrOutput {
	return i.ToZIAFirewallFilteringRuleLocationsPtrOutputWithContext(context.Background())
}

func (i *ziafirewallFilteringRuleLocationsPtrType) ToZIAFirewallFilteringRuleLocationsPtrOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleLocationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringRuleLocationsPtrOutput)
}

type ZIAFirewallFilteringRuleLocationsOutput struct{ *pulumi.OutputState }

func (ZIAFirewallFilteringRuleLocationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAFirewallFilteringRuleLocations)(nil)).Elem()
}

func (o ZIAFirewallFilteringRuleLocationsOutput) ToZIAFirewallFilteringRuleLocationsOutput() ZIAFirewallFilteringRuleLocationsOutput {
	return o
}

func (o ZIAFirewallFilteringRuleLocationsOutput) ToZIAFirewallFilteringRuleLocationsOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleLocationsOutput {
	return o
}

func (o ZIAFirewallFilteringRuleLocationsOutput) ToZIAFirewallFilteringRuleLocationsPtrOutput() ZIAFirewallFilteringRuleLocationsPtrOutput {
	return o.ToZIAFirewallFilteringRuleLocationsPtrOutputWithContext(context.Background())
}

func (o ZIAFirewallFilteringRuleLocationsOutput) ToZIAFirewallFilteringRuleLocationsPtrOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleLocationsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZIAFirewallFilteringRuleLocations) *ZIAFirewallFilteringRuleLocations {
		return &v
	}).(ZIAFirewallFilteringRuleLocationsPtrOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIAFirewallFilteringRuleLocationsOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ZIAFirewallFilteringRuleLocations) []int { return v.Ids }).(pulumi.IntArrayOutput)
}

type ZIAFirewallFilteringRuleLocationsPtrOutput struct{ *pulumi.OutputState }

func (ZIAFirewallFilteringRuleLocationsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAFirewallFilteringRuleLocations)(nil)).Elem()
}

func (o ZIAFirewallFilteringRuleLocationsPtrOutput) ToZIAFirewallFilteringRuleLocationsPtrOutput() ZIAFirewallFilteringRuleLocationsPtrOutput {
	return o
}

func (o ZIAFirewallFilteringRuleLocationsPtrOutput) ToZIAFirewallFilteringRuleLocationsPtrOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleLocationsPtrOutput {
	return o
}

func (o ZIAFirewallFilteringRuleLocationsPtrOutput) Elem() ZIAFirewallFilteringRuleLocationsOutput {
	return o.ApplyT(func(v *ZIAFirewallFilteringRuleLocations) ZIAFirewallFilteringRuleLocations {
		if v != nil {
			return *v
		}
		var ret ZIAFirewallFilteringRuleLocations
		return ret
	}).(ZIAFirewallFilteringRuleLocationsOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIAFirewallFilteringRuleLocationsPtrOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *ZIAFirewallFilteringRuleLocations) []int {
		if v == nil {
			return nil
		}
		return v.Ids
	}).(pulumi.IntArrayOutput)
}

type ZIAFirewallFilteringRuleNwApplicationGroups struct {
	// Identifier that uniquely identifies an entity
	Ids []int `pulumi:"ids"`
}

// ZIAFirewallFilteringRuleNwApplicationGroupsInput is an input type that accepts ZIAFirewallFilteringRuleNwApplicationGroupsArgs and ZIAFirewallFilteringRuleNwApplicationGroupsOutput values.
// You can construct a concrete instance of `ZIAFirewallFilteringRuleNwApplicationGroupsInput` via:
//
//	ZIAFirewallFilteringRuleNwApplicationGroupsArgs{...}
type ZIAFirewallFilteringRuleNwApplicationGroupsInput interface {
	pulumi.Input

	ToZIAFirewallFilteringRuleNwApplicationGroupsOutput() ZIAFirewallFilteringRuleNwApplicationGroupsOutput
	ToZIAFirewallFilteringRuleNwApplicationGroupsOutputWithContext(context.Context) ZIAFirewallFilteringRuleNwApplicationGroupsOutput
}

type ZIAFirewallFilteringRuleNwApplicationGroupsArgs struct {
	// Identifier that uniquely identifies an entity
	Ids pulumi.IntArrayInput `pulumi:"ids"`
}

func (ZIAFirewallFilteringRuleNwApplicationGroupsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAFirewallFilteringRuleNwApplicationGroups)(nil)).Elem()
}

func (i ZIAFirewallFilteringRuleNwApplicationGroupsArgs) ToZIAFirewallFilteringRuleNwApplicationGroupsOutput() ZIAFirewallFilteringRuleNwApplicationGroupsOutput {
	return i.ToZIAFirewallFilteringRuleNwApplicationGroupsOutputWithContext(context.Background())
}

func (i ZIAFirewallFilteringRuleNwApplicationGroupsArgs) ToZIAFirewallFilteringRuleNwApplicationGroupsOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleNwApplicationGroupsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringRuleNwApplicationGroupsOutput)
}

func (i ZIAFirewallFilteringRuleNwApplicationGroupsArgs) ToZIAFirewallFilteringRuleNwApplicationGroupsPtrOutput() ZIAFirewallFilteringRuleNwApplicationGroupsPtrOutput {
	return i.ToZIAFirewallFilteringRuleNwApplicationGroupsPtrOutputWithContext(context.Background())
}

func (i ZIAFirewallFilteringRuleNwApplicationGroupsArgs) ToZIAFirewallFilteringRuleNwApplicationGroupsPtrOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleNwApplicationGroupsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringRuleNwApplicationGroupsOutput).ToZIAFirewallFilteringRuleNwApplicationGroupsPtrOutputWithContext(ctx)
}

// ZIAFirewallFilteringRuleNwApplicationGroupsPtrInput is an input type that accepts ZIAFirewallFilteringRuleNwApplicationGroupsArgs, ZIAFirewallFilteringRuleNwApplicationGroupsPtr and ZIAFirewallFilteringRuleNwApplicationGroupsPtrOutput values.
// You can construct a concrete instance of `ZIAFirewallFilteringRuleNwApplicationGroupsPtrInput` via:
//
//	        ZIAFirewallFilteringRuleNwApplicationGroupsArgs{...}
//
//	or:
//
//	        nil
type ZIAFirewallFilteringRuleNwApplicationGroupsPtrInput interface {
	pulumi.Input

	ToZIAFirewallFilteringRuleNwApplicationGroupsPtrOutput() ZIAFirewallFilteringRuleNwApplicationGroupsPtrOutput
	ToZIAFirewallFilteringRuleNwApplicationGroupsPtrOutputWithContext(context.Context) ZIAFirewallFilteringRuleNwApplicationGroupsPtrOutput
}

type ziafirewallFilteringRuleNwApplicationGroupsPtrType ZIAFirewallFilteringRuleNwApplicationGroupsArgs

func ZIAFirewallFilteringRuleNwApplicationGroupsPtr(v *ZIAFirewallFilteringRuleNwApplicationGroupsArgs) ZIAFirewallFilteringRuleNwApplicationGroupsPtrInput {
	return (*ziafirewallFilteringRuleNwApplicationGroupsPtrType)(v)
}

func (*ziafirewallFilteringRuleNwApplicationGroupsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAFirewallFilteringRuleNwApplicationGroups)(nil)).Elem()
}

func (i *ziafirewallFilteringRuleNwApplicationGroupsPtrType) ToZIAFirewallFilteringRuleNwApplicationGroupsPtrOutput() ZIAFirewallFilteringRuleNwApplicationGroupsPtrOutput {
	return i.ToZIAFirewallFilteringRuleNwApplicationGroupsPtrOutputWithContext(context.Background())
}

func (i *ziafirewallFilteringRuleNwApplicationGroupsPtrType) ToZIAFirewallFilteringRuleNwApplicationGroupsPtrOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleNwApplicationGroupsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringRuleNwApplicationGroupsPtrOutput)
}

type ZIAFirewallFilteringRuleNwApplicationGroupsOutput struct{ *pulumi.OutputState }

func (ZIAFirewallFilteringRuleNwApplicationGroupsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAFirewallFilteringRuleNwApplicationGroups)(nil)).Elem()
}

func (o ZIAFirewallFilteringRuleNwApplicationGroupsOutput) ToZIAFirewallFilteringRuleNwApplicationGroupsOutput() ZIAFirewallFilteringRuleNwApplicationGroupsOutput {
	return o
}

func (o ZIAFirewallFilteringRuleNwApplicationGroupsOutput) ToZIAFirewallFilteringRuleNwApplicationGroupsOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleNwApplicationGroupsOutput {
	return o
}

func (o ZIAFirewallFilteringRuleNwApplicationGroupsOutput) ToZIAFirewallFilteringRuleNwApplicationGroupsPtrOutput() ZIAFirewallFilteringRuleNwApplicationGroupsPtrOutput {
	return o.ToZIAFirewallFilteringRuleNwApplicationGroupsPtrOutputWithContext(context.Background())
}

func (o ZIAFirewallFilteringRuleNwApplicationGroupsOutput) ToZIAFirewallFilteringRuleNwApplicationGroupsPtrOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleNwApplicationGroupsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZIAFirewallFilteringRuleNwApplicationGroups) *ZIAFirewallFilteringRuleNwApplicationGroups {
		return &v
	}).(ZIAFirewallFilteringRuleNwApplicationGroupsPtrOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIAFirewallFilteringRuleNwApplicationGroupsOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ZIAFirewallFilteringRuleNwApplicationGroups) []int { return v.Ids }).(pulumi.IntArrayOutput)
}

type ZIAFirewallFilteringRuleNwApplicationGroupsPtrOutput struct{ *pulumi.OutputState }

func (ZIAFirewallFilteringRuleNwApplicationGroupsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAFirewallFilteringRuleNwApplicationGroups)(nil)).Elem()
}

func (o ZIAFirewallFilteringRuleNwApplicationGroupsPtrOutput) ToZIAFirewallFilteringRuleNwApplicationGroupsPtrOutput() ZIAFirewallFilteringRuleNwApplicationGroupsPtrOutput {
	return o
}

func (o ZIAFirewallFilteringRuleNwApplicationGroupsPtrOutput) ToZIAFirewallFilteringRuleNwApplicationGroupsPtrOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleNwApplicationGroupsPtrOutput {
	return o
}

func (o ZIAFirewallFilteringRuleNwApplicationGroupsPtrOutput) Elem() ZIAFirewallFilteringRuleNwApplicationGroupsOutput {
	return o.ApplyT(func(v *ZIAFirewallFilteringRuleNwApplicationGroups) ZIAFirewallFilteringRuleNwApplicationGroups {
		if v != nil {
			return *v
		}
		var ret ZIAFirewallFilteringRuleNwApplicationGroups
		return ret
	}).(ZIAFirewallFilteringRuleNwApplicationGroupsOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIAFirewallFilteringRuleNwApplicationGroupsPtrOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *ZIAFirewallFilteringRuleNwApplicationGroups) []int {
		if v == nil {
			return nil
		}
		return v.Ids
	}).(pulumi.IntArrayOutput)
}

type ZIAFirewallFilteringRuleNwServiceGroups struct {
	// Identifier that uniquely identifies an entity
	Ids []int `pulumi:"ids"`
}

// ZIAFirewallFilteringRuleNwServiceGroupsInput is an input type that accepts ZIAFirewallFilteringRuleNwServiceGroupsArgs and ZIAFirewallFilteringRuleNwServiceGroupsOutput values.
// You can construct a concrete instance of `ZIAFirewallFilteringRuleNwServiceGroupsInput` via:
//
//	ZIAFirewallFilteringRuleNwServiceGroupsArgs{...}
type ZIAFirewallFilteringRuleNwServiceGroupsInput interface {
	pulumi.Input

	ToZIAFirewallFilteringRuleNwServiceGroupsOutput() ZIAFirewallFilteringRuleNwServiceGroupsOutput
	ToZIAFirewallFilteringRuleNwServiceGroupsOutputWithContext(context.Context) ZIAFirewallFilteringRuleNwServiceGroupsOutput
}

type ZIAFirewallFilteringRuleNwServiceGroupsArgs struct {
	// Identifier that uniquely identifies an entity
	Ids pulumi.IntArrayInput `pulumi:"ids"`
}

func (ZIAFirewallFilteringRuleNwServiceGroupsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAFirewallFilteringRuleNwServiceGroups)(nil)).Elem()
}

func (i ZIAFirewallFilteringRuleNwServiceGroupsArgs) ToZIAFirewallFilteringRuleNwServiceGroupsOutput() ZIAFirewallFilteringRuleNwServiceGroupsOutput {
	return i.ToZIAFirewallFilteringRuleNwServiceGroupsOutputWithContext(context.Background())
}

func (i ZIAFirewallFilteringRuleNwServiceGroupsArgs) ToZIAFirewallFilteringRuleNwServiceGroupsOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleNwServiceGroupsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringRuleNwServiceGroupsOutput)
}

func (i ZIAFirewallFilteringRuleNwServiceGroupsArgs) ToZIAFirewallFilteringRuleNwServiceGroupsPtrOutput() ZIAFirewallFilteringRuleNwServiceGroupsPtrOutput {
	return i.ToZIAFirewallFilteringRuleNwServiceGroupsPtrOutputWithContext(context.Background())
}

func (i ZIAFirewallFilteringRuleNwServiceGroupsArgs) ToZIAFirewallFilteringRuleNwServiceGroupsPtrOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleNwServiceGroupsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringRuleNwServiceGroupsOutput).ToZIAFirewallFilteringRuleNwServiceGroupsPtrOutputWithContext(ctx)
}

// ZIAFirewallFilteringRuleNwServiceGroupsPtrInput is an input type that accepts ZIAFirewallFilteringRuleNwServiceGroupsArgs, ZIAFirewallFilteringRuleNwServiceGroupsPtr and ZIAFirewallFilteringRuleNwServiceGroupsPtrOutput values.
// You can construct a concrete instance of `ZIAFirewallFilteringRuleNwServiceGroupsPtrInput` via:
//
//	        ZIAFirewallFilteringRuleNwServiceGroupsArgs{...}
//
//	or:
//
//	        nil
type ZIAFirewallFilteringRuleNwServiceGroupsPtrInput interface {
	pulumi.Input

	ToZIAFirewallFilteringRuleNwServiceGroupsPtrOutput() ZIAFirewallFilteringRuleNwServiceGroupsPtrOutput
	ToZIAFirewallFilteringRuleNwServiceGroupsPtrOutputWithContext(context.Context) ZIAFirewallFilteringRuleNwServiceGroupsPtrOutput
}

type ziafirewallFilteringRuleNwServiceGroupsPtrType ZIAFirewallFilteringRuleNwServiceGroupsArgs

func ZIAFirewallFilteringRuleNwServiceGroupsPtr(v *ZIAFirewallFilteringRuleNwServiceGroupsArgs) ZIAFirewallFilteringRuleNwServiceGroupsPtrInput {
	return (*ziafirewallFilteringRuleNwServiceGroupsPtrType)(v)
}

func (*ziafirewallFilteringRuleNwServiceGroupsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAFirewallFilteringRuleNwServiceGroups)(nil)).Elem()
}

func (i *ziafirewallFilteringRuleNwServiceGroupsPtrType) ToZIAFirewallFilteringRuleNwServiceGroupsPtrOutput() ZIAFirewallFilteringRuleNwServiceGroupsPtrOutput {
	return i.ToZIAFirewallFilteringRuleNwServiceGroupsPtrOutputWithContext(context.Background())
}

func (i *ziafirewallFilteringRuleNwServiceGroupsPtrType) ToZIAFirewallFilteringRuleNwServiceGroupsPtrOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleNwServiceGroupsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringRuleNwServiceGroupsPtrOutput)
}

type ZIAFirewallFilteringRuleNwServiceGroupsOutput struct{ *pulumi.OutputState }

func (ZIAFirewallFilteringRuleNwServiceGroupsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAFirewallFilteringRuleNwServiceGroups)(nil)).Elem()
}

func (o ZIAFirewallFilteringRuleNwServiceGroupsOutput) ToZIAFirewallFilteringRuleNwServiceGroupsOutput() ZIAFirewallFilteringRuleNwServiceGroupsOutput {
	return o
}

func (o ZIAFirewallFilteringRuleNwServiceGroupsOutput) ToZIAFirewallFilteringRuleNwServiceGroupsOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleNwServiceGroupsOutput {
	return o
}

func (o ZIAFirewallFilteringRuleNwServiceGroupsOutput) ToZIAFirewallFilteringRuleNwServiceGroupsPtrOutput() ZIAFirewallFilteringRuleNwServiceGroupsPtrOutput {
	return o.ToZIAFirewallFilteringRuleNwServiceGroupsPtrOutputWithContext(context.Background())
}

func (o ZIAFirewallFilteringRuleNwServiceGroupsOutput) ToZIAFirewallFilteringRuleNwServiceGroupsPtrOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleNwServiceGroupsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZIAFirewallFilteringRuleNwServiceGroups) *ZIAFirewallFilteringRuleNwServiceGroups {
		return &v
	}).(ZIAFirewallFilteringRuleNwServiceGroupsPtrOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIAFirewallFilteringRuleNwServiceGroupsOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ZIAFirewallFilteringRuleNwServiceGroups) []int { return v.Ids }).(pulumi.IntArrayOutput)
}

type ZIAFirewallFilteringRuleNwServiceGroupsPtrOutput struct{ *pulumi.OutputState }

func (ZIAFirewallFilteringRuleNwServiceGroupsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAFirewallFilteringRuleNwServiceGroups)(nil)).Elem()
}

func (o ZIAFirewallFilteringRuleNwServiceGroupsPtrOutput) ToZIAFirewallFilteringRuleNwServiceGroupsPtrOutput() ZIAFirewallFilteringRuleNwServiceGroupsPtrOutput {
	return o
}

func (o ZIAFirewallFilteringRuleNwServiceGroupsPtrOutput) ToZIAFirewallFilteringRuleNwServiceGroupsPtrOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleNwServiceGroupsPtrOutput {
	return o
}

func (o ZIAFirewallFilteringRuleNwServiceGroupsPtrOutput) Elem() ZIAFirewallFilteringRuleNwServiceGroupsOutput {
	return o.ApplyT(func(v *ZIAFirewallFilteringRuleNwServiceGroups) ZIAFirewallFilteringRuleNwServiceGroups {
		if v != nil {
			return *v
		}
		var ret ZIAFirewallFilteringRuleNwServiceGroups
		return ret
	}).(ZIAFirewallFilteringRuleNwServiceGroupsOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIAFirewallFilteringRuleNwServiceGroupsPtrOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *ZIAFirewallFilteringRuleNwServiceGroups) []int {
		if v == nil {
			return nil
		}
		return v.Ids
	}).(pulumi.IntArrayOutput)
}

type ZIAFirewallFilteringRuleNwServices struct {
	// Identifier that uniquely identifies an entity
	Ids []int `pulumi:"ids"`
}

// ZIAFirewallFilteringRuleNwServicesInput is an input type that accepts ZIAFirewallFilteringRuleNwServicesArgs and ZIAFirewallFilteringRuleNwServicesOutput values.
// You can construct a concrete instance of `ZIAFirewallFilteringRuleNwServicesInput` via:
//
//	ZIAFirewallFilteringRuleNwServicesArgs{...}
type ZIAFirewallFilteringRuleNwServicesInput interface {
	pulumi.Input

	ToZIAFirewallFilteringRuleNwServicesOutput() ZIAFirewallFilteringRuleNwServicesOutput
	ToZIAFirewallFilteringRuleNwServicesOutputWithContext(context.Context) ZIAFirewallFilteringRuleNwServicesOutput
}

type ZIAFirewallFilteringRuleNwServicesArgs struct {
	// Identifier that uniquely identifies an entity
	Ids pulumi.IntArrayInput `pulumi:"ids"`
}

func (ZIAFirewallFilteringRuleNwServicesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAFirewallFilteringRuleNwServices)(nil)).Elem()
}

func (i ZIAFirewallFilteringRuleNwServicesArgs) ToZIAFirewallFilteringRuleNwServicesOutput() ZIAFirewallFilteringRuleNwServicesOutput {
	return i.ToZIAFirewallFilteringRuleNwServicesOutputWithContext(context.Background())
}

func (i ZIAFirewallFilteringRuleNwServicesArgs) ToZIAFirewallFilteringRuleNwServicesOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleNwServicesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringRuleNwServicesOutput)
}

func (i ZIAFirewallFilteringRuleNwServicesArgs) ToZIAFirewallFilteringRuleNwServicesPtrOutput() ZIAFirewallFilteringRuleNwServicesPtrOutput {
	return i.ToZIAFirewallFilteringRuleNwServicesPtrOutputWithContext(context.Background())
}

func (i ZIAFirewallFilteringRuleNwServicesArgs) ToZIAFirewallFilteringRuleNwServicesPtrOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleNwServicesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringRuleNwServicesOutput).ToZIAFirewallFilteringRuleNwServicesPtrOutputWithContext(ctx)
}

// ZIAFirewallFilteringRuleNwServicesPtrInput is an input type that accepts ZIAFirewallFilteringRuleNwServicesArgs, ZIAFirewallFilteringRuleNwServicesPtr and ZIAFirewallFilteringRuleNwServicesPtrOutput values.
// You can construct a concrete instance of `ZIAFirewallFilteringRuleNwServicesPtrInput` via:
//
//	        ZIAFirewallFilteringRuleNwServicesArgs{...}
//
//	or:
//
//	        nil
type ZIAFirewallFilteringRuleNwServicesPtrInput interface {
	pulumi.Input

	ToZIAFirewallFilteringRuleNwServicesPtrOutput() ZIAFirewallFilteringRuleNwServicesPtrOutput
	ToZIAFirewallFilteringRuleNwServicesPtrOutputWithContext(context.Context) ZIAFirewallFilteringRuleNwServicesPtrOutput
}

type ziafirewallFilteringRuleNwServicesPtrType ZIAFirewallFilteringRuleNwServicesArgs

func ZIAFirewallFilteringRuleNwServicesPtr(v *ZIAFirewallFilteringRuleNwServicesArgs) ZIAFirewallFilteringRuleNwServicesPtrInput {
	return (*ziafirewallFilteringRuleNwServicesPtrType)(v)
}

func (*ziafirewallFilteringRuleNwServicesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAFirewallFilteringRuleNwServices)(nil)).Elem()
}

func (i *ziafirewallFilteringRuleNwServicesPtrType) ToZIAFirewallFilteringRuleNwServicesPtrOutput() ZIAFirewallFilteringRuleNwServicesPtrOutput {
	return i.ToZIAFirewallFilteringRuleNwServicesPtrOutputWithContext(context.Background())
}

func (i *ziafirewallFilteringRuleNwServicesPtrType) ToZIAFirewallFilteringRuleNwServicesPtrOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleNwServicesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringRuleNwServicesPtrOutput)
}

type ZIAFirewallFilteringRuleNwServicesOutput struct{ *pulumi.OutputState }

func (ZIAFirewallFilteringRuleNwServicesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAFirewallFilteringRuleNwServices)(nil)).Elem()
}

func (o ZIAFirewallFilteringRuleNwServicesOutput) ToZIAFirewallFilteringRuleNwServicesOutput() ZIAFirewallFilteringRuleNwServicesOutput {
	return o
}

func (o ZIAFirewallFilteringRuleNwServicesOutput) ToZIAFirewallFilteringRuleNwServicesOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleNwServicesOutput {
	return o
}

func (o ZIAFirewallFilteringRuleNwServicesOutput) ToZIAFirewallFilteringRuleNwServicesPtrOutput() ZIAFirewallFilteringRuleNwServicesPtrOutput {
	return o.ToZIAFirewallFilteringRuleNwServicesPtrOutputWithContext(context.Background())
}

func (o ZIAFirewallFilteringRuleNwServicesOutput) ToZIAFirewallFilteringRuleNwServicesPtrOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleNwServicesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZIAFirewallFilteringRuleNwServices) *ZIAFirewallFilteringRuleNwServices {
		return &v
	}).(ZIAFirewallFilteringRuleNwServicesPtrOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIAFirewallFilteringRuleNwServicesOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ZIAFirewallFilteringRuleNwServices) []int { return v.Ids }).(pulumi.IntArrayOutput)
}

type ZIAFirewallFilteringRuleNwServicesPtrOutput struct{ *pulumi.OutputState }

func (ZIAFirewallFilteringRuleNwServicesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAFirewallFilteringRuleNwServices)(nil)).Elem()
}

func (o ZIAFirewallFilteringRuleNwServicesPtrOutput) ToZIAFirewallFilteringRuleNwServicesPtrOutput() ZIAFirewallFilteringRuleNwServicesPtrOutput {
	return o
}

func (o ZIAFirewallFilteringRuleNwServicesPtrOutput) ToZIAFirewallFilteringRuleNwServicesPtrOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleNwServicesPtrOutput {
	return o
}

func (o ZIAFirewallFilteringRuleNwServicesPtrOutput) Elem() ZIAFirewallFilteringRuleNwServicesOutput {
	return o.ApplyT(func(v *ZIAFirewallFilteringRuleNwServices) ZIAFirewallFilteringRuleNwServices {
		if v != nil {
			return *v
		}
		var ret ZIAFirewallFilteringRuleNwServices
		return ret
	}).(ZIAFirewallFilteringRuleNwServicesOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIAFirewallFilteringRuleNwServicesPtrOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *ZIAFirewallFilteringRuleNwServices) []int {
		if v == nil {
			return nil
		}
		return v.Ids
	}).(pulumi.IntArrayOutput)
}

type ZIAFirewallFilteringRuleSrcIpGroups struct {
	// Identifier that uniquely identifies an entity
	Ids []int `pulumi:"ids"`
}

// ZIAFirewallFilteringRuleSrcIpGroupsInput is an input type that accepts ZIAFirewallFilteringRuleSrcIpGroupsArgs and ZIAFirewallFilteringRuleSrcIpGroupsOutput values.
// You can construct a concrete instance of `ZIAFirewallFilteringRuleSrcIpGroupsInput` via:
//
//	ZIAFirewallFilteringRuleSrcIpGroupsArgs{...}
type ZIAFirewallFilteringRuleSrcIpGroupsInput interface {
	pulumi.Input

	ToZIAFirewallFilteringRuleSrcIpGroupsOutput() ZIAFirewallFilteringRuleSrcIpGroupsOutput
	ToZIAFirewallFilteringRuleSrcIpGroupsOutputWithContext(context.Context) ZIAFirewallFilteringRuleSrcIpGroupsOutput
}

type ZIAFirewallFilteringRuleSrcIpGroupsArgs struct {
	// Identifier that uniquely identifies an entity
	Ids pulumi.IntArrayInput `pulumi:"ids"`
}

func (ZIAFirewallFilteringRuleSrcIpGroupsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAFirewallFilteringRuleSrcIpGroups)(nil)).Elem()
}

func (i ZIAFirewallFilteringRuleSrcIpGroupsArgs) ToZIAFirewallFilteringRuleSrcIpGroupsOutput() ZIAFirewallFilteringRuleSrcIpGroupsOutput {
	return i.ToZIAFirewallFilteringRuleSrcIpGroupsOutputWithContext(context.Background())
}

func (i ZIAFirewallFilteringRuleSrcIpGroupsArgs) ToZIAFirewallFilteringRuleSrcIpGroupsOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleSrcIpGroupsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringRuleSrcIpGroupsOutput)
}

func (i ZIAFirewallFilteringRuleSrcIpGroupsArgs) ToZIAFirewallFilteringRuleSrcIpGroupsPtrOutput() ZIAFirewallFilteringRuleSrcIpGroupsPtrOutput {
	return i.ToZIAFirewallFilteringRuleSrcIpGroupsPtrOutputWithContext(context.Background())
}

func (i ZIAFirewallFilteringRuleSrcIpGroupsArgs) ToZIAFirewallFilteringRuleSrcIpGroupsPtrOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleSrcIpGroupsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringRuleSrcIpGroupsOutput).ToZIAFirewallFilteringRuleSrcIpGroupsPtrOutputWithContext(ctx)
}

// ZIAFirewallFilteringRuleSrcIpGroupsPtrInput is an input type that accepts ZIAFirewallFilteringRuleSrcIpGroupsArgs, ZIAFirewallFilteringRuleSrcIpGroupsPtr and ZIAFirewallFilteringRuleSrcIpGroupsPtrOutput values.
// You can construct a concrete instance of `ZIAFirewallFilteringRuleSrcIpGroupsPtrInput` via:
//
//	        ZIAFirewallFilteringRuleSrcIpGroupsArgs{...}
//
//	or:
//
//	        nil
type ZIAFirewallFilteringRuleSrcIpGroupsPtrInput interface {
	pulumi.Input

	ToZIAFirewallFilteringRuleSrcIpGroupsPtrOutput() ZIAFirewallFilteringRuleSrcIpGroupsPtrOutput
	ToZIAFirewallFilteringRuleSrcIpGroupsPtrOutputWithContext(context.Context) ZIAFirewallFilteringRuleSrcIpGroupsPtrOutput
}

type ziafirewallFilteringRuleSrcIpGroupsPtrType ZIAFirewallFilteringRuleSrcIpGroupsArgs

func ZIAFirewallFilteringRuleSrcIpGroupsPtr(v *ZIAFirewallFilteringRuleSrcIpGroupsArgs) ZIAFirewallFilteringRuleSrcIpGroupsPtrInput {
	return (*ziafirewallFilteringRuleSrcIpGroupsPtrType)(v)
}

func (*ziafirewallFilteringRuleSrcIpGroupsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAFirewallFilteringRuleSrcIpGroups)(nil)).Elem()
}

func (i *ziafirewallFilteringRuleSrcIpGroupsPtrType) ToZIAFirewallFilteringRuleSrcIpGroupsPtrOutput() ZIAFirewallFilteringRuleSrcIpGroupsPtrOutput {
	return i.ToZIAFirewallFilteringRuleSrcIpGroupsPtrOutputWithContext(context.Background())
}

func (i *ziafirewallFilteringRuleSrcIpGroupsPtrType) ToZIAFirewallFilteringRuleSrcIpGroupsPtrOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleSrcIpGroupsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringRuleSrcIpGroupsPtrOutput)
}

type ZIAFirewallFilteringRuleSrcIpGroupsOutput struct{ *pulumi.OutputState }

func (ZIAFirewallFilteringRuleSrcIpGroupsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAFirewallFilteringRuleSrcIpGroups)(nil)).Elem()
}

func (o ZIAFirewallFilteringRuleSrcIpGroupsOutput) ToZIAFirewallFilteringRuleSrcIpGroupsOutput() ZIAFirewallFilteringRuleSrcIpGroupsOutput {
	return o
}

func (o ZIAFirewallFilteringRuleSrcIpGroupsOutput) ToZIAFirewallFilteringRuleSrcIpGroupsOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleSrcIpGroupsOutput {
	return o
}

func (o ZIAFirewallFilteringRuleSrcIpGroupsOutput) ToZIAFirewallFilteringRuleSrcIpGroupsPtrOutput() ZIAFirewallFilteringRuleSrcIpGroupsPtrOutput {
	return o.ToZIAFirewallFilteringRuleSrcIpGroupsPtrOutputWithContext(context.Background())
}

func (o ZIAFirewallFilteringRuleSrcIpGroupsOutput) ToZIAFirewallFilteringRuleSrcIpGroupsPtrOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleSrcIpGroupsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZIAFirewallFilteringRuleSrcIpGroups) *ZIAFirewallFilteringRuleSrcIpGroups {
		return &v
	}).(ZIAFirewallFilteringRuleSrcIpGroupsPtrOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIAFirewallFilteringRuleSrcIpGroupsOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ZIAFirewallFilteringRuleSrcIpGroups) []int { return v.Ids }).(pulumi.IntArrayOutput)
}

type ZIAFirewallFilteringRuleSrcIpGroupsPtrOutput struct{ *pulumi.OutputState }

func (ZIAFirewallFilteringRuleSrcIpGroupsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAFirewallFilteringRuleSrcIpGroups)(nil)).Elem()
}

func (o ZIAFirewallFilteringRuleSrcIpGroupsPtrOutput) ToZIAFirewallFilteringRuleSrcIpGroupsPtrOutput() ZIAFirewallFilteringRuleSrcIpGroupsPtrOutput {
	return o
}

func (o ZIAFirewallFilteringRuleSrcIpGroupsPtrOutput) ToZIAFirewallFilteringRuleSrcIpGroupsPtrOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleSrcIpGroupsPtrOutput {
	return o
}

func (o ZIAFirewallFilteringRuleSrcIpGroupsPtrOutput) Elem() ZIAFirewallFilteringRuleSrcIpGroupsOutput {
	return o.ApplyT(func(v *ZIAFirewallFilteringRuleSrcIpGroups) ZIAFirewallFilteringRuleSrcIpGroups {
		if v != nil {
			return *v
		}
		var ret ZIAFirewallFilteringRuleSrcIpGroups
		return ret
	}).(ZIAFirewallFilteringRuleSrcIpGroupsOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIAFirewallFilteringRuleSrcIpGroupsPtrOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *ZIAFirewallFilteringRuleSrcIpGroups) []int {
		if v == nil {
			return nil
		}
		return v.Ids
	}).(pulumi.IntArrayOutput)
}

type ZIAFirewallFilteringRuleTimeWindows struct {
	// Identifier that uniquely identifies an entity
	Ids []int `pulumi:"ids"`
}

// ZIAFirewallFilteringRuleTimeWindowsInput is an input type that accepts ZIAFirewallFilteringRuleTimeWindowsArgs and ZIAFirewallFilteringRuleTimeWindowsOutput values.
// You can construct a concrete instance of `ZIAFirewallFilteringRuleTimeWindowsInput` via:
//
//	ZIAFirewallFilteringRuleTimeWindowsArgs{...}
type ZIAFirewallFilteringRuleTimeWindowsInput interface {
	pulumi.Input

	ToZIAFirewallFilteringRuleTimeWindowsOutput() ZIAFirewallFilteringRuleTimeWindowsOutput
	ToZIAFirewallFilteringRuleTimeWindowsOutputWithContext(context.Context) ZIAFirewallFilteringRuleTimeWindowsOutput
}

type ZIAFirewallFilteringRuleTimeWindowsArgs struct {
	// Identifier that uniquely identifies an entity
	Ids pulumi.IntArrayInput `pulumi:"ids"`
}

func (ZIAFirewallFilteringRuleTimeWindowsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAFirewallFilteringRuleTimeWindows)(nil)).Elem()
}

func (i ZIAFirewallFilteringRuleTimeWindowsArgs) ToZIAFirewallFilteringRuleTimeWindowsOutput() ZIAFirewallFilteringRuleTimeWindowsOutput {
	return i.ToZIAFirewallFilteringRuleTimeWindowsOutputWithContext(context.Background())
}

func (i ZIAFirewallFilteringRuleTimeWindowsArgs) ToZIAFirewallFilteringRuleTimeWindowsOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleTimeWindowsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringRuleTimeWindowsOutput)
}

func (i ZIAFirewallFilteringRuleTimeWindowsArgs) ToZIAFirewallFilteringRuleTimeWindowsPtrOutput() ZIAFirewallFilteringRuleTimeWindowsPtrOutput {
	return i.ToZIAFirewallFilteringRuleTimeWindowsPtrOutputWithContext(context.Background())
}

func (i ZIAFirewallFilteringRuleTimeWindowsArgs) ToZIAFirewallFilteringRuleTimeWindowsPtrOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleTimeWindowsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringRuleTimeWindowsOutput).ToZIAFirewallFilteringRuleTimeWindowsPtrOutputWithContext(ctx)
}

// ZIAFirewallFilteringRuleTimeWindowsPtrInput is an input type that accepts ZIAFirewallFilteringRuleTimeWindowsArgs, ZIAFirewallFilteringRuleTimeWindowsPtr and ZIAFirewallFilteringRuleTimeWindowsPtrOutput values.
// You can construct a concrete instance of `ZIAFirewallFilteringRuleTimeWindowsPtrInput` via:
//
//	        ZIAFirewallFilteringRuleTimeWindowsArgs{...}
//
//	or:
//
//	        nil
type ZIAFirewallFilteringRuleTimeWindowsPtrInput interface {
	pulumi.Input

	ToZIAFirewallFilteringRuleTimeWindowsPtrOutput() ZIAFirewallFilteringRuleTimeWindowsPtrOutput
	ToZIAFirewallFilteringRuleTimeWindowsPtrOutputWithContext(context.Context) ZIAFirewallFilteringRuleTimeWindowsPtrOutput
}

type ziafirewallFilteringRuleTimeWindowsPtrType ZIAFirewallFilteringRuleTimeWindowsArgs

func ZIAFirewallFilteringRuleTimeWindowsPtr(v *ZIAFirewallFilteringRuleTimeWindowsArgs) ZIAFirewallFilteringRuleTimeWindowsPtrInput {
	return (*ziafirewallFilteringRuleTimeWindowsPtrType)(v)
}

func (*ziafirewallFilteringRuleTimeWindowsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAFirewallFilteringRuleTimeWindows)(nil)).Elem()
}

func (i *ziafirewallFilteringRuleTimeWindowsPtrType) ToZIAFirewallFilteringRuleTimeWindowsPtrOutput() ZIAFirewallFilteringRuleTimeWindowsPtrOutput {
	return i.ToZIAFirewallFilteringRuleTimeWindowsPtrOutputWithContext(context.Background())
}

func (i *ziafirewallFilteringRuleTimeWindowsPtrType) ToZIAFirewallFilteringRuleTimeWindowsPtrOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleTimeWindowsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringRuleTimeWindowsPtrOutput)
}

type ZIAFirewallFilteringRuleTimeWindowsOutput struct{ *pulumi.OutputState }

func (ZIAFirewallFilteringRuleTimeWindowsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAFirewallFilteringRuleTimeWindows)(nil)).Elem()
}

func (o ZIAFirewallFilteringRuleTimeWindowsOutput) ToZIAFirewallFilteringRuleTimeWindowsOutput() ZIAFirewallFilteringRuleTimeWindowsOutput {
	return o
}

func (o ZIAFirewallFilteringRuleTimeWindowsOutput) ToZIAFirewallFilteringRuleTimeWindowsOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleTimeWindowsOutput {
	return o
}

func (o ZIAFirewallFilteringRuleTimeWindowsOutput) ToZIAFirewallFilteringRuleTimeWindowsPtrOutput() ZIAFirewallFilteringRuleTimeWindowsPtrOutput {
	return o.ToZIAFirewallFilteringRuleTimeWindowsPtrOutputWithContext(context.Background())
}

func (o ZIAFirewallFilteringRuleTimeWindowsOutput) ToZIAFirewallFilteringRuleTimeWindowsPtrOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleTimeWindowsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZIAFirewallFilteringRuleTimeWindows) *ZIAFirewallFilteringRuleTimeWindows {
		return &v
	}).(ZIAFirewallFilteringRuleTimeWindowsPtrOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIAFirewallFilteringRuleTimeWindowsOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ZIAFirewallFilteringRuleTimeWindows) []int { return v.Ids }).(pulumi.IntArrayOutput)
}

type ZIAFirewallFilteringRuleTimeWindowsPtrOutput struct{ *pulumi.OutputState }

func (ZIAFirewallFilteringRuleTimeWindowsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAFirewallFilteringRuleTimeWindows)(nil)).Elem()
}

func (o ZIAFirewallFilteringRuleTimeWindowsPtrOutput) ToZIAFirewallFilteringRuleTimeWindowsPtrOutput() ZIAFirewallFilteringRuleTimeWindowsPtrOutput {
	return o
}

func (o ZIAFirewallFilteringRuleTimeWindowsPtrOutput) ToZIAFirewallFilteringRuleTimeWindowsPtrOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleTimeWindowsPtrOutput {
	return o
}

func (o ZIAFirewallFilteringRuleTimeWindowsPtrOutput) Elem() ZIAFirewallFilteringRuleTimeWindowsOutput {
	return o.ApplyT(func(v *ZIAFirewallFilteringRuleTimeWindows) ZIAFirewallFilteringRuleTimeWindows {
		if v != nil {
			return *v
		}
		var ret ZIAFirewallFilteringRuleTimeWindows
		return ret
	}).(ZIAFirewallFilteringRuleTimeWindowsOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIAFirewallFilteringRuleTimeWindowsPtrOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *ZIAFirewallFilteringRuleTimeWindows) []int {
		if v == nil {
			return nil
		}
		return v.Ids
	}).(pulumi.IntArrayOutput)
}

type ZIAFirewallFilteringRuleUsers struct {
	// Identifier that uniquely identifies an entity
	Ids []int `pulumi:"ids"`
}

// ZIAFirewallFilteringRuleUsersInput is an input type that accepts ZIAFirewallFilteringRuleUsersArgs and ZIAFirewallFilteringRuleUsersOutput values.
// You can construct a concrete instance of `ZIAFirewallFilteringRuleUsersInput` via:
//
//	ZIAFirewallFilteringRuleUsersArgs{...}
type ZIAFirewallFilteringRuleUsersInput interface {
	pulumi.Input

	ToZIAFirewallFilteringRuleUsersOutput() ZIAFirewallFilteringRuleUsersOutput
	ToZIAFirewallFilteringRuleUsersOutputWithContext(context.Context) ZIAFirewallFilteringRuleUsersOutput
}

type ZIAFirewallFilteringRuleUsersArgs struct {
	// Identifier that uniquely identifies an entity
	Ids pulumi.IntArrayInput `pulumi:"ids"`
}

func (ZIAFirewallFilteringRuleUsersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAFirewallFilteringRuleUsers)(nil)).Elem()
}

func (i ZIAFirewallFilteringRuleUsersArgs) ToZIAFirewallFilteringRuleUsersOutput() ZIAFirewallFilteringRuleUsersOutput {
	return i.ToZIAFirewallFilteringRuleUsersOutputWithContext(context.Background())
}

func (i ZIAFirewallFilteringRuleUsersArgs) ToZIAFirewallFilteringRuleUsersOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleUsersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringRuleUsersOutput)
}

func (i ZIAFirewallFilteringRuleUsersArgs) ToZIAFirewallFilteringRuleUsersPtrOutput() ZIAFirewallFilteringRuleUsersPtrOutput {
	return i.ToZIAFirewallFilteringRuleUsersPtrOutputWithContext(context.Background())
}

func (i ZIAFirewallFilteringRuleUsersArgs) ToZIAFirewallFilteringRuleUsersPtrOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleUsersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringRuleUsersOutput).ToZIAFirewallFilteringRuleUsersPtrOutputWithContext(ctx)
}

// ZIAFirewallFilteringRuleUsersPtrInput is an input type that accepts ZIAFirewallFilteringRuleUsersArgs, ZIAFirewallFilteringRuleUsersPtr and ZIAFirewallFilteringRuleUsersPtrOutput values.
// You can construct a concrete instance of `ZIAFirewallFilteringRuleUsersPtrInput` via:
//
//	        ZIAFirewallFilteringRuleUsersArgs{...}
//
//	or:
//
//	        nil
type ZIAFirewallFilteringRuleUsersPtrInput interface {
	pulumi.Input

	ToZIAFirewallFilteringRuleUsersPtrOutput() ZIAFirewallFilteringRuleUsersPtrOutput
	ToZIAFirewallFilteringRuleUsersPtrOutputWithContext(context.Context) ZIAFirewallFilteringRuleUsersPtrOutput
}

type ziafirewallFilteringRuleUsersPtrType ZIAFirewallFilteringRuleUsersArgs

func ZIAFirewallFilteringRuleUsersPtr(v *ZIAFirewallFilteringRuleUsersArgs) ZIAFirewallFilteringRuleUsersPtrInput {
	return (*ziafirewallFilteringRuleUsersPtrType)(v)
}

func (*ziafirewallFilteringRuleUsersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAFirewallFilteringRuleUsers)(nil)).Elem()
}

func (i *ziafirewallFilteringRuleUsersPtrType) ToZIAFirewallFilteringRuleUsersPtrOutput() ZIAFirewallFilteringRuleUsersPtrOutput {
	return i.ToZIAFirewallFilteringRuleUsersPtrOutputWithContext(context.Background())
}

func (i *ziafirewallFilteringRuleUsersPtrType) ToZIAFirewallFilteringRuleUsersPtrOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleUsersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringRuleUsersPtrOutput)
}

type ZIAFirewallFilteringRuleUsersOutput struct{ *pulumi.OutputState }

func (ZIAFirewallFilteringRuleUsersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAFirewallFilteringRuleUsers)(nil)).Elem()
}

func (o ZIAFirewallFilteringRuleUsersOutput) ToZIAFirewallFilteringRuleUsersOutput() ZIAFirewallFilteringRuleUsersOutput {
	return o
}

func (o ZIAFirewallFilteringRuleUsersOutput) ToZIAFirewallFilteringRuleUsersOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleUsersOutput {
	return o
}

func (o ZIAFirewallFilteringRuleUsersOutput) ToZIAFirewallFilteringRuleUsersPtrOutput() ZIAFirewallFilteringRuleUsersPtrOutput {
	return o.ToZIAFirewallFilteringRuleUsersPtrOutputWithContext(context.Background())
}

func (o ZIAFirewallFilteringRuleUsersOutput) ToZIAFirewallFilteringRuleUsersPtrOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleUsersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZIAFirewallFilteringRuleUsers) *ZIAFirewallFilteringRuleUsers {
		return &v
	}).(ZIAFirewallFilteringRuleUsersPtrOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIAFirewallFilteringRuleUsersOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ZIAFirewallFilteringRuleUsers) []int { return v.Ids }).(pulumi.IntArrayOutput)
}

type ZIAFirewallFilteringRuleUsersPtrOutput struct{ *pulumi.OutputState }

func (ZIAFirewallFilteringRuleUsersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAFirewallFilteringRuleUsers)(nil)).Elem()
}

func (o ZIAFirewallFilteringRuleUsersPtrOutput) ToZIAFirewallFilteringRuleUsersPtrOutput() ZIAFirewallFilteringRuleUsersPtrOutput {
	return o
}

func (o ZIAFirewallFilteringRuleUsersPtrOutput) ToZIAFirewallFilteringRuleUsersPtrOutputWithContext(ctx context.Context) ZIAFirewallFilteringRuleUsersPtrOutput {
	return o
}

func (o ZIAFirewallFilteringRuleUsersPtrOutput) Elem() ZIAFirewallFilteringRuleUsersOutput {
	return o.ApplyT(func(v *ZIAFirewallFilteringRuleUsers) ZIAFirewallFilteringRuleUsers {
		if v != nil {
			return *v
		}
		var ret ZIAFirewallFilteringRuleUsers
		return ret
	}).(ZIAFirewallFilteringRuleUsersOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIAFirewallFilteringRuleUsersPtrOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *ZIAFirewallFilteringRuleUsers) []int {
		if v == nil {
			return nil
		}
		return v.Ids
	}).(pulumi.IntArrayOutput)
}

type ZIAFirewallFilteringServiceGroupsService struct {
	Ids []int `pulumi:"ids"`
}

// ZIAFirewallFilteringServiceGroupsServiceInput is an input type that accepts ZIAFirewallFilteringServiceGroupsServiceArgs and ZIAFirewallFilteringServiceGroupsServiceOutput values.
// You can construct a concrete instance of `ZIAFirewallFilteringServiceGroupsServiceInput` via:
//
//	ZIAFirewallFilteringServiceGroupsServiceArgs{...}
type ZIAFirewallFilteringServiceGroupsServiceInput interface {
	pulumi.Input

	ToZIAFirewallFilteringServiceGroupsServiceOutput() ZIAFirewallFilteringServiceGroupsServiceOutput
	ToZIAFirewallFilteringServiceGroupsServiceOutputWithContext(context.Context) ZIAFirewallFilteringServiceGroupsServiceOutput
}

type ZIAFirewallFilteringServiceGroupsServiceArgs struct {
	Ids pulumi.IntArrayInput `pulumi:"ids"`
}

func (ZIAFirewallFilteringServiceGroupsServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAFirewallFilteringServiceGroupsService)(nil)).Elem()
}

func (i ZIAFirewallFilteringServiceGroupsServiceArgs) ToZIAFirewallFilteringServiceGroupsServiceOutput() ZIAFirewallFilteringServiceGroupsServiceOutput {
	return i.ToZIAFirewallFilteringServiceGroupsServiceOutputWithContext(context.Background())
}

func (i ZIAFirewallFilteringServiceGroupsServiceArgs) ToZIAFirewallFilteringServiceGroupsServiceOutputWithContext(ctx context.Context) ZIAFirewallFilteringServiceGroupsServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringServiceGroupsServiceOutput)
}

// ZIAFirewallFilteringServiceGroupsServiceArrayInput is an input type that accepts ZIAFirewallFilteringServiceGroupsServiceArray and ZIAFirewallFilteringServiceGroupsServiceArrayOutput values.
// You can construct a concrete instance of `ZIAFirewallFilteringServiceGroupsServiceArrayInput` via:
//
//	ZIAFirewallFilteringServiceGroupsServiceArray{ ZIAFirewallFilteringServiceGroupsServiceArgs{...} }
type ZIAFirewallFilteringServiceGroupsServiceArrayInput interface {
	pulumi.Input

	ToZIAFirewallFilteringServiceGroupsServiceArrayOutput() ZIAFirewallFilteringServiceGroupsServiceArrayOutput
	ToZIAFirewallFilteringServiceGroupsServiceArrayOutputWithContext(context.Context) ZIAFirewallFilteringServiceGroupsServiceArrayOutput
}

type ZIAFirewallFilteringServiceGroupsServiceArray []ZIAFirewallFilteringServiceGroupsServiceInput

func (ZIAFirewallFilteringServiceGroupsServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZIAFirewallFilteringServiceGroupsService)(nil)).Elem()
}

func (i ZIAFirewallFilteringServiceGroupsServiceArray) ToZIAFirewallFilteringServiceGroupsServiceArrayOutput() ZIAFirewallFilteringServiceGroupsServiceArrayOutput {
	return i.ToZIAFirewallFilteringServiceGroupsServiceArrayOutputWithContext(context.Background())
}

func (i ZIAFirewallFilteringServiceGroupsServiceArray) ToZIAFirewallFilteringServiceGroupsServiceArrayOutputWithContext(ctx context.Context) ZIAFirewallFilteringServiceGroupsServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringServiceGroupsServiceArrayOutput)
}

type ZIAFirewallFilteringServiceGroupsServiceOutput struct{ *pulumi.OutputState }

func (ZIAFirewallFilteringServiceGroupsServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAFirewallFilteringServiceGroupsService)(nil)).Elem()
}

func (o ZIAFirewallFilteringServiceGroupsServiceOutput) ToZIAFirewallFilteringServiceGroupsServiceOutput() ZIAFirewallFilteringServiceGroupsServiceOutput {
	return o
}

func (o ZIAFirewallFilteringServiceGroupsServiceOutput) ToZIAFirewallFilteringServiceGroupsServiceOutputWithContext(ctx context.Context) ZIAFirewallFilteringServiceGroupsServiceOutput {
	return o
}

func (o ZIAFirewallFilteringServiceGroupsServiceOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ZIAFirewallFilteringServiceGroupsService) []int { return v.Ids }).(pulumi.IntArrayOutput)
}

type ZIAFirewallFilteringServiceGroupsServiceArrayOutput struct{ *pulumi.OutputState }

func (ZIAFirewallFilteringServiceGroupsServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZIAFirewallFilteringServiceGroupsService)(nil)).Elem()
}

func (o ZIAFirewallFilteringServiceGroupsServiceArrayOutput) ToZIAFirewallFilteringServiceGroupsServiceArrayOutput() ZIAFirewallFilteringServiceGroupsServiceArrayOutput {
	return o
}

func (o ZIAFirewallFilteringServiceGroupsServiceArrayOutput) ToZIAFirewallFilteringServiceGroupsServiceArrayOutputWithContext(ctx context.Context) ZIAFirewallFilteringServiceGroupsServiceArrayOutput {
	return o
}

func (o ZIAFirewallFilteringServiceGroupsServiceArrayOutput) Index(i pulumi.IntInput) ZIAFirewallFilteringServiceGroupsServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZIAFirewallFilteringServiceGroupsService {
		return vs[0].([]ZIAFirewallFilteringServiceGroupsService)[vs[1].(int)]
	}).(ZIAFirewallFilteringServiceGroupsServiceOutput)
}

type ZIALocationManagementVpnCredential struct {
	Comments *string `pulumi:"comments"`
	Fqdn     *string `pulumi:"fqdn"`
	// VPN credential resource id. The value is required if `ipAddresses` are not defined.
	Id           *int    `pulumi:"id"`
	IpAddress    *string `pulumi:"ipAddress"`
	PreSharedKey *string `pulumi:"preSharedKey"`
	Type         *string `pulumi:"type"`
}

// ZIALocationManagementVpnCredentialInput is an input type that accepts ZIALocationManagementVpnCredentialArgs and ZIALocationManagementVpnCredentialOutput values.
// You can construct a concrete instance of `ZIALocationManagementVpnCredentialInput` via:
//
//	ZIALocationManagementVpnCredentialArgs{...}
type ZIALocationManagementVpnCredentialInput interface {
	pulumi.Input

	ToZIALocationManagementVpnCredentialOutput() ZIALocationManagementVpnCredentialOutput
	ToZIALocationManagementVpnCredentialOutputWithContext(context.Context) ZIALocationManagementVpnCredentialOutput
}

type ZIALocationManagementVpnCredentialArgs struct {
	Comments pulumi.StringPtrInput `pulumi:"comments"`
	Fqdn     pulumi.StringPtrInput `pulumi:"fqdn"`
	// VPN credential resource id. The value is required if `ipAddresses` are not defined.
	Id           pulumi.IntPtrInput    `pulumi:"id"`
	IpAddress    pulumi.StringPtrInput `pulumi:"ipAddress"`
	PreSharedKey pulumi.StringPtrInput `pulumi:"preSharedKey"`
	Type         pulumi.StringPtrInput `pulumi:"type"`
}

func (ZIALocationManagementVpnCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIALocationManagementVpnCredential)(nil)).Elem()
}

func (i ZIALocationManagementVpnCredentialArgs) ToZIALocationManagementVpnCredentialOutput() ZIALocationManagementVpnCredentialOutput {
	return i.ToZIALocationManagementVpnCredentialOutputWithContext(context.Background())
}

func (i ZIALocationManagementVpnCredentialArgs) ToZIALocationManagementVpnCredentialOutputWithContext(ctx context.Context) ZIALocationManagementVpnCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIALocationManagementVpnCredentialOutput)
}

// ZIALocationManagementVpnCredentialArrayInput is an input type that accepts ZIALocationManagementVpnCredentialArray and ZIALocationManagementVpnCredentialArrayOutput values.
// You can construct a concrete instance of `ZIALocationManagementVpnCredentialArrayInput` via:
//
//	ZIALocationManagementVpnCredentialArray{ ZIALocationManagementVpnCredentialArgs{...} }
type ZIALocationManagementVpnCredentialArrayInput interface {
	pulumi.Input

	ToZIALocationManagementVpnCredentialArrayOutput() ZIALocationManagementVpnCredentialArrayOutput
	ToZIALocationManagementVpnCredentialArrayOutputWithContext(context.Context) ZIALocationManagementVpnCredentialArrayOutput
}

type ZIALocationManagementVpnCredentialArray []ZIALocationManagementVpnCredentialInput

func (ZIALocationManagementVpnCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZIALocationManagementVpnCredential)(nil)).Elem()
}

func (i ZIALocationManagementVpnCredentialArray) ToZIALocationManagementVpnCredentialArrayOutput() ZIALocationManagementVpnCredentialArrayOutput {
	return i.ToZIALocationManagementVpnCredentialArrayOutputWithContext(context.Background())
}

func (i ZIALocationManagementVpnCredentialArray) ToZIALocationManagementVpnCredentialArrayOutputWithContext(ctx context.Context) ZIALocationManagementVpnCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIALocationManagementVpnCredentialArrayOutput)
}

type ZIALocationManagementVpnCredentialOutput struct{ *pulumi.OutputState }

func (ZIALocationManagementVpnCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIALocationManagementVpnCredential)(nil)).Elem()
}

func (o ZIALocationManagementVpnCredentialOutput) ToZIALocationManagementVpnCredentialOutput() ZIALocationManagementVpnCredentialOutput {
	return o
}

func (o ZIALocationManagementVpnCredentialOutput) ToZIALocationManagementVpnCredentialOutputWithContext(ctx context.Context) ZIALocationManagementVpnCredentialOutput {
	return o
}

func (o ZIALocationManagementVpnCredentialOutput) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZIALocationManagementVpnCredential) *string { return v.Comments }).(pulumi.StringPtrOutput)
}

func (o ZIALocationManagementVpnCredentialOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZIALocationManagementVpnCredential) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// VPN credential resource id. The value is required if `ipAddresses` are not defined.
func (o ZIALocationManagementVpnCredentialOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZIALocationManagementVpnCredential) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o ZIALocationManagementVpnCredentialOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZIALocationManagementVpnCredential) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

func (o ZIALocationManagementVpnCredentialOutput) PreSharedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZIALocationManagementVpnCredential) *string { return v.PreSharedKey }).(pulumi.StringPtrOutput)
}

func (o ZIALocationManagementVpnCredentialOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZIALocationManagementVpnCredential) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ZIALocationManagementVpnCredentialArrayOutput struct{ *pulumi.OutputState }

func (ZIALocationManagementVpnCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZIALocationManagementVpnCredential)(nil)).Elem()
}

func (o ZIALocationManagementVpnCredentialArrayOutput) ToZIALocationManagementVpnCredentialArrayOutput() ZIALocationManagementVpnCredentialArrayOutput {
	return o
}

func (o ZIALocationManagementVpnCredentialArrayOutput) ToZIALocationManagementVpnCredentialArrayOutputWithContext(ctx context.Context) ZIALocationManagementVpnCredentialArrayOutput {
	return o
}

func (o ZIALocationManagementVpnCredentialArrayOutput) Index(i pulumi.IntInput) ZIALocationManagementVpnCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZIALocationManagementVpnCredential {
		return vs[0].([]ZIALocationManagementVpnCredential)[vs[1].(int)]
	}).(ZIALocationManagementVpnCredentialOutput)
}

type ZIARuleLabelsCreatedBy struct {
	Extensions map[string]string `pulumi:"extensions"`
	Id         *int              `pulumi:"id"`
	// The name of the devices to be created.
	Name *string `pulumi:"name"`
}

// ZIARuleLabelsCreatedByInput is an input type that accepts ZIARuleLabelsCreatedByArgs and ZIARuleLabelsCreatedByOutput values.
// You can construct a concrete instance of `ZIARuleLabelsCreatedByInput` via:
//
//	ZIARuleLabelsCreatedByArgs{...}
type ZIARuleLabelsCreatedByInput interface {
	pulumi.Input

	ToZIARuleLabelsCreatedByOutput() ZIARuleLabelsCreatedByOutput
	ToZIARuleLabelsCreatedByOutputWithContext(context.Context) ZIARuleLabelsCreatedByOutput
}

type ZIARuleLabelsCreatedByArgs struct {
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	Id         pulumi.IntPtrInput    `pulumi:"id"`
	// The name of the devices to be created.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ZIARuleLabelsCreatedByArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIARuleLabelsCreatedBy)(nil)).Elem()
}

func (i ZIARuleLabelsCreatedByArgs) ToZIARuleLabelsCreatedByOutput() ZIARuleLabelsCreatedByOutput {
	return i.ToZIARuleLabelsCreatedByOutputWithContext(context.Background())
}

func (i ZIARuleLabelsCreatedByArgs) ToZIARuleLabelsCreatedByOutputWithContext(ctx context.Context) ZIARuleLabelsCreatedByOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIARuleLabelsCreatedByOutput)
}

// ZIARuleLabelsCreatedByArrayInput is an input type that accepts ZIARuleLabelsCreatedByArray and ZIARuleLabelsCreatedByArrayOutput values.
// You can construct a concrete instance of `ZIARuleLabelsCreatedByArrayInput` via:
//
//	ZIARuleLabelsCreatedByArray{ ZIARuleLabelsCreatedByArgs{...} }
type ZIARuleLabelsCreatedByArrayInput interface {
	pulumi.Input

	ToZIARuleLabelsCreatedByArrayOutput() ZIARuleLabelsCreatedByArrayOutput
	ToZIARuleLabelsCreatedByArrayOutputWithContext(context.Context) ZIARuleLabelsCreatedByArrayOutput
}

type ZIARuleLabelsCreatedByArray []ZIARuleLabelsCreatedByInput

func (ZIARuleLabelsCreatedByArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZIARuleLabelsCreatedBy)(nil)).Elem()
}

func (i ZIARuleLabelsCreatedByArray) ToZIARuleLabelsCreatedByArrayOutput() ZIARuleLabelsCreatedByArrayOutput {
	return i.ToZIARuleLabelsCreatedByArrayOutputWithContext(context.Background())
}

func (i ZIARuleLabelsCreatedByArray) ToZIARuleLabelsCreatedByArrayOutputWithContext(ctx context.Context) ZIARuleLabelsCreatedByArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIARuleLabelsCreatedByArrayOutput)
}

type ZIARuleLabelsCreatedByOutput struct{ *pulumi.OutputState }

func (ZIARuleLabelsCreatedByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIARuleLabelsCreatedBy)(nil)).Elem()
}

func (o ZIARuleLabelsCreatedByOutput) ToZIARuleLabelsCreatedByOutput() ZIARuleLabelsCreatedByOutput {
	return o
}

func (o ZIARuleLabelsCreatedByOutput) ToZIARuleLabelsCreatedByOutputWithContext(ctx context.Context) ZIARuleLabelsCreatedByOutput {
	return o
}

func (o ZIARuleLabelsCreatedByOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v ZIARuleLabelsCreatedBy) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

func (o ZIARuleLabelsCreatedByOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZIARuleLabelsCreatedBy) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// The name of the devices to be created.
func (o ZIARuleLabelsCreatedByOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZIARuleLabelsCreatedBy) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ZIARuleLabelsCreatedByArrayOutput struct{ *pulumi.OutputState }

func (ZIARuleLabelsCreatedByArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZIARuleLabelsCreatedBy)(nil)).Elem()
}

func (o ZIARuleLabelsCreatedByArrayOutput) ToZIARuleLabelsCreatedByArrayOutput() ZIARuleLabelsCreatedByArrayOutput {
	return o
}

func (o ZIARuleLabelsCreatedByArrayOutput) ToZIARuleLabelsCreatedByArrayOutputWithContext(ctx context.Context) ZIARuleLabelsCreatedByArrayOutput {
	return o
}

func (o ZIARuleLabelsCreatedByArrayOutput) Index(i pulumi.IntInput) ZIARuleLabelsCreatedByOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZIARuleLabelsCreatedBy {
		return vs[0].([]ZIARuleLabelsCreatedBy)[vs[1].(int)]
	}).(ZIARuleLabelsCreatedByOutput)
}

type ZIARuleLabelsLastModifiedBy struct {
	Extensions map[string]string `pulumi:"extensions"`
	Id         *int              `pulumi:"id"`
	// The name of the devices to be created.
	Name *string `pulumi:"name"`
}

// ZIARuleLabelsLastModifiedByInput is an input type that accepts ZIARuleLabelsLastModifiedByArgs and ZIARuleLabelsLastModifiedByOutput values.
// You can construct a concrete instance of `ZIARuleLabelsLastModifiedByInput` via:
//
//	ZIARuleLabelsLastModifiedByArgs{...}
type ZIARuleLabelsLastModifiedByInput interface {
	pulumi.Input

	ToZIARuleLabelsLastModifiedByOutput() ZIARuleLabelsLastModifiedByOutput
	ToZIARuleLabelsLastModifiedByOutputWithContext(context.Context) ZIARuleLabelsLastModifiedByOutput
}

type ZIARuleLabelsLastModifiedByArgs struct {
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	Id         pulumi.IntPtrInput    `pulumi:"id"`
	// The name of the devices to be created.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ZIARuleLabelsLastModifiedByArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIARuleLabelsLastModifiedBy)(nil)).Elem()
}

func (i ZIARuleLabelsLastModifiedByArgs) ToZIARuleLabelsLastModifiedByOutput() ZIARuleLabelsLastModifiedByOutput {
	return i.ToZIARuleLabelsLastModifiedByOutputWithContext(context.Background())
}

func (i ZIARuleLabelsLastModifiedByArgs) ToZIARuleLabelsLastModifiedByOutputWithContext(ctx context.Context) ZIARuleLabelsLastModifiedByOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIARuleLabelsLastModifiedByOutput)
}

// ZIARuleLabelsLastModifiedByArrayInput is an input type that accepts ZIARuleLabelsLastModifiedByArray and ZIARuleLabelsLastModifiedByArrayOutput values.
// You can construct a concrete instance of `ZIARuleLabelsLastModifiedByArrayInput` via:
//
//	ZIARuleLabelsLastModifiedByArray{ ZIARuleLabelsLastModifiedByArgs{...} }
type ZIARuleLabelsLastModifiedByArrayInput interface {
	pulumi.Input

	ToZIARuleLabelsLastModifiedByArrayOutput() ZIARuleLabelsLastModifiedByArrayOutput
	ToZIARuleLabelsLastModifiedByArrayOutputWithContext(context.Context) ZIARuleLabelsLastModifiedByArrayOutput
}

type ZIARuleLabelsLastModifiedByArray []ZIARuleLabelsLastModifiedByInput

func (ZIARuleLabelsLastModifiedByArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZIARuleLabelsLastModifiedBy)(nil)).Elem()
}

func (i ZIARuleLabelsLastModifiedByArray) ToZIARuleLabelsLastModifiedByArrayOutput() ZIARuleLabelsLastModifiedByArrayOutput {
	return i.ToZIARuleLabelsLastModifiedByArrayOutputWithContext(context.Background())
}

func (i ZIARuleLabelsLastModifiedByArray) ToZIARuleLabelsLastModifiedByArrayOutputWithContext(ctx context.Context) ZIARuleLabelsLastModifiedByArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIARuleLabelsLastModifiedByArrayOutput)
}

type ZIARuleLabelsLastModifiedByOutput struct{ *pulumi.OutputState }

func (ZIARuleLabelsLastModifiedByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIARuleLabelsLastModifiedBy)(nil)).Elem()
}

func (o ZIARuleLabelsLastModifiedByOutput) ToZIARuleLabelsLastModifiedByOutput() ZIARuleLabelsLastModifiedByOutput {
	return o
}

func (o ZIARuleLabelsLastModifiedByOutput) ToZIARuleLabelsLastModifiedByOutputWithContext(ctx context.Context) ZIARuleLabelsLastModifiedByOutput {
	return o
}

func (o ZIARuleLabelsLastModifiedByOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v ZIARuleLabelsLastModifiedBy) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

func (o ZIARuleLabelsLastModifiedByOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZIARuleLabelsLastModifiedBy) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// The name of the devices to be created.
func (o ZIARuleLabelsLastModifiedByOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZIARuleLabelsLastModifiedBy) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ZIARuleLabelsLastModifiedByArrayOutput struct{ *pulumi.OutputState }

func (ZIARuleLabelsLastModifiedByArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZIARuleLabelsLastModifiedBy)(nil)).Elem()
}

func (o ZIARuleLabelsLastModifiedByArrayOutput) ToZIARuleLabelsLastModifiedByArrayOutput() ZIARuleLabelsLastModifiedByArrayOutput {
	return o
}

func (o ZIARuleLabelsLastModifiedByArrayOutput) ToZIARuleLabelsLastModifiedByArrayOutputWithContext(ctx context.Context) ZIARuleLabelsLastModifiedByArrayOutput {
	return o
}

func (o ZIARuleLabelsLastModifiedByArrayOutput) Index(i pulumi.IntInput) ZIARuleLabelsLastModifiedByOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZIARuleLabelsLastModifiedBy {
		return vs[0].([]ZIARuleLabelsLastModifiedBy)[vs[1].(int)]
	}).(ZIARuleLabelsLastModifiedByOutput)
}

type ZIATrafficForwardingGRETunnelLastModifiedBy struct {
	Extensions map[string]string `pulumi:"extensions"`
	// Unique identifer of the GRE virtual IP address (VIP)
	Id   *int    `pulumi:"id"`
	Name *string `pulumi:"name"`
}

// ZIATrafficForwardingGRETunnelLastModifiedByInput is an input type that accepts ZIATrafficForwardingGRETunnelLastModifiedByArgs and ZIATrafficForwardingGRETunnelLastModifiedByOutput values.
// You can construct a concrete instance of `ZIATrafficForwardingGRETunnelLastModifiedByInput` via:
//
//	ZIATrafficForwardingGRETunnelLastModifiedByArgs{...}
type ZIATrafficForwardingGRETunnelLastModifiedByInput interface {
	pulumi.Input

	ToZIATrafficForwardingGRETunnelLastModifiedByOutput() ZIATrafficForwardingGRETunnelLastModifiedByOutput
	ToZIATrafficForwardingGRETunnelLastModifiedByOutputWithContext(context.Context) ZIATrafficForwardingGRETunnelLastModifiedByOutput
}

type ZIATrafficForwardingGRETunnelLastModifiedByArgs struct {
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// Unique identifer of the GRE virtual IP address (VIP)
	Id   pulumi.IntPtrInput    `pulumi:"id"`
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ZIATrafficForwardingGRETunnelLastModifiedByArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIATrafficForwardingGRETunnelLastModifiedBy)(nil)).Elem()
}

func (i ZIATrafficForwardingGRETunnelLastModifiedByArgs) ToZIATrafficForwardingGRETunnelLastModifiedByOutput() ZIATrafficForwardingGRETunnelLastModifiedByOutput {
	return i.ToZIATrafficForwardingGRETunnelLastModifiedByOutputWithContext(context.Background())
}

func (i ZIATrafficForwardingGRETunnelLastModifiedByArgs) ToZIATrafficForwardingGRETunnelLastModifiedByOutputWithContext(ctx context.Context) ZIATrafficForwardingGRETunnelLastModifiedByOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIATrafficForwardingGRETunnelLastModifiedByOutput)
}

// ZIATrafficForwardingGRETunnelLastModifiedByArrayInput is an input type that accepts ZIATrafficForwardingGRETunnelLastModifiedByArray and ZIATrafficForwardingGRETunnelLastModifiedByArrayOutput values.
// You can construct a concrete instance of `ZIATrafficForwardingGRETunnelLastModifiedByArrayInput` via:
//
//	ZIATrafficForwardingGRETunnelLastModifiedByArray{ ZIATrafficForwardingGRETunnelLastModifiedByArgs{...} }
type ZIATrafficForwardingGRETunnelLastModifiedByArrayInput interface {
	pulumi.Input

	ToZIATrafficForwardingGRETunnelLastModifiedByArrayOutput() ZIATrafficForwardingGRETunnelLastModifiedByArrayOutput
	ToZIATrafficForwardingGRETunnelLastModifiedByArrayOutputWithContext(context.Context) ZIATrafficForwardingGRETunnelLastModifiedByArrayOutput
}

type ZIATrafficForwardingGRETunnelLastModifiedByArray []ZIATrafficForwardingGRETunnelLastModifiedByInput

func (ZIATrafficForwardingGRETunnelLastModifiedByArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZIATrafficForwardingGRETunnelLastModifiedBy)(nil)).Elem()
}

func (i ZIATrafficForwardingGRETunnelLastModifiedByArray) ToZIATrafficForwardingGRETunnelLastModifiedByArrayOutput() ZIATrafficForwardingGRETunnelLastModifiedByArrayOutput {
	return i.ToZIATrafficForwardingGRETunnelLastModifiedByArrayOutputWithContext(context.Background())
}

func (i ZIATrafficForwardingGRETunnelLastModifiedByArray) ToZIATrafficForwardingGRETunnelLastModifiedByArrayOutputWithContext(ctx context.Context) ZIATrafficForwardingGRETunnelLastModifiedByArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIATrafficForwardingGRETunnelLastModifiedByArrayOutput)
}

type ZIATrafficForwardingGRETunnelLastModifiedByOutput struct{ *pulumi.OutputState }

func (ZIATrafficForwardingGRETunnelLastModifiedByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIATrafficForwardingGRETunnelLastModifiedBy)(nil)).Elem()
}

func (o ZIATrafficForwardingGRETunnelLastModifiedByOutput) ToZIATrafficForwardingGRETunnelLastModifiedByOutput() ZIATrafficForwardingGRETunnelLastModifiedByOutput {
	return o
}

func (o ZIATrafficForwardingGRETunnelLastModifiedByOutput) ToZIATrafficForwardingGRETunnelLastModifiedByOutputWithContext(ctx context.Context) ZIATrafficForwardingGRETunnelLastModifiedByOutput {
	return o
}

func (o ZIATrafficForwardingGRETunnelLastModifiedByOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v ZIATrafficForwardingGRETunnelLastModifiedBy) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// Unique identifer of the GRE virtual IP address (VIP)
func (o ZIATrafficForwardingGRETunnelLastModifiedByOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZIATrafficForwardingGRETunnelLastModifiedBy) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o ZIATrafficForwardingGRETunnelLastModifiedByOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZIATrafficForwardingGRETunnelLastModifiedBy) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ZIATrafficForwardingGRETunnelLastModifiedByArrayOutput struct{ *pulumi.OutputState }

func (ZIATrafficForwardingGRETunnelLastModifiedByArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZIATrafficForwardingGRETunnelLastModifiedBy)(nil)).Elem()
}

func (o ZIATrafficForwardingGRETunnelLastModifiedByArrayOutput) ToZIATrafficForwardingGRETunnelLastModifiedByArrayOutput() ZIATrafficForwardingGRETunnelLastModifiedByArrayOutput {
	return o
}

func (o ZIATrafficForwardingGRETunnelLastModifiedByArrayOutput) ToZIATrafficForwardingGRETunnelLastModifiedByArrayOutputWithContext(ctx context.Context) ZIATrafficForwardingGRETunnelLastModifiedByArrayOutput {
	return o
}

func (o ZIATrafficForwardingGRETunnelLastModifiedByArrayOutput) Index(i pulumi.IntInput) ZIATrafficForwardingGRETunnelLastModifiedByOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZIATrafficForwardingGRETunnelLastModifiedBy {
		return vs[0].([]ZIATrafficForwardingGRETunnelLastModifiedBy)[vs[1].(int)]
	}).(ZIATrafficForwardingGRETunnelLastModifiedByOutput)
}

type ZIATrafficForwardingGRETunnelPrimaryDestVip struct {
	Datacenter *string `pulumi:"datacenter"`
	// Unique identifer of the GRE virtual IP address (VIP)
	Id                 *int  `pulumi:"id"`
	PrivateServiceEdge *bool `pulumi:"privateServiceEdge"`
	// GRE cluster virtual IP address (VIP)
	VirtualIp *string `pulumi:"virtualIp"`
}

// ZIATrafficForwardingGRETunnelPrimaryDestVipInput is an input type that accepts ZIATrafficForwardingGRETunnelPrimaryDestVipArgs and ZIATrafficForwardingGRETunnelPrimaryDestVipOutput values.
// You can construct a concrete instance of `ZIATrafficForwardingGRETunnelPrimaryDestVipInput` via:
//
//	ZIATrafficForwardingGRETunnelPrimaryDestVipArgs{...}
type ZIATrafficForwardingGRETunnelPrimaryDestVipInput interface {
	pulumi.Input

	ToZIATrafficForwardingGRETunnelPrimaryDestVipOutput() ZIATrafficForwardingGRETunnelPrimaryDestVipOutput
	ToZIATrafficForwardingGRETunnelPrimaryDestVipOutputWithContext(context.Context) ZIATrafficForwardingGRETunnelPrimaryDestVipOutput
}

type ZIATrafficForwardingGRETunnelPrimaryDestVipArgs struct {
	Datacenter pulumi.StringPtrInput `pulumi:"datacenter"`
	// Unique identifer of the GRE virtual IP address (VIP)
	Id                 pulumi.IntPtrInput  `pulumi:"id"`
	PrivateServiceEdge pulumi.BoolPtrInput `pulumi:"privateServiceEdge"`
	// GRE cluster virtual IP address (VIP)
	VirtualIp pulumi.StringPtrInput `pulumi:"virtualIp"`
}

func (ZIATrafficForwardingGRETunnelPrimaryDestVipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIATrafficForwardingGRETunnelPrimaryDestVip)(nil)).Elem()
}

func (i ZIATrafficForwardingGRETunnelPrimaryDestVipArgs) ToZIATrafficForwardingGRETunnelPrimaryDestVipOutput() ZIATrafficForwardingGRETunnelPrimaryDestVipOutput {
	return i.ToZIATrafficForwardingGRETunnelPrimaryDestVipOutputWithContext(context.Background())
}

func (i ZIATrafficForwardingGRETunnelPrimaryDestVipArgs) ToZIATrafficForwardingGRETunnelPrimaryDestVipOutputWithContext(ctx context.Context) ZIATrafficForwardingGRETunnelPrimaryDestVipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIATrafficForwardingGRETunnelPrimaryDestVipOutput)
}

// ZIATrafficForwardingGRETunnelPrimaryDestVipArrayInput is an input type that accepts ZIATrafficForwardingGRETunnelPrimaryDestVipArray and ZIATrafficForwardingGRETunnelPrimaryDestVipArrayOutput values.
// You can construct a concrete instance of `ZIATrafficForwardingGRETunnelPrimaryDestVipArrayInput` via:
//
//	ZIATrafficForwardingGRETunnelPrimaryDestVipArray{ ZIATrafficForwardingGRETunnelPrimaryDestVipArgs{...} }
type ZIATrafficForwardingGRETunnelPrimaryDestVipArrayInput interface {
	pulumi.Input

	ToZIATrafficForwardingGRETunnelPrimaryDestVipArrayOutput() ZIATrafficForwardingGRETunnelPrimaryDestVipArrayOutput
	ToZIATrafficForwardingGRETunnelPrimaryDestVipArrayOutputWithContext(context.Context) ZIATrafficForwardingGRETunnelPrimaryDestVipArrayOutput
}

type ZIATrafficForwardingGRETunnelPrimaryDestVipArray []ZIATrafficForwardingGRETunnelPrimaryDestVipInput

func (ZIATrafficForwardingGRETunnelPrimaryDestVipArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZIATrafficForwardingGRETunnelPrimaryDestVip)(nil)).Elem()
}

func (i ZIATrafficForwardingGRETunnelPrimaryDestVipArray) ToZIATrafficForwardingGRETunnelPrimaryDestVipArrayOutput() ZIATrafficForwardingGRETunnelPrimaryDestVipArrayOutput {
	return i.ToZIATrafficForwardingGRETunnelPrimaryDestVipArrayOutputWithContext(context.Background())
}

func (i ZIATrafficForwardingGRETunnelPrimaryDestVipArray) ToZIATrafficForwardingGRETunnelPrimaryDestVipArrayOutputWithContext(ctx context.Context) ZIATrafficForwardingGRETunnelPrimaryDestVipArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIATrafficForwardingGRETunnelPrimaryDestVipArrayOutput)
}

type ZIATrafficForwardingGRETunnelPrimaryDestVipOutput struct{ *pulumi.OutputState }

func (ZIATrafficForwardingGRETunnelPrimaryDestVipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIATrafficForwardingGRETunnelPrimaryDestVip)(nil)).Elem()
}

func (o ZIATrafficForwardingGRETunnelPrimaryDestVipOutput) ToZIATrafficForwardingGRETunnelPrimaryDestVipOutput() ZIATrafficForwardingGRETunnelPrimaryDestVipOutput {
	return o
}

func (o ZIATrafficForwardingGRETunnelPrimaryDestVipOutput) ToZIATrafficForwardingGRETunnelPrimaryDestVipOutputWithContext(ctx context.Context) ZIATrafficForwardingGRETunnelPrimaryDestVipOutput {
	return o
}

func (o ZIATrafficForwardingGRETunnelPrimaryDestVipOutput) Datacenter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZIATrafficForwardingGRETunnelPrimaryDestVip) *string { return v.Datacenter }).(pulumi.StringPtrOutput)
}

// Unique identifer of the GRE virtual IP address (VIP)
func (o ZIATrafficForwardingGRETunnelPrimaryDestVipOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZIATrafficForwardingGRETunnelPrimaryDestVip) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o ZIATrafficForwardingGRETunnelPrimaryDestVipOutput) PrivateServiceEdge() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ZIATrafficForwardingGRETunnelPrimaryDestVip) *bool { return v.PrivateServiceEdge }).(pulumi.BoolPtrOutput)
}

// GRE cluster virtual IP address (VIP)
func (o ZIATrafficForwardingGRETunnelPrimaryDestVipOutput) VirtualIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZIATrafficForwardingGRETunnelPrimaryDestVip) *string { return v.VirtualIp }).(pulumi.StringPtrOutput)
}

type ZIATrafficForwardingGRETunnelPrimaryDestVipArrayOutput struct{ *pulumi.OutputState }

func (ZIATrafficForwardingGRETunnelPrimaryDestVipArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZIATrafficForwardingGRETunnelPrimaryDestVip)(nil)).Elem()
}

func (o ZIATrafficForwardingGRETunnelPrimaryDestVipArrayOutput) ToZIATrafficForwardingGRETunnelPrimaryDestVipArrayOutput() ZIATrafficForwardingGRETunnelPrimaryDestVipArrayOutput {
	return o
}

func (o ZIATrafficForwardingGRETunnelPrimaryDestVipArrayOutput) ToZIATrafficForwardingGRETunnelPrimaryDestVipArrayOutputWithContext(ctx context.Context) ZIATrafficForwardingGRETunnelPrimaryDestVipArrayOutput {
	return o
}

func (o ZIATrafficForwardingGRETunnelPrimaryDestVipArrayOutput) Index(i pulumi.IntInput) ZIATrafficForwardingGRETunnelPrimaryDestVipOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZIATrafficForwardingGRETunnelPrimaryDestVip {
		return vs[0].([]ZIATrafficForwardingGRETunnelPrimaryDestVip)[vs[1].(int)]
	}).(ZIATrafficForwardingGRETunnelPrimaryDestVipOutput)
}

type ZIATrafficForwardingGRETunnelSecondaryDestVip struct {
	Datacenter *string `pulumi:"datacenter"`
	// Unique identifer of the GRE virtual IP address (VIP)
	Id                 *int  `pulumi:"id"`
	PrivateServiceEdge *bool `pulumi:"privateServiceEdge"`
	// GRE cluster virtual IP address (VIP)
	VirtualIp *string `pulumi:"virtualIp"`
}

// ZIATrafficForwardingGRETunnelSecondaryDestVipInput is an input type that accepts ZIATrafficForwardingGRETunnelSecondaryDestVipArgs and ZIATrafficForwardingGRETunnelSecondaryDestVipOutput values.
// You can construct a concrete instance of `ZIATrafficForwardingGRETunnelSecondaryDestVipInput` via:
//
//	ZIATrafficForwardingGRETunnelSecondaryDestVipArgs{...}
type ZIATrafficForwardingGRETunnelSecondaryDestVipInput interface {
	pulumi.Input

	ToZIATrafficForwardingGRETunnelSecondaryDestVipOutput() ZIATrafficForwardingGRETunnelSecondaryDestVipOutput
	ToZIATrafficForwardingGRETunnelSecondaryDestVipOutputWithContext(context.Context) ZIATrafficForwardingGRETunnelSecondaryDestVipOutput
}

type ZIATrafficForwardingGRETunnelSecondaryDestVipArgs struct {
	Datacenter pulumi.StringPtrInput `pulumi:"datacenter"`
	// Unique identifer of the GRE virtual IP address (VIP)
	Id                 pulumi.IntPtrInput  `pulumi:"id"`
	PrivateServiceEdge pulumi.BoolPtrInput `pulumi:"privateServiceEdge"`
	// GRE cluster virtual IP address (VIP)
	VirtualIp pulumi.StringPtrInput `pulumi:"virtualIp"`
}

func (ZIATrafficForwardingGRETunnelSecondaryDestVipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIATrafficForwardingGRETunnelSecondaryDestVip)(nil)).Elem()
}

func (i ZIATrafficForwardingGRETunnelSecondaryDestVipArgs) ToZIATrafficForwardingGRETunnelSecondaryDestVipOutput() ZIATrafficForwardingGRETunnelSecondaryDestVipOutput {
	return i.ToZIATrafficForwardingGRETunnelSecondaryDestVipOutputWithContext(context.Background())
}

func (i ZIATrafficForwardingGRETunnelSecondaryDestVipArgs) ToZIATrafficForwardingGRETunnelSecondaryDestVipOutputWithContext(ctx context.Context) ZIATrafficForwardingGRETunnelSecondaryDestVipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIATrafficForwardingGRETunnelSecondaryDestVipOutput)
}

// ZIATrafficForwardingGRETunnelSecondaryDestVipArrayInput is an input type that accepts ZIATrafficForwardingGRETunnelSecondaryDestVipArray and ZIATrafficForwardingGRETunnelSecondaryDestVipArrayOutput values.
// You can construct a concrete instance of `ZIATrafficForwardingGRETunnelSecondaryDestVipArrayInput` via:
//
//	ZIATrafficForwardingGRETunnelSecondaryDestVipArray{ ZIATrafficForwardingGRETunnelSecondaryDestVipArgs{...} }
type ZIATrafficForwardingGRETunnelSecondaryDestVipArrayInput interface {
	pulumi.Input

	ToZIATrafficForwardingGRETunnelSecondaryDestVipArrayOutput() ZIATrafficForwardingGRETunnelSecondaryDestVipArrayOutput
	ToZIATrafficForwardingGRETunnelSecondaryDestVipArrayOutputWithContext(context.Context) ZIATrafficForwardingGRETunnelSecondaryDestVipArrayOutput
}

type ZIATrafficForwardingGRETunnelSecondaryDestVipArray []ZIATrafficForwardingGRETunnelSecondaryDestVipInput

func (ZIATrafficForwardingGRETunnelSecondaryDestVipArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZIATrafficForwardingGRETunnelSecondaryDestVip)(nil)).Elem()
}

func (i ZIATrafficForwardingGRETunnelSecondaryDestVipArray) ToZIATrafficForwardingGRETunnelSecondaryDestVipArrayOutput() ZIATrafficForwardingGRETunnelSecondaryDestVipArrayOutput {
	return i.ToZIATrafficForwardingGRETunnelSecondaryDestVipArrayOutputWithContext(context.Background())
}

func (i ZIATrafficForwardingGRETunnelSecondaryDestVipArray) ToZIATrafficForwardingGRETunnelSecondaryDestVipArrayOutputWithContext(ctx context.Context) ZIATrafficForwardingGRETunnelSecondaryDestVipArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIATrafficForwardingGRETunnelSecondaryDestVipArrayOutput)
}

type ZIATrafficForwardingGRETunnelSecondaryDestVipOutput struct{ *pulumi.OutputState }

func (ZIATrafficForwardingGRETunnelSecondaryDestVipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIATrafficForwardingGRETunnelSecondaryDestVip)(nil)).Elem()
}

func (o ZIATrafficForwardingGRETunnelSecondaryDestVipOutput) ToZIATrafficForwardingGRETunnelSecondaryDestVipOutput() ZIATrafficForwardingGRETunnelSecondaryDestVipOutput {
	return o
}

func (o ZIATrafficForwardingGRETunnelSecondaryDestVipOutput) ToZIATrafficForwardingGRETunnelSecondaryDestVipOutputWithContext(ctx context.Context) ZIATrafficForwardingGRETunnelSecondaryDestVipOutput {
	return o
}

func (o ZIATrafficForwardingGRETunnelSecondaryDestVipOutput) Datacenter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZIATrafficForwardingGRETunnelSecondaryDestVip) *string { return v.Datacenter }).(pulumi.StringPtrOutput)
}

// Unique identifer of the GRE virtual IP address (VIP)
func (o ZIATrafficForwardingGRETunnelSecondaryDestVipOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZIATrafficForwardingGRETunnelSecondaryDestVip) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o ZIATrafficForwardingGRETunnelSecondaryDestVipOutput) PrivateServiceEdge() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ZIATrafficForwardingGRETunnelSecondaryDestVip) *bool { return v.PrivateServiceEdge }).(pulumi.BoolPtrOutput)
}

// GRE cluster virtual IP address (VIP)
func (o ZIATrafficForwardingGRETunnelSecondaryDestVipOutput) VirtualIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZIATrafficForwardingGRETunnelSecondaryDestVip) *string { return v.VirtualIp }).(pulumi.StringPtrOutput)
}

type ZIATrafficForwardingGRETunnelSecondaryDestVipArrayOutput struct{ *pulumi.OutputState }

func (ZIATrafficForwardingGRETunnelSecondaryDestVipArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZIATrafficForwardingGRETunnelSecondaryDestVip)(nil)).Elem()
}

func (o ZIATrafficForwardingGRETunnelSecondaryDestVipArrayOutput) ToZIATrafficForwardingGRETunnelSecondaryDestVipArrayOutput() ZIATrafficForwardingGRETunnelSecondaryDestVipArrayOutput {
	return o
}

func (o ZIATrafficForwardingGRETunnelSecondaryDestVipArrayOutput) ToZIATrafficForwardingGRETunnelSecondaryDestVipArrayOutputWithContext(ctx context.Context) ZIATrafficForwardingGRETunnelSecondaryDestVipArrayOutput {
	return o
}

func (o ZIATrafficForwardingGRETunnelSecondaryDestVipArrayOutput) Index(i pulumi.IntInput) ZIATrafficForwardingGRETunnelSecondaryDestVipOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZIATrafficForwardingGRETunnelSecondaryDestVip {
		return vs[0].([]ZIATrafficForwardingGRETunnelSecondaryDestVip)[vs[1].(int)]
	}).(ZIATrafficForwardingGRETunnelSecondaryDestVipOutput)
}

type ZIATrafficForwardingStaticIPLastModifiedBy struct {
	Extensions map[string]string `pulumi:"extensions"`
	Id         *int              `pulumi:"id"`
	Name       *string           `pulumi:"name"`
}

// ZIATrafficForwardingStaticIPLastModifiedByInput is an input type that accepts ZIATrafficForwardingStaticIPLastModifiedByArgs and ZIATrafficForwardingStaticIPLastModifiedByOutput values.
// You can construct a concrete instance of `ZIATrafficForwardingStaticIPLastModifiedByInput` via:
//
//	ZIATrafficForwardingStaticIPLastModifiedByArgs{...}
type ZIATrafficForwardingStaticIPLastModifiedByInput interface {
	pulumi.Input

	ToZIATrafficForwardingStaticIPLastModifiedByOutput() ZIATrafficForwardingStaticIPLastModifiedByOutput
	ToZIATrafficForwardingStaticIPLastModifiedByOutputWithContext(context.Context) ZIATrafficForwardingStaticIPLastModifiedByOutput
}

type ZIATrafficForwardingStaticIPLastModifiedByArgs struct {
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	Id         pulumi.IntPtrInput    `pulumi:"id"`
	Name       pulumi.StringPtrInput `pulumi:"name"`
}

func (ZIATrafficForwardingStaticIPLastModifiedByArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIATrafficForwardingStaticIPLastModifiedBy)(nil)).Elem()
}

func (i ZIATrafficForwardingStaticIPLastModifiedByArgs) ToZIATrafficForwardingStaticIPLastModifiedByOutput() ZIATrafficForwardingStaticIPLastModifiedByOutput {
	return i.ToZIATrafficForwardingStaticIPLastModifiedByOutputWithContext(context.Background())
}

func (i ZIATrafficForwardingStaticIPLastModifiedByArgs) ToZIATrafficForwardingStaticIPLastModifiedByOutputWithContext(ctx context.Context) ZIATrafficForwardingStaticIPLastModifiedByOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIATrafficForwardingStaticIPLastModifiedByOutput)
}

// ZIATrafficForwardingStaticIPLastModifiedByArrayInput is an input type that accepts ZIATrafficForwardingStaticIPLastModifiedByArray and ZIATrafficForwardingStaticIPLastModifiedByArrayOutput values.
// You can construct a concrete instance of `ZIATrafficForwardingStaticIPLastModifiedByArrayInput` via:
//
//	ZIATrafficForwardingStaticIPLastModifiedByArray{ ZIATrafficForwardingStaticIPLastModifiedByArgs{...} }
type ZIATrafficForwardingStaticIPLastModifiedByArrayInput interface {
	pulumi.Input

	ToZIATrafficForwardingStaticIPLastModifiedByArrayOutput() ZIATrafficForwardingStaticIPLastModifiedByArrayOutput
	ToZIATrafficForwardingStaticIPLastModifiedByArrayOutputWithContext(context.Context) ZIATrafficForwardingStaticIPLastModifiedByArrayOutput
}

type ZIATrafficForwardingStaticIPLastModifiedByArray []ZIATrafficForwardingStaticIPLastModifiedByInput

func (ZIATrafficForwardingStaticIPLastModifiedByArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZIATrafficForwardingStaticIPLastModifiedBy)(nil)).Elem()
}

func (i ZIATrafficForwardingStaticIPLastModifiedByArray) ToZIATrafficForwardingStaticIPLastModifiedByArrayOutput() ZIATrafficForwardingStaticIPLastModifiedByArrayOutput {
	return i.ToZIATrafficForwardingStaticIPLastModifiedByArrayOutputWithContext(context.Background())
}

func (i ZIATrafficForwardingStaticIPLastModifiedByArray) ToZIATrafficForwardingStaticIPLastModifiedByArrayOutputWithContext(ctx context.Context) ZIATrafficForwardingStaticIPLastModifiedByArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIATrafficForwardingStaticIPLastModifiedByArrayOutput)
}

type ZIATrafficForwardingStaticIPLastModifiedByOutput struct{ *pulumi.OutputState }

func (ZIATrafficForwardingStaticIPLastModifiedByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIATrafficForwardingStaticIPLastModifiedBy)(nil)).Elem()
}

func (o ZIATrafficForwardingStaticIPLastModifiedByOutput) ToZIATrafficForwardingStaticIPLastModifiedByOutput() ZIATrafficForwardingStaticIPLastModifiedByOutput {
	return o
}

func (o ZIATrafficForwardingStaticIPLastModifiedByOutput) ToZIATrafficForwardingStaticIPLastModifiedByOutputWithContext(ctx context.Context) ZIATrafficForwardingStaticIPLastModifiedByOutput {
	return o
}

func (o ZIATrafficForwardingStaticIPLastModifiedByOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v ZIATrafficForwardingStaticIPLastModifiedBy) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

func (o ZIATrafficForwardingStaticIPLastModifiedByOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZIATrafficForwardingStaticIPLastModifiedBy) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o ZIATrafficForwardingStaticIPLastModifiedByOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZIATrafficForwardingStaticIPLastModifiedBy) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ZIATrafficForwardingStaticIPLastModifiedByArrayOutput struct{ *pulumi.OutputState }

func (ZIATrafficForwardingStaticIPLastModifiedByArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZIATrafficForwardingStaticIPLastModifiedBy)(nil)).Elem()
}

func (o ZIATrafficForwardingStaticIPLastModifiedByArrayOutput) ToZIATrafficForwardingStaticIPLastModifiedByArrayOutput() ZIATrafficForwardingStaticIPLastModifiedByArrayOutput {
	return o
}

func (o ZIATrafficForwardingStaticIPLastModifiedByArrayOutput) ToZIATrafficForwardingStaticIPLastModifiedByArrayOutputWithContext(ctx context.Context) ZIATrafficForwardingStaticIPLastModifiedByArrayOutput {
	return o
}

func (o ZIATrafficForwardingStaticIPLastModifiedByArrayOutput) Index(i pulumi.IntInput) ZIATrafficForwardingStaticIPLastModifiedByOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZIATrafficForwardingStaticIPLastModifiedBy {
		return vs[0].([]ZIATrafficForwardingStaticIPLastModifiedBy)[vs[1].(int)]
	}).(ZIATrafficForwardingStaticIPLastModifiedByOutput)
}

type ZIATrafficForwardingStaticIPManagedBy struct {
	Extensions map[string]string `pulumi:"extensions"`
	Id         *int              `pulumi:"id"`
	Name       *string           `pulumi:"name"`
}

// ZIATrafficForwardingStaticIPManagedByInput is an input type that accepts ZIATrafficForwardingStaticIPManagedByArgs and ZIATrafficForwardingStaticIPManagedByOutput values.
// You can construct a concrete instance of `ZIATrafficForwardingStaticIPManagedByInput` via:
//
//	ZIATrafficForwardingStaticIPManagedByArgs{...}
type ZIATrafficForwardingStaticIPManagedByInput interface {
	pulumi.Input

	ToZIATrafficForwardingStaticIPManagedByOutput() ZIATrafficForwardingStaticIPManagedByOutput
	ToZIATrafficForwardingStaticIPManagedByOutputWithContext(context.Context) ZIATrafficForwardingStaticIPManagedByOutput
}

type ZIATrafficForwardingStaticIPManagedByArgs struct {
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	Id         pulumi.IntPtrInput    `pulumi:"id"`
	Name       pulumi.StringPtrInput `pulumi:"name"`
}

func (ZIATrafficForwardingStaticIPManagedByArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIATrafficForwardingStaticIPManagedBy)(nil)).Elem()
}

func (i ZIATrafficForwardingStaticIPManagedByArgs) ToZIATrafficForwardingStaticIPManagedByOutput() ZIATrafficForwardingStaticIPManagedByOutput {
	return i.ToZIATrafficForwardingStaticIPManagedByOutputWithContext(context.Background())
}

func (i ZIATrafficForwardingStaticIPManagedByArgs) ToZIATrafficForwardingStaticIPManagedByOutputWithContext(ctx context.Context) ZIATrafficForwardingStaticIPManagedByOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIATrafficForwardingStaticIPManagedByOutput)
}

// ZIATrafficForwardingStaticIPManagedByArrayInput is an input type that accepts ZIATrafficForwardingStaticIPManagedByArray and ZIATrafficForwardingStaticIPManagedByArrayOutput values.
// You can construct a concrete instance of `ZIATrafficForwardingStaticIPManagedByArrayInput` via:
//
//	ZIATrafficForwardingStaticIPManagedByArray{ ZIATrafficForwardingStaticIPManagedByArgs{...} }
type ZIATrafficForwardingStaticIPManagedByArrayInput interface {
	pulumi.Input

	ToZIATrafficForwardingStaticIPManagedByArrayOutput() ZIATrafficForwardingStaticIPManagedByArrayOutput
	ToZIATrafficForwardingStaticIPManagedByArrayOutputWithContext(context.Context) ZIATrafficForwardingStaticIPManagedByArrayOutput
}

type ZIATrafficForwardingStaticIPManagedByArray []ZIATrafficForwardingStaticIPManagedByInput

func (ZIATrafficForwardingStaticIPManagedByArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZIATrafficForwardingStaticIPManagedBy)(nil)).Elem()
}

func (i ZIATrafficForwardingStaticIPManagedByArray) ToZIATrafficForwardingStaticIPManagedByArrayOutput() ZIATrafficForwardingStaticIPManagedByArrayOutput {
	return i.ToZIATrafficForwardingStaticIPManagedByArrayOutputWithContext(context.Background())
}

func (i ZIATrafficForwardingStaticIPManagedByArray) ToZIATrafficForwardingStaticIPManagedByArrayOutputWithContext(ctx context.Context) ZIATrafficForwardingStaticIPManagedByArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIATrafficForwardingStaticIPManagedByArrayOutput)
}

type ZIATrafficForwardingStaticIPManagedByOutput struct{ *pulumi.OutputState }

func (ZIATrafficForwardingStaticIPManagedByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIATrafficForwardingStaticIPManagedBy)(nil)).Elem()
}

func (o ZIATrafficForwardingStaticIPManagedByOutput) ToZIATrafficForwardingStaticIPManagedByOutput() ZIATrafficForwardingStaticIPManagedByOutput {
	return o
}

func (o ZIATrafficForwardingStaticIPManagedByOutput) ToZIATrafficForwardingStaticIPManagedByOutputWithContext(ctx context.Context) ZIATrafficForwardingStaticIPManagedByOutput {
	return o
}

func (o ZIATrafficForwardingStaticIPManagedByOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v ZIATrafficForwardingStaticIPManagedBy) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

func (o ZIATrafficForwardingStaticIPManagedByOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZIATrafficForwardingStaticIPManagedBy) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o ZIATrafficForwardingStaticIPManagedByOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZIATrafficForwardingStaticIPManagedBy) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ZIATrafficForwardingStaticIPManagedByArrayOutput struct{ *pulumi.OutputState }

func (ZIATrafficForwardingStaticIPManagedByArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZIATrafficForwardingStaticIPManagedBy)(nil)).Elem()
}

func (o ZIATrafficForwardingStaticIPManagedByArrayOutput) ToZIATrafficForwardingStaticIPManagedByArrayOutput() ZIATrafficForwardingStaticIPManagedByArrayOutput {
	return o
}

func (o ZIATrafficForwardingStaticIPManagedByArrayOutput) ToZIATrafficForwardingStaticIPManagedByArrayOutputWithContext(ctx context.Context) ZIATrafficForwardingStaticIPManagedByArrayOutput {
	return o
}

func (o ZIATrafficForwardingStaticIPManagedByArrayOutput) Index(i pulumi.IntInput) ZIATrafficForwardingStaticIPManagedByOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZIATrafficForwardingStaticIPManagedBy {
		return vs[0].([]ZIATrafficForwardingStaticIPManagedBy)[vs[1].(int)]
	}).(ZIATrafficForwardingStaticIPManagedByOutput)
}

type ZIAURLCategoriesScope struct {
	ScopeEntities *ZIAURLCategoriesScopeScopeEntities `pulumi:"scopeEntities"`
	// Only applicable for the LOCATION_GROUP admin scope type, in which case this attribute gives the list of ID/name pairs of locations within the location group. The attribute name is subject to change.
	ScopeGroupMemberEntities *ZIAURLCategoriesScopeScopeGroupMemberEntities `pulumi:"scopeGroupMemberEntities"`
	// Type of the custom categories. `URL_CATEGORY`, `TLD_CATEGORY`, `ALL`
	Type *string `pulumi:"type"`
}

// ZIAURLCategoriesScopeInput is an input type that accepts ZIAURLCategoriesScopeArgs and ZIAURLCategoriesScopeOutput values.
// You can construct a concrete instance of `ZIAURLCategoriesScopeInput` via:
//
//	ZIAURLCategoriesScopeArgs{...}
type ZIAURLCategoriesScopeInput interface {
	pulumi.Input

	ToZIAURLCategoriesScopeOutput() ZIAURLCategoriesScopeOutput
	ToZIAURLCategoriesScopeOutputWithContext(context.Context) ZIAURLCategoriesScopeOutput
}

type ZIAURLCategoriesScopeArgs struct {
	ScopeEntities ZIAURLCategoriesScopeScopeEntitiesPtrInput `pulumi:"scopeEntities"`
	// Only applicable for the LOCATION_GROUP admin scope type, in which case this attribute gives the list of ID/name pairs of locations within the location group. The attribute name is subject to change.
	ScopeGroupMemberEntities ZIAURLCategoriesScopeScopeGroupMemberEntitiesPtrInput `pulumi:"scopeGroupMemberEntities"`
	// Type of the custom categories. `URL_CATEGORY`, `TLD_CATEGORY`, `ALL`
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ZIAURLCategoriesScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAURLCategoriesScope)(nil)).Elem()
}

func (i ZIAURLCategoriesScopeArgs) ToZIAURLCategoriesScopeOutput() ZIAURLCategoriesScopeOutput {
	return i.ToZIAURLCategoriesScopeOutputWithContext(context.Background())
}

func (i ZIAURLCategoriesScopeArgs) ToZIAURLCategoriesScopeOutputWithContext(ctx context.Context) ZIAURLCategoriesScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAURLCategoriesScopeOutput)
}

// ZIAURLCategoriesScopeArrayInput is an input type that accepts ZIAURLCategoriesScopeArray and ZIAURLCategoriesScopeArrayOutput values.
// You can construct a concrete instance of `ZIAURLCategoriesScopeArrayInput` via:
//
//	ZIAURLCategoriesScopeArray{ ZIAURLCategoriesScopeArgs{...} }
type ZIAURLCategoriesScopeArrayInput interface {
	pulumi.Input

	ToZIAURLCategoriesScopeArrayOutput() ZIAURLCategoriesScopeArrayOutput
	ToZIAURLCategoriesScopeArrayOutputWithContext(context.Context) ZIAURLCategoriesScopeArrayOutput
}

type ZIAURLCategoriesScopeArray []ZIAURLCategoriesScopeInput

func (ZIAURLCategoriesScopeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZIAURLCategoriesScope)(nil)).Elem()
}

func (i ZIAURLCategoriesScopeArray) ToZIAURLCategoriesScopeArrayOutput() ZIAURLCategoriesScopeArrayOutput {
	return i.ToZIAURLCategoriesScopeArrayOutputWithContext(context.Background())
}

func (i ZIAURLCategoriesScopeArray) ToZIAURLCategoriesScopeArrayOutputWithContext(ctx context.Context) ZIAURLCategoriesScopeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAURLCategoriesScopeArrayOutput)
}

type ZIAURLCategoriesScopeOutput struct{ *pulumi.OutputState }

func (ZIAURLCategoriesScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAURLCategoriesScope)(nil)).Elem()
}

func (o ZIAURLCategoriesScopeOutput) ToZIAURLCategoriesScopeOutput() ZIAURLCategoriesScopeOutput {
	return o
}

func (o ZIAURLCategoriesScopeOutput) ToZIAURLCategoriesScopeOutputWithContext(ctx context.Context) ZIAURLCategoriesScopeOutput {
	return o
}

func (o ZIAURLCategoriesScopeOutput) ScopeEntities() ZIAURLCategoriesScopeScopeEntitiesPtrOutput {
	return o.ApplyT(func(v ZIAURLCategoriesScope) *ZIAURLCategoriesScopeScopeEntities { return v.ScopeEntities }).(ZIAURLCategoriesScopeScopeEntitiesPtrOutput)
}

// Only applicable for the LOCATION_GROUP admin scope type, in which case this attribute gives the list of ID/name pairs of locations within the location group. The attribute name is subject to change.
func (o ZIAURLCategoriesScopeOutput) ScopeGroupMemberEntities() ZIAURLCategoriesScopeScopeGroupMemberEntitiesPtrOutput {
	return o.ApplyT(func(v ZIAURLCategoriesScope) *ZIAURLCategoriesScopeScopeGroupMemberEntities {
		return v.ScopeGroupMemberEntities
	}).(ZIAURLCategoriesScopeScopeGroupMemberEntitiesPtrOutput)
}

// Type of the custom categories. `URL_CATEGORY`, `TLD_CATEGORY`, `ALL`
func (o ZIAURLCategoriesScopeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZIAURLCategoriesScope) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ZIAURLCategoriesScopeArrayOutput struct{ *pulumi.OutputState }

func (ZIAURLCategoriesScopeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZIAURLCategoriesScope)(nil)).Elem()
}

func (o ZIAURLCategoriesScopeArrayOutput) ToZIAURLCategoriesScopeArrayOutput() ZIAURLCategoriesScopeArrayOutput {
	return o
}

func (o ZIAURLCategoriesScopeArrayOutput) ToZIAURLCategoriesScopeArrayOutputWithContext(ctx context.Context) ZIAURLCategoriesScopeArrayOutput {
	return o
}

func (o ZIAURLCategoriesScopeArrayOutput) Index(i pulumi.IntInput) ZIAURLCategoriesScopeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZIAURLCategoriesScope {
		return vs[0].([]ZIAURLCategoriesScope)[vs[1].(int)]
	}).(ZIAURLCategoriesScopeOutput)
}

type ZIAURLCategoriesScopeScopeEntities struct {
	Ids []int `pulumi:"ids"`
}

// ZIAURLCategoriesScopeScopeEntitiesInput is an input type that accepts ZIAURLCategoriesScopeScopeEntitiesArgs and ZIAURLCategoriesScopeScopeEntitiesOutput values.
// You can construct a concrete instance of `ZIAURLCategoriesScopeScopeEntitiesInput` via:
//
//	ZIAURLCategoriesScopeScopeEntitiesArgs{...}
type ZIAURLCategoriesScopeScopeEntitiesInput interface {
	pulumi.Input

	ToZIAURLCategoriesScopeScopeEntitiesOutput() ZIAURLCategoriesScopeScopeEntitiesOutput
	ToZIAURLCategoriesScopeScopeEntitiesOutputWithContext(context.Context) ZIAURLCategoriesScopeScopeEntitiesOutput
}

type ZIAURLCategoriesScopeScopeEntitiesArgs struct {
	Ids pulumi.IntArrayInput `pulumi:"ids"`
}

func (ZIAURLCategoriesScopeScopeEntitiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAURLCategoriesScopeScopeEntities)(nil)).Elem()
}

func (i ZIAURLCategoriesScopeScopeEntitiesArgs) ToZIAURLCategoriesScopeScopeEntitiesOutput() ZIAURLCategoriesScopeScopeEntitiesOutput {
	return i.ToZIAURLCategoriesScopeScopeEntitiesOutputWithContext(context.Background())
}

func (i ZIAURLCategoriesScopeScopeEntitiesArgs) ToZIAURLCategoriesScopeScopeEntitiesOutputWithContext(ctx context.Context) ZIAURLCategoriesScopeScopeEntitiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAURLCategoriesScopeScopeEntitiesOutput)
}

func (i ZIAURLCategoriesScopeScopeEntitiesArgs) ToZIAURLCategoriesScopeScopeEntitiesPtrOutput() ZIAURLCategoriesScopeScopeEntitiesPtrOutput {
	return i.ToZIAURLCategoriesScopeScopeEntitiesPtrOutputWithContext(context.Background())
}

func (i ZIAURLCategoriesScopeScopeEntitiesArgs) ToZIAURLCategoriesScopeScopeEntitiesPtrOutputWithContext(ctx context.Context) ZIAURLCategoriesScopeScopeEntitiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAURLCategoriesScopeScopeEntitiesOutput).ToZIAURLCategoriesScopeScopeEntitiesPtrOutputWithContext(ctx)
}

// ZIAURLCategoriesScopeScopeEntitiesPtrInput is an input type that accepts ZIAURLCategoriesScopeScopeEntitiesArgs, ZIAURLCategoriesScopeScopeEntitiesPtr and ZIAURLCategoriesScopeScopeEntitiesPtrOutput values.
// You can construct a concrete instance of `ZIAURLCategoriesScopeScopeEntitiesPtrInput` via:
//
//	        ZIAURLCategoriesScopeScopeEntitiesArgs{...}
//
//	or:
//
//	        nil
type ZIAURLCategoriesScopeScopeEntitiesPtrInput interface {
	pulumi.Input

	ToZIAURLCategoriesScopeScopeEntitiesPtrOutput() ZIAURLCategoriesScopeScopeEntitiesPtrOutput
	ToZIAURLCategoriesScopeScopeEntitiesPtrOutputWithContext(context.Context) ZIAURLCategoriesScopeScopeEntitiesPtrOutput
}

type ziaurlcategoriesScopeScopeEntitiesPtrType ZIAURLCategoriesScopeScopeEntitiesArgs

func ZIAURLCategoriesScopeScopeEntitiesPtr(v *ZIAURLCategoriesScopeScopeEntitiesArgs) ZIAURLCategoriesScopeScopeEntitiesPtrInput {
	return (*ziaurlcategoriesScopeScopeEntitiesPtrType)(v)
}

func (*ziaurlcategoriesScopeScopeEntitiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAURLCategoriesScopeScopeEntities)(nil)).Elem()
}

func (i *ziaurlcategoriesScopeScopeEntitiesPtrType) ToZIAURLCategoriesScopeScopeEntitiesPtrOutput() ZIAURLCategoriesScopeScopeEntitiesPtrOutput {
	return i.ToZIAURLCategoriesScopeScopeEntitiesPtrOutputWithContext(context.Background())
}

func (i *ziaurlcategoriesScopeScopeEntitiesPtrType) ToZIAURLCategoriesScopeScopeEntitiesPtrOutputWithContext(ctx context.Context) ZIAURLCategoriesScopeScopeEntitiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAURLCategoriesScopeScopeEntitiesPtrOutput)
}

type ZIAURLCategoriesScopeScopeEntitiesOutput struct{ *pulumi.OutputState }

func (ZIAURLCategoriesScopeScopeEntitiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAURLCategoriesScopeScopeEntities)(nil)).Elem()
}

func (o ZIAURLCategoriesScopeScopeEntitiesOutput) ToZIAURLCategoriesScopeScopeEntitiesOutput() ZIAURLCategoriesScopeScopeEntitiesOutput {
	return o
}

func (o ZIAURLCategoriesScopeScopeEntitiesOutput) ToZIAURLCategoriesScopeScopeEntitiesOutputWithContext(ctx context.Context) ZIAURLCategoriesScopeScopeEntitiesOutput {
	return o
}

func (o ZIAURLCategoriesScopeScopeEntitiesOutput) ToZIAURLCategoriesScopeScopeEntitiesPtrOutput() ZIAURLCategoriesScopeScopeEntitiesPtrOutput {
	return o.ToZIAURLCategoriesScopeScopeEntitiesPtrOutputWithContext(context.Background())
}

func (o ZIAURLCategoriesScopeScopeEntitiesOutput) ToZIAURLCategoriesScopeScopeEntitiesPtrOutputWithContext(ctx context.Context) ZIAURLCategoriesScopeScopeEntitiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZIAURLCategoriesScopeScopeEntities) *ZIAURLCategoriesScopeScopeEntities {
		return &v
	}).(ZIAURLCategoriesScopeScopeEntitiesPtrOutput)
}

func (o ZIAURLCategoriesScopeScopeEntitiesOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ZIAURLCategoriesScopeScopeEntities) []int { return v.Ids }).(pulumi.IntArrayOutput)
}

type ZIAURLCategoriesScopeScopeEntitiesPtrOutput struct{ *pulumi.OutputState }

func (ZIAURLCategoriesScopeScopeEntitiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAURLCategoriesScopeScopeEntities)(nil)).Elem()
}

func (o ZIAURLCategoriesScopeScopeEntitiesPtrOutput) ToZIAURLCategoriesScopeScopeEntitiesPtrOutput() ZIAURLCategoriesScopeScopeEntitiesPtrOutput {
	return o
}

func (o ZIAURLCategoriesScopeScopeEntitiesPtrOutput) ToZIAURLCategoriesScopeScopeEntitiesPtrOutputWithContext(ctx context.Context) ZIAURLCategoriesScopeScopeEntitiesPtrOutput {
	return o
}

func (o ZIAURLCategoriesScopeScopeEntitiesPtrOutput) Elem() ZIAURLCategoriesScopeScopeEntitiesOutput {
	return o.ApplyT(func(v *ZIAURLCategoriesScopeScopeEntities) ZIAURLCategoriesScopeScopeEntities {
		if v != nil {
			return *v
		}
		var ret ZIAURLCategoriesScopeScopeEntities
		return ret
	}).(ZIAURLCategoriesScopeScopeEntitiesOutput)
}

func (o ZIAURLCategoriesScopeScopeEntitiesPtrOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *ZIAURLCategoriesScopeScopeEntities) []int {
		if v == nil {
			return nil
		}
		return v.Ids
	}).(pulumi.IntArrayOutput)
}

type ZIAURLCategoriesScopeScopeGroupMemberEntities struct {
	Ids []int `pulumi:"ids"`
}

// ZIAURLCategoriesScopeScopeGroupMemberEntitiesInput is an input type that accepts ZIAURLCategoriesScopeScopeGroupMemberEntitiesArgs and ZIAURLCategoriesScopeScopeGroupMemberEntitiesOutput values.
// You can construct a concrete instance of `ZIAURLCategoriesScopeScopeGroupMemberEntitiesInput` via:
//
//	ZIAURLCategoriesScopeScopeGroupMemberEntitiesArgs{...}
type ZIAURLCategoriesScopeScopeGroupMemberEntitiesInput interface {
	pulumi.Input

	ToZIAURLCategoriesScopeScopeGroupMemberEntitiesOutput() ZIAURLCategoriesScopeScopeGroupMemberEntitiesOutput
	ToZIAURLCategoriesScopeScopeGroupMemberEntitiesOutputWithContext(context.Context) ZIAURLCategoriesScopeScopeGroupMemberEntitiesOutput
}

type ZIAURLCategoriesScopeScopeGroupMemberEntitiesArgs struct {
	Ids pulumi.IntArrayInput `pulumi:"ids"`
}

func (ZIAURLCategoriesScopeScopeGroupMemberEntitiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAURLCategoriesScopeScopeGroupMemberEntities)(nil)).Elem()
}

func (i ZIAURLCategoriesScopeScopeGroupMemberEntitiesArgs) ToZIAURLCategoriesScopeScopeGroupMemberEntitiesOutput() ZIAURLCategoriesScopeScopeGroupMemberEntitiesOutput {
	return i.ToZIAURLCategoriesScopeScopeGroupMemberEntitiesOutputWithContext(context.Background())
}

func (i ZIAURLCategoriesScopeScopeGroupMemberEntitiesArgs) ToZIAURLCategoriesScopeScopeGroupMemberEntitiesOutputWithContext(ctx context.Context) ZIAURLCategoriesScopeScopeGroupMemberEntitiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAURLCategoriesScopeScopeGroupMemberEntitiesOutput)
}

func (i ZIAURLCategoriesScopeScopeGroupMemberEntitiesArgs) ToZIAURLCategoriesScopeScopeGroupMemberEntitiesPtrOutput() ZIAURLCategoriesScopeScopeGroupMemberEntitiesPtrOutput {
	return i.ToZIAURLCategoriesScopeScopeGroupMemberEntitiesPtrOutputWithContext(context.Background())
}

func (i ZIAURLCategoriesScopeScopeGroupMemberEntitiesArgs) ToZIAURLCategoriesScopeScopeGroupMemberEntitiesPtrOutputWithContext(ctx context.Context) ZIAURLCategoriesScopeScopeGroupMemberEntitiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAURLCategoriesScopeScopeGroupMemberEntitiesOutput).ToZIAURLCategoriesScopeScopeGroupMemberEntitiesPtrOutputWithContext(ctx)
}

// ZIAURLCategoriesScopeScopeGroupMemberEntitiesPtrInput is an input type that accepts ZIAURLCategoriesScopeScopeGroupMemberEntitiesArgs, ZIAURLCategoriesScopeScopeGroupMemberEntitiesPtr and ZIAURLCategoriesScopeScopeGroupMemberEntitiesPtrOutput values.
// You can construct a concrete instance of `ZIAURLCategoriesScopeScopeGroupMemberEntitiesPtrInput` via:
//
//	        ZIAURLCategoriesScopeScopeGroupMemberEntitiesArgs{...}
//
//	or:
//
//	        nil
type ZIAURLCategoriesScopeScopeGroupMemberEntitiesPtrInput interface {
	pulumi.Input

	ToZIAURLCategoriesScopeScopeGroupMemberEntitiesPtrOutput() ZIAURLCategoriesScopeScopeGroupMemberEntitiesPtrOutput
	ToZIAURLCategoriesScopeScopeGroupMemberEntitiesPtrOutputWithContext(context.Context) ZIAURLCategoriesScopeScopeGroupMemberEntitiesPtrOutput
}

type ziaurlcategoriesScopeScopeGroupMemberEntitiesPtrType ZIAURLCategoriesScopeScopeGroupMemberEntitiesArgs

func ZIAURLCategoriesScopeScopeGroupMemberEntitiesPtr(v *ZIAURLCategoriesScopeScopeGroupMemberEntitiesArgs) ZIAURLCategoriesScopeScopeGroupMemberEntitiesPtrInput {
	return (*ziaurlcategoriesScopeScopeGroupMemberEntitiesPtrType)(v)
}

func (*ziaurlcategoriesScopeScopeGroupMemberEntitiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAURLCategoriesScopeScopeGroupMemberEntities)(nil)).Elem()
}

func (i *ziaurlcategoriesScopeScopeGroupMemberEntitiesPtrType) ToZIAURLCategoriesScopeScopeGroupMemberEntitiesPtrOutput() ZIAURLCategoriesScopeScopeGroupMemberEntitiesPtrOutput {
	return i.ToZIAURLCategoriesScopeScopeGroupMemberEntitiesPtrOutputWithContext(context.Background())
}

func (i *ziaurlcategoriesScopeScopeGroupMemberEntitiesPtrType) ToZIAURLCategoriesScopeScopeGroupMemberEntitiesPtrOutputWithContext(ctx context.Context) ZIAURLCategoriesScopeScopeGroupMemberEntitiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAURLCategoriesScopeScopeGroupMemberEntitiesPtrOutput)
}

type ZIAURLCategoriesScopeScopeGroupMemberEntitiesOutput struct{ *pulumi.OutputState }

func (ZIAURLCategoriesScopeScopeGroupMemberEntitiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAURLCategoriesScopeScopeGroupMemberEntities)(nil)).Elem()
}

func (o ZIAURLCategoriesScopeScopeGroupMemberEntitiesOutput) ToZIAURLCategoriesScopeScopeGroupMemberEntitiesOutput() ZIAURLCategoriesScopeScopeGroupMemberEntitiesOutput {
	return o
}

func (o ZIAURLCategoriesScopeScopeGroupMemberEntitiesOutput) ToZIAURLCategoriesScopeScopeGroupMemberEntitiesOutputWithContext(ctx context.Context) ZIAURLCategoriesScopeScopeGroupMemberEntitiesOutput {
	return o
}

func (o ZIAURLCategoriesScopeScopeGroupMemberEntitiesOutput) ToZIAURLCategoriesScopeScopeGroupMemberEntitiesPtrOutput() ZIAURLCategoriesScopeScopeGroupMemberEntitiesPtrOutput {
	return o.ToZIAURLCategoriesScopeScopeGroupMemberEntitiesPtrOutputWithContext(context.Background())
}

func (o ZIAURLCategoriesScopeScopeGroupMemberEntitiesOutput) ToZIAURLCategoriesScopeScopeGroupMemberEntitiesPtrOutputWithContext(ctx context.Context) ZIAURLCategoriesScopeScopeGroupMemberEntitiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZIAURLCategoriesScopeScopeGroupMemberEntities) *ZIAURLCategoriesScopeScopeGroupMemberEntities {
		return &v
	}).(ZIAURLCategoriesScopeScopeGroupMemberEntitiesPtrOutput)
}

func (o ZIAURLCategoriesScopeScopeGroupMemberEntitiesOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ZIAURLCategoriesScopeScopeGroupMemberEntities) []int { return v.Ids }).(pulumi.IntArrayOutput)
}

type ZIAURLCategoriesScopeScopeGroupMemberEntitiesPtrOutput struct{ *pulumi.OutputState }

func (ZIAURLCategoriesScopeScopeGroupMemberEntitiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAURLCategoriesScopeScopeGroupMemberEntities)(nil)).Elem()
}

func (o ZIAURLCategoriesScopeScopeGroupMemberEntitiesPtrOutput) ToZIAURLCategoriesScopeScopeGroupMemberEntitiesPtrOutput() ZIAURLCategoriesScopeScopeGroupMemberEntitiesPtrOutput {
	return o
}

func (o ZIAURLCategoriesScopeScopeGroupMemberEntitiesPtrOutput) ToZIAURLCategoriesScopeScopeGroupMemberEntitiesPtrOutputWithContext(ctx context.Context) ZIAURLCategoriesScopeScopeGroupMemberEntitiesPtrOutput {
	return o
}

func (o ZIAURLCategoriesScopeScopeGroupMemberEntitiesPtrOutput) Elem() ZIAURLCategoriesScopeScopeGroupMemberEntitiesOutput {
	return o.ApplyT(func(v *ZIAURLCategoriesScopeScopeGroupMemberEntities) ZIAURLCategoriesScopeScopeGroupMemberEntities {
		if v != nil {
			return *v
		}
		var ret ZIAURLCategoriesScopeScopeGroupMemberEntities
		return ret
	}).(ZIAURLCategoriesScopeScopeGroupMemberEntitiesOutput)
}

func (o ZIAURLCategoriesScopeScopeGroupMemberEntitiesPtrOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *ZIAURLCategoriesScopeScopeGroupMemberEntities) []int {
		if v == nil {
			return nil
		}
		return v.Ids
	}).(pulumi.IntArrayOutput)
}

type ZIAURLCategoriesUrlKeywordCounts struct {
	// Count of total keywords with retain parent category.
	RetainParentKeywordCount *int `pulumi:"retainParentKeywordCount"`
	// Count of URLs with retain parent category.
	RetainParentUrlCount *int `pulumi:"retainParentUrlCount"`
	// Total keyword count for the category.
	TotalKeywordCount *int `pulumi:"totalKeywordCount"`
	// Custom URL count for the category.
	TotalUrlCount *int `pulumi:"totalUrlCount"`
}

// ZIAURLCategoriesUrlKeywordCountsInput is an input type that accepts ZIAURLCategoriesUrlKeywordCountsArgs and ZIAURLCategoriesUrlKeywordCountsOutput values.
// You can construct a concrete instance of `ZIAURLCategoriesUrlKeywordCountsInput` via:
//
//	ZIAURLCategoriesUrlKeywordCountsArgs{...}
type ZIAURLCategoriesUrlKeywordCountsInput interface {
	pulumi.Input

	ToZIAURLCategoriesUrlKeywordCountsOutput() ZIAURLCategoriesUrlKeywordCountsOutput
	ToZIAURLCategoriesUrlKeywordCountsOutputWithContext(context.Context) ZIAURLCategoriesUrlKeywordCountsOutput
}

type ZIAURLCategoriesUrlKeywordCountsArgs struct {
	// Count of total keywords with retain parent category.
	RetainParentKeywordCount pulumi.IntPtrInput `pulumi:"retainParentKeywordCount"`
	// Count of URLs with retain parent category.
	RetainParentUrlCount pulumi.IntPtrInput `pulumi:"retainParentUrlCount"`
	// Total keyword count for the category.
	TotalKeywordCount pulumi.IntPtrInput `pulumi:"totalKeywordCount"`
	// Custom URL count for the category.
	TotalUrlCount pulumi.IntPtrInput `pulumi:"totalUrlCount"`
}

func (ZIAURLCategoriesUrlKeywordCountsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAURLCategoriesUrlKeywordCounts)(nil)).Elem()
}

func (i ZIAURLCategoriesUrlKeywordCountsArgs) ToZIAURLCategoriesUrlKeywordCountsOutput() ZIAURLCategoriesUrlKeywordCountsOutput {
	return i.ToZIAURLCategoriesUrlKeywordCountsOutputWithContext(context.Background())
}

func (i ZIAURLCategoriesUrlKeywordCountsArgs) ToZIAURLCategoriesUrlKeywordCountsOutputWithContext(ctx context.Context) ZIAURLCategoriesUrlKeywordCountsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAURLCategoriesUrlKeywordCountsOutput)
}

func (i ZIAURLCategoriesUrlKeywordCountsArgs) ToZIAURLCategoriesUrlKeywordCountsPtrOutput() ZIAURLCategoriesUrlKeywordCountsPtrOutput {
	return i.ToZIAURLCategoriesUrlKeywordCountsPtrOutputWithContext(context.Background())
}

func (i ZIAURLCategoriesUrlKeywordCountsArgs) ToZIAURLCategoriesUrlKeywordCountsPtrOutputWithContext(ctx context.Context) ZIAURLCategoriesUrlKeywordCountsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAURLCategoriesUrlKeywordCountsOutput).ToZIAURLCategoriesUrlKeywordCountsPtrOutputWithContext(ctx)
}

// ZIAURLCategoriesUrlKeywordCountsPtrInput is an input type that accepts ZIAURLCategoriesUrlKeywordCountsArgs, ZIAURLCategoriesUrlKeywordCountsPtr and ZIAURLCategoriesUrlKeywordCountsPtrOutput values.
// You can construct a concrete instance of `ZIAURLCategoriesUrlKeywordCountsPtrInput` via:
//
//	        ZIAURLCategoriesUrlKeywordCountsArgs{...}
//
//	or:
//
//	        nil
type ZIAURLCategoriesUrlKeywordCountsPtrInput interface {
	pulumi.Input

	ToZIAURLCategoriesUrlKeywordCountsPtrOutput() ZIAURLCategoriesUrlKeywordCountsPtrOutput
	ToZIAURLCategoriesUrlKeywordCountsPtrOutputWithContext(context.Context) ZIAURLCategoriesUrlKeywordCountsPtrOutput
}

type ziaurlcategoriesUrlKeywordCountsPtrType ZIAURLCategoriesUrlKeywordCountsArgs

func ZIAURLCategoriesUrlKeywordCountsPtr(v *ZIAURLCategoriesUrlKeywordCountsArgs) ZIAURLCategoriesUrlKeywordCountsPtrInput {
	return (*ziaurlcategoriesUrlKeywordCountsPtrType)(v)
}

func (*ziaurlcategoriesUrlKeywordCountsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAURLCategoriesUrlKeywordCounts)(nil)).Elem()
}

func (i *ziaurlcategoriesUrlKeywordCountsPtrType) ToZIAURLCategoriesUrlKeywordCountsPtrOutput() ZIAURLCategoriesUrlKeywordCountsPtrOutput {
	return i.ToZIAURLCategoriesUrlKeywordCountsPtrOutputWithContext(context.Background())
}

func (i *ziaurlcategoriesUrlKeywordCountsPtrType) ToZIAURLCategoriesUrlKeywordCountsPtrOutputWithContext(ctx context.Context) ZIAURLCategoriesUrlKeywordCountsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAURLCategoriesUrlKeywordCountsPtrOutput)
}

type ZIAURLCategoriesUrlKeywordCountsOutput struct{ *pulumi.OutputState }

func (ZIAURLCategoriesUrlKeywordCountsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAURLCategoriesUrlKeywordCounts)(nil)).Elem()
}

func (o ZIAURLCategoriesUrlKeywordCountsOutput) ToZIAURLCategoriesUrlKeywordCountsOutput() ZIAURLCategoriesUrlKeywordCountsOutput {
	return o
}

func (o ZIAURLCategoriesUrlKeywordCountsOutput) ToZIAURLCategoriesUrlKeywordCountsOutputWithContext(ctx context.Context) ZIAURLCategoriesUrlKeywordCountsOutput {
	return o
}

func (o ZIAURLCategoriesUrlKeywordCountsOutput) ToZIAURLCategoriesUrlKeywordCountsPtrOutput() ZIAURLCategoriesUrlKeywordCountsPtrOutput {
	return o.ToZIAURLCategoriesUrlKeywordCountsPtrOutputWithContext(context.Background())
}

func (o ZIAURLCategoriesUrlKeywordCountsOutput) ToZIAURLCategoriesUrlKeywordCountsPtrOutputWithContext(ctx context.Context) ZIAURLCategoriesUrlKeywordCountsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZIAURLCategoriesUrlKeywordCounts) *ZIAURLCategoriesUrlKeywordCounts {
		return &v
	}).(ZIAURLCategoriesUrlKeywordCountsPtrOutput)
}

// Count of total keywords with retain parent category.
func (o ZIAURLCategoriesUrlKeywordCountsOutput) RetainParentKeywordCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZIAURLCategoriesUrlKeywordCounts) *int { return v.RetainParentKeywordCount }).(pulumi.IntPtrOutput)
}

// Count of URLs with retain parent category.
func (o ZIAURLCategoriesUrlKeywordCountsOutput) RetainParentUrlCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZIAURLCategoriesUrlKeywordCounts) *int { return v.RetainParentUrlCount }).(pulumi.IntPtrOutput)
}

// Total keyword count for the category.
func (o ZIAURLCategoriesUrlKeywordCountsOutput) TotalKeywordCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZIAURLCategoriesUrlKeywordCounts) *int { return v.TotalKeywordCount }).(pulumi.IntPtrOutput)
}

// Custom URL count for the category.
func (o ZIAURLCategoriesUrlKeywordCountsOutput) TotalUrlCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZIAURLCategoriesUrlKeywordCounts) *int { return v.TotalUrlCount }).(pulumi.IntPtrOutput)
}

type ZIAURLCategoriesUrlKeywordCountsPtrOutput struct{ *pulumi.OutputState }

func (ZIAURLCategoriesUrlKeywordCountsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAURLCategoriesUrlKeywordCounts)(nil)).Elem()
}

func (o ZIAURLCategoriesUrlKeywordCountsPtrOutput) ToZIAURLCategoriesUrlKeywordCountsPtrOutput() ZIAURLCategoriesUrlKeywordCountsPtrOutput {
	return o
}

func (o ZIAURLCategoriesUrlKeywordCountsPtrOutput) ToZIAURLCategoriesUrlKeywordCountsPtrOutputWithContext(ctx context.Context) ZIAURLCategoriesUrlKeywordCountsPtrOutput {
	return o
}

func (o ZIAURLCategoriesUrlKeywordCountsPtrOutput) Elem() ZIAURLCategoriesUrlKeywordCountsOutput {
	return o.ApplyT(func(v *ZIAURLCategoriesUrlKeywordCounts) ZIAURLCategoriesUrlKeywordCounts {
		if v != nil {
			return *v
		}
		var ret ZIAURLCategoriesUrlKeywordCounts
		return ret
	}).(ZIAURLCategoriesUrlKeywordCountsOutput)
}

// Count of total keywords with retain parent category.
func (o ZIAURLCategoriesUrlKeywordCountsPtrOutput) RetainParentKeywordCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ZIAURLCategoriesUrlKeywordCounts) *int {
		if v == nil {
			return nil
		}
		return v.RetainParentKeywordCount
	}).(pulumi.IntPtrOutput)
}

// Count of URLs with retain parent category.
func (o ZIAURLCategoriesUrlKeywordCountsPtrOutput) RetainParentUrlCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ZIAURLCategoriesUrlKeywordCounts) *int {
		if v == nil {
			return nil
		}
		return v.RetainParentUrlCount
	}).(pulumi.IntPtrOutput)
}

// Total keyword count for the category.
func (o ZIAURLCategoriesUrlKeywordCountsPtrOutput) TotalKeywordCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ZIAURLCategoriesUrlKeywordCounts) *int {
		if v == nil {
			return nil
		}
		return v.TotalKeywordCount
	}).(pulumi.IntPtrOutput)
}

// Custom URL count for the category.
func (o ZIAURLCategoriesUrlKeywordCountsPtrOutput) TotalUrlCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ZIAURLCategoriesUrlKeywordCounts) *int {
		if v == nil {
			return nil
		}
		return v.TotalUrlCount
	}).(pulumi.IntPtrOutput)
}

type ZIAURLFilteringRulesDepartments struct {
	// Identifier that uniquely identifies an entity
	Ids []int `pulumi:"ids"`
}

// ZIAURLFilteringRulesDepartmentsInput is an input type that accepts ZIAURLFilteringRulesDepartmentsArgs and ZIAURLFilteringRulesDepartmentsOutput values.
// You can construct a concrete instance of `ZIAURLFilteringRulesDepartmentsInput` via:
//
//	ZIAURLFilteringRulesDepartmentsArgs{...}
type ZIAURLFilteringRulesDepartmentsInput interface {
	pulumi.Input

	ToZIAURLFilteringRulesDepartmentsOutput() ZIAURLFilteringRulesDepartmentsOutput
	ToZIAURLFilteringRulesDepartmentsOutputWithContext(context.Context) ZIAURLFilteringRulesDepartmentsOutput
}

type ZIAURLFilteringRulesDepartmentsArgs struct {
	// Identifier that uniquely identifies an entity
	Ids pulumi.IntArrayInput `pulumi:"ids"`
}

func (ZIAURLFilteringRulesDepartmentsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAURLFilteringRulesDepartments)(nil)).Elem()
}

func (i ZIAURLFilteringRulesDepartmentsArgs) ToZIAURLFilteringRulesDepartmentsOutput() ZIAURLFilteringRulesDepartmentsOutput {
	return i.ToZIAURLFilteringRulesDepartmentsOutputWithContext(context.Background())
}

func (i ZIAURLFilteringRulesDepartmentsArgs) ToZIAURLFilteringRulesDepartmentsOutputWithContext(ctx context.Context) ZIAURLFilteringRulesDepartmentsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAURLFilteringRulesDepartmentsOutput)
}

func (i ZIAURLFilteringRulesDepartmentsArgs) ToZIAURLFilteringRulesDepartmentsPtrOutput() ZIAURLFilteringRulesDepartmentsPtrOutput {
	return i.ToZIAURLFilteringRulesDepartmentsPtrOutputWithContext(context.Background())
}

func (i ZIAURLFilteringRulesDepartmentsArgs) ToZIAURLFilteringRulesDepartmentsPtrOutputWithContext(ctx context.Context) ZIAURLFilteringRulesDepartmentsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAURLFilteringRulesDepartmentsOutput).ToZIAURLFilteringRulesDepartmentsPtrOutputWithContext(ctx)
}

// ZIAURLFilteringRulesDepartmentsPtrInput is an input type that accepts ZIAURLFilteringRulesDepartmentsArgs, ZIAURLFilteringRulesDepartmentsPtr and ZIAURLFilteringRulesDepartmentsPtrOutput values.
// You can construct a concrete instance of `ZIAURLFilteringRulesDepartmentsPtrInput` via:
//
//	        ZIAURLFilteringRulesDepartmentsArgs{...}
//
//	or:
//
//	        nil
type ZIAURLFilteringRulesDepartmentsPtrInput interface {
	pulumi.Input

	ToZIAURLFilteringRulesDepartmentsPtrOutput() ZIAURLFilteringRulesDepartmentsPtrOutput
	ToZIAURLFilteringRulesDepartmentsPtrOutputWithContext(context.Context) ZIAURLFilteringRulesDepartmentsPtrOutput
}

type ziaurlfilteringRulesDepartmentsPtrType ZIAURLFilteringRulesDepartmentsArgs

func ZIAURLFilteringRulesDepartmentsPtr(v *ZIAURLFilteringRulesDepartmentsArgs) ZIAURLFilteringRulesDepartmentsPtrInput {
	return (*ziaurlfilteringRulesDepartmentsPtrType)(v)
}

func (*ziaurlfilteringRulesDepartmentsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAURLFilteringRulesDepartments)(nil)).Elem()
}

func (i *ziaurlfilteringRulesDepartmentsPtrType) ToZIAURLFilteringRulesDepartmentsPtrOutput() ZIAURLFilteringRulesDepartmentsPtrOutput {
	return i.ToZIAURLFilteringRulesDepartmentsPtrOutputWithContext(context.Background())
}

func (i *ziaurlfilteringRulesDepartmentsPtrType) ToZIAURLFilteringRulesDepartmentsPtrOutputWithContext(ctx context.Context) ZIAURLFilteringRulesDepartmentsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAURLFilteringRulesDepartmentsPtrOutput)
}

type ZIAURLFilteringRulesDepartmentsOutput struct{ *pulumi.OutputState }

func (ZIAURLFilteringRulesDepartmentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAURLFilteringRulesDepartments)(nil)).Elem()
}

func (o ZIAURLFilteringRulesDepartmentsOutput) ToZIAURLFilteringRulesDepartmentsOutput() ZIAURLFilteringRulesDepartmentsOutput {
	return o
}

func (o ZIAURLFilteringRulesDepartmentsOutput) ToZIAURLFilteringRulesDepartmentsOutputWithContext(ctx context.Context) ZIAURLFilteringRulesDepartmentsOutput {
	return o
}

func (o ZIAURLFilteringRulesDepartmentsOutput) ToZIAURLFilteringRulesDepartmentsPtrOutput() ZIAURLFilteringRulesDepartmentsPtrOutput {
	return o.ToZIAURLFilteringRulesDepartmentsPtrOutputWithContext(context.Background())
}

func (o ZIAURLFilteringRulesDepartmentsOutput) ToZIAURLFilteringRulesDepartmentsPtrOutputWithContext(ctx context.Context) ZIAURLFilteringRulesDepartmentsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZIAURLFilteringRulesDepartments) *ZIAURLFilteringRulesDepartments {
		return &v
	}).(ZIAURLFilteringRulesDepartmentsPtrOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIAURLFilteringRulesDepartmentsOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ZIAURLFilteringRulesDepartments) []int { return v.Ids }).(pulumi.IntArrayOutput)
}

type ZIAURLFilteringRulesDepartmentsPtrOutput struct{ *pulumi.OutputState }

func (ZIAURLFilteringRulesDepartmentsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAURLFilteringRulesDepartments)(nil)).Elem()
}

func (o ZIAURLFilteringRulesDepartmentsPtrOutput) ToZIAURLFilteringRulesDepartmentsPtrOutput() ZIAURLFilteringRulesDepartmentsPtrOutput {
	return o
}

func (o ZIAURLFilteringRulesDepartmentsPtrOutput) ToZIAURLFilteringRulesDepartmentsPtrOutputWithContext(ctx context.Context) ZIAURLFilteringRulesDepartmentsPtrOutput {
	return o
}

func (o ZIAURLFilteringRulesDepartmentsPtrOutput) Elem() ZIAURLFilteringRulesDepartmentsOutput {
	return o.ApplyT(func(v *ZIAURLFilteringRulesDepartments) ZIAURLFilteringRulesDepartments {
		if v != nil {
			return *v
		}
		var ret ZIAURLFilteringRulesDepartments
		return ret
	}).(ZIAURLFilteringRulesDepartmentsOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIAURLFilteringRulesDepartmentsPtrOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *ZIAURLFilteringRulesDepartments) []int {
		if v == nil {
			return nil
		}
		return v.Ids
	}).(pulumi.IntArrayOutput)
}

type ZIAURLFilteringRulesDeviceGroups struct {
	// Identifier that uniquely identifies an entity
	Ids []int `pulumi:"ids"`
}

// ZIAURLFilteringRulesDeviceGroupsInput is an input type that accepts ZIAURLFilteringRulesDeviceGroupsArgs and ZIAURLFilteringRulesDeviceGroupsOutput values.
// You can construct a concrete instance of `ZIAURLFilteringRulesDeviceGroupsInput` via:
//
//	ZIAURLFilteringRulesDeviceGroupsArgs{...}
type ZIAURLFilteringRulesDeviceGroupsInput interface {
	pulumi.Input

	ToZIAURLFilteringRulesDeviceGroupsOutput() ZIAURLFilteringRulesDeviceGroupsOutput
	ToZIAURLFilteringRulesDeviceGroupsOutputWithContext(context.Context) ZIAURLFilteringRulesDeviceGroupsOutput
}

type ZIAURLFilteringRulesDeviceGroupsArgs struct {
	// Identifier that uniquely identifies an entity
	Ids pulumi.IntArrayInput `pulumi:"ids"`
}

func (ZIAURLFilteringRulesDeviceGroupsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAURLFilteringRulesDeviceGroups)(nil)).Elem()
}

func (i ZIAURLFilteringRulesDeviceGroupsArgs) ToZIAURLFilteringRulesDeviceGroupsOutput() ZIAURLFilteringRulesDeviceGroupsOutput {
	return i.ToZIAURLFilteringRulesDeviceGroupsOutputWithContext(context.Background())
}

func (i ZIAURLFilteringRulesDeviceGroupsArgs) ToZIAURLFilteringRulesDeviceGroupsOutputWithContext(ctx context.Context) ZIAURLFilteringRulesDeviceGroupsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAURLFilteringRulesDeviceGroupsOutput)
}

func (i ZIAURLFilteringRulesDeviceGroupsArgs) ToZIAURLFilteringRulesDeviceGroupsPtrOutput() ZIAURLFilteringRulesDeviceGroupsPtrOutput {
	return i.ToZIAURLFilteringRulesDeviceGroupsPtrOutputWithContext(context.Background())
}

func (i ZIAURLFilteringRulesDeviceGroupsArgs) ToZIAURLFilteringRulesDeviceGroupsPtrOutputWithContext(ctx context.Context) ZIAURLFilteringRulesDeviceGroupsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAURLFilteringRulesDeviceGroupsOutput).ToZIAURLFilteringRulesDeviceGroupsPtrOutputWithContext(ctx)
}

// ZIAURLFilteringRulesDeviceGroupsPtrInput is an input type that accepts ZIAURLFilteringRulesDeviceGroupsArgs, ZIAURLFilteringRulesDeviceGroupsPtr and ZIAURLFilteringRulesDeviceGroupsPtrOutput values.
// You can construct a concrete instance of `ZIAURLFilteringRulesDeviceGroupsPtrInput` via:
//
//	        ZIAURLFilteringRulesDeviceGroupsArgs{...}
//
//	or:
//
//	        nil
type ZIAURLFilteringRulesDeviceGroupsPtrInput interface {
	pulumi.Input

	ToZIAURLFilteringRulesDeviceGroupsPtrOutput() ZIAURLFilteringRulesDeviceGroupsPtrOutput
	ToZIAURLFilteringRulesDeviceGroupsPtrOutputWithContext(context.Context) ZIAURLFilteringRulesDeviceGroupsPtrOutput
}

type ziaurlfilteringRulesDeviceGroupsPtrType ZIAURLFilteringRulesDeviceGroupsArgs

func ZIAURLFilteringRulesDeviceGroupsPtr(v *ZIAURLFilteringRulesDeviceGroupsArgs) ZIAURLFilteringRulesDeviceGroupsPtrInput {
	return (*ziaurlfilteringRulesDeviceGroupsPtrType)(v)
}

func (*ziaurlfilteringRulesDeviceGroupsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAURLFilteringRulesDeviceGroups)(nil)).Elem()
}

func (i *ziaurlfilteringRulesDeviceGroupsPtrType) ToZIAURLFilteringRulesDeviceGroupsPtrOutput() ZIAURLFilteringRulesDeviceGroupsPtrOutput {
	return i.ToZIAURLFilteringRulesDeviceGroupsPtrOutputWithContext(context.Background())
}

func (i *ziaurlfilteringRulesDeviceGroupsPtrType) ToZIAURLFilteringRulesDeviceGroupsPtrOutputWithContext(ctx context.Context) ZIAURLFilteringRulesDeviceGroupsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAURLFilteringRulesDeviceGroupsPtrOutput)
}

type ZIAURLFilteringRulesDeviceGroupsOutput struct{ *pulumi.OutputState }

func (ZIAURLFilteringRulesDeviceGroupsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAURLFilteringRulesDeviceGroups)(nil)).Elem()
}

func (o ZIAURLFilteringRulesDeviceGroupsOutput) ToZIAURLFilteringRulesDeviceGroupsOutput() ZIAURLFilteringRulesDeviceGroupsOutput {
	return o
}

func (o ZIAURLFilteringRulesDeviceGroupsOutput) ToZIAURLFilteringRulesDeviceGroupsOutputWithContext(ctx context.Context) ZIAURLFilteringRulesDeviceGroupsOutput {
	return o
}

func (o ZIAURLFilteringRulesDeviceGroupsOutput) ToZIAURLFilteringRulesDeviceGroupsPtrOutput() ZIAURLFilteringRulesDeviceGroupsPtrOutput {
	return o.ToZIAURLFilteringRulesDeviceGroupsPtrOutputWithContext(context.Background())
}

func (o ZIAURLFilteringRulesDeviceGroupsOutput) ToZIAURLFilteringRulesDeviceGroupsPtrOutputWithContext(ctx context.Context) ZIAURLFilteringRulesDeviceGroupsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZIAURLFilteringRulesDeviceGroups) *ZIAURLFilteringRulesDeviceGroups {
		return &v
	}).(ZIAURLFilteringRulesDeviceGroupsPtrOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIAURLFilteringRulesDeviceGroupsOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ZIAURLFilteringRulesDeviceGroups) []int { return v.Ids }).(pulumi.IntArrayOutput)
}

type ZIAURLFilteringRulesDeviceGroupsPtrOutput struct{ *pulumi.OutputState }

func (ZIAURLFilteringRulesDeviceGroupsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAURLFilteringRulesDeviceGroups)(nil)).Elem()
}

func (o ZIAURLFilteringRulesDeviceGroupsPtrOutput) ToZIAURLFilteringRulesDeviceGroupsPtrOutput() ZIAURLFilteringRulesDeviceGroupsPtrOutput {
	return o
}

func (o ZIAURLFilteringRulesDeviceGroupsPtrOutput) ToZIAURLFilteringRulesDeviceGroupsPtrOutputWithContext(ctx context.Context) ZIAURLFilteringRulesDeviceGroupsPtrOutput {
	return o
}

func (o ZIAURLFilteringRulesDeviceGroupsPtrOutput) Elem() ZIAURLFilteringRulesDeviceGroupsOutput {
	return o.ApplyT(func(v *ZIAURLFilteringRulesDeviceGroups) ZIAURLFilteringRulesDeviceGroups {
		if v != nil {
			return *v
		}
		var ret ZIAURLFilteringRulesDeviceGroups
		return ret
	}).(ZIAURLFilteringRulesDeviceGroupsOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIAURLFilteringRulesDeviceGroupsPtrOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *ZIAURLFilteringRulesDeviceGroups) []int {
		if v == nil {
			return nil
		}
		return v.Ids
	}).(pulumi.IntArrayOutput)
}

type ZIAURLFilteringRulesDevices struct {
	// Identifier that uniquely identifies an entity
	Ids []int `pulumi:"ids"`
}

// ZIAURLFilteringRulesDevicesInput is an input type that accepts ZIAURLFilteringRulesDevicesArgs and ZIAURLFilteringRulesDevicesOutput values.
// You can construct a concrete instance of `ZIAURLFilteringRulesDevicesInput` via:
//
//	ZIAURLFilteringRulesDevicesArgs{...}
type ZIAURLFilteringRulesDevicesInput interface {
	pulumi.Input

	ToZIAURLFilteringRulesDevicesOutput() ZIAURLFilteringRulesDevicesOutput
	ToZIAURLFilteringRulesDevicesOutputWithContext(context.Context) ZIAURLFilteringRulesDevicesOutput
}

type ZIAURLFilteringRulesDevicesArgs struct {
	// Identifier that uniquely identifies an entity
	Ids pulumi.IntArrayInput `pulumi:"ids"`
}

func (ZIAURLFilteringRulesDevicesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAURLFilteringRulesDevices)(nil)).Elem()
}

func (i ZIAURLFilteringRulesDevicesArgs) ToZIAURLFilteringRulesDevicesOutput() ZIAURLFilteringRulesDevicesOutput {
	return i.ToZIAURLFilteringRulesDevicesOutputWithContext(context.Background())
}

func (i ZIAURLFilteringRulesDevicesArgs) ToZIAURLFilteringRulesDevicesOutputWithContext(ctx context.Context) ZIAURLFilteringRulesDevicesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAURLFilteringRulesDevicesOutput)
}

func (i ZIAURLFilteringRulesDevicesArgs) ToZIAURLFilteringRulesDevicesPtrOutput() ZIAURLFilteringRulesDevicesPtrOutput {
	return i.ToZIAURLFilteringRulesDevicesPtrOutputWithContext(context.Background())
}

func (i ZIAURLFilteringRulesDevicesArgs) ToZIAURLFilteringRulesDevicesPtrOutputWithContext(ctx context.Context) ZIAURLFilteringRulesDevicesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAURLFilteringRulesDevicesOutput).ToZIAURLFilteringRulesDevicesPtrOutputWithContext(ctx)
}

// ZIAURLFilteringRulesDevicesPtrInput is an input type that accepts ZIAURLFilteringRulesDevicesArgs, ZIAURLFilteringRulesDevicesPtr and ZIAURLFilteringRulesDevicesPtrOutput values.
// You can construct a concrete instance of `ZIAURLFilteringRulesDevicesPtrInput` via:
//
//	        ZIAURLFilteringRulesDevicesArgs{...}
//
//	or:
//
//	        nil
type ZIAURLFilteringRulesDevicesPtrInput interface {
	pulumi.Input

	ToZIAURLFilteringRulesDevicesPtrOutput() ZIAURLFilteringRulesDevicesPtrOutput
	ToZIAURLFilteringRulesDevicesPtrOutputWithContext(context.Context) ZIAURLFilteringRulesDevicesPtrOutput
}

type ziaurlfilteringRulesDevicesPtrType ZIAURLFilteringRulesDevicesArgs

func ZIAURLFilteringRulesDevicesPtr(v *ZIAURLFilteringRulesDevicesArgs) ZIAURLFilteringRulesDevicesPtrInput {
	return (*ziaurlfilteringRulesDevicesPtrType)(v)
}

func (*ziaurlfilteringRulesDevicesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAURLFilteringRulesDevices)(nil)).Elem()
}

func (i *ziaurlfilteringRulesDevicesPtrType) ToZIAURLFilteringRulesDevicesPtrOutput() ZIAURLFilteringRulesDevicesPtrOutput {
	return i.ToZIAURLFilteringRulesDevicesPtrOutputWithContext(context.Background())
}

func (i *ziaurlfilteringRulesDevicesPtrType) ToZIAURLFilteringRulesDevicesPtrOutputWithContext(ctx context.Context) ZIAURLFilteringRulesDevicesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAURLFilteringRulesDevicesPtrOutput)
}

type ZIAURLFilteringRulesDevicesOutput struct{ *pulumi.OutputState }

func (ZIAURLFilteringRulesDevicesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAURLFilteringRulesDevices)(nil)).Elem()
}

func (o ZIAURLFilteringRulesDevicesOutput) ToZIAURLFilteringRulesDevicesOutput() ZIAURLFilteringRulesDevicesOutput {
	return o
}

func (o ZIAURLFilteringRulesDevicesOutput) ToZIAURLFilteringRulesDevicesOutputWithContext(ctx context.Context) ZIAURLFilteringRulesDevicesOutput {
	return o
}

func (o ZIAURLFilteringRulesDevicesOutput) ToZIAURLFilteringRulesDevicesPtrOutput() ZIAURLFilteringRulesDevicesPtrOutput {
	return o.ToZIAURLFilteringRulesDevicesPtrOutputWithContext(context.Background())
}

func (o ZIAURLFilteringRulesDevicesOutput) ToZIAURLFilteringRulesDevicesPtrOutputWithContext(ctx context.Context) ZIAURLFilteringRulesDevicesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZIAURLFilteringRulesDevices) *ZIAURLFilteringRulesDevices {
		return &v
	}).(ZIAURLFilteringRulesDevicesPtrOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIAURLFilteringRulesDevicesOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ZIAURLFilteringRulesDevices) []int { return v.Ids }).(pulumi.IntArrayOutput)
}

type ZIAURLFilteringRulesDevicesPtrOutput struct{ *pulumi.OutputState }

func (ZIAURLFilteringRulesDevicesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAURLFilteringRulesDevices)(nil)).Elem()
}

func (o ZIAURLFilteringRulesDevicesPtrOutput) ToZIAURLFilteringRulesDevicesPtrOutput() ZIAURLFilteringRulesDevicesPtrOutput {
	return o
}

func (o ZIAURLFilteringRulesDevicesPtrOutput) ToZIAURLFilteringRulesDevicesPtrOutputWithContext(ctx context.Context) ZIAURLFilteringRulesDevicesPtrOutput {
	return o
}

func (o ZIAURLFilteringRulesDevicesPtrOutput) Elem() ZIAURLFilteringRulesDevicesOutput {
	return o.ApplyT(func(v *ZIAURLFilteringRulesDevices) ZIAURLFilteringRulesDevices {
		if v != nil {
			return *v
		}
		var ret ZIAURLFilteringRulesDevices
		return ret
	}).(ZIAURLFilteringRulesDevicesOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIAURLFilteringRulesDevicesPtrOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *ZIAURLFilteringRulesDevices) []int {
		if v == nil {
			return nil
		}
		return v.Ids
	}).(pulumi.IntArrayOutput)
}

type ZIAURLFilteringRulesGroups struct {
	// Identifier that uniquely identifies an entity
	Ids []int `pulumi:"ids"`
}

// ZIAURLFilteringRulesGroupsInput is an input type that accepts ZIAURLFilteringRulesGroupsArgs and ZIAURLFilteringRulesGroupsOutput values.
// You can construct a concrete instance of `ZIAURLFilteringRulesGroupsInput` via:
//
//	ZIAURLFilteringRulesGroupsArgs{...}
type ZIAURLFilteringRulesGroupsInput interface {
	pulumi.Input

	ToZIAURLFilteringRulesGroupsOutput() ZIAURLFilteringRulesGroupsOutput
	ToZIAURLFilteringRulesGroupsOutputWithContext(context.Context) ZIAURLFilteringRulesGroupsOutput
}

type ZIAURLFilteringRulesGroupsArgs struct {
	// Identifier that uniquely identifies an entity
	Ids pulumi.IntArrayInput `pulumi:"ids"`
}

func (ZIAURLFilteringRulesGroupsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAURLFilteringRulesGroups)(nil)).Elem()
}

func (i ZIAURLFilteringRulesGroupsArgs) ToZIAURLFilteringRulesGroupsOutput() ZIAURLFilteringRulesGroupsOutput {
	return i.ToZIAURLFilteringRulesGroupsOutputWithContext(context.Background())
}

func (i ZIAURLFilteringRulesGroupsArgs) ToZIAURLFilteringRulesGroupsOutputWithContext(ctx context.Context) ZIAURLFilteringRulesGroupsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAURLFilteringRulesGroupsOutput)
}

func (i ZIAURLFilteringRulesGroupsArgs) ToZIAURLFilteringRulesGroupsPtrOutput() ZIAURLFilteringRulesGroupsPtrOutput {
	return i.ToZIAURLFilteringRulesGroupsPtrOutputWithContext(context.Background())
}

func (i ZIAURLFilteringRulesGroupsArgs) ToZIAURLFilteringRulesGroupsPtrOutputWithContext(ctx context.Context) ZIAURLFilteringRulesGroupsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAURLFilteringRulesGroupsOutput).ToZIAURLFilteringRulesGroupsPtrOutputWithContext(ctx)
}

// ZIAURLFilteringRulesGroupsPtrInput is an input type that accepts ZIAURLFilteringRulesGroupsArgs, ZIAURLFilteringRulesGroupsPtr and ZIAURLFilteringRulesGroupsPtrOutput values.
// You can construct a concrete instance of `ZIAURLFilteringRulesGroupsPtrInput` via:
//
//	        ZIAURLFilteringRulesGroupsArgs{...}
//
//	or:
//
//	        nil
type ZIAURLFilteringRulesGroupsPtrInput interface {
	pulumi.Input

	ToZIAURLFilteringRulesGroupsPtrOutput() ZIAURLFilteringRulesGroupsPtrOutput
	ToZIAURLFilteringRulesGroupsPtrOutputWithContext(context.Context) ZIAURLFilteringRulesGroupsPtrOutput
}

type ziaurlfilteringRulesGroupsPtrType ZIAURLFilteringRulesGroupsArgs

func ZIAURLFilteringRulesGroupsPtr(v *ZIAURLFilteringRulesGroupsArgs) ZIAURLFilteringRulesGroupsPtrInput {
	return (*ziaurlfilteringRulesGroupsPtrType)(v)
}

func (*ziaurlfilteringRulesGroupsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAURLFilteringRulesGroups)(nil)).Elem()
}

func (i *ziaurlfilteringRulesGroupsPtrType) ToZIAURLFilteringRulesGroupsPtrOutput() ZIAURLFilteringRulesGroupsPtrOutput {
	return i.ToZIAURLFilteringRulesGroupsPtrOutputWithContext(context.Background())
}

func (i *ziaurlfilteringRulesGroupsPtrType) ToZIAURLFilteringRulesGroupsPtrOutputWithContext(ctx context.Context) ZIAURLFilteringRulesGroupsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAURLFilteringRulesGroupsPtrOutput)
}

type ZIAURLFilteringRulesGroupsOutput struct{ *pulumi.OutputState }

func (ZIAURLFilteringRulesGroupsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAURLFilteringRulesGroups)(nil)).Elem()
}

func (o ZIAURLFilteringRulesGroupsOutput) ToZIAURLFilteringRulesGroupsOutput() ZIAURLFilteringRulesGroupsOutput {
	return o
}

func (o ZIAURLFilteringRulesGroupsOutput) ToZIAURLFilteringRulesGroupsOutputWithContext(ctx context.Context) ZIAURLFilteringRulesGroupsOutput {
	return o
}

func (o ZIAURLFilteringRulesGroupsOutput) ToZIAURLFilteringRulesGroupsPtrOutput() ZIAURLFilteringRulesGroupsPtrOutput {
	return o.ToZIAURLFilteringRulesGroupsPtrOutputWithContext(context.Background())
}

func (o ZIAURLFilteringRulesGroupsOutput) ToZIAURLFilteringRulesGroupsPtrOutputWithContext(ctx context.Context) ZIAURLFilteringRulesGroupsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZIAURLFilteringRulesGroups) *ZIAURLFilteringRulesGroups {
		return &v
	}).(ZIAURLFilteringRulesGroupsPtrOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIAURLFilteringRulesGroupsOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ZIAURLFilteringRulesGroups) []int { return v.Ids }).(pulumi.IntArrayOutput)
}

type ZIAURLFilteringRulesGroupsPtrOutput struct{ *pulumi.OutputState }

func (ZIAURLFilteringRulesGroupsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAURLFilteringRulesGroups)(nil)).Elem()
}

func (o ZIAURLFilteringRulesGroupsPtrOutput) ToZIAURLFilteringRulesGroupsPtrOutput() ZIAURLFilteringRulesGroupsPtrOutput {
	return o
}

func (o ZIAURLFilteringRulesGroupsPtrOutput) ToZIAURLFilteringRulesGroupsPtrOutputWithContext(ctx context.Context) ZIAURLFilteringRulesGroupsPtrOutput {
	return o
}

func (o ZIAURLFilteringRulesGroupsPtrOutput) Elem() ZIAURLFilteringRulesGroupsOutput {
	return o.ApplyT(func(v *ZIAURLFilteringRulesGroups) ZIAURLFilteringRulesGroups {
		if v != nil {
			return *v
		}
		var ret ZIAURLFilteringRulesGroups
		return ret
	}).(ZIAURLFilteringRulesGroupsOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIAURLFilteringRulesGroupsPtrOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *ZIAURLFilteringRulesGroups) []int {
		if v == nil {
			return nil
		}
		return v.Ids
	}).(pulumi.IntArrayOutput)
}

type ZIAURLFilteringRulesLabels struct {
	// Identifier that uniquely identifies an entity
	Ids []int `pulumi:"ids"`
}

// ZIAURLFilteringRulesLabelsInput is an input type that accepts ZIAURLFilteringRulesLabelsArgs and ZIAURLFilteringRulesLabelsOutput values.
// You can construct a concrete instance of `ZIAURLFilteringRulesLabelsInput` via:
//
//	ZIAURLFilteringRulesLabelsArgs{...}
type ZIAURLFilteringRulesLabelsInput interface {
	pulumi.Input

	ToZIAURLFilteringRulesLabelsOutput() ZIAURLFilteringRulesLabelsOutput
	ToZIAURLFilteringRulesLabelsOutputWithContext(context.Context) ZIAURLFilteringRulesLabelsOutput
}

type ZIAURLFilteringRulesLabelsArgs struct {
	// Identifier that uniquely identifies an entity
	Ids pulumi.IntArrayInput `pulumi:"ids"`
}

func (ZIAURLFilteringRulesLabelsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAURLFilteringRulesLabels)(nil)).Elem()
}

func (i ZIAURLFilteringRulesLabelsArgs) ToZIAURLFilteringRulesLabelsOutput() ZIAURLFilteringRulesLabelsOutput {
	return i.ToZIAURLFilteringRulesLabelsOutputWithContext(context.Background())
}

func (i ZIAURLFilteringRulesLabelsArgs) ToZIAURLFilteringRulesLabelsOutputWithContext(ctx context.Context) ZIAURLFilteringRulesLabelsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAURLFilteringRulesLabelsOutput)
}

func (i ZIAURLFilteringRulesLabelsArgs) ToZIAURLFilteringRulesLabelsPtrOutput() ZIAURLFilteringRulesLabelsPtrOutput {
	return i.ToZIAURLFilteringRulesLabelsPtrOutputWithContext(context.Background())
}

func (i ZIAURLFilteringRulesLabelsArgs) ToZIAURLFilteringRulesLabelsPtrOutputWithContext(ctx context.Context) ZIAURLFilteringRulesLabelsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAURLFilteringRulesLabelsOutput).ToZIAURLFilteringRulesLabelsPtrOutputWithContext(ctx)
}

// ZIAURLFilteringRulesLabelsPtrInput is an input type that accepts ZIAURLFilteringRulesLabelsArgs, ZIAURLFilteringRulesLabelsPtr and ZIAURLFilteringRulesLabelsPtrOutput values.
// You can construct a concrete instance of `ZIAURLFilteringRulesLabelsPtrInput` via:
//
//	        ZIAURLFilteringRulesLabelsArgs{...}
//
//	or:
//
//	        nil
type ZIAURLFilteringRulesLabelsPtrInput interface {
	pulumi.Input

	ToZIAURLFilteringRulesLabelsPtrOutput() ZIAURLFilteringRulesLabelsPtrOutput
	ToZIAURLFilteringRulesLabelsPtrOutputWithContext(context.Context) ZIAURLFilteringRulesLabelsPtrOutput
}

type ziaurlfilteringRulesLabelsPtrType ZIAURLFilteringRulesLabelsArgs

func ZIAURLFilteringRulesLabelsPtr(v *ZIAURLFilteringRulesLabelsArgs) ZIAURLFilteringRulesLabelsPtrInput {
	return (*ziaurlfilteringRulesLabelsPtrType)(v)
}

func (*ziaurlfilteringRulesLabelsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAURLFilteringRulesLabels)(nil)).Elem()
}

func (i *ziaurlfilteringRulesLabelsPtrType) ToZIAURLFilteringRulesLabelsPtrOutput() ZIAURLFilteringRulesLabelsPtrOutput {
	return i.ToZIAURLFilteringRulesLabelsPtrOutputWithContext(context.Background())
}

func (i *ziaurlfilteringRulesLabelsPtrType) ToZIAURLFilteringRulesLabelsPtrOutputWithContext(ctx context.Context) ZIAURLFilteringRulesLabelsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAURLFilteringRulesLabelsPtrOutput)
}

type ZIAURLFilteringRulesLabelsOutput struct{ *pulumi.OutputState }

func (ZIAURLFilteringRulesLabelsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAURLFilteringRulesLabels)(nil)).Elem()
}

func (o ZIAURLFilteringRulesLabelsOutput) ToZIAURLFilteringRulesLabelsOutput() ZIAURLFilteringRulesLabelsOutput {
	return o
}

func (o ZIAURLFilteringRulesLabelsOutput) ToZIAURLFilteringRulesLabelsOutputWithContext(ctx context.Context) ZIAURLFilteringRulesLabelsOutput {
	return o
}

func (o ZIAURLFilteringRulesLabelsOutput) ToZIAURLFilteringRulesLabelsPtrOutput() ZIAURLFilteringRulesLabelsPtrOutput {
	return o.ToZIAURLFilteringRulesLabelsPtrOutputWithContext(context.Background())
}

func (o ZIAURLFilteringRulesLabelsOutput) ToZIAURLFilteringRulesLabelsPtrOutputWithContext(ctx context.Context) ZIAURLFilteringRulesLabelsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZIAURLFilteringRulesLabels) *ZIAURLFilteringRulesLabels {
		return &v
	}).(ZIAURLFilteringRulesLabelsPtrOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIAURLFilteringRulesLabelsOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ZIAURLFilteringRulesLabels) []int { return v.Ids }).(pulumi.IntArrayOutput)
}

type ZIAURLFilteringRulesLabelsPtrOutput struct{ *pulumi.OutputState }

func (ZIAURLFilteringRulesLabelsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAURLFilteringRulesLabels)(nil)).Elem()
}

func (o ZIAURLFilteringRulesLabelsPtrOutput) ToZIAURLFilteringRulesLabelsPtrOutput() ZIAURLFilteringRulesLabelsPtrOutput {
	return o
}

func (o ZIAURLFilteringRulesLabelsPtrOutput) ToZIAURLFilteringRulesLabelsPtrOutputWithContext(ctx context.Context) ZIAURLFilteringRulesLabelsPtrOutput {
	return o
}

func (o ZIAURLFilteringRulesLabelsPtrOutput) Elem() ZIAURLFilteringRulesLabelsOutput {
	return o.ApplyT(func(v *ZIAURLFilteringRulesLabels) ZIAURLFilteringRulesLabels {
		if v != nil {
			return *v
		}
		var ret ZIAURLFilteringRulesLabels
		return ret
	}).(ZIAURLFilteringRulesLabelsOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIAURLFilteringRulesLabelsPtrOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *ZIAURLFilteringRulesLabels) []int {
		if v == nil {
			return nil
		}
		return v.Ids
	}).(pulumi.IntArrayOutput)
}

type ZIAURLFilteringRulesLastModifiedBy struct {
	Extensions map[string]string `pulumi:"extensions"`
	// Identifier that uniquely identifies an entity
	Id *int `pulumi:"id"`
	// Name of the Firewall Filtering policy rule
	Name *string `pulumi:"name"`
}

// ZIAURLFilteringRulesLastModifiedByInput is an input type that accepts ZIAURLFilteringRulesLastModifiedByArgs and ZIAURLFilteringRulesLastModifiedByOutput values.
// You can construct a concrete instance of `ZIAURLFilteringRulesLastModifiedByInput` via:
//
//	ZIAURLFilteringRulesLastModifiedByArgs{...}
type ZIAURLFilteringRulesLastModifiedByInput interface {
	pulumi.Input

	ToZIAURLFilteringRulesLastModifiedByOutput() ZIAURLFilteringRulesLastModifiedByOutput
	ToZIAURLFilteringRulesLastModifiedByOutputWithContext(context.Context) ZIAURLFilteringRulesLastModifiedByOutput
}

type ZIAURLFilteringRulesLastModifiedByArgs struct {
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// Identifier that uniquely identifies an entity
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Name of the Firewall Filtering policy rule
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ZIAURLFilteringRulesLastModifiedByArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAURLFilteringRulesLastModifiedBy)(nil)).Elem()
}

func (i ZIAURLFilteringRulesLastModifiedByArgs) ToZIAURLFilteringRulesLastModifiedByOutput() ZIAURLFilteringRulesLastModifiedByOutput {
	return i.ToZIAURLFilteringRulesLastModifiedByOutputWithContext(context.Background())
}

func (i ZIAURLFilteringRulesLastModifiedByArgs) ToZIAURLFilteringRulesLastModifiedByOutputWithContext(ctx context.Context) ZIAURLFilteringRulesLastModifiedByOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAURLFilteringRulesLastModifiedByOutput)
}

// ZIAURLFilteringRulesLastModifiedByArrayInput is an input type that accepts ZIAURLFilteringRulesLastModifiedByArray and ZIAURLFilteringRulesLastModifiedByArrayOutput values.
// You can construct a concrete instance of `ZIAURLFilteringRulesLastModifiedByArrayInput` via:
//
//	ZIAURLFilteringRulesLastModifiedByArray{ ZIAURLFilteringRulesLastModifiedByArgs{...} }
type ZIAURLFilteringRulesLastModifiedByArrayInput interface {
	pulumi.Input

	ToZIAURLFilteringRulesLastModifiedByArrayOutput() ZIAURLFilteringRulesLastModifiedByArrayOutput
	ToZIAURLFilteringRulesLastModifiedByArrayOutputWithContext(context.Context) ZIAURLFilteringRulesLastModifiedByArrayOutput
}

type ZIAURLFilteringRulesLastModifiedByArray []ZIAURLFilteringRulesLastModifiedByInput

func (ZIAURLFilteringRulesLastModifiedByArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZIAURLFilteringRulesLastModifiedBy)(nil)).Elem()
}

func (i ZIAURLFilteringRulesLastModifiedByArray) ToZIAURLFilteringRulesLastModifiedByArrayOutput() ZIAURLFilteringRulesLastModifiedByArrayOutput {
	return i.ToZIAURLFilteringRulesLastModifiedByArrayOutputWithContext(context.Background())
}

func (i ZIAURLFilteringRulesLastModifiedByArray) ToZIAURLFilteringRulesLastModifiedByArrayOutputWithContext(ctx context.Context) ZIAURLFilteringRulesLastModifiedByArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAURLFilteringRulesLastModifiedByArrayOutput)
}

type ZIAURLFilteringRulesLastModifiedByOutput struct{ *pulumi.OutputState }

func (ZIAURLFilteringRulesLastModifiedByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAURLFilteringRulesLastModifiedBy)(nil)).Elem()
}

func (o ZIAURLFilteringRulesLastModifiedByOutput) ToZIAURLFilteringRulesLastModifiedByOutput() ZIAURLFilteringRulesLastModifiedByOutput {
	return o
}

func (o ZIAURLFilteringRulesLastModifiedByOutput) ToZIAURLFilteringRulesLastModifiedByOutputWithContext(ctx context.Context) ZIAURLFilteringRulesLastModifiedByOutput {
	return o
}

func (o ZIAURLFilteringRulesLastModifiedByOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v ZIAURLFilteringRulesLastModifiedBy) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIAURLFilteringRulesLastModifiedByOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZIAURLFilteringRulesLastModifiedBy) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Name of the Firewall Filtering policy rule
func (o ZIAURLFilteringRulesLastModifiedByOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZIAURLFilteringRulesLastModifiedBy) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ZIAURLFilteringRulesLastModifiedByArrayOutput struct{ *pulumi.OutputState }

func (ZIAURLFilteringRulesLastModifiedByArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZIAURLFilteringRulesLastModifiedBy)(nil)).Elem()
}

func (o ZIAURLFilteringRulesLastModifiedByArrayOutput) ToZIAURLFilteringRulesLastModifiedByArrayOutput() ZIAURLFilteringRulesLastModifiedByArrayOutput {
	return o
}

func (o ZIAURLFilteringRulesLastModifiedByArrayOutput) ToZIAURLFilteringRulesLastModifiedByArrayOutputWithContext(ctx context.Context) ZIAURLFilteringRulesLastModifiedByArrayOutput {
	return o
}

func (o ZIAURLFilteringRulesLastModifiedByArrayOutput) Index(i pulumi.IntInput) ZIAURLFilteringRulesLastModifiedByOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZIAURLFilteringRulesLastModifiedBy {
		return vs[0].([]ZIAURLFilteringRulesLastModifiedBy)[vs[1].(int)]
	}).(ZIAURLFilteringRulesLastModifiedByOutput)
}

type ZIAURLFilteringRulesLocationGroups struct {
	// Identifier that uniquely identifies an entity
	Ids []int `pulumi:"ids"`
}

// ZIAURLFilteringRulesLocationGroupsInput is an input type that accepts ZIAURLFilteringRulesLocationGroupsArgs and ZIAURLFilteringRulesLocationGroupsOutput values.
// You can construct a concrete instance of `ZIAURLFilteringRulesLocationGroupsInput` via:
//
//	ZIAURLFilteringRulesLocationGroupsArgs{...}
type ZIAURLFilteringRulesLocationGroupsInput interface {
	pulumi.Input

	ToZIAURLFilteringRulesLocationGroupsOutput() ZIAURLFilteringRulesLocationGroupsOutput
	ToZIAURLFilteringRulesLocationGroupsOutputWithContext(context.Context) ZIAURLFilteringRulesLocationGroupsOutput
}

type ZIAURLFilteringRulesLocationGroupsArgs struct {
	// Identifier that uniquely identifies an entity
	Ids pulumi.IntArrayInput `pulumi:"ids"`
}

func (ZIAURLFilteringRulesLocationGroupsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAURLFilteringRulesLocationGroups)(nil)).Elem()
}

func (i ZIAURLFilteringRulesLocationGroupsArgs) ToZIAURLFilteringRulesLocationGroupsOutput() ZIAURLFilteringRulesLocationGroupsOutput {
	return i.ToZIAURLFilteringRulesLocationGroupsOutputWithContext(context.Background())
}

func (i ZIAURLFilteringRulesLocationGroupsArgs) ToZIAURLFilteringRulesLocationGroupsOutputWithContext(ctx context.Context) ZIAURLFilteringRulesLocationGroupsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAURLFilteringRulesLocationGroupsOutput)
}

func (i ZIAURLFilteringRulesLocationGroupsArgs) ToZIAURLFilteringRulesLocationGroupsPtrOutput() ZIAURLFilteringRulesLocationGroupsPtrOutput {
	return i.ToZIAURLFilteringRulesLocationGroupsPtrOutputWithContext(context.Background())
}

func (i ZIAURLFilteringRulesLocationGroupsArgs) ToZIAURLFilteringRulesLocationGroupsPtrOutputWithContext(ctx context.Context) ZIAURLFilteringRulesLocationGroupsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAURLFilteringRulesLocationGroupsOutput).ToZIAURLFilteringRulesLocationGroupsPtrOutputWithContext(ctx)
}

// ZIAURLFilteringRulesLocationGroupsPtrInput is an input type that accepts ZIAURLFilteringRulesLocationGroupsArgs, ZIAURLFilteringRulesLocationGroupsPtr and ZIAURLFilteringRulesLocationGroupsPtrOutput values.
// You can construct a concrete instance of `ZIAURLFilteringRulesLocationGroupsPtrInput` via:
//
//	        ZIAURLFilteringRulesLocationGroupsArgs{...}
//
//	or:
//
//	        nil
type ZIAURLFilteringRulesLocationGroupsPtrInput interface {
	pulumi.Input

	ToZIAURLFilteringRulesLocationGroupsPtrOutput() ZIAURLFilteringRulesLocationGroupsPtrOutput
	ToZIAURLFilteringRulesLocationGroupsPtrOutputWithContext(context.Context) ZIAURLFilteringRulesLocationGroupsPtrOutput
}

type ziaurlfilteringRulesLocationGroupsPtrType ZIAURLFilteringRulesLocationGroupsArgs

func ZIAURLFilteringRulesLocationGroupsPtr(v *ZIAURLFilteringRulesLocationGroupsArgs) ZIAURLFilteringRulesLocationGroupsPtrInput {
	return (*ziaurlfilteringRulesLocationGroupsPtrType)(v)
}

func (*ziaurlfilteringRulesLocationGroupsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAURLFilteringRulesLocationGroups)(nil)).Elem()
}

func (i *ziaurlfilteringRulesLocationGroupsPtrType) ToZIAURLFilteringRulesLocationGroupsPtrOutput() ZIAURLFilteringRulesLocationGroupsPtrOutput {
	return i.ToZIAURLFilteringRulesLocationGroupsPtrOutputWithContext(context.Background())
}

func (i *ziaurlfilteringRulesLocationGroupsPtrType) ToZIAURLFilteringRulesLocationGroupsPtrOutputWithContext(ctx context.Context) ZIAURLFilteringRulesLocationGroupsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAURLFilteringRulesLocationGroupsPtrOutput)
}

type ZIAURLFilteringRulesLocationGroupsOutput struct{ *pulumi.OutputState }

func (ZIAURLFilteringRulesLocationGroupsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAURLFilteringRulesLocationGroups)(nil)).Elem()
}

func (o ZIAURLFilteringRulesLocationGroupsOutput) ToZIAURLFilteringRulesLocationGroupsOutput() ZIAURLFilteringRulesLocationGroupsOutput {
	return o
}

func (o ZIAURLFilteringRulesLocationGroupsOutput) ToZIAURLFilteringRulesLocationGroupsOutputWithContext(ctx context.Context) ZIAURLFilteringRulesLocationGroupsOutput {
	return o
}

func (o ZIAURLFilteringRulesLocationGroupsOutput) ToZIAURLFilteringRulesLocationGroupsPtrOutput() ZIAURLFilteringRulesLocationGroupsPtrOutput {
	return o.ToZIAURLFilteringRulesLocationGroupsPtrOutputWithContext(context.Background())
}

func (o ZIAURLFilteringRulesLocationGroupsOutput) ToZIAURLFilteringRulesLocationGroupsPtrOutputWithContext(ctx context.Context) ZIAURLFilteringRulesLocationGroupsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZIAURLFilteringRulesLocationGroups) *ZIAURLFilteringRulesLocationGroups {
		return &v
	}).(ZIAURLFilteringRulesLocationGroupsPtrOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIAURLFilteringRulesLocationGroupsOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ZIAURLFilteringRulesLocationGroups) []int { return v.Ids }).(pulumi.IntArrayOutput)
}

type ZIAURLFilteringRulesLocationGroupsPtrOutput struct{ *pulumi.OutputState }

func (ZIAURLFilteringRulesLocationGroupsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAURLFilteringRulesLocationGroups)(nil)).Elem()
}

func (o ZIAURLFilteringRulesLocationGroupsPtrOutput) ToZIAURLFilteringRulesLocationGroupsPtrOutput() ZIAURLFilteringRulesLocationGroupsPtrOutput {
	return o
}

func (o ZIAURLFilteringRulesLocationGroupsPtrOutput) ToZIAURLFilteringRulesLocationGroupsPtrOutputWithContext(ctx context.Context) ZIAURLFilteringRulesLocationGroupsPtrOutput {
	return o
}

func (o ZIAURLFilteringRulesLocationGroupsPtrOutput) Elem() ZIAURLFilteringRulesLocationGroupsOutput {
	return o.ApplyT(func(v *ZIAURLFilteringRulesLocationGroups) ZIAURLFilteringRulesLocationGroups {
		if v != nil {
			return *v
		}
		var ret ZIAURLFilteringRulesLocationGroups
		return ret
	}).(ZIAURLFilteringRulesLocationGroupsOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIAURLFilteringRulesLocationGroupsPtrOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *ZIAURLFilteringRulesLocationGroups) []int {
		if v == nil {
			return nil
		}
		return v.Ids
	}).(pulumi.IntArrayOutput)
}

type ZIAURLFilteringRulesLocations struct {
	// Identifier that uniquely identifies an entity
	Ids []int `pulumi:"ids"`
}

// ZIAURLFilteringRulesLocationsInput is an input type that accepts ZIAURLFilteringRulesLocationsArgs and ZIAURLFilteringRulesLocationsOutput values.
// You can construct a concrete instance of `ZIAURLFilteringRulesLocationsInput` via:
//
//	ZIAURLFilteringRulesLocationsArgs{...}
type ZIAURLFilteringRulesLocationsInput interface {
	pulumi.Input

	ToZIAURLFilteringRulesLocationsOutput() ZIAURLFilteringRulesLocationsOutput
	ToZIAURLFilteringRulesLocationsOutputWithContext(context.Context) ZIAURLFilteringRulesLocationsOutput
}

type ZIAURLFilteringRulesLocationsArgs struct {
	// Identifier that uniquely identifies an entity
	Ids pulumi.IntArrayInput `pulumi:"ids"`
}

func (ZIAURLFilteringRulesLocationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAURLFilteringRulesLocations)(nil)).Elem()
}

func (i ZIAURLFilteringRulesLocationsArgs) ToZIAURLFilteringRulesLocationsOutput() ZIAURLFilteringRulesLocationsOutput {
	return i.ToZIAURLFilteringRulesLocationsOutputWithContext(context.Background())
}

func (i ZIAURLFilteringRulesLocationsArgs) ToZIAURLFilteringRulesLocationsOutputWithContext(ctx context.Context) ZIAURLFilteringRulesLocationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAURLFilteringRulesLocationsOutput)
}

func (i ZIAURLFilteringRulesLocationsArgs) ToZIAURLFilteringRulesLocationsPtrOutput() ZIAURLFilteringRulesLocationsPtrOutput {
	return i.ToZIAURLFilteringRulesLocationsPtrOutputWithContext(context.Background())
}

func (i ZIAURLFilteringRulesLocationsArgs) ToZIAURLFilteringRulesLocationsPtrOutputWithContext(ctx context.Context) ZIAURLFilteringRulesLocationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAURLFilteringRulesLocationsOutput).ToZIAURLFilteringRulesLocationsPtrOutputWithContext(ctx)
}

// ZIAURLFilteringRulesLocationsPtrInput is an input type that accepts ZIAURLFilteringRulesLocationsArgs, ZIAURLFilteringRulesLocationsPtr and ZIAURLFilteringRulesLocationsPtrOutput values.
// You can construct a concrete instance of `ZIAURLFilteringRulesLocationsPtrInput` via:
//
//	        ZIAURLFilteringRulesLocationsArgs{...}
//
//	or:
//
//	        nil
type ZIAURLFilteringRulesLocationsPtrInput interface {
	pulumi.Input

	ToZIAURLFilteringRulesLocationsPtrOutput() ZIAURLFilteringRulesLocationsPtrOutput
	ToZIAURLFilteringRulesLocationsPtrOutputWithContext(context.Context) ZIAURLFilteringRulesLocationsPtrOutput
}

type ziaurlfilteringRulesLocationsPtrType ZIAURLFilteringRulesLocationsArgs

func ZIAURLFilteringRulesLocationsPtr(v *ZIAURLFilteringRulesLocationsArgs) ZIAURLFilteringRulesLocationsPtrInput {
	return (*ziaurlfilteringRulesLocationsPtrType)(v)
}

func (*ziaurlfilteringRulesLocationsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAURLFilteringRulesLocations)(nil)).Elem()
}

func (i *ziaurlfilteringRulesLocationsPtrType) ToZIAURLFilteringRulesLocationsPtrOutput() ZIAURLFilteringRulesLocationsPtrOutput {
	return i.ToZIAURLFilteringRulesLocationsPtrOutputWithContext(context.Background())
}

func (i *ziaurlfilteringRulesLocationsPtrType) ToZIAURLFilteringRulesLocationsPtrOutputWithContext(ctx context.Context) ZIAURLFilteringRulesLocationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAURLFilteringRulesLocationsPtrOutput)
}

type ZIAURLFilteringRulesLocationsOutput struct{ *pulumi.OutputState }

func (ZIAURLFilteringRulesLocationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAURLFilteringRulesLocations)(nil)).Elem()
}

func (o ZIAURLFilteringRulesLocationsOutput) ToZIAURLFilteringRulesLocationsOutput() ZIAURLFilteringRulesLocationsOutput {
	return o
}

func (o ZIAURLFilteringRulesLocationsOutput) ToZIAURLFilteringRulesLocationsOutputWithContext(ctx context.Context) ZIAURLFilteringRulesLocationsOutput {
	return o
}

func (o ZIAURLFilteringRulesLocationsOutput) ToZIAURLFilteringRulesLocationsPtrOutput() ZIAURLFilteringRulesLocationsPtrOutput {
	return o.ToZIAURLFilteringRulesLocationsPtrOutputWithContext(context.Background())
}

func (o ZIAURLFilteringRulesLocationsOutput) ToZIAURLFilteringRulesLocationsPtrOutputWithContext(ctx context.Context) ZIAURLFilteringRulesLocationsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZIAURLFilteringRulesLocations) *ZIAURLFilteringRulesLocations {
		return &v
	}).(ZIAURLFilteringRulesLocationsPtrOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIAURLFilteringRulesLocationsOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ZIAURLFilteringRulesLocations) []int { return v.Ids }).(pulumi.IntArrayOutput)
}

type ZIAURLFilteringRulesLocationsPtrOutput struct{ *pulumi.OutputState }

func (ZIAURLFilteringRulesLocationsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAURLFilteringRulesLocations)(nil)).Elem()
}

func (o ZIAURLFilteringRulesLocationsPtrOutput) ToZIAURLFilteringRulesLocationsPtrOutput() ZIAURLFilteringRulesLocationsPtrOutput {
	return o
}

func (o ZIAURLFilteringRulesLocationsPtrOutput) ToZIAURLFilteringRulesLocationsPtrOutputWithContext(ctx context.Context) ZIAURLFilteringRulesLocationsPtrOutput {
	return o
}

func (o ZIAURLFilteringRulesLocationsPtrOutput) Elem() ZIAURLFilteringRulesLocationsOutput {
	return o.ApplyT(func(v *ZIAURLFilteringRulesLocations) ZIAURLFilteringRulesLocations {
		if v != nil {
			return *v
		}
		var ret ZIAURLFilteringRulesLocations
		return ret
	}).(ZIAURLFilteringRulesLocationsOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIAURLFilteringRulesLocationsPtrOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *ZIAURLFilteringRulesLocations) []int {
		if v == nil {
			return nil
		}
		return v.Ids
	}).(pulumi.IntArrayOutput)
}

type ZIAURLFilteringRulesOverrideGroups struct {
	// Identifier that uniquely identifies an entity
	Ids []int `pulumi:"ids"`
}

// ZIAURLFilteringRulesOverrideGroupsInput is an input type that accepts ZIAURLFilteringRulesOverrideGroupsArgs and ZIAURLFilteringRulesOverrideGroupsOutput values.
// You can construct a concrete instance of `ZIAURLFilteringRulesOverrideGroupsInput` via:
//
//	ZIAURLFilteringRulesOverrideGroupsArgs{...}
type ZIAURLFilteringRulesOverrideGroupsInput interface {
	pulumi.Input

	ToZIAURLFilteringRulesOverrideGroupsOutput() ZIAURLFilteringRulesOverrideGroupsOutput
	ToZIAURLFilteringRulesOverrideGroupsOutputWithContext(context.Context) ZIAURLFilteringRulesOverrideGroupsOutput
}

type ZIAURLFilteringRulesOverrideGroupsArgs struct {
	// Identifier that uniquely identifies an entity
	Ids pulumi.IntArrayInput `pulumi:"ids"`
}

func (ZIAURLFilteringRulesOverrideGroupsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAURLFilteringRulesOverrideGroups)(nil)).Elem()
}

func (i ZIAURLFilteringRulesOverrideGroupsArgs) ToZIAURLFilteringRulesOverrideGroupsOutput() ZIAURLFilteringRulesOverrideGroupsOutput {
	return i.ToZIAURLFilteringRulesOverrideGroupsOutputWithContext(context.Background())
}

func (i ZIAURLFilteringRulesOverrideGroupsArgs) ToZIAURLFilteringRulesOverrideGroupsOutputWithContext(ctx context.Context) ZIAURLFilteringRulesOverrideGroupsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAURLFilteringRulesOverrideGroupsOutput)
}

func (i ZIAURLFilteringRulesOverrideGroupsArgs) ToZIAURLFilteringRulesOverrideGroupsPtrOutput() ZIAURLFilteringRulesOverrideGroupsPtrOutput {
	return i.ToZIAURLFilteringRulesOverrideGroupsPtrOutputWithContext(context.Background())
}

func (i ZIAURLFilteringRulesOverrideGroupsArgs) ToZIAURLFilteringRulesOverrideGroupsPtrOutputWithContext(ctx context.Context) ZIAURLFilteringRulesOverrideGroupsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAURLFilteringRulesOverrideGroupsOutput).ToZIAURLFilteringRulesOverrideGroupsPtrOutputWithContext(ctx)
}

// ZIAURLFilteringRulesOverrideGroupsPtrInput is an input type that accepts ZIAURLFilteringRulesOverrideGroupsArgs, ZIAURLFilteringRulesOverrideGroupsPtr and ZIAURLFilteringRulesOverrideGroupsPtrOutput values.
// You can construct a concrete instance of `ZIAURLFilteringRulesOverrideGroupsPtrInput` via:
//
//	        ZIAURLFilteringRulesOverrideGroupsArgs{...}
//
//	or:
//
//	        nil
type ZIAURLFilteringRulesOverrideGroupsPtrInput interface {
	pulumi.Input

	ToZIAURLFilteringRulesOverrideGroupsPtrOutput() ZIAURLFilteringRulesOverrideGroupsPtrOutput
	ToZIAURLFilteringRulesOverrideGroupsPtrOutputWithContext(context.Context) ZIAURLFilteringRulesOverrideGroupsPtrOutput
}

type ziaurlfilteringRulesOverrideGroupsPtrType ZIAURLFilteringRulesOverrideGroupsArgs

func ZIAURLFilteringRulesOverrideGroupsPtr(v *ZIAURLFilteringRulesOverrideGroupsArgs) ZIAURLFilteringRulesOverrideGroupsPtrInput {
	return (*ziaurlfilteringRulesOverrideGroupsPtrType)(v)
}

func (*ziaurlfilteringRulesOverrideGroupsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAURLFilteringRulesOverrideGroups)(nil)).Elem()
}

func (i *ziaurlfilteringRulesOverrideGroupsPtrType) ToZIAURLFilteringRulesOverrideGroupsPtrOutput() ZIAURLFilteringRulesOverrideGroupsPtrOutput {
	return i.ToZIAURLFilteringRulesOverrideGroupsPtrOutputWithContext(context.Background())
}

func (i *ziaurlfilteringRulesOverrideGroupsPtrType) ToZIAURLFilteringRulesOverrideGroupsPtrOutputWithContext(ctx context.Context) ZIAURLFilteringRulesOverrideGroupsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAURLFilteringRulesOverrideGroupsPtrOutput)
}

type ZIAURLFilteringRulesOverrideGroupsOutput struct{ *pulumi.OutputState }

func (ZIAURLFilteringRulesOverrideGroupsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAURLFilteringRulesOverrideGroups)(nil)).Elem()
}

func (o ZIAURLFilteringRulesOverrideGroupsOutput) ToZIAURLFilteringRulesOverrideGroupsOutput() ZIAURLFilteringRulesOverrideGroupsOutput {
	return o
}

func (o ZIAURLFilteringRulesOverrideGroupsOutput) ToZIAURLFilteringRulesOverrideGroupsOutputWithContext(ctx context.Context) ZIAURLFilteringRulesOverrideGroupsOutput {
	return o
}

func (o ZIAURLFilteringRulesOverrideGroupsOutput) ToZIAURLFilteringRulesOverrideGroupsPtrOutput() ZIAURLFilteringRulesOverrideGroupsPtrOutput {
	return o.ToZIAURLFilteringRulesOverrideGroupsPtrOutputWithContext(context.Background())
}

func (o ZIAURLFilteringRulesOverrideGroupsOutput) ToZIAURLFilteringRulesOverrideGroupsPtrOutputWithContext(ctx context.Context) ZIAURLFilteringRulesOverrideGroupsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZIAURLFilteringRulesOverrideGroups) *ZIAURLFilteringRulesOverrideGroups {
		return &v
	}).(ZIAURLFilteringRulesOverrideGroupsPtrOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIAURLFilteringRulesOverrideGroupsOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ZIAURLFilteringRulesOverrideGroups) []int { return v.Ids }).(pulumi.IntArrayOutput)
}

type ZIAURLFilteringRulesOverrideGroupsPtrOutput struct{ *pulumi.OutputState }

func (ZIAURLFilteringRulesOverrideGroupsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAURLFilteringRulesOverrideGroups)(nil)).Elem()
}

func (o ZIAURLFilteringRulesOverrideGroupsPtrOutput) ToZIAURLFilteringRulesOverrideGroupsPtrOutput() ZIAURLFilteringRulesOverrideGroupsPtrOutput {
	return o
}

func (o ZIAURLFilteringRulesOverrideGroupsPtrOutput) ToZIAURLFilteringRulesOverrideGroupsPtrOutputWithContext(ctx context.Context) ZIAURLFilteringRulesOverrideGroupsPtrOutput {
	return o
}

func (o ZIAURLFilteringRulesOverrideGroupsPtrOutput) Elem() ZIAURLFilteringRulesOverrideGroupsOutput {
	return o.ApplyT(func(v *ZIAURLFilteringRulesOverrideGroups) ZIAURLFilteringRulesOverrideGroups {
		if v != nil {
			return *v
		}
		var ret ZIAURLFilteringRulesOverrideGroups
		return ret
	}).(ZIAURLFilteringRulesOverrideGroupsOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIAURLFilteringRulesOverrideGroupsPtrOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *ZIAURLFilteringRulesOverrideGroups) []int {
		if v == nil {
			return nil
		}
		return v.Ids
	}).(pulumi.IntArrayOutput)
}

type ZIAURLFilteringRulesOverrideUsers struct {
	// Identifier that uniquely identifies an entity
	Ids []int `pulumi:"ids"`
}

// ZIAURLFilteringRulesOverrideUsersInput is an input type that accepts ZIAURLFilteringRulesOverrideUsersArgs and ZIAURLFilteringRulesOverrideUsersOutput values.
// You can construct a concrete instance of `ZIAURLFilteringRulesOverrideUsersInput` via:
//
//	ZIAURLFilteringRulesOverrideUsersArgs{...}
type ZIAURLFilteringRulesOverrideUsersInput interface {
	pulumi.Input

	ToZIAURLFilteringRulesOverrideUsersOutput() ZIAURLFilteringRulesOverrideUsersOutput
	ToZIAURLFilteringRulesOverrideUsersOutputWithContext(context.Context) ZIAURLFilteringRulesOverrideUsersOutput
}

type ZIAURLFilteringRulesOverrideUsersArgs struct {
	// Identifier that uniquely identifies an entity
	Ids pulumi.IntArrayInput `pulumi:"ids"`
}

func (ZIAURLFilteringRulesOverrideUsersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAURLFilteringRulesOverrideUsers)(nil)).Elem()
}

func (i ZIAURLFilteringRulesOverrideUsersArgs) ToZIAURLFilteringRulesOverrideUsersOutput() ZIAURLFilteringRulesOverrideUsersOutput {
	return i.ToZIAURLFilteringRulesOverrideUsersOutputWithContext(context.Background())
}

func (i ZIAURLFilteringRulesOverrideUsersArgs) ToZIAURLFilteringRulesOverrideUsersOutputWithContext(ctx context.Context) ZIAURLFilteringRulesOverrideUsersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAURLFilteringRulesOverrideUsersOutput)
}

func (i ZIAURLFilteringRulesOverrideUsersArgs) ToZIAURLFilteringRulesOverrideUsersPtrOutput() ZIAURLFilteringRulesOverrideUsersPtrOutput {
	return i.ToZIAURLFilteringRulesOverrideUsersPtrOutputWithContext(context.Background())
}

func (i ZIAURLFilteringRulesOverrideUsersArgs) ToZIAURLFilteringRulesOverrideUsersPtrOutputWithContext(ctx context.Context) ZIAURLFilteringRulesOverrideUsersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAURLFilteringRulesOverrideUsersOutput).ToZIAURLFilteringRulesOverrideUsersPtrOutputWithContext(ctx)
}

// ZIAURLFilteringRulesOverrideUsersPtrInput is an input type that accepts ZIAURLFilteringRulesOverrideUsersArgs, ZIAURLFilteringRulesOverrideUsersPtr and ZIAURLFilteringRulesOverrideUsersPtrOutput values.
// You can construct a concrete instance of `ZIAURLFilteringRulesOverrideUsersPtrInput` via:
//
//	        ZIAURLFilteringRulesOverrideUsersArgs{...}
//
//	or:
//
//	        nil
type ZIAURLFilteringRulesOverrideUsersPtrInput interface {
	pulumi.Input

	ToZIAURLFilteringRulesOverrideUsersPtrOutput() ZIAURLFilteringRulesOverrideUsersPtrOutput
	ToZIAURLFilteringRulesOverrideUsersPtrOutputWithContext(context.Context) ZIAURLFilteringRulesOverrideUsersPtrOutput
}

type ziaurlfilteringRulesOverrideUsersPtrType ZIAURLFilteringRulesOverrideUsersArgs

func ZIAURLFilteringRulesOverrideUsersPtr(v *ZIAURLFilteringRulesOverrideUsersArgs) ZIAURLFilteringRulesOverrideUsersPtrInput {
	return (*ziaurlfilteringRulesOverrideUsersPtrType)(v)
}

func (*ziaurlfilteringRulesOverrideUsersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAURLFilteringRulesOverrideUsers)(nil)).Elem()
}

func (i *ziaurlfilteringRulesOverrideUsersPtrType) ToZIAURLFilteringRulesOverrideUsersPtrOutput() ZIAURLFilteringRulesOverrideUsersPtrOutput {
	return i.ToZIAURLFilteringRulesOverrideUsersPtrOutputWithContext(context.Background())
}

func (i *ziaurlfilteringRulesOverrideUsersPtrType) ToZIAURLFilteringRulesOverrideUsersPtrOutputWithContext(ctx context.Context) ZIAURLFilteringRulesOverrideUsersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAURLFilteringRulesOverrideUsersPtrOutput)
}

type ZIAURLFilteringRulesOverrideUsersOutput struct{ *pulumi.OutputState }

func (ZIAURLFilteringRulesOverrideUsersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAURLFilteringRulesOverrideUsers)(nil)).Elem()
}

func (o ZIAURLFilteringRulesOverrideUsersOutput) ToZIAURLFilteringRulesOverrideUsersOutput() ZIAURLFilteringRulesOverrideUsersOutput {
	return o
}

func (o ZIAURLFilteringRulesOverrideUsersOutput) ToZIAURLFilteringRulesOverrideUsersOutputWithContext(ctx context.Context) ZIAURLFilteringRulesOverrideUsersOutput {
	return o
}

func (o ZIAURLFilteringRulesOverrideUsersOutput) ToZIAURLFilteringRulesOverrideUsersPtrOutput() ZIAURLFilteringRulesOverrideUsersPtrOutput {
	return o.ToZIAURLFilteringRulesOverrideUsersPtrOutputWithContext(context.Background())
}

func (o ZIAURLFilteringRulesOverrideUsersOutput) ToZIAURLFilteringRulesOverrideUsersPtrOutputWithContext(ctx context.Context) ZIAURLFilteringRulesOverrideUsersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZIAURLFilteringRulesOverrideUsers) *ZIAURLFilteringRulesOverrideUsers {
		return &v
	}).(ZIAURLFilteringRulesOverrideUsersPtrOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIAURLFilteringRulesOverrideUsersOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ZIAURLFilteringRulesOverrideUsers) []int { return v.Ids }).(pulumi.IntArrayOutput)
}

type ZIAURLFilteringRulesOverrideUsersPtrOutput struct{ *pulumi.OutputState }

func (ZIAURLFilteringRulesOverrideUsersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAURLFilteringRulesOverrideUsers)(nil)).Elem()
}

func (o ZIAURLFilteringRulesOverrideUsersPtrOutput) ToZIAURLFilteringRulesOverrideUsersPtrOutput() ZIAURLFilteringRulesOverrideUsersPtrOutput {
	return o
}

func (o ZIAURLFilteringRulesOverrideUsersPtrOutput) ToZIAURLFilteringRulesOverrideUsersPtrOutputWithContext(ctx context.Context) ZIAURLFilteringRulesOverrideUsersPtrOutput {
	return o
}

func (o ZIAURLFilteringRulesOverrideUsersPtrOutput) Elem() ZIAURLFilteringRulesOverrideUsersOutput {
	return o.ApplyT(func(v *ZIAURLFilteringRulesOverrideUsers) ZIAURLFilteringRulesOverrideUsers {
		if v != nil {
			return *v
		}
		var ret ZIAURLFilteringRulesOverrideUsers
		return ret
	}).(ZIAURLFilteringRulesOverrideUsersOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIAURLFilteringRulesOverrideUsersPtrOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *ZIAURLFilteringRulesOverrideUsers) []int {
		if v == nil {
			return nil
		}
		return v.Ids
	}).(pulumi.IntArrayOutput)
}

type ZIAURLFilteringRulesTimeWindows struct {
	// Identifier that uniquely identifies an entity
	Ids []int `pulumi:"ids"`
}

// ZIAURLFilteringRulesTimeWindowsInput is an input type that accepts ZIAURLFilteringRulesTimeWindowsArgs and ZIAURLFilteringRulesTimeWindowsOutput values.
// You can construct a concrete instance of `ZIAURLFilteringRulesTimeWindowsInput` via:
//
//	ZIAURLFilteringRulesTimeWindowsArgs{...}
type ZIAURLFilteringRulesTimeWindowsInput interface {
	pulumi.Input

	ToZIAURLFilteringRulesTimeWindowsOutput() ZIAURLFilteringRulesTimeWindowsOutput
	ToZIAURLFilteringRulesTimeWindowsOutputWithContext(context.Context) ZIAURLFilteringRulesTimeWindowsOutput
}

type ZIAURLFilteringRulesTimeWindowsArgs struct {
	// Identifier that uniquely identifies an entity
	Ids pulumi.IntArrayInput `pulumi:"ids"`
}

func (ZIAURLFilteringRulesTimeWindowsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAURLFilteringRulesTimeWindows)(nil)).Elem()
}

func (i ZIAURLFilteringRulesTimeWindowsArgs) ToZIAURLFilteringRulesTimeWindowsOutput() ZIAURLFilteringRulesTimeWindowsOutput {
	return i.ToZIAURLFilteringRulesTimeWindowsOutputWithContext(context.Background())
}

func (i ZIAURLFilteringRulesTimeWindowsArgs) ToZIAURLFilteringRulesTimeWindowsOutputWithContext(ctx context.Context) ZIAURLFilteringRulesTimeWindowsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAURLFilteringRulesTimeWindowsOutput)
}

func (i ZIAURLFilteringRulesTimeWindowsArgs) ToZIAURLFilteringRulesTimeWindowsPtrOutput() ZIAURLFilteringRulesTimeWindowsPtrOutput {
	return i.ToZIAURLFilteringRulesTimeWindowsPtrOutputWithContext(context.Background())
}

func (i ZIAURLFilteringRulesTimeWindowsArgs) ToZIAURLFilteringRulesTimeWindowsPtrOutputWithContext(ctx context.Context) ZIAURLFilteringRulesTimeWindowsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAURLFilteringRulesTimeWindowsOutput).ToZIAURLFilteringRulesTimeWindowsPtrOutputWithContext(ctx)
}

// ZIAURLFilteringRulesTimeWindowsPtrInput is an input type that accepts ZIAURLFilteringRulesTimeWindowsArgs, ZIAURLFilteringRulesTimeWindowsPtr and ZIAURLFilteringRulesTimeWindowsPtrOutput values.
// You can construct a concrete instance of `ZIAURLFilteringRulesTimeWindowsPtrInput` via:
//
//	        ZIAURLFilteringRulesTimeWindowsArgs{...}
//
//	or:
//
//	        nil
type ZIAURLFilteringRulesTimeWindowsPtrInput interface {
	pulumi.Input

	ToZIAURLFilteringRulesTimeWindowsPtrOutput() ZIAURLFilteringRulesTimeWindowsPtrOutput
	ToZIAURLFilteringRulesTimeWindowsPtrOutputWithContext(context.Context) ZIAURLFilteringRulesTimeWindowsPtrOutput
}

type ziaurlfilteringRulesTimeWindowsPtrType ZIAURLFilteringRulesTimeWindowsArgs

func ZIAURLFilteringRulesTimeWindowsPtr(v *ZIAURLFilteringRulesTimeWindowsArgs) ZIAURLFilteringRulesTimeWindowsPtrInput {
	return (*ziaurlfilteringRulesTimeWindowsPtrType)(v)
}

func (*ziaurlfilteringRulesTimeWindowsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAURLFilteringRulesTimeWindows)(nil)).Elem()
}

func (i *ziaurlfilteringRulesTimeWindowsPtrType) ToZIAURLFilteringRulesTimeWindowsPtrOutput() ZIAURLFilteringRulesTimeWindowsPtrOutput {
	return i.ToZIAURLFilteringRulesTimeWindowsPtrOutputWithContext(context.Background())
}

func (i *ziaurlfilteringRulesTimeWindowsPtrType) ToZIAURLFilteringRulesTimeWindowsPtrOutputWithContext(ctx context.Context) ZIAURLFilteringRulesTimeWindowsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAURLFilteringRulesTimeWindowsPtrOutput)
}

type ZIAURLFilteringRulesTimeWindowsOutput struct{ *pulumi.OutputState }

func (ZIAURLFilteringRulesTimeWindowsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAURLFilteringRulesTimeWindows)(nil)).Elem()
}

func (o ZIAURLFilteringRulesTimeWindowsOutput) ToZIAURLFilteringRulesTimeWindowsOutput() ZIAURLFilteringRulesTimeWindowsOutput {
	return o
}

func (o ZIAURLFilteringRulesTimeWindowsOutput) ToZIAURLFilteringRulesTimeWindowsOutputWithContext(ctx context.Context) ZIAURLFilteringRulesTimeWindowsOutput {
	return o
}

func (o ZIAURLFilteringRulesTimeWindowsOutput) ToZIAURLFilteringRulesTimeWindowsPtrOutput() ZIAURLFilteringRulesTimeWindowsPtrOutput {
	return o.ToZIAURLFilteringRulesTimeWindowsPtrOutputWithContext(context.Background())
}

func (o ZIAURLFilteringRulesTimeWindowsOutput) ToZIAURLFilteringRulesTimeWindowsPtrOutputWithContext(ctx context.Context) ZIAURLFilteringRulesTimeWindowsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZIAURLFilteringRulesTimeWindows) *ZIAURLFilteringRulesTimeWindows {
		return &v
	}).(ZIAURLFilteringRulesTimeWindowsPtrOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIAURLFilteringRulesTimeWindowsOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ZIAURLFilteringRulesTimeWindows) []int { return v.Ids }).(pulumi.IntArrayOutput)
}

type ZIAURLFilteringRulesTimeWindowsPtrOutput struct{ *pulumi.OutputState }

func (ZIAURLFilteringRulesTimeWindowsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAURLFilteringRulesTimeWindows)(nil)).Elem()
}

func (o ZIAURLFilteringRulesTimeWindowsPtrOutput) ToZIAURLFilteringRulesTimeWindowsPtrOutput() ZIAURLFilteringRulesTimeWindowsPtrOutput {
	return o
}

func (o ZIAURLFilteringRulesTimeWindowsPtrOutput) ToZIAURLFilteringRulesTimeWindowsPtrOutputWithContext(ctx context.Context) ZIAURLFilteringRulesTimeWindowsPtrOutput {
	return o
}

func (o ZIAURLFilteringRulesTimeWindowsPtrOutput) Elem() ZIAURLFilteringRulesTimeWindowsOutput {
	return o.ApplyT(func(v *ZIAURLFilteringRulesTimeWindows) ZIAURLFilteringRulesTimeWindows {
		if v != nil {
			return *v
		}
		var ret ZIAURLFilteringRulesTimeWindows
		return ret
	}).(ZIAURLFilteringRulesTimeWindowsOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIAURLFilteringRulesTimeWindowsPtrOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *ZIAURLFilteringRulesTimeWindows) []int {
		if v == nil {
			return nil
		}
		return v.Ids
	}).(pulumi.IntArrayOutput)
}

type ZIAURLFilteringRulesUsers struct {
	// Identifier that uniquely identifies an entity
	Ids []int `pulumi:"ids"`
}

// ZIAURLFilteringRulesUsersInput is an input type that accepts ZIAURLFilteringRulesUsersArgs and ZIAURLFilteringRulesUsersOutput values.
// You can construct a concrete instance of `ZIAURLFilteringRulesUsersInput` via:
//
//	ZIAURLFilteringRulesUsersArgs{...}
type ZIAURLFilteringRulesUsersInput interface {
	pulumi.Input

	ToZIAURLFilteringRulesUsersOutput() ZIAURLFilteringRulesUsersOutput
	ToZIAURLFilteringRulesUsersOutputWithContext(context.Context) ZIAURLFilteringRulesUsersOutput
}

type ZIAURLFilteringRulesUsersArgs struct {
	// Identifier that uniquely identifies an entity
	Ids pulumi.IntArrayInput `pulumi:"ids"`
}

func (ZIAURLFilteringRulesUsersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAURLFilteringRulesUsers)(nil)).Elem()
}

func (i ZIAURLFilteringRulesUsersArgs) ToZIAURLFilteringRulesUsersOutput() ZIAURLFilteringRulesUsersOutput {
	return i.ToZIAURLFilteringRulesUsersOutputWithContext(context.Background())
}

func (i ZIAURLFilteringRulesUsersArgs) ToZIAURLFilteringRulesUsersOutputWithContext(ctx context.Context) ZIAURLFilteringRulesUsersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAURLFilteringRulesUsersOutput)
}

func (i ZIAURLFilteringRulesUsersArgs) ToZIAURLFilteringRulesUsersPtrOutput() ZIAURLFilteringRulesUsersPtrOutput {
	return i.ToZIAURLFilteringRulesUsersPtrOutputWithContext(context.Background())
}

func (i ZIAURLFilteringRulesUsersArgs) ToZIAURLFilteringRulesUsersPtrOutputWithContext(ctx context.Context) ZIAURLFilteringRulesUsersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAURLFilteringRulesUsersOutput).ToZIAURLFilteringRulesUsersPtrOutputWithContext(ctx)
}

// ZIAURLFilteringRulesUsersPtrInput is an input type that accepts ZIAURLFilteringRulesUsersArgs, ZIAURLFilteringRulesUsersPtr and ZIAURLFilteringRulesUsersPtrOutput values.
// You can construct a concrete instance of `ZIAURLFilteringRulesUsersPtrInput` via:
//
//	        ZIAURLFilteringRulesUsersArgs{...}
//
//	or:
//
//	        nil
type ZIAURLFilteringRulesUsersPtrInput interface {
	pulumi.Input

	ToZIAURLFilteringRulesUsersPtrOutput() ZIAURLFilteringRulesUsersPtrOutput
	ToZIAURLFilteringRulesUsersPtrOutputWithContext(context.Context) ZIAURLFilteringRulesUsersPtrOutput
}

type ziaurlfilteringRulesUsersPtrType ZIAURLFilteringRulesUsersArgs

func ZIAURLFilteringRulesUsersPtr(v *ZIAURLFilteringRulesUsersArgs) ZIAURLFilteringRulesUsersPtrInput {
	return (*ziaurlfilteringRulesUsersPtrType)(v)
}

func (*ziaurlfilteringRulesUsersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAURLFilteringRulesUsers)(nil)).Elem()
}

func (i *ziaurlfilteringRulesUsersPtrType) ToZIAURLFilteringRulesUsersPtrOutput() ZIAURLFilteringRulesUsersPtrOutput {
	return i.ToZIAURLFilteringRulesUsersPtrOutputWithContext(context.Background())
}

func (i *ziaurlfilteringRulesUsersPtrType) ToZIAURLFilteringRulesUsersPtrOutputWithContext(ctx context.Context) ZIAURLFilteringRulesUsersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAURLFilteringRulesUsersPtrOutput)
}

type ZIAURLFilteringRulesUsersOutput struct{ *pulumi.OutputState }

func (ZIAURLFilteringRulesUsersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAURLFilteringRulesUsers)(nil)).Elem()
}

func (o ZIAURLFilteringRulesUsersOutput) ToZIAURLFilteringRulesUsersOutput() ZIAURLFilteringRulesUsersOutput {
	return o
}

func (o ZIAURLFilteringRulesUsersOutput) ToZIAURLFilteringRulesUsersOutputWithContext(ctx context.Context) ZIAURLFilteringRulesUsersOutput {
	return o
}

func (o ZIAURLFilteringRulesUsersOutput) ToZIAURLFilteringRulesUsersPtrOutput() ZIAURLFilteringRulesUsersPtrOutput {
	return o.ToZIAURLFilteringRulesUsersPtrOutputWithContext(context.Background())
}

func (o ZIAURLFilteringRulesUsersOutput) ToZIAURLFilteringRulesUsersPtrOutputWithContext(ctx context.Context) ZIAURLFilteringRulesUsersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZIAURLFilteringRulesUsers) *ZIAURLFilteringRulesUsers {
		return &v
	}).(ZIAURLFilteringRulesUsersPtrOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIAURLFilteringRulesUsersOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ZIAURLFilteringRulesUsers) []int { return v.Ids }).(pulumi.IntArrayOutput)
}

type ZIAURLFilteringRulesUsersPtrOutput struct{ *pulumi.OutputState }

func (ZIAURLFilteringRulesUsersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAURLFilteringRulesUsers)(nil)).Elem()
}

func (o ZIAURLFilteringRulesUsersPtrOutput) ToZIAURLFilteringRulesUsersPtrOutput() ZIAURLFilteringRulesUsersPtrOutput {
	return o
}

func (o ZIAURLFilteringRulesUsersPtrOutput) ToZIAURLFilteringRulesUsersPtrOutputWithContext(ctx context.Context) ZIAURLFilteringRulesUsersPtrOutput {
	return o
}

func (o ZIAURLFilteringRulesUsersPtrOutput) Elem() ZIAURLFilteringRulesUsersOutput {
	return o.ApplyT(func(v *ZIAURLFilteringRulesUsers) ZIAURLFilteringRulesUsers {
		if v != nil {
			return *v
		}
		var ret ZIAURLFilteringRulesUsers
		return ret
	}).(ZIAURLFilteringRulesUsersOutput)
}

// Identifier that uniquely identifies an entity
func (o ZIAURLFilteringRulesUsersPtrOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *ZIAURLFilteringRulesUsers) []int {
		if v == nil {
			return nil
		}
		return v.Ids
	}).(pulumi.IntArrayOutput)
}

type ZIAUserManagementDepartment struct {
	Comments *string `pulumi:"comments"`
	Deleted  *bool   `pulumi:"deleted"`
	// Department ID
	Id    *int `pulumi:"id"`
	IdpId *int `pulumi:"idpId"`
	// User name. This appears when choosing users for policies.
	Name *string `pulumi:"name"`
}

// ZIAUserManagementDepartmentInput is an input type that accepts ZIAUserManagementDepartmentArgs and ZIAUserManagementDepartmentOutput values.
// You can construct a concrete instance of `ZIAUserManagementDepartmentInput` via:
//
//	ZIAUserManagementDepartmentArgs{...}
type ZIAUserManagementDepartmentInput interface {
	pulumi.Input

	ToZIAUserManagementDepartmentOutput() ZIAUserManagementDepartmentOutput
	ToZIAUserManagementDepartmentOutputWithContext(context.Context) ZIAUserManagementDepartmentOutput
}

type ZIAUserManagementDepartmentArgs struct {
	Comments pulumi.StringPtrInput `pulumi:"comments"`
	Deleted  pulumi.BoolPtrInput   `pulumi:"deleted"`
	// Department ID
	Id    pulumi.IntPtrInput `pulumi:"id"`
	IdpId pulumi.IntPtrInput `pulumi:"idpId"`
	// User name. This appears when choosing users for policies.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ZIAUserManagementDepartmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAUserManagementDepartment)(nil)).Elem()
}

func (i ZIAUserManagementDepartmentArgs) ToZIAUserManagementDepartmentOutput() ZIAUserManagementDepartmentOutput {
	return i.ToZIAUserManagementDepartmentOutputWithContext(context.Background())
}

func (i ZIAUserManagementDepartmentArgs) ToZIAUserManagementDepartmentOutputWithContext(ctx context.Context) ZIAUserManagementDepartmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAUserManagementDepartmentOutput)
}

func (i ZIAUserManagementDepartmentArgs) ToZIAUserManagementDepartmentPtrOutput() ZIAUserManagementDepartmentPtrOutput {
	return i.ToZIAUserManagementDepartmentPtrOutputWithContext(context.Background())
}

func (i ZIAUserManagementDepartmentArgs) ToZIAUserManagementDepartmentPtrOutputWithContext(ctx context.Context) ZIAUserManagementDepartmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAUserManagementDepartmentOutput).ToZIAUserManagementDepartmentPtrOutputWithContext(ctx)
}

// ZIAUserManagementDepartmentPtrInput is an input type that accepts ZIAUserManagementDepartmentArgs, ZIAUserManagementDepartmentPtr and ZIAUserManagementDepartmentPtrOutput values.
// You can construct a concrete instance of `ZIAUserManagementDepartmentPtrInput` via:
//
//	        ZIAUserManagementDepartmentArgs{...}
//
//	or:
//
//	        nil
type ZIAUserManagementDepartmentPtrInput interface {
	pulumi.Input

	ToZIAUserManagementDepartmentPtrOutput() ZIAUserManagementDepartmentPtrOutput
	ToZIAUserManagementDepartmentPtrOutputWithContext(context.Context) ZIAUserManagementDepartmentPtrOutput
}

type ziauserManagementDepartmentPtrType ZIAUserManagementDepartmentArgs

func ZIAUserManagementDepartmentPtr(v *ZIAUserManagementDepartmentArgs) ZIAUserManagementDepartmentPtrInput {
	return (*ziauserManagementDepartmentPtrType)(v)
}

func (*ziauserManagementDepartmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAUserManagementDepartment)(nil)).Elem()
}

func (i *ziauserManagementDepartmentPtrType) ToZIAUserManagementDepartmentPtrOutput() ZIAUserManagementDepartmentPtrOutput {
	return i.ToZIAUserManagementDepartmentPtrOutputWithContext(context.Background())
}

func (i *ziauserManagementDepartmentPtrType) ToZIAUserManagementDepartmentPtrOutputWithContext(ctx context.Context) ZIAUserManagementDepartmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAUserManagementDepartmentPtrOutput)
}

type ZIAUserManagementDepartmentOutput struct{ *pulumi.OutputState }

func (ZIAUserManagementDepartmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAUserManagementDepartment)(nil)).Elem()
}

func (o ZIAUserManagementDepartmentOutput) ToZIAUserManagementDepartmentOutput() ZIAUserManagementDepartmentOutput {
	return o
}

func (o ZIAUserManagementDepartmentOutput) ToZIAUserManagementDepartmentOutputWithContext(ctx context.Context) ZIAUserManagementDepartmentOutput {
	return o
}

func (o ZIAUserManagementDepartmentOutput) ToZIAUserManagementDepartmentPtrOutput() ZIAUserManagementDepartmentPtrOutput {
	return o.ToZIAUserManagementDepartmentPtrOutputWithContext(context.Background())
}

func (o ZIAUserManagementDepartmentOutput) ToZIAUserManagementDepartmentPtrOutputWithContext(ctx context.Context) ZIAUserManagementDepartmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZIAUserManagementDepartment) *ZIAUserManagementDepartment {
		return &v
	}).(ZIAUserManagementDepartmentPtrOutput)
}

func (o ZIAUserManagementDepartmentOutput) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZIAUserManagementDepartment) *string { return v.Comments }).(pulumi.StringPtrOutput)
}

func (o ZIAUserManagementDepartmentOutput) Deleted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ZIAUserManagementDepartment) *bool { return v.Deleted }).(pulumi.BoolPtrOutput)
}

// Department ID
func (o ZIAUserManagementDepartmentOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZIAUserManagementDepartment) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o ZIAUserManagementDepartmentOutput) IdpId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZIAUserManagementDepartment) *int { return v.IdpId }).(pulumi.IntPtrOutput)
}

// User name. This appears when choosing users for policies.
func (o ZIAUserManagementDepartmentOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZIAUserManagementDepartment) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ZIAUserManagementDepartmentPtrOutput struct{ *pulumi.OutputState }

func (ZIAUserManagementDepartmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAUserManagementDepartment)(nil)).Elem()
}

func (o ZIAUserManagementDepartmentPtrOutput) ToZIAUserManagementDepartmentPtrOutput() ZIAUserManagementDepartmentPtrOutput {
	return o
}

func (o ZIAUserManagementDepartmentPtrOutput) ToZIAUserManagementDepartmentPtrOutputWithContext(ctx context.Context) ZIAUserManagementDepartmentPtrOutput {
	return o
}

func (o ZIAUserManagementDepartmentPtrOutput) Elem() ZIAUserManagementDepartmentOutput {
	return o.ApplyT(func(v *ZIAUserManagementDepartment) ZIAUserManagementDepartment {
		if v != nil {
			return *v
		}
		var ret ZIAUserManagementDepartment
		return ret
	}).(ZIAUserManagementDepartmentOutput)
}

func (o ZIAUserManagementDepartmentPtrOutput) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZIAUserManagementDepartment) *string {
		if v == nil {
			return nil
		}
		return v.Comments
	}).(pulumi.StringPtrOutput)
}

func (o ZIAUserManagementDepartmentPtrOutput) Deleted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ZIAUserManagementDepartment) *bool {
		if v == nil {
			return nil
		}
		return v.Deleted
	}).(pulumi.BoolPtrOutput)
}

// Department ID
func (o ZIAUserManagementDepartmentPtrOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ZIAUserManagementDepartment) *int {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.IntPtrOutput)
}

func (o ZIAUserManagementDepartmentPtrOutput) IdpId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ZIAUserManagementDepartment) *int {
		if v == nil {
			return nil
		}
		return v.IdpId
	}).(pulumi.IntPtrOutput)
}

// User name. This appears when choosing users for policies.
func (o ZIAUserManagementDepartmentPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZIAUserManagementDepartment) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type ZIAUserManagementGroups struct {
	// Department ID
	Ids []int `pulumi:"ids"`
}

// ZIAUserManagementGroupsInput is an input type that accepts ZIAUserManagementGroupsArgs and ZIAUserManagementGroupsOutput values.
// You can construct a concrete instance of `ZIAUserManagementGroupsInput` via:
//
//	ZIAUserManagementGroupsArgs{...}
type ZIAUserManagementGroupsInput interface {
	pulumi.Input

	ToZIAUserManagementGroupsOutput() ZIAUserManagementGroupsOutput
	ToZIAUserManagementGroupsOutputWithContext(context.Context) ZIAUserManagementGroupsOutput
}

type ZIAUserManagementGroupsArgs struct {
	// Department ID
	Ids pulumi.IntArrayInput `pulumi:"ids"`
}

func (ZIAUserManagementGroupsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAUserManagementGroups)(nil)).Elem()
}

func (i ZIAUserManagementGroupsArgs) ToZIAUserManagementGroupsOutput() ZIAUserManagementGroupsOutput {
	return i.ToZIAUserManagementGroupsOutputWithContext(context.Background())
}

func (i ZIAUserManagementGroupsArgs) ToZIAUserManagementGroupsOutputWithContext(ctx context.Context) ZIAUserManagementGroupsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAUserManagementGroupsOutput)
}

func (i ZIAUserManagementGroupsArgs) ToZIAUserManagementGroupsPtrOutput() ZIAUserManagementGroupsPtrOutput {
	return i.ToZIAUserManagementGroupsPtrOutputWithContext(context.Background())
}

func (i ZIAUserManagementGroupsArgs) ToZIAUserManagementGroupsPtrOutputWithContext(ctx context.Context) ZIAUserManagementGroupsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAUserManagementGroupsOutput).ToZIAUserManagementGroupsPtrOutputWithContext(ctx)
}

// ZIAUserManagementGroupsPtrInput is an input type that accepts ZIAUserManagementGroupsArgs, ZIAUserManagementGroupsPtr and ZIAUserManagementGroupsPtrOutput values.
// You can construct a concrete instance of `ZIAUserManagementGroupsPtrInput` via:
//
//	        ZIAUserManagementGroupsArgs{...}
//
//	or:
//
//	        nil
type ZIAUserManagementGroupsPtrInput interface {
	pulumi.Input

	ToZIAUserManagementGroupsPtrOutput() ZIAUserManagementGroupsPtrOutput
	ToZIAUserManagementGroupsPtrOutputWithContext(context.Context) ZIAUserManagementGroupsPtrOutput
}

type ziauserManagementGroupsPtrType ZIAUserManagementGroupsArgs

func ZIAUserManagementGroupsPtr(v *ZIAUserManagementGroupsArgs) ZIAUserManagementGroupsPtrInput {
	return (*ziauserManagementGroupsPtrType)(v)
}

func (*ziauserManagementGroupsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAUserManagementGroups)(nil)).Elem()
}

func (i *ziauserManagementGroupsPtrType) ToZIAUserManagementGroupsPtrOutput() ZIAUserManagementGroupsPtrOutput {
	return i.ToZIAUserManagementGroupsPtrOutputWithContext(context.Background())
}

func (i *ziauserManagementGroupsPtrType) ToZIAUserManagementGroupsPtrOutputWithContext(ctx context.Context) ZIAUserManagementGroupsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAUserManagementGroupsPtrOutput)
}

type ZIAUserManagementGroupsOutput struct{ *pulumi.OutputState }

func (ZIAUserManagementGroupsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZIAUserManagementGroups)(nil)).Elem()
}

func (o ZIAUserManagementGroupsOutput) ToZIAUserManagementGroupsOutput() ZIAUserManagementGroupsOutput {
	return o
}

func (o ZIAUserManagementGroupsOutput) ToZIAUserManagementGroupsOutputWithContext(ctx context.Context) ZIAUserManagementGroupsOutput {
	return o
}

func (o ZIAUserManagementGroupsOutput) ToZIAUserManagementGroupsPtrOutput() ZIAUserManagementGroupsPtrOutput {
	return o.ToZIAUserManagementGroupsPtrOutputWithContext(context.Background())
}

func (o ZIAUserManagementGroupsOutput) ToZIAUserManagementGroupsPtrOutputWithContext(ctx context.Context) ZIAUserManagementGroupsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZIAUserManagementGroups) *ZIAUserManagementGroups {
		return &v
	}).(ZIAUserManagementGroupsPtrOutput)
}

// Department ID
func (o ZIAUserManagementGroupsOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ZIAUserManagementGroups) []int { return v.Ids }).(pulumi.IntArrayOutput)
}

type ZIAUserManagementGroupsPtrOutput struct{ *pulumi.OutputState }

func (ZIAUserManagementGroupsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAUserManagementGroups)(nil)).Elem()
}

func (o ZIAUserManagementGroupsPtrOutput) ToZIAUserManagementGroupsPtrOutput() ZIAUserManagementGroupsPtrOutput {
	return o
}

func (o ZIAUserManagementGroupsPtrOutput) ToZIAUserManagementGroupsPtrOutputWithContext(ctx context.Context) ZIAUserManagementGroupsPtrOutput {
	return o
}

func (o ZIAUserManagementGroupsPtrOutput) Elem() ZIAUserManagementGroupsOutput {
	return o.ApplyT(func(v *ZIAUserManagementGroups) ZIAUserManagementGroups {
		if v != nil {
			return *v
		}
		var ret ZIAUserManagementGroups
		return ret
	}).(ZIAUserManagementGroupsOutput)
}

// Department ID
func (o ZIAUserManagementGroupsPtrOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *ZIAUserManagementGroups) []int {
		if v == nil {
			return nil
		}
		return v.Ids
	}).(pulumi.IntArrayOutput)
}

type GetZIAAdminUsersAdminScope struct {
	// (String) Based on the admin scope type, the entities can be the ID/name pair of departments, locations, or location groups.
	ScopeEntities []GetZIAAdminUsersAdminScopeScopeEntity `pulumi:"scopeEntities"`
	// (Number) Only applicable for the LOCATION_GROUP admin scope type, in which case this attribute gives the list of ID/name pairs of locations within the location group.
	ScopeGroupMemberEntities []GetZIAAdminUsersAdminScopeScopeGroupMemberEntity `pulumi:"scopeGroupMemberEntities"`
	// (String) The admin scope type. The attribute name is subject to change.
	Type string `pulumi:"type"`
}

// GetZIAAdminUsersAdminScopeInput is an input type that accepts GetZIAAdminUsersAdminScopeArgs and GetZIAAdminUsersAdminScopeOutput values.
// You can construct a concrete instance of `GetZIAAdminUsersAdminScopeInput` via:
//
//	GetZIAAdminUsersAdminScopeArgs{...}
type GetZIAAdminUsersAdminScopeInput interface {
	pulumi.Input

	ToGetZIAAdminUsersAdminScopeOutput() GetZIAAdminUsersAdminScopeOutput
	ToGetZIAAdminUsersAdminScopeOutputWithContext(context.Context) GetZIAAdminUsersAdminScopeOutput
}

type GetZIAAdminUsersAdminScopeArgs struct {
	// (String) Based on the admin scope type, the entities can be the ID/name pair of departments, locations, or location groups.
	ScopeEntities GetZIAAdminUsersAdminScopeScopeEntityArrayInput `pulumi:"scopeEntities"`
	// (Number) Only applicable for the LOCATION_GROUP admin scope type, in which case this attribute gives the list of ID/name pairs of locations within the location group.
	ScopeGroupMemberEntities GetZIAAdminUsersAdminScopeScopeGroupMemberEntityArrayInput `pulumi:"scopeGroupMemberEntities"`
	// (String) The admin scope type. The attribute name is subject to change.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetZIAAdminUsersAdminScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAAdminUsersAdminScope)(nil)).Elem()
}

func (i GetZIAAdminUsersAdminScopeArgs) ToGetZIAAdminUsersAdminScopeOutput() GetZIAAdminUsersAdminScopeOutput {
	return i.ToGetZIAAdminUsersAdminScopeOutputWithContext(context.Background())
}

func (i GetZIAAdminUsersAdminScopeArgs) ToGetZIAAdminUsersAdminScopeOutputWithContext(ctx context.Context) GetZIAAdminUsersAdminScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAAdminUsersAdminScopeOutput)
}

// GetZIAAdminUsersAdminScopeArrayInput is an input type that accepts GetZIAAdminUsersAdminScopeArray and GetZIAAdminUsersAdminScopeArrayOutput values.
// You can construct a concrete instance of `GetZIAAdminUsersAdminScopeArrayInput` via:
//
//	GetZIAAdminUsersAdminScopeArray{ GetZIAAdminUsersAdminScopeArgs{...} }
type GetZIAAdminUsersAdminScopeArrayInput interface {
	pulumi.Input

	ToGetZIAAdminUsersAdminScopeArrayOutput() GetZIAAdminUsersAdminScopeArrayOutput
	ToGetZIAAdminUsersAdminScopeArrayOutputWithContext(context.Context) GetZIAAdminUsersAdminScopeArrayOutput
}

type GetZIAAdminUsersAdminScopeArray []GetZIAAdminUsersAdminScopeInput

func (GetZIAAdminUsersAdminScopeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAAdminUsersAdminScope)(nil)).Elem()
}

func (i GetZIAAdminUsersAdminScopeArray) ToGetZIAAdminUsersAdminScopeArrayOutput() GetZIAAdminUsersAdminScopeArrayOutput {
	return i.ToGetZIAAdminUsersAdminScopeArrayOutputWithContext(context.Background())
}

func (i GetZIAAdminUsersAdminScopeArray) ToGetZIAAdminUsersAdminScopeArrayOutputWithContext(ctx context.Context) GetZIAAdminUsersAdminScopeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAAdminUsersAdminScopeArrayOutput)
}

type GetZIAAdminUsersAdminScopeOutput struct{ *pulumi.OutputState }

func (GetZIAAdminUsersAdminScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAAdminUsersAdminScope)(nil)).Elem()
}

func (o GetZIAAdminUsersAdminScopeOutput) ToGetZIAAdminUsersAdminScopeOutput() GetZIAAdminUsersAdminScopeOutput {
	return o
}

func (o GetZIAAdminUsersAdminScopeOutput) ToGetZIAAdminUsersAdminScopeOutputWithContext(ctx context.Context) GetZIAAdminUsersAdminScopeOutput {
	return o
}

// (String) Based on the admin scope type, the entities can be the ID/name pair of departments, locations, or location groups.
func (o GetZIAAdminUsersAdminScopeOutput) ScopeEntities() GetZIAAdminUsersAdminScopeScopeEntityArrayOutput {
	return o.ApplyT(func(v GetZIAAdminUsersAdminScope) []GetZIAAdminUsersAdminScopeScopeEntity { return v.ScopeEntities }).(GetZIAAdminUsersAdminScopeScopeEntityArrayOutput)
}

// (Number) Only applicable for the LOCATION_GROUP admin scope type, in which case this attribute gives the list of ID/name pairs of locations within the location group.
func (o GetZIAAdminUsersAdminScopeOutput) ScopeGroupMemberEntities() GetZIAAdminUsersAdminScopeScopeGroupMemberEntityArrayOutput {
	return o.ApplyT(func(v GetZIAAdminUsersAdminScope) []GetZIAAdminUsersAdminScopeScopeGroupMemberEntity {
		return v.ScopeGroupMemberEntities
	}).(GetZIAAdminUsersAdminScopeScopeGroupMemberEntityArrayOutput)
}

// (String) The admin scope type. The attribute name is subject to change.
func (o GetZIAAdminUsersAdminScopeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIAAdminUsersAdminScope) string { return v.Type }).(pulumi.StringOutput)
}

type GetZIAAdminUsersAdminScopeArrayOutput struct{ *pulumi.OutputState }

func (GetZIAAdminUsersAdminScopeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAAdminUsersAdminScope)(nil)).Elem()
}

func (o GetZIAAdminUsersAdminScopeArrayOutput) ToGetZIAAdminUsersAdminScopeArrayOutput() GetZIAAdminUsersAdminScopeArrayOutput {
	return o
}

func (o GetZIAAdminUsersAdminScopeArrayOutput) ToGetZIAAdminUsersAdminScopeArrayOutputWithContext(ctx context.Context) GetZIAAdminUsersAdminScopeArrayOutput {
	return o
}

func (o GetZIAAdminUsersAdminScopeArrayOutput) Index(i pulumi.IntInput) GetZIAAdminUsersAdminScopeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIAAdminUsersAdminScope {
		return vs[0].([]GetZIAAdminUsersAdminScope)[vs[1].(int)]
	}).(GetZIAAdminUsersAdminScopeOutput)
}

type GetZIAAdminUsersAdminScopeScopeEntity struct {
	Extensions map[string]string `pulumi:"extensions"`
	// The ID of the admin user to be exported.
	Id int `pulumi:"id"`
	// (String)
	Name string `pulumi:"name"`
}

// GetZIAAdminUsersAdminScopeScopeEntityInput is an input type that accepts GetZIAAdminUsersAdminScopeScopeEntityArgs and GetZIAAdminUsersAdminScopeScopeEntityOutput values.
// You can construct a concrete instance of `GetZIAAdminUsersAdminScopeScopeEntityInput` via:
//
//	GetZIAAdminUsersAdminScopeScopeEntityArgs{...}
type GetZIAAdminUsersAdminScopeScopeEntityInput interface {
	pulumi.Input

	ToGetZIAAdminUsersAdminScopeScopeEntityOutput() GetZIAAdminUsersAdminScopeScopeEntityOutput
	ToGetZIAAdminUsersAdminScopeScopeEntityOutputWithContext(context.Context) GetZIAAdminUsersAdminScopeScopeEntityOutput
}

type GetZIAAdminUsersAdminScopeScopeEntityArgs struct {
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// The ID of the admin user to be exported.
	Id pulumi.IntInput `pulumi:"id"`
	// (String)
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZIAAdminUsersAdminScopeScopeEntityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAAdminUsersAdminScopeScopeEntity)(nil)).Elem()
}

func (i GetZIAAdminUsersAdminScopeScopeEntityArgs) ToGetZIAAdminUsersAdminScopeScopeEntityOutput() GetZIAAdminUsersAdminScopeScopeEntityOutput {
	return i.ToGetZIAAdminUsersAdminScopeScopeEntityOutputWithContext(context.Background())
}

func (i GetZIAAdminUsersAdminScopeScopeEntityArgs) ToGetZIAAdminUsersAdminScopeScopeEntityOutputWithContext(ctx context.Context) GetZIAAdminUsersAdminScopeScopeEntityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAAdminUsersAdminScopeScopeEntityOutput)
}

// GetZIAAdminUsersAdminScopeScopeEntityArrayInput is an input type that accepts GetZIAAdminUsersAdminScopeScopeEntityArray and GetZIAAdminUsersAdminScopeScopeEntityArrayOutput values.
// You can construct a concrete instance of `GetZIAAdminUsersAdminScopeScopeEntityArrayInput` via:
//
//	GetZIAAdminUsersAdminScopeScopeEntityArray{ GetZIAAdminUsersAdminScopeScopeEntityArgs{...} }
type GetZIAAdminUsersAdminScopeScopeEntityArrayInput interface {
	pulumi.Input

	ToGetZIAAdminUsersAdminScopeScopeEntityArrayOutput() GetZIAAdminUsersAdminScopeScopeEntityArrayOutput
	ToGetZIAAdminUsersAdminScopeScopeEntityArrayOutputWithContext(context.Context) GetZIAAdminUsersAdminScopeScopeEntityArrayOutput
}

type GetZIAAdminUsersAdminScopeScopeEntityArray []GetZIAAdminUsersAdminScopeScopeEntityInput

func (GetZIAAdminUsersAdminScopeScopeEntityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAAdminUsersAdminScopeScopeEntity)(nil)).Elem()
}

func (i GetZIAAdminUsersAdminScopeScopeEntityArray) ToGetZIAAdminUsersAdminScopeScopeEntityArrayOutput() GetZIAAdminUsersAdminScopeScopeEntityArrayOutput {
	return i.ToGetZIAAdminUsersAdminScopeScopeEntityArrayOutputWithContext(context.Background())
}

func (i GetZIAAdminUsersAdminScopeScopeEntityArray) ToGetZIAAdminUsersAdminScopeScopeEntityArrayOutputWithContext(ctx context.Context) GetZIAAdminUsersAdminScopeScopeEntityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAAdminUsersAdminScopeScopeEntityArrayOutput)
}

type GetZIAAdminUsersAdminScopeScopeEntityOutput struct{ *pulumi.OutputState }

func (GetZIAAdminUsersAdminScopeScopeEntityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAAdminUsersAdminScopeScopeEntity)(nil)).Elem()
}

func (o GetZIAAdminUsersAdminScopeScopeEntityOutput) ToGetZIAAdminUsersAdminScopeScopeEntityOutput() GetZIAAdminUsersAdminScopeScopeEntityOutput {
	return o
}

func (o GetZIAAdminUsersAdminScopeScopeEntityOutput) ToGetZIAAdminUsersAdminScopeScopeEntityOutputWithContext(ctx context.Context) GetZIAAdminUsersAdminScopeScopeEntityOutput {
	return o
}

func (o GetZIAAdminUsersAdminScopeScopeEntityOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZIAAdminUsersAdminScopeScopeEntity) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// The ID of the admin user to be exported.
func (o GetZIAAdminUsersAdminScopeScopeEntityOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIAAdminUsersAdminScopeScopeEntity) int { return v.Id }).(pulumi.IntOutput)
}

// (String)
func (o GetZIAAdminUsersAdminScopeScopeEntityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIAAdminUsersAdminScopeScopeEntity) string { return v.Name }).(pulumi.StringOutput)
}

type GetZIAAdminUsersAdminScopeScopeEntityArrayOutput struct{ *pulumi.OutputState }

func (GetZIAAdminUsersAdminScopeScopeEntityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAAdminUsersAdminScopeScopeEntity)(nil)).Elem()
}

func (o GetZIAAdminUsersAdminScopeScopeEntityArrayOutput) ToGetZIAAdminUsersAdminScopeScopeEntityArrayOutput() GetZIAAdminUsersAdminScopeScopeEntityArrayOutput {
	return o
}

func (o GetZIAAdminUsersAdminScopeScopeEntityArrayOutput) ToGetZIAAdminUsersAdminScopeScopeEntityArrayOutputWithContext(ctx context.Context) GetZIAAdminUsersAdminScopeScopeEntityArrayOutput {
	return o
}

func (o GetZIAAdminUsersAdminScopeScopeEntityArrayOutput) Index(i pulumi.IntInput) GetZIAAdminUsersAdminScopeScopeEntityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIAAdminUsersAdminScopeScopeEntity {
		return vs[0].([]GetZIAAdminUsersAdminScopeScopeEntity)[vs[1].(int)]
	}).(GetZIAAdminUsersAdminScopeScopeEntityOutput)
}

type GetZIAAdminUsersAdminScopeScopeGroupMemberEntity struct {
	Extensions map[string]string `pulumi:"extensions"`
	// The ID of the admin user to be exported.
	Id int `pulumi:"id"`
	// (String)
	Name string `pulumi:"name"`
}

// GetZIAAdminUsersAdminScopeScopeGroupMemberEntityInput is an input type that accepts GetZIAAdminUsersAdminScopeScopeGroupMemberEntityArgs and GetZIAAdminUsersAdminScopeScopeGroupMemberEntityOutput values.
// You can construct a concrete instance of `GetZIAAdminUsersAdminScopeScopeGroupMemberEntityInput` via:
//
//	GetZIAAdminUsersAdminScopeScopeGroupMemberEntityArgs{...}
type GetZIAAdminUsersAdminScopeScopeGroupMemberEntityInput interface {
	pulumi.Input

	ToGetZIAAdminUsersAdminScopeScopeGroupMemberEntityOutput() GetZIAAdminUsersAdminScopeScopeGroupMemberEntityOutput
	ToGetZIAAdminUsersAdminScopeScopeGroupMemberEntityOutputWithContext(context.Context) GetZIAAdminUsersAdminScopeScopeGroupMemberEntityOutput
}

type GetZIAAdminUsersAdminScopeScopeGroupMemberEntityArgs struct {
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// The ID of the admin user to be exported.
	Id pulumi.IntInput `pulumi:"id"`
	// (String)
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZIAAdminUsersAdminScopeScopeGroupMemberEntityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAAdminUsersAdminScopeScopeGroupMemberEntity)(nil)).Elem()
}

func (i GetZIAAdminUsersAdminScopeScopeGroupMemberEntityArgs) ToGetZIAAdminUsersAdminScopeScopeGroupMemberEntityOutput() GetZIAAdminUsersAdminScopeScopeGroupMemberEntityOutput {
	return i.ToGetZIAAdminUsersAdminScopeScopeGroupMemberEntityOutputWithContext(context.Background())
}

func (i GetZIAAdminUsersAdminScopeScopeGroupMemberEntityArgs) ToGetZIAAdminUsersAdminScopeScopeGroupMemberEntityOutputWithContext(ctx context.Context) GetZIAAdminUsersAdminScopeScopeGroupMemberEntityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAAdminUsersAdminScopeScopeGroupMemberEntityOutput)
}

// GetZIAAdminUsersAdminScopeScopeGroupMemberEntityArrayInput is an input type that accepts GetZIAAdminUsersAdminScopeScopeGroupMemberEntityArray and GetZIAAdminUsersAdminScopeScopeGroupMemberEntityArrayOutput values.
// You can construct a concrete instance of `GetZIAAdminUsersAdminScopeScopeGroupMemberEntityArrayInput` via:
//
//	GetZIAAdminUsersAdminScopeScopeGroupMemberEntityArray{ GetZIAAdminUsersAdminScopeScopeGroupMemberEntityArgs{...} }
type GetZIAAdminUsersAdminScopeScopeGroupMemberEntityArrayInput interface {
	pulumi.Input

	ToGetZIAAdminUsersAdminScopeScopeGroupMemberEntityArrayOutput() GetZIAAdminUsersAdminScopeScopeGroupMemberEntityArrayOutput
	ToGetZIAAdminUsersAdminScopeScopeGroupMemberEntityArrayOutputWithContext(context.Context) GetZIAAdminUsersAdminScopeScopeGroupMemberEntityArrayOutput
}

type GetZIAAdminUsersAdminScopeScopeGroupMemberEntityArray []GetZIAAdminUsersAdminScopeScopeGroupMemberEntityInput

func (GetZIAAdminUsersAdminScopeScopeGroupMemberEntityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAAdminUsersAdminScopeScopeGroupMemberEntity)(nil)).Elem()
}

func (i GetZIAAdminUsersAdminScopeScopeGroupMemberEntityArray) ToGetZIAAdminUsersAdminScopeScopeGroupMemberEntityArrayOutput() GetZIAAdminUsersAdminScopeScopeGroupMemberEntityArrayOutput {
	return i.ToGetZIAAdminUsersAdminScopeScopeGroupMemberEntityArrayOutputWithContext(context.Background())
}

func (i GetZIAAdminUsersAdminScopeScopeGroupMemberEntityArray) ToGetZIAAdminUsersAdminScopeScopeGroupMemberEntityArrayOutputWithContext(ctx context.Context) GetZIAAdminUsersAdminScopeScopeGroupMemberEntityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAAdminUsersAdminScopeScopeGroupMemberEntityArrayOutput)
}

type GetZIAAdminUsersAdminScopeScopeGroupMemberEntityOutput struct{ *pulumi.OutputState }

func (GetZIAAdminUsersAdminScopeScopeGroupMemberEntityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAAdminUsersAdminScopeScopeGroupMemberEntity)(nil)).Elem()
}

func (o GetZIAAdminUsersAdminScopeScopeGroupMemberEntityOutput) ToGetZIAAdminUsersAdminScopeScopeGroupMemberEntityOutput() GetZIAAdminUsersAdminScopeScopeGroupMemberEntityOutput {
	return o
}

func (o GetZIAAdminUsersAdminScopeScopeGroupMemberEntityOutput) ToGetZIAAdminUsersAdminScopeScopeGroupMemberEntityOutputWithContext(ctx context.Context) GetZIAAdminUsersAdminScopeScopeGroupMemberEntityOutput {
	return o
}

func (o GetZIAAdminUsersAdminScopeScopeGroupMemberEntityOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZIAAdminUsersAdminScopeScopeGroupMemberEntity) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// The ID of the admin user to be exported.
func (o GetZIAAdminUsersAdminScopeScopeGroupMemberEntityOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIAAdminUsersAdminScopeScopeGroupMemberEntity) int { return v.Id }).(pulumi.IntOutput)
}

// (String)
func (o GetZIAAdminUsersAdminScopeScopeGroupMemberEntityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIAAdminUsersAdminScopeScopeGroupMemberEntity) string { return v.Name }).(pulumi.StringOutput)
}

type GetZIAAdminUsersAdminScopeScopeGroupMemberEntityArrayOutput struct{ *pulumi.OutputState }

func (GetZIAAdminUsersAdminScopeScopeGroupMemberEntityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAAdminUsersAdminScopeScopeGroupMemberEntity)(nil)).Elem()
}

func (o GetZIAAdminUsersAdminScopeScopeGroupMemberEntityArrayOutput) ToGetZIAAdminUsersAdminScopeScopeGroupMemberEntityArrayOutput() GetZIAAdminUsersAdminScopeScopeGroupMemberEntityArrayOutput {
	return o
}

func (o GetZIAAdminUsersAdminScopeScopeGroupMemberEntityArrayOutput) ToGetZIAAdminUsersAdminScopeScopeGroupMemberEntityArrayOutputWithContext(ctx context.Context) GetZIAAdminUsersAdminScopeScopeGroupMemberEntityArrayOutput {
	return o
}

func (o GetZIAAdminUsersAdminScopeScopeGroupMemberEntityArrayOutput) Index(i pulumi.IntInput) GetZIAAdminUsersAdminScopeScopeGroupMemberEntityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIAAdminUsersAdminScopeScopeGroupMemberEntity {
		return vs[0].([]GetZIAAdminUsersAdminScopeScopeGroupMemberEntity)[vs[1].(int)]
	}).(GetZIAAdminUsersAdminScopeScopeGroupMemberEntityOutput)
}

type GetZIAAdminUsersExecMobileAppToken struct {
	// (String)
	Cloud string `pulumi:"cloud"`
	// (Number)
	CreateTime int `pulumi:"createTime"`
	// (String)
	DeviceId string `pulumi:"deviceId"`
	// (String)
	DeviceName string `pulumi:"deviceName"`
	// (String)
	Name string `pulumi:"name"`
	// (Number)
	OrgId int `pulumi:"orgId"`
	// (String)
	Token string `pulumi:"token"`
	// (Number)
	TokenExpiry int `pulumi:"tokenExpiry"`
	// (String)
	TokenId string `pulumi:"tokenId"`
}

// GetZIAAdminUsersExecMobileAppTokenInput is an input type that accepts GetZIAAdminUsersExecMobileAppTokenArgs and GetZIAAdminUsersExecMobileAppTokenOutput values.
// You can construct a concrete instance of `GetZIAAdminUsersExecMobileAppTokenInput` via:
//
//	GetZIAAdminUsersExecMobileAppTokenArgs{...}
type GetZIAAdminUsersExecMobileAppTokenInput interface {
	pulumi.Input

	ToGetZIAAdminUsersExecMobileAppTokenOutput() GetZIAAdminUsersExecMobileAppTokenOutput
	ToGetZIAAdminUsersExecMobileAppTokenOutputWithContext(context.Context) GetZIAAdminUsersExecMobileAppTokenOutput
}

type GetZIAAdminUsersExecMobileAppTokenArgs struct {
	// (String)
	Cloud pulumi.StringInput `pulumi:"cloud"`
	// (Number)
	CreateTime pulumi.IntInput `pulumi:"createTime"`
	// (String)
	DeviceId pulumi.StringInput `pulumi:"deviceId"`
	// (String)
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// (String)
	Name pulumi.StringInput `pulumi:"name"`
	// (Number)
	OrgId pulumi.IntInput `pulumi:"orgId"`
	// (String)
	Token pulumi.StringInput `pulumi:"token"`
	// (Number)
	TokenExpiry pulumi.IntInput `pulumi:"tokenExpiry"`
	// (String)
	TokenId pulumi.StringInput `pulumi:"tokenId"`
}

func (GetZIAAdminUsersExecMobileAppTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAAdminUsersExecMobileAppToken)(nil)).Elem()
}

func (i GetZIAAdminUsersExecMobileAppTokenArgs) ToGetZIAAdminUsersExecMobileAppTokenOutput() GetZIAAdminUsersExecMobileAppTokenOutput {
	return i.ToGetZIAAdminUsersExecMobileAppTokenOutputWithContext(context.Background())
}

func (i GetZIAAdminUsersExecMobileAppTokenArgs) ToGetZIAAdminUsersExecMobileAppTokenOutputWithContext(ctx context.Context) GetZIAAdminUsersExecMobileAppTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAAdminUsersExecMobileAppTokenOutput)
}

// GetZIAAdminUsersExecMobileAppTokenArrayInput is an input type that accepts GetZIAAdminUsersExecMobileAppTokenArray and GetZIAAdminUsersExecMobileAppTokenArrayOutput values.
// You can construct a concrete instance of `GetZIAAdminUsersExecMobileAppTokenArrayInput` via:
//
//	GetZIAAdminUsersExecMobileAppTokenArray{ GetZIAAdminUsersExecMobileAppTokenArgs{...} }
type GetZIAAdminUsersExecMobileAppTokenArrayInput interface {
	pulumi.Input

	ToGetZIAAdminUsersExecMobileAppTokenArrayOutput() GetZIAAdminUsersExecMobileAppTokenArrayOutput
	ToGetZIAAdminUsersExecMobileAppTokenArrayOutputWithContext(context.Context) GetZIAAdminUsersExecMobileAppTokenArrayOutput
}

type GetZIAAdminUsersExecMobileAppTokenArray []GetZIAAdminUsersExecMobileAppTokenInput

func (GetZIAAdminUsersExecMobileAppTokenArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAAdminUsersExecMobileAppToken)(nil)).Elem()
}

func (i GetZIAAdminUsersExecMobileAppTokenArray) ToGetZIAAdminUsersExecMobileAppTokenArrayOutput() GetZIAAdminUsersExecMobileAppTokenArrayOutput {
	return i.ToGetZIAAdminUsersExecMobileAppTokenArrayOutputWithContext(context.Background())
}

func (i GetZIAAdminUsersExecMobileAppTokenArray) ToGetZIAAdminUsersExecMobileAppTokenArrayOutputWithContext(ctx context.Context) GetZIAAdminUsersExecMobileAppTokenArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAAdminUsersExecMobileAppTokenArrayOutput)
}

type GetZIAAdminUsersExecMobileAppTokenOutput struct{ *pulumi.OutputState }

func (GetZIAAdminUsersExecMobileAppTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAAdminUsersExecMobileAppToken)(nil)).Elem()
}

func (o GetZIAAdminUsersExecMobileAppTokenOutput) ToGetZIAAdminUsersExecMobileAppTokenOutput() GetZIAAdminUsersExecMobileAppTokenOutput {
	return o
}

func (o GetZIAAdminUsersExecMobileAppTokenOutput) ToGetZIAAdminUsersExecMobileAppTokenOutputWithContext(ctx context.Context) GetZIAAdminUsersExecMobileAppTokenOutput {
	return o
}

// (String)
func (o GetZIAAdminUsersExecMobileAppTokenOutput) Cloud() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIAAdminUsersExecMobileAppToken) string { return v.Cloud }).(pulumi.StringOutput)
}

// (Number)
func (o GetZIAAdminUsersExecMobileAppTokenOutput) CreateTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIAAdminUsersExecMobileAppToken) int { return v.CreateTime }).(pulumi.IntOutput)
}

// (String)
func (o GetZIAAdminUsersExecMobileAppTokenOutput) DeviceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIAAdminUsersExecMobileAppToken) string { return v.DeviceId }).(pulumi.StringOutput)
}

// (String)
func (o GetZIAAdminUsersExecMobileAppTokenOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIAAdminUsersExecMobileAppToken) string { return v.DeviceName }).(pulumi.StringOutput)
}

// (String)
func (o GetZIAAdminUsersExecMobileAppTokenOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIAAdminUsersExecMobileAppToken) string { return v.Name }).(pulumi.StringOutput)
}

// (Number)
func (o GetZIAAdminUsersExecMobileAppTokenOutput) OrgId() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIAAdminUsersExecMobileAppToken) int { return v.OrgId }).(pulumi.IntOutput)
}

// (String)
func (o GetZIAAdminUsersExecMobileAppTokenOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIAAdminUsersExecMobileAppToken) string { return v.Token }).(pulumi.StringOutput)
}

// (Number)
func (o GetZIAAdminUsersExecMobileAppTokenOutput) TokenExpiry() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIAAdminUsersExecMobileAppToken) int { return v.TokenExpiry }).(pulumi.IntOutput)
}

// (String)
func (o GetZIAAdminUsersExecMobileAppTokenOutput) TokenId() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIAAdminUsersExecMobileAppToken) string { return v.TokenId }).(pulumi.StringOutput)
}

type GetZIAAdminUsersExecMobileAppTokenArrayOutput struct{ *pulumi.OutputState }

func (GetZIAAdminUsersExecMobileAppTokenArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAAdminUsersExecMobileAppToken)(nil)).Elem()
}

func (o GetZIAAdminUsersExecMobileAppTokenArrayOutput) ToGetZIAAdminUsersExecMobileAppTokenArrayOutput() GetZIAAdminUsersExecMobileAppTokenArrayOutput {
	return o
}

func (o GetZIAAdminUsersExecMobileAppTokenArrayOutput) ToGetZIAAdminUsersExecMobileAppTokenArrayOutputWithContext(ctx context.Context) GetZIAAdminUsersExecMobileAppTokenArrayOutput {
	return o
}

func (o GetZIAAdminUsersExecMobileAppTokenArrayOutput) Index(i pulumi.IntInput) GetZIAAdminUsersExecMobileAppTokenOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIAAdminUsersExecMobileAppToken {
		return vs[0].([]GetZIAAdminUsersExecMobileAppToken)[vs[1].(int)]
	}).(GetZIAAdminUsersExecMobileAppTokenOutput)
}

type GetZIAAdminUsersRole struct {
	Extensions map[string]string `pulumi:"extensions"`
	// The ID of the admin user to be exported.
	Id int `pulumi:"id"`
	// (String)
	Name string `pulumi:"name"`
}

// GetZIAAdminUsersRoleInput is an input type that accepts GetZIAAdminUsersRoleArgs and GetZIAAdminUsersRoleOutput values.
// You can construct a concrete instance of `GetZIAAdminUsersRoleInput` via:
//
//	GetZIAAdminUsersRoleArgs{...}
type GetZIAAdminUsersRoleInput interface {
	pulumi.Input

	ToGetZIAAdminUsersRoleOutput() GetZIAAdminUsersRoleOutput
	ToGetZIAAdminUsersRoleOutputWithContext(context.Context) GetZIAAdminUsersRoleOutput
}

type GetZIAAdminUsersRoleArgs struct {
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// The ID of the admin user to be exported.
	Id pulumi.IntInput `pulumi:"id"`
	// (String)
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZIAAdminUsersRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAAdminUsersRole)(nil)).Elem()
}

func (i GetZIAAdminUsersRoleArgs) ToGetZIAAdminUsersRoleOutput() GetZIAAdminUsersRoleOutput {
	return i.ToGetZIAAdminUsersRoleOutputWithContext(context.Background())
}

func (i GetZIAAdminUsersRoleArgs) ToGetZIAAdminUsersRoleOutputWithContext(ctx context.Context) GetZIAAdminUsersRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAAdminUsersRoleOutput)
}

// GetZIAAdminUsersRoleArrayInput is an input type that accepts GetZIAAdminUsersRoleArray and GetZIAAdminUsersRoleArrayOutput values.
// You can construct a concrete instance of `GetZIAAdminUsersRoleArrayInput` via:
//
//	GetZIAAdminUsersRoleArray{ GetZIAAdminUsersRoleArgs{...} }
type GetZIAAdminUsersRoleArrayInput interface {
	pulumi.Input

	ToGetZIAAdminUsersRoleArrayOutput() GetZIAAdminUsersRoleArrayOutput
	ToGetZIAAdminUsersRoleArrayOutputWithContext(context.Context) GetZIAAdminUsersRoleArrayOutput
}

type GetZIAAdminUsersRoleArray []GetZIAAdminUsersRoleInput

func (GetZIAAdminUsersRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAAdminUsersRole)(nil)).Elem()
}

func (i GetZIAAdminUsersRoleArray) ToGetZIAAdminUsersRoleArrayOutput() GetZIAAdminUsersRoleArrayOutput {
	return i.ToGetZIAAdminUsersRoleArrayOutputWithContext(context.Background())
}

func (i GetZIAAdminUsersRoleArray) ToGetZIAAdminUsersRoleArrayOutputWithContext(ctx context.Context) GetZIAAdminUsersRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAAdminUsersRoleArrayOutput)
}

type GetZIAAdminUsersRoleOutput struct{ *pulumi.OutputState }

func (GetZIAAdminUsersRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAAdminUsersRole)(nil)).Elem()
}

func (o GetZIAAdminUsersRoleOutput) ToGetZIAAdminUsersRoleOutput() GetZIAAdminUsersRoleOutput {
	return o
}

func (o GetZIAAdminUsersRoleOutput) ToGetZIAAdminUsersRoleOutputWithContext(ctx context.Context) GetZIAAdminUsersRoleOutput {
	return o
}

func (o GetZIAAdminUsersRoleOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZIAAdminUsersRole) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// The ID of the admin user to be exported.
func (o GetZIAAdminUsersRoleOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIAAdminUsersRole) int { return v.Id }).(pulumi.IntOutput)
}

// (String)
func (o GetZIAAdminUsersRoleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIAAdminUsersRole) string { return v.Name }).(pulumi.StringOutput)
}

type GetZIAAdminUsersRoleArrayOutput struct{ *pulumi.OutputState }

func (GetZIAAdminUsersRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAAdminUsersRole)(nil)).Elem()
}

func (o GetZIAAdminUsersRoleArrayOutput) ToGetZIAAdminUsersRoleArrayOutput() GetZIAAdminUsersRoleArrayOutput {
	return o
}

func (o GetZIAAdminUsersRoleArrayOutput) ToGetZIAAdminUsersRoleArrayOutputWithContext(ctx context.Context) GetZIAAdminUsersRoleArrayOutput {
	return o
}

func (o GetZIAAdminUsersRoleArrayOutput) Index(i pulumi.IntInput) GetZIAAdminUsersRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIAAdminUsersRole {
		return vs[0].([]GetZIAAdminUsersRole)[vs[1].(int)]
	}).(GetZIAAdminUsersRoleOutput)
}

type GetZIADLPDictionariesExactDataMatchDetail struct {
	DictionaryEdmMappingId int    `pulumi:"dictionaryEdmMappingId"`
	PrimaryField           int    `pulumi:"primaryField"`
	SchemaId               int    `pulumi:"schemaId"`
	SecondaryFieldMatchOn  string `pulumi:"secondaryFieldMatchOn"`
	SecondaryFields        []int  `pulumi:"secondaryFields"`
}

// GetZIADLPDictionariesExactDataMatchDetailInput is an input type that accepts GetZIADLPDictionariesExactDataMatchDetailArgs and GetZIADLPDictionariesExactDataMatchDetailOutput values.
// You can construct a concrete instance of `GetZIADLPDictionariesExactDataMatchDetailInput` via:
//
//	GetZIADLPDictionariesExactDataMatchDetailArgs{...}
type GetZIADLPDictionariesExactDataMatchDetailInput interface {
	pulumi.Input

	ToGetZIADLPDictionariesExactDataMatchDetailOutput() GetZIADLPDictionariesExactDataMatchDetailOutput
	ToGetZIADLPDictionariesExactDataMatchDetailOutputWithContext(context.Context) GetZIADLPDictionariesExactDataMatchDetailOutput
}

type GetZIADLPDictionariesExactDataMatchDetailArgs struct {
	DictionaryEdmMappingId pulumi.IntInput      `pulumi:"dictionaryEdmMappingId"`
	PrimaryField           pulumi.IntInput      `pulumi:"primaryField"`
	SchemaId               pulumi.IntInput      `pulumi:"schemaId"`
	SecondaryFieldMatchOn  pulumi.StringInput   `pulumi:"secondaryFieldMatchOn"`
	SecondaryFields        pulumi.IntArrayInput `pulumi:"secondaryFields"`
}

func (GetZIADLPDictionariesExactDataMatchDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIADLPDictionariesExactDataMatchDetail)(nil)).Elem()
}

func (i GetZIADLPDictionariesExactDataMatchDetailArgs) ToGetZIADLPDictionariesExactDataMatchDetailOutput() GetZIADLPDictionariesExactDataMatchDetailOutput {
	return i.ToGetZIADLPDictionariesExactDataMatchDetailOutputWithContext(context.Background())
}

func (i GetZIADLPDictionariesExactDataMatchDetailArgs) ToGetZIADLPDictionariesExactDataMatchDetailOutputWithContext(ctx context.Context) GetZIADLPDictionariesExactDataMatchDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIADLPDictionariesExactDataMatchDetailOutput)
}

// GetZIADLPDictionariesExactDataMatchDetailArrayInput is an input type that accepts GetZIADLPDictionariesExactDataMatchDetailArray and GetZIADLPDictionariesExactDataMatchDetailArrayOutput values.
// You can construct a concrete instance of `GetZIADLPDictionariesExactDataMatchDetailArrayInput` via:
//
//	GetZIADLPDictionariesExactDataMatchDetailArray{ GetZIADLPDictionariesExactDataMatchDetailArgs{...} }
type GetZIADLPDictionariesExactDataMatchDetailArrayInput interface {
	pulumi.Input

	ToGetZIADLPDictionariesExactDataMatchDetailArrayOutput() GetZIADLPDictionariesExactDataMatchDetailArrayOutput
	ToGetZIADLPDictionariesExactDataMatchDetailArrayOutputWithContext(context.Context) GetZIADLPDictionariesExactDataMatchDetailArrayOutput
}

type GetZIADLPDictionariesExactDataMatchDetailArray []GetZIADLPDictionariesExactDataMatchDetailInput

func (GetZIADLPDictionariesExactDataMatchDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIADLPDictionariesExactDataMatchDetail)(nil)).Elem()
}

func (i GetZIADLPDictionariesExactDataMatchDetailArray) ToGetZIADLPDictionariesExactDataMatchDetailArrayOutput() GetZIADLPDictionariesExactDataMatchDetailArrayOutput {
	return i.ToGetZIADLPDictionariesExactDataMatchDetailArrayOutputWithContext(context.Background())
}

func (i GetZIADLPDictionariesExactDataMatchDetailArray) ToGetZIADLPDictionariesExactDataMatchDetailArrayOutputWithContext(ctx context.Context) GetZIADLPDictionariesExactDataMatchDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIADLPDictionariesExactDataMatchDetailArrayOutput)
}

type GetZIADLPDictionariesExactDataMatchDetailOutput struct{ *pulumi.OutputState }

func (GetZIADLPDictionariesExactDataMatchDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIADLPDictionariesExactDataMatchDetail)(nil)).Elem()
}

func (o GetZIADLPDictionariesExactDataMatchDetailOutput) ToGetZIADLPDictionariesExactDataMatchDetailOutput() GetZIADLPDictionariesExactDataMatchDetailOutput {
	return o
}

func (o GetZIADLPDictionariesExactDataMatchDetailOutput) ToGetZIADLPDictionariesExactDataMatchDetailOutputWithContext(ctx context.Context) GetZIADLPDictionariesExactDataMatchDetailOutput {
	return o
}

func (o GetZIADLPDictionariesExactDataMatchDetailOutput) DictionaryEdmMappingId() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIADLPDictionariesExactDataMatchDetail) int { return v.DictionaryEdmMappingId }).(pulumi.IntOutput)
}

func (o GetZIADLPDictionariesExactDataMatchDetailOutput) PrimaryField() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIADLPDictionariesExactDataMatchDetail) int { return v.PrimaryField }).(pulumi.IntOutput)
}

func (o GetZIADLPDictionariesExactDataMatchDetailOutput) SchemaId() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIADLPDictionariesExactDataMatchDetail) int { return v.SchemaId }).(pulumi.IntOutput)
}

func (o GetZIADLPDictionariesExactDataMatchDetailOutput) SecondaryFieldMatchOn() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIADLPDictionariesExactDataMatchDetail) string { return v.SecondaryFieldMatchOn }).(pulumi.StringOutput)
}

func (o GetZIADLPDictionariesExactDataMatchDetailOutput) SecondaryFields() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetZIADLPDictionariesExactDataMatchDetail) []int { return v.SecondaryFields }).(pulumi.IntArrayOutput)
}

type GetZIADLPDictionariesExactDataMatchDetailArrayOutput struct{ *pulumi.OutputState }

func (GetZIADLPDictionariesExactDataMatchDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIADLPDictionariesExactDataMatchDetail)(nil)).Elem()
}

func (o GetZIADLPDictionariesExactDataMatchDetailArrayOutput) ToGetZIADLPDictionariesExactDataMatchDetailArrayOutput() GetZIADLPDictionariesExactDataMatchDetailArrayOutput {
	return o
}

func (o GetZIADLPDictionariesExactDataMatchDetailArrayOutput) ToGetZIADLPDictionariesExactDataMatchDetailArrayOutputWithContext(ctx context.Context) GetZIADLPDictionariesExactDataMatchDetailArrayOutput {
	return o
}

func (o GetZIADLPDictionariesExactDataMatchDetailArrayOutput) Index(i pulumi.IntInput) GetZIADLPDictionariesExactDataMatchDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIADLPDictionariesExactDataMatchDetail {
		return vs[0].([]GetZIADLPDictionariesExactDataMatchDetail)[vs[1].(int)]
	}).(GetZIADLPDictionariesExactDataMatchDetailOutput)
}

type GetZIADLPDictionariesIdmProfileMatchAccuracy struct {
	AdpIdmProfiles []GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfile `pulumi:"adpIdmProfiles"`
	MatchAccuracy  string                                                      `pulumi:"matchAccuracy"`
}

// GetZIADLPDictionariesIdmProfileMatchAccuracyInput is an input type that accepts GetZIADLPDictionariesIdmProfileMatchAccuracyArgs and GetZIADLPDictionariesIdmProfileMatchAccuracyOutput values.
// You can construct a concrete instance of `GetZIADLPDictionariesIdmProfileMatchAccuracyInput` via:
//
//	GetZIADLPDictionariesIdmProfileMatchAccuracyArgs{...}
type GetZIADLPDictionariesIdmProfileMatchAccuracyInput interface {
	pulumi.Input

	ToGetZIADLPDictionariesIdmProfileMatchAccuracyOutput() GetZIADLPDictionariesIdmProfileMatchAccuracyOutput
	ToGetZIADLPDictionariesIdmProfileMatchAccuracyOutputWithContext(context.Context) GetZIADLPDictionariesIdmProfileMatchAccuracyOutput
}

type GetZIADLPDictionariesIdmProfileMatchAccuracyArgs struct {
	AdpIdmProfiles GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileArrayInput `pulumi:"adpIdmProfiles"`
	MatchAccuracy  pulumi.StringInput                                                  `pulumi:"matchAccuracy"`
}

func (GetZIADLPDictionariesIdmProfileMatchAccuracyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIADLPDictionariesIdmProfileMatchAccuracy)(nil)).Elem()
}

func (i GetZIADLPDictionariesIdmProfileMatchAccuracyArgs) ToGetZIADLPDictionariesIdmProfileMatchAccuracyOutput() GetZIADLPDictionariesIdmProfileMatchAccuracyOutput {
	return i.ToGetZIADLPDictionariesIdmProfileMatchAccuracyOutputWithContext(context.Background())
}

func (i GetZIADLPDictionariesIdmProfileMatchAccuracyArgs) ToGetZIADLPDictionariesIdmProfileMatchAccuracyOutputWithContext(ctx context.Context) GetZIADLPDictionariesIdmProfileMatchAccuracyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIADLPDictionariesIdmProfileMatchAccuracyOutput)
}

// GetZIADLPDictionariesIdmProfileMatchAccuracyArrayInput is an input type that accepts GetZIADLPDictionariesIdmProfileMatchAccuracyArray and GetZIADLPDictionariesIdmProfileMatchAccuracyArrayOutput values.
// You can construct a concrete instance of `GetZIADLPDictionariesIdmProfileMatchAccuracyArrayInput` via:
//
//	GetZIADLPDictionariesIdmProfileMatchAccuracyArray{ GetZIADLPDictionariesIdmProfileMatchAccuracyArgs{...} }
type GetZIADLPDictionariesIdmProfileMatchAccuracyArrayInput interface {
	pulumi.Input

	ToGetZIADLPDictionariesIdmProfileMatchAccuracyArrayOutput() GetZIADLPDictionariesIdmProfileMatchAccuracyArrayOutput
	ToGetZIADLPDictionariesIdmProfileMatchAccuracyArrayOutputWithContext(context.Context) GetZIADLPDictionariesIdmProfileMatchAccuracyArrayOutput
}

type GetZIADLPDictionariesIdmProfileMatchAccuracyArray []GetZIADLPDictionariesIdmProfileMatchAccuracyInput

func (GetZIADLPDictionariesIdmProfileMatchAccuracyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIADLPDictionariesIdmProfileMatchAccuracy)(nil)).Elem()
}

func (i GetZIADLPDictionariesIdmProfileMatchAccuracyArray) ToGetZIADLPDictionariesIdmProfileMatchAccuracyArrayOutput() GetZIADLPDictionariesIdmProfileMatchAccuracyArrayOutput {
	return i.ToGetZIADLPDictionariesIdmProfileMatchAccuracyArrayOutputWithContext(context.Background())
}

func (i GetZIADLPDictionariesIdmProfileMatchAccuracyArray) ToGetZIADLPDictionariesIdmProfileMatchAccuracyArrayOutputWithContext(ctx context.Context) GetZIADLPDictionariesIdmProfileMatchAccuracyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIADLPDictionariesIdmProfileMatchAccuracyArrayOutput)
}

type GetZIADLPDictionariesIdmProfileMatchAccuracyOutput struct{ *pulumi.OutputState }

func (GetZIADLPDictionariesIdmProfileMatchAccuracyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIADLPDictionariesIdmProfileMatchAccuracy)(nil)).Elem()
}

func (o GetZIADLPDictionariesIdmProfileMatchAccuracyOutput) ToGetZIADLPDictionariesIdmProfileMatchAccuracyOutput() GetZIADLPDictionariesIdmProfileMatchAccuracyOutput {
	return o
}

func (o GetZIADLPDictionariesIdmProfileMatchAccuracyOutput) ToGetZIADLPDictionariesIdmProfileMatchAccuracyOutputWithContext(ctx context.Context) GetZIADLPDictionariesIdmProfileMatchAccuracyOutput {
	return o
}

func (o GetZIADLPDictionariesIdmProfileMatchAccuracyOutput) AdpIdmProfiles() GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileArrayOutput {
	return o.ApplyT(func(v GetZIADLPDictionariesIdmProfileMatchAccuracy) []GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfile {
		return v.AdpIdmProfiles
	}).(GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileArrayOutput)
}

func (o GetZIADLPDictionariesIdmProfileMatchAccuracyOutput) MatchAccuracy() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIADLPDictionariesIdmProfileMatchAccuracy) string { return v.MatchAccuracy }).(pulumi.StringOutput)
}

type GetZIADLPDictionariesIdmProfileMatchAccuracyArrayOutput struct{ *pulumi.OutputState }

func (GetZIADLPDictionariesIdmProfileMatchAccuracyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIADLPDictionariesIdmProfileMatchAccuracy)(nil)).Elem()
}

func (o GetZIADLPDictionariesIdmProfileMatchAccuracyArrayOutput) ToGetZIADLPDictionariesIdmProfileMatchAccuracyArrayOutput() GetZIADLPDictionariesIdmProfileMatchAccuracyArrayOutput {
	return o
}

func (o GetZIADLPDictionariesIdmProfileMatchAccuracyArrayOutput) ToGetZIADLPDictionariesIdmProfileMatchAccuracyArrayOutputWithContext(ctx context.Context) GetZIADLPDictionariesIdmProfileMatchAccuracyArrayOutput {
	return o
}

func (o GetZIADLPDictionariesIdmProfileMatchAccuracyArrayOutput) Index(i pulumi.IntInput) GetZIADLPDictionariesIdmProfileMatchAccuracyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIADLPDictionariesIdmProfileMatchAccuracy {
		return vs[0].([]GetZIADLPDictionariesIdmProfileMatchAccuracy)[vs[1].(int)]
	}).(GetZIADLPDictionariesIdmProfileMatchAccuracyOutput)
}

type GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfile struct {
	Extensions map[string]string `pulumi:"extensions"`
	// Unique identifier for the DLP dictionary
	Id int `pulumi:"id"`
}

// GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileInput is an input type that accepts GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileArgs and GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileOutput values.
// You can construct a concrete instance of `GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileInput` via:
//
//	GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileArgs{...}
type GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileInput interface {
	pulumi.Input

	ToGetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileOutput() GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileOutput
	ToGetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileOutputWithContext(context.Context) GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileOutput
}

type GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileArgs struct {
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// Unique identifier for the DLP dictionary
	Id pulumi.IntInput `pulumi:"id"`
}

func (GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfile)(nil)).Elem()
}

func (i GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileArgs) ToGetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileOutput() GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileOutput {
	return i.ToGetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileOutputWithContext(context.Background())
}

func (i GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileArgs) ToGetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileOutputWithContext(ctx context.Context) GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileOutput)
}

// GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileArrayInput is an input type that accepts GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileArray and GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileArrayOutput values.
// You can construct a concrete instance of `GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileArrayInput` via:
//
//	GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileArray{ GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileArgs{...} }
type GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileArrayInput interface {
	pulumi.Input

	ToGetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileArrayOutput() GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileArrayOutput
	ToGetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileArrayOutputWithContext(context.Context) GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileArrayOutput
}

type GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileArray []GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileInput

func (GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfile)(nil)).Elem()
}

func (i GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileArray) ToGetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileArrayOutput() GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileArrayOutput {
	return i.ToGetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileArrayOutputWithContext(context.Background())
}

func (i GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileArray) ToGetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileArrayOutputWithContext(ctx context.Context) GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileArrayOutput)
}

type GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileOutput struct{ *pulumi.OutputState }

func (GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfile)(nil)).Elem()
}

func (o GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileOutput) ToGetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileOutput() GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileOutput {
	return o
}

func (o GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileOutput) ToGetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileOutputWithContext(ctx context.Context) GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileOutput {
	return o
}

func (o GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfile) map[string]string {
		return v.Extensions
	}).(pulumi.StringMapOutput)
}

// Unique identifier for the DLP dictionary
func (o GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfile) int { return v.Id }).(pulumi.IntOutput)
}

type GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileArrayOutput struct{ *pulumi.OutputState }

func (GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfile)(nil)).Elem()
}

func (o GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileArrayOutput) ToGetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileArrayOutput() GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileArrayOutput {
	return o
}

func (o GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileArrayOutput) ToGetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileArrayOutputWithContext(ctx context.Context) GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileArrayOutput {
	return o
}

func (o GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileArrayOutput) Index(i pulumi.IntInput) GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfile {
		return vs[0].([]GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfile)[vs[1].(int)]
	}).(GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileOutput)
}

type GetZIADLPDictionariesPattern struct {
	// (String) The action applied to a DLP dictionary using patterns
	Action string `pulumi:"action"`
	// (String) DLP dictionary pattern
	Pattern string `pulumi:"pattern"`
}

// GetZIADLPDictionariesPatternInput is an input type that accepts GetZIADLPDictionariesPatternArgs and GetZIADLPDictionariesPatternOutput values.
// You can construct a concrete instance of `GetZIADLPDictionariesPatternInput` via:
//
//	GetZIADLPDictionariesPatternArgs{...}
type GetZIADLPDictionariesPatternInput interface {
	pulumi.Input

	ToGetZIADLPDictionariesPatternOutput() GetZIADLPDictionariesPatternOutput
	ToGetZIADLPDictionariesPatternOutputWithContext(context.Context) GetZIADLPDictionariesPatternOutput
}

type GetZIADLPDictionariesPatternArgs struct {
	// (String) The action applied to a DLP dictionary using patterns
	Action pulumi.StringInput `pulumi:"action"`
	// (String) DLP dictionary pattern
	Pattern pulumi.StringInput `pulumi:"pattern"`
}

func (GetZIADLPDictionariesPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIADLPDictionariesPattern)(nil)).Elem()
}

func (i GetZIADLPDictionariesPatternArgs) ToGetZIADLPDictionariesPatternOutput() GetZIADLPDictionariesPatternOutput {
	return i.ToGetZIADLPDictionariesPatternOutputWithContext(context.Background())
}

func (i GetZIADLPDictionariesPatternArgs) ToGetZIADLPDictionariesPatternOutputWithContext(ctx context.Context) GetZIADLPDictionariesPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIADLPDictionariesPatternOutput)
}

// GetZIADLPDictionariesPatternArrayInput is an input type that accepts GetZIADLPDictionariesPatternArray and GetZIADLPDictionariesPatternArrayOutput values.
// You can construct a concrete instance of `GetZIADLPDictionariesPatternArrayInput` via:
//
//	GetZIADLPDictionariesPatternArray{ GetZIADLPDictionariesPatternArgs{...} }
type GetZIADLPDictionariesPatternArrayInput interface {
	pulumi.Input

	ToGetZIADLPDictionariesPatternArrayOutput() GetZIADLPDictionariesPatternArrayOutput
	ToGetZIADLPDictionariesPatternArrayOutputWithContext(context.Context) GetZIADLPDictionariesPatternArrayOutput
}

type GetZIADLPDictionariesPatternArray []GetZIADLPDictionariesPatternInput

func (GetZIADLPDictionariesPatternArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIADLPDictionariesPattern)(nil)).Elem()
}

func (i GetZIADLPDictionariesPatternArray) ToGetZIADLPDictionariesPatternArrayOutput() GetZIADLPDictionariesPatternArrayOutput {
	return i.ToGetZIADLPDictionariesPatternArrayOutputWithContext(context.Background())
}

func (i GetZIADLPDictionariesPatternArray) ToGetZIADLPDictionariesPatternArrayOutputWithContext(ctx context.Context) GetZIADLPDictionariesPatternArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIADLPDictionariesPatternArrayOutput)
}

type GetZIADLPDictionariesPatternOutput struct{ *pulumi.OutputState }

func (GetZIADLPDictionariesPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIADLPDictionariesPattern)(nil)).Elem()
}

func (o GetZIADLPDictionariesPatternOutput) ToGetZIADLPDictionariesPatternOutput() GetZIADLPDictionariesPatternOutput {
	return o
}

func (o GetZIADLPDictionariesPatternOutput) ToGetZIADLPDictionariesPatternOutputWithContext(ctx context.Context) GetZIADLPDictionariesPatternOutput {
	return o
}

// (String) The action applied to a DLP dictionary using patterns
func (o GetZIADLPDictionariesPatternOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIADLPDictionariesPattern) string { return v.Action }).(pulumi.StringOutput)
}

// (String) DLP dictionary pattern
func (o GetZIADLPDictionariesPatternOutput) Pattern() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIADLPDictionariesPattern) string { return v.Pattern }).(pulumi.StringOutput)
}

type GetZIADLPDictionariesPatternArrayOutput struct{ *pulumi.OutputState }

func (GetZIADLPDictionariesPatternArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIADLPDictionariesPattern)(nil)).Elem()
}

func (o GetZIADLPDictionariesPatternArrayOutput) ToGetZIADLPDictionariesPatternArrayOutput() GetZIADLPDictionariesPatternArrayOutput {
	return o
}

func (o GetZIADLPDictionariesPatternArrayOutput) ToGetZIADLPDictionariesPatternArrayOutputWithContext(ctx context.Context) GetZIADLPDictionariesPatternArrayOutput {
	return o
}

func (o GetZIADLPDictionariesPatternArrayOutput) Index(i pulumi.IntInput) GetZIADLPDictionariesPatternOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIADLPDictionariesPattern {
		return vs[0].([]GetZIADLPDictionariesPattern)[vs[1].(int)]
	}).(GetZIADLPDictionariesPatternOutput)
}

type GetZIADLPDictionariesPhrase struct {
	// (String) The action applied to a DLP dictionary using patterns
	Action string `pulumi:"action"`
	Phrase string `pulumi:"phrase"`
}

// GetZIADLPDictionariesPhraseInput is an input type that accepts GetZIADLPDictionariesPhraseArgs and GetZIADLPDictionariesPhraseOutput values.
// You can construct a concrete instance of `GetZIADLPDictionariesPhraseInput` via:
//
//	GetZIADLPDictionariesPhraseArgs{...}
type GetZIADLPDictionariesPhraseInput interface {
	pulumi.Input

	ToGetZIADLPDictionariesPhraseOutput() GetZIADLPDictionariesPhraseOutput
	ToGetZIADLPDictionariesPhraseOutputWithContext(context.Context) GetZIADLPDictionariesPhraseOutput
}

type GetZIADLPDictionariesPhraseArgs struct {
	// (String) The action applied to a DLP dictionary using patterns
	Action pulumi.StringInput `pulumi:"action"`
	Phrase pulumi.StringInput `pulumi:"phrase"`
}

func (GetZIADLPDictionariesPhraseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIADLPDictionariesPhrase)(nil)).Elem()
}

func (i GetZIADLPDictionariesPhraseArgs) ToGetZIADLPDictionariesPhraseOutput() GetZIADLPDictionariesPhraseOutput {
	return i.ToGetZIADLPDictionariesPhraseOutputWithContext(context.Background())
}

func (i GetZIADLPDictionariesPhraseArgs) ToGetZIADLPDictionariesPhraseOutputWithContext(ctx context.Context) GetZIADLPDictionariesPhraseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIADLPDictionariesPhraseOutput)
}

// GetZIADLPDictionariesPhraseArrayInput is an input type that accepts GetZIADLPDictionariesPhraseArray and GetZIADLPDictionariesPhraseArrayOutput values.
// You can construct a concrete instance of `GetZIADLPDictionariesPhraseArrayInput` via:
//
//	GetZIADLPDictionariesPhraseArray{ GetZIADLPDictionariesPhraseArgs{...} }
type GetZIADLPDictionariesPhraseArrayInput interface {
	pulumi.Input

	ToGetZIADLPDictionariesPhraseArrayOutput() GetZIADLPDictionariesPhraseArrayOutput
	ToGetZIADLPDictionariesPhraseArrayOutputWithContext(context.Context) GetZIADLPDictionariesPhraseArrayOutput
}

type GetZIADLPDictionariesPhraseArray []GetZIADLPDictionariesPhraseInput

func (GetZIADLPDictionariesPhraseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIADLPDictionariesPhrase)(nil)).Elem()
}

func (i GetZIADLPDictionariesPhraseArray) ToGetZIADLPDictionariesPhraseArrayOutput() GetZIADLPDictionariesPhraseArrayOutput {
	return i.ToGetZIADLPDictionariesPhraseArrayOutputWithContext(context.Background())
}

func (i GetZIADLPDictionariesPhraseArray) ToGetZIADLPDictionariesPhraseArrayOutputWithContext(ctx context.Context) GetZIADLPDictionariesPhraseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIADLPDictionariesPhraseArrayOutput)
}

type GetZIADLPDictionariesPhraseOutput struct{ *pulumi.OutputState }

func (GetZIADLPDictionariesPhraseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIADLPDictionariesPhrase)(nil)).Elem()
}

func (o GetZIADLPDictionariesPhraseOutput) ToGetZIADLPDictionariesPhraseOutput() GetZIADLPDictionariesPhraseOutput {
	return o
}

func (o GetZIADLPDictionariesPhraseOutput) ToGetZIADLPDictionariesPhraseOutputWithContext(ctx context.Context) GetZIADLPDictionariesPhraseOutput {
	return o
}

// (String) The action applied to a DLP dictionary using patterns
func (o GetZIADLPDictionariesPhraseOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIADLPDictionariesPhrase) string { return v.Action }).(pulumi.StringOutput)
}

func (o GetZIADLPDictionariesPhraseOutput) Phrase() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIADLPDictionariesPhrase) string { return v.Phrase }).(pulumi.StringOutput)
}

type GetZIADLPDictionariesPhraseArrayOutput struct{ *pulumi.OutputState }

func (GetZIADLPDictionariesPhraseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIADLPDictionariesPhrase)(nil)).Elem()
}

func (o GetZIADLPDictionariesPhraseArrayOutput) ToGetZIADLPDictionariesPhraseArrayOutput() GetZIADLPDictionariesPhraseArrayOutput {
	return o
}

func (o GetZIADLPDictionariesPhraseArrayOutput) ToGetZIADLPDictionariesPhraseArrayOutputWithContext(ctx context.Context) GetZIADLPDictionariesPhraseArrayOutput {
	return o
}

func (o GetZIADLPDictionariesPhraseArrayOutput) Index(i pulumi.IntInput) GetZIADLPDictionariesPhraseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIADLPDictionariesPhrase {
		return vs[0].([]GetZIADLPDictionariesPhrase)[vs[1].(int)]
	}).(GetZIADLPDictionariesPhraseOutput)
}

type GetZIADLPWebRulesAuditor struct {
	Extensions map[string]string `pulumi:"extensions"`
	// Identifier that uniquely identifies an entity
	Id int `pulumi:"id"`
	// The DLP policy rule name.
	// rules.
	Name string `pulumi:"name"`
}

// GetZIADLPWebRulesAuditorInput is an input type that accepts GetZIADLPWebRulesAuditorArgs and GetZIADLPWebRulesAuditorOutput values.
// You can construct a concrete instance of `GetZIADLPWebRulesAuditorInput` via:
//
//	GetZIADLPWebRulesAuditorArgs{...}
type GetZIADLPWebRulesAuditorInput interface {
	pulumi.Input

	ToGetZIADLPWebRulesAuditorOutput() GetZIADLPWebRulesAuditorOutput
	ToGetZIADLPWebRulesAuditorOutputWithContext(context.Context) GetZIADLPWebRulesAuditorOutput
}

type GetZIADLPWebRulesAuditorArgs struct {
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// Identifier that uniquely identifies an entity
	Id pulumi.IntInput `pulumi:"id"`
	// The DLP policy rule name.
	// rules.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZIADLPWebRulesAuditorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIADLPWebRulesAuditor)(nil)).Elem()
}

func (i GetZIADLPWebRulesAuditorArgs) ToGetZIADLPWebRulesAuditorOutput() GetZIADLPWebRulesAuditorOutput {
	return i.ToGetZIADLPWebRulesAuditorOutputWithContext(context.Background())
}

func (i GetZIADLPWebRulesAuditorArgs) ToGetZIADLPWebRulesAuditorOutputWithContext(ctx context.Context) GetZIADLPWebRulesAuditorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIADLPWebRulesAuditorOutput)
}

// GetZIADLPWebRulesAuditorArrayInput is an input type that accepts GetZIADLPWebRulesAuditorArray and GetZIADLPWebRulesAuditorArrayOutput values.
// You can construct a concrete instance of `GetZIADLPWebRulesAuditorArrayInput` via:
//
//	GetZIADLPWebRulesAuditorArray{ GetZIADLPWebRulesAuditorArgs{...} }
type GetZIADLPWebRulesAuditorArrayInput interface {
	pulumi.Input

	ToGetZIADLPWebRulesAuditorArrayOutput() GetZIADLPWebRulesAuditorArrayOutput
	ToGetZIADLPWebRulesAuditorArrayOutputWithContext(context.Context) GetZIADLPWebRulesAuditorArrayOutput
}

type GetZIADLPWebRulesAuditorArray []GetZIADLPWebRulesAuditorInput

func (GetZIADLPWebRulesAuditorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIADLPWebRulesAuditor)(nil)).Elem()
}

func (i GetZIADLPWebRulesAuditorArray) ToGetZIADLPWebRulesAuditorArrayOutput() GetZIADLPWebRulesAuditorArrayOutput {
	return i.ToGetZIADLPWebRulesAuditorArrayOutputWithContext(context.Background())
}

func (i GetZIADLPWebRulesAuditorArray) ToGetZIADLPWebRulesAuditorArrayOutputWithContext(ctx context.Context) GetZIADLPWebRulesAuditorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIADLPWebRulesAuditorArrayOutput)
}

type GetZIADLPWebRulesAuditorOutput struct{ *pulumi.OutputState }

func (GetZIADLPWebRulesAuditorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIADLPWebRulesAuditor)(nil)).Elem()
}

func (o GetZIADLPWebRulesAuditorOutput) ToGetZIADLPWebRulesAuditorOutput() GetZIADLPWebRulesAuditorOutput {
	return o
}

func (o GetZIADLPWebRulesAuditorOutput) ToGetZIADLPWebRulesAuditorOutputWithContext(ctx context.Context) GetZIADLPWebRulesAuditorOutput {
	return o
}

func (o GetZIADLPWebRulesAuditorOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZIADLPWebRulesAuditor) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// Identifier that uniquely identifies an entity
func (o GetZIADLPWebRulesAuditorOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIADLPWebRulesAuditor) int { return v.Id }).(pulumi.IntOutput)
}

// The DLP policy rule name.
// rules.
func (o GetZIADLPWebRulesAuditorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIADLPWebRulesAuditor) string { return v.Name }).(pulumi.StringOutput)
}

type GetZIADLPWebRulesAuditorArrayOutput struct{ *pulumi.OutputState }

func (GetZIADLPWebRulesAuditorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIADLPWebRulesAuditor)(nil)).Elem()
}

func (o GetZIADLPWebRulesAuditorArrayOutput) ToGetZIADLPWebRulesAuditorArrayOutput() GetZIADLPWebRulesAuditorArrayOutput {
	return o
}

func (o GetZIADLPWebRulesAuditorArrayOutput) ToGetZIADLPWebRulesAuditorArrayOutputWithContext(ctx context.Context) GetZIADLPWebRulesAuditorArrayOutput {
	return o
}

func (o GetZIADLPWebRulesAuditorArrayOutput) Index(i pulumi.IntInput) GetZIADLPWebRulesAuditorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIADLPWebRulesAuditor {
		return vs[0].([]GetZIADLPWebRulesAuditor)[vs[1].(int)]
	}).(GetZIADLPWebRulesAuditorOutput)
}

type GetZIADLPWebRulesDepartment struct {
	Extensions map[string]string `pulumi:"extensions"`
	// Identifier that uniquely identifies an entity
	Id int `pulumi:"id"`
	// The DLP policy rule name.
	// rules.
	Name string `pulumi:"name"`
}

// GetZIADLPWebRulesDepartmentInput is an input type that accepts GetZIADLPWebRulesDepartmentArgs and GetZIADLPWebRulesDepartmentOutput values.
// You can construct a concrete instance of `GetZIADLPWebRulesDepartmentInput` via:
//
//	GetZIADLPWebRulesDepartmentArgs{...}
type GetZIADLPWebRulesDepartmentInput interface {
	pulumi.Input

	ToGetZIADLPWebRulesDepartmentOutput() GetZIADLPWebRulesDepartmentOutput
	ToGetZIADLPWebRulesDepartmentOutputWithContext(context.Context) GetZIADLPWebRulesDepartmentOutput
}

type GetZIADLPWebRulesDepartmentArgs struct {
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// Identifier that uniquely identifies an entity
	Id pulumi.IntInput `pulumi:"id"`
	// The DLP policy rule name.
	// rules.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZIADLPWebRulesDepartmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIADLPWebRulesDepartment)(nil)).Elem()
}

func (i GetZIADLPWebRulesDepartmentArgs) ToGetZIADLPWebRulesDepartmentOutput() GetZIADLPWebRulesDepartmentOutput {
	return i.ToGetZIADLPWebRulesDepartmentOutputWithContext(context.Background())
}

func (i GetZIADLPWebRulesDepartmentArgs) ToGetZIADLPWebRulesDepartmentOutputWithContext(ctx context.Context) GetZIADLPWebRulesDepartmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIADLPWebRulesDepartmentOutput)
}

// GetZIADLPWebRulesDepartmentArrayInput is an input type that accepts GetZIADLPWebRulesDepartmentArray and GetZIADLPWebRulesDepartmentArrayOutput values.
// You can construct a concrete instance of `GetZIADLPWebRulesDepartmentArrayInput` via:
//
//	GetZIADLPWebRulesDepartmentArray{ GetZIADLPWebRulesDepartmentArgs{...} }
type GetZIADLPWebRulesDepartmentArrayInput interface {
	pulumi.Input

	ToGetZIADLPWebRulesDepartmentArrayOutput() GetZIADLPWebRulesDepartmentArrayOutput
	ToGetZIADLPWebRulesDepartmentArrayOutputWithContext(context.Context) GetZIADLPWebRulesDepartmentArrayOutput
}

type GetZIADLPWebRulesDepartmentArray []GetZIADLPWebRulesDepartmentInput

func (GetZIADLPWebRulesDepartmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIADLPWebRulesDepartment)(nil)).Elem()
}

func (i GetZIADLPWebRulesDepartmentArray) ToGetZIADLPWebRulesDepartmentArrayOutput() GetZIADLPWebRulesDepartmentArrayOutput {
	return i.ToGetZIADLPWebRulesDepartmentArrayOutputWithContext(context.Background())
}

func (i GetZIADLPWebRulesDepartmentArray) ToGetZIADLPWebRulesDepartmentArrayOutputWithContext(ctx context.Context) GetZIADLPWebRulesDepartmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIADLPWebRulesDepartmentArrayOutput)
}

type GetZIADLPWebRulesDepartmentOutput struct{ *pulumi.OutputState }

func (GetZIADLPWebRulesDepartmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIADLPWebRulesDepartment)(nil)).Elem()
}

func (o GetZIADLPWebRulesDepartmentOutput) ToGetZIADLPWebRulesDepartmentOutput() GetZIADLPWebRulesDepartmentOutput {
	return o
}

func (o GetZIADLPWebRulesDepartmentOutput) ToGetZIADLPWebRulesDepartmentOutputWithContext(ctx context.Context) GetZIADLPWebRulesDepartmentOutput {
	return o
}

func (o GetZIADLPWebRulesDepartmentOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZIADLPWebRulesDepartment) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// Identifier that uniquely identifies an entity
func (o GetZIADLPWebRulesDepartmentOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIADLPWebRulesDepartment) int { return v.Id }).(pulumi.IntOutput)
}

// The DLP policy rule name.
// rules.
func (o GetZIADLPWebRulesDepartmentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIADLPWebRulesDepartment) string { return v.Name }).(pulumi.StringOutput)
}

type GetZIADLPWebRulesDepartmentArrayOutput struct{ *pulumi.OutputState }

func (GetZIADLPWebRulesDepartmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIADLPWebRulesDepartment)(nil)).Elem()
}

func (o GetZIADLPWebRulesDepartmentArrayOutput) ToGetZIADLPWebRulesDepartmentArrayOutput() GetZIADLPWebRulesDepartmentArrayOutput {
	return o
}

func (o GetZIADLPWebRulesDepartmentArrayOutput) ToGetZIADLPWebRulesDepartmentArrayOutputWithContext(ctx context.Context) GetZIADLPWebRulesDepartmentArrayOutput {
	return o
}

func (o GetZIADLPWebRulesDepartmentArrayOutput) Index(i pulumi.IntInput) GetZIADLPWebRulesDepartmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIADLPWebRulesDepartment {
		return vs[0].([]GetZIADLPWebRulesDepartment)[vs[1].(int)]
	}).(GetZIADLPWebRulesDepartmentOutput)
}

type GetZIADLPWebRulesDlpEngine struct {
	Extensions map[string]string `pulumi:"extensions"`
	// Identifier that uniquely identifies an entity
	Id int `pulumi:"id"`
	// The DLP policy rule name.
	// rules.
	Name string `pulumi:"name"`
}

// GetZIADLPWebRulesDlpEngineInput is an input type that accepts GetZIADLPWebRulesDlpEngineArgs and GetZIADLPWebRulesDlpEngineOutput values.
// You can construct a concrete instance of `GetZIADLPWebRulesDlpEngineInput` via:
//
//	GetZIADLPWebRulesDlpEngineArgs{...}
type GetZIADLPWebRulesDlpEngineInput interface {
	pulumi.Input

	ToGetZIADLPWebRulesDlpEngineOutput() GetZIADLPWebRulesDlpEngineOutput
	ToGetZIADLPWebRulesDlpEngineOutputWithContext(context.Context) GetZIADLPWebRulesDlpEngineOutput
}

type GetZIADLPWebRulesDlpEngineArgs struct {
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// Identifier that uniquely identifies an entity
	Id pulumi.IntInput `pulumi:"id"`
	// The DLP policy rule name.
	// rules.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZIADLPWebRulesDlpEngineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIADLPWebRulesDlpEngine)(nil)).Elem()
}

func (i GetZIADLPWebRulesDlpEngineArgs) ToGetZIADLPWebRulesDlpEngineOutput() GetZIADLPWebRulesDlpEngineOutput {
	return i.ToGetZIADLPWebRulesDlpEngineOutputWithContext(context.Background())
}

func (i GetZIADLPWebRulesDlpEngineArgs) ToGetZIADLPWebRulesDlpEngineOutputWithContext(ctx context.Context) GetZIADLPWebRulesDlpEngineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIADLPWebRulesDlpEngineOutput)
}

// GetZIADLPWebRulesDlpEngineArrayInput is an input type that accepts GetZIADLPWebRulesDlpEngineArray and GetZIADLPWebRulesDlpEngineArrayOutput values.
// You can construct a concrete instance of `GetZIADLPWebRulesDlpEngineArrayInput` via:
//
//	GetZIADLPWebRulesDlpEngineArray{ GetZIADLPWebRulesDlpEngineArgs{...} }
type GetZIADLPWebRulesDlpEngineArrayInput interface {
	pulumi.Input

	ToGetZIADLPWebRulesDlpEngineArrayOutput() GetZIADLPWebRulesDlpEngineArrayOutput
	ToGetZIADLPWebRulesDlpEngineArrayOutputWithContext(context.Context) GetZIADLPWebRulesDlpEngineArrayOutput
}

type GetZIADLPWebRulesDlpEngineArray []GetZIADLPWebRulesDlpEngineInput

func (GetZIADLPWebRulesDlpEngineArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIADLPWebRulesDlpEngine)(nil)).Elem()
}

func (i GetZIADLPWebRulesDlpEngineArray) ToGetZIADLPWebRulesDlpEngineArrayOutput() GetZIADLPWebRulesDlpEngineArrayOutput {
	return i.ToGetZIADLPWebRulesDlpEngineArrayOutputWithContext(context.Background())
}

func (i GetZIADLPWebRulesDlpEngineArray) ToGetZIADLPWebRulesDlpEngineArrayOutputWithContext(ctx context.Context) GetZIADLPWebRulesDlpEngineArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIADLPWebRulesDlpEngineArrayOutput)
}

type GetZIADLPWebRulesDlpEngineOutput struct{ *pulumi.OutputState }

func (GetZIADLPWebRulesDlpEngineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIADLPWebRulesDlpEngine)(nil)).Elem()
}

func (o GetZIADLPWebRulesDlpEngineOutput) ToGetZIADLPWebRulesDlpEngineOutput() GetZIADLPWebRulesDlpEngineOutput {
	return o
}

func (o GetZIADLPWebRulesDlpEngineOutput) ToGetZIADLPWebRulesDlpEngineOutputWithContext(ctx context.Context) GetZIADLPWebRulesDlpEngineOutput {
	return o
}

func (o GetZIADLPWebRulesDlpEngineOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZIADLPWebRulesDlpEngine) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// Identifier that uniquely identifies an entity
func (o GetZIADLPWebRulesDlpEngineOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIADLPWebRulesDlpEngine) int { return v.Id }).(pulumi.IntOutput)
}

// The DLP policy rule name.
// rules.
func (o GetZIADLPWebRulesDlpEngineOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIADLPWebRulesDlpEngine) string { return v.Name }).(pulumi.StringOutput)
}

type GetZIADLPWebRulesDlpEngineArrayOutput struct{ *pulumi.OutputState }

func (GetZIADLPWebRulesDlpEngineArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIADLPWebRulesDlpEngine)(nil)).Elem()
}

func (o GetZIADLPWebRulesDlpEngineArrayOutput) ToGetZIADLPWebRulesDlpEngineArrayOutput() GetZIADLPWebRulesDlpEngineArrayOutput {
	return o
}

func (o GetZIADLPWebRulesDlpEngineArrayOutput) ToGetZIADLPWebRulesDlpEngineArrayOutputWithContext(ctx context.Context) GetZIADLPWebRulesDlpEngineArrayOutput {
	return o
}

func (o GetZIADLPWebRulesDlpEngineArrayOutput) Index(i pulumi.IntInput) GetZIADLPWebRulesDlpEngineOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIADLPWebRulesDlpEngine {
		return vs[0].([]GetZIADLPWebRulesDlpEngine)[vs[1].(int)]
	}).(GetZIADLPWebRulesDlpEngineOutput)
}

type GetZIADLPWebRulesExcludedDepartment struct {
	Extensions map[string]string `pulumi:"extensions"`
	// Identifier that uniquely identifies an entity
	Id int `pulumi:"id"`
}

// GetZIADLPWebRulesExcludedDepartmentInput is an input type that accepts GetZIADLPWebRulesExcludedDepartmentArgs and GetZIADLPWebRulesExcludedDepartmentOutput values.
// You can construct a concrete instance of `GetZIADLPWebRulesExcludedDepartmentInput` via:
//
//	GetZIADLPWebRulesExcludedDepartmentArgs{...}
type GetZIADLPWebRulesExcludedDepartmentInput interface {
	pulumi.Input

	ToGetZIADLPWebRulesExcludedDepartmentOutput() GetZIADLPWebRulesExcludedDepartmentOutput
	ToGetZIADLPWebRulesExcludedDepartmentOutputWithContext(context.Context) GetZIADLPWebRulesExcludedDepartmentOutput
}

type GetZIADLPWebRulesExcludedDepartmentArgs struct {
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// Identifier that uniquely identifies an entity
	Id pulumi.IntInput `pulumi:"id"`
}

func (GetZIADLPWebRulesExcludedDepartmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIADLPWebRulesExcludedDepartment)(nil)).Elem()
}

func (i GetZIADLPWebRulesExcludedDepartmentArgs) ToGetZIADLPWebRulesExcludedDepartmentOutput() GetZIADLPWebRulesExcludedDepartmentOutput {
	return i.ToGetZIADLPWebRulesExcludedDepartmentOutputWithContext(context.Background())
}

func (i GetZIADLPWebRulesExcludedDepartmentArgs) ToGetZIADLPWebRulesExcludedDepartmentOutputWithContext(ctx context.Context) GetZIADLPWebRulesExcludedDepartmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIADLPWebRulesExcludedDepartmentOutput)
}

// GetZIADLPWebRulesExcludedDepartmentArrayInput is an input type that accepts GetZIADLPWebRulesExcludedDepartmentArray and GetZIADLPWebRulesExcludedDepartmentArrayOutput values.
// You can construct a concrete instance of `GetZIADLPWebRulesExcludedDepartmentArrayInput` via:
//
//	GetZIADLPWebRulesExcludedDepartmentArray{ GetZIADLPWebRulesExcludedDepartmentArgs{...} }
type GetZIADLPWebRulesExcludedDepartmentArrayInput interface {
	pulumi.Input

	ToGetZIADLPWebRulesExcludedDepartmentArrayOutput() GetZIADLPWebRulesExcludedDepartmentArrayOutput
	ToGetZIADLPWebRulesExcludedDepartmentArrayOutputWithContext(context.Context) GetZIADLPWebRulesExcludedDepartmentArrayOutput
}

type GetZIADLPWebRulesExcludedDepartmentArray []GetZIADLPWebRulesExcludedDepartmentInput

func (GetZIADLPWebRulesExcludedDepartmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIADLPWebRulesExcludedDepartment)(nil)).Elem()
}

func (i GetZIADLPWebRulesExcludedDepartmentArray) ToGetZIADLPWebRulesExcludedDepartmentArrayOutput() GetZIADLPWebRulesExcludedDepartmentArrayOutput {
	return i.ToGetZIADLPWebRulesExcludedDepartmentArrayOutputWithContext(context.Background())
}

func (i GetZIADLPWebRulesExcludedDepartmentArray) ToGetZIADLPWebRulesExcludedDepartmentArrayOutputWithContext(ctx context.Context) GetZIADLPWebRulesExcludedDepartmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIADLPWebRulesExcludedDepartmentArrayOutput)
}

type GetZIADLPWebRulesExcludedDepartmentOutput struct{ *pulumi.OutputState }

func (GetZIADLPWebRulesExcludedDepartmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIADLPWebRulesExcludedDepartment)(nil)).Elem()
}

func (o GetZIADLPWebRulesExcludedDepartmentOutput) ToGetZIADLPWebRulesExcludedDepartmentOutput() GetZIADLPWebRulesExcludedDepartmentOutput {
	return o
}

func (o GetZIADLPWebRulesExcludedDepartmentOutput) ToGetZIADLPWebRulesExcludedDepartmentOutputWithContext(ctx context.Context) GetZIADLPWebRulesExcludedDepartmentOutput {
	return o
}

func (o GetZIADLPWebRulesExcludedDepartmentOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZIADLPWebRulesExcludedDepartment) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// Identifier that uniquely identifies an entity
func (o GetZIADLPWebRulesExcludedDepartmentOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIADLPWebRulesExcludedDepartment) int { return v.Id }).(pulumi.IntOutput)
}

type GetZIADLPWebRulesExcludedDepartmentArrayOutput struct{ *pulumi.OutputState }

func (GetZIADLPWebRulesExcludedDepartmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIADLPWebRulesExcludedDepartment)(nil)).Elem()
}

func (o GetZIADLPWebRulesExcludedDepartmentArrayOutput) ToGetZIADLPWebRulesExcludedDepartmentArrayOutput() GetZIADLPWebRulesExcludedDepartmentArrayOutput {
	return o
}

func (o GetZIADLPWebRulesExcludedDepartmentArrayOutput) ToGetZIADLPWebRulesExcludedDepartmentArrayOutputWithContext(ctx context.Context) GetZIADLPWebRulesExcludedDepartmentArrayOutput {
	return o
}

func (o GetZIADLPWebRulesExcludedDepartmentArrayOutput) Index(i pulumi.IntInput) GetZIADLPWebRulesExcludedDepartmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIADLPWebRulesExcludedDepartment {
		return vs[0].([]GetZIADLPWebRulesExcludedDepartment)[vs[1].(int)]
	}).(GetZIADLPWebRulesExcludedDepartmentOutput)
}

type GetZIADLPWebRulesExcludedGroup struct {
	Extensions map[string]string `pulumi:"extensions"`
	// Identifier that uniquely identifies an entity
	Id int `pulumi:"id"`
}

// GetZIADLPWebRulesExcludedGroupInput is an input type that accepts GetZIADLPWebRulesExcludedGroupArgs and GetZIADLPWebRulesExcludedGroupOutput values.
// You can construct a concrete instance of `GetZIADLPWebRulesExcludedGroupInput` via:
//
//	GetZIADLPWebRulesExcludedGroupArgs{...}
type GetZIADLPWebRulesExcludedGroupInput interface {
	pulumi.Input

	ToGetZIADLPWebRulesExcludedGroupOutput() GetZIADLPWebRulesExcludedGroupOutput
	ToGetZIADLPWebRulesExcludedGroupOutputWithContext(context.Context) GetZIADLPWebRulesExcludedGroupOutput
}

type GetZIADLPWebRulesExcludedGroupArgs struct {
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// Identifier that uniquely identifies an entity
	Id pulumi.IntInput `pulumi:"id"`
}

func (GetZIADLPWebRulesExcludedGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIADLPWebRulesExcludedGroup)(nil)).Elem()
}

func (i GetZIADLPWebRulesExcludedGroupArgs) ToGetZIADLPWebRulesExcludedGroupOutput() GetZIADLPWebRulesExcludedGroupOutput {
	return i.ToGetZIADLPWebRulesExcludedGroupOutputWithContext(context.Background())
}

func (i GetZIADLPWebRulesExcludedGroupArgs) ToGetZIADLPWebRulesExcludedGroupOutputWithContext(ctx context.Context) GetZIADLPWebRulesExcludedGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIADLPWebRulesExcludedGroupOutput)
}

// GetZIADLPWebRulesExcludedGroupArrayInput is an input type that accepts GetZIADLPWebRulesExcludedGroupArray and GetZIADLPWebRulesExcludedGroupArrayOutput values.
// You can construct a concrete instance of `GetZIADLPWebRulesExcludedGroupArrayInput` via:
//
//	GetZIADLPWebRulesExcludedGroupArray{ GetZIADLPWebRulesExcludedGroupArgs{...} }
type GetZIADLPWebRulesExcludedGroupArrayInput interface {
	pulumi.Input

	ToGetZIADLPWebRulesExcludedGroupArrayOutput() GetZIADLPWebRulesExcludedGroupArrayOutput
	ToGetZIADLPWebRulesExcludedGroupArrayOutputWithContext(context.Context) GetZIADLPWebRulesExcludedGroupArrayOutput
}

type GetZIADLPWebRulesExcludedGroupArray []GetZIADLPWebRulesExcludedGroupInput

func (GetZIADLPWebRulesExcludedGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIADLPWebRulesExcludedGroup)(nil)).Elem()
}

func (i GetZIADLPWebRulesExcludedGroupArray) ToGetZIADLPWebRulesExcludedGroupArrayOutput() GetZIADLPWebRulesExcludedGroupArrayOutput {
	return i.ToGetZIADLPWebRulesExcludedGroupArrayOutputWithContext(context.Background())
}

func (i GetZIADLPWebRulesExcludedGroupArray) ToGetZIADLPWebRulesExcludedGroupArrayOutputWithContext(ctx context.Context) GetZIADLPWebRulesExcludedGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIADLPWebRulesExcludedGroupArrayOutput)
}

type GetZIADLPWebRulesExcludedGroupOutput struct{ *pulumi.OutputState }

func (GetZIADLPWebRulesExcludedGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIADLPWebRulesExcludedGroup)(nil)).Elem()
}

func (o GetZIADLPWebRulesExcludedGroupOutput) ToGetZIADLPWebRulesExcludedGroupOutput() GetZIADLPWebRulesExcludedGroupOutput {
	return o
}

func (o GetZIADLPWebRulesExcludedGroupOutput) ToGetZIADLPWebRulesExcludedGroupOutputWithContext(ctx context.Context) GetZIADLPWebRulesExcludedGroupOutput {
	return o
}

func (o GetZIADLPWebRulesExcludedGroupOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZIADLPWebRulesExcludedGroup) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// Identifier that uniquely identifies an entity
func (o GetZIADLPWebRulesExcludedGroupOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIADLPWebRulesExcludedGroup) int { return v.Id }).(pulumi.IntOutput)
}

type GetZIADLPWebRulesExcludedGroupArrayOutput struct{ *pulumi.OutputState }

func (GetZIADLPWebRulesExcludedGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIADLPWebRulesExcludedGroup)(nil)).Elem()
}

func (o GetZIADLPWebRulesExcludedGroupArrayOutput) ToGetZIADLPWebRulesExcludedGroupArrayOutput() GetZIADLPWebRulesExcludedGroupArrayOutput {
	return o
}

func (o GetZIADLPWebRulesExcludedGroupArrayOutput) ToGetZIADLPWebRulesExcludedGroupArrayOutputWithContext(ctx context.Context) GetZIADLPWebRulesExcludedGroupArrayOutput {
	return o
}

func (o GetZIADLPWebRulesExcludedGroupArrayOutput) Index(i pulumi.IntInput) GetZIADLPWebRulesExcludedGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIADLPWebRulesExcludedGroup {
		return vs[0].([]GetZIADLPWebRulesExcludedGroup)[vs[1].(int)]
	}).(GetZIADLPWebRulesExcludedGroupOutput)
}

type GetZIADLPWebRulesExcludedUser struct {
	Extensions map[string]string `pulumi:"extensions"`
	// Identifier that uniquely identifies an entity
	Id int `pulumi:"id"`
}

// GetZIADLPWebRulesExcludedUserInput is an input type that accepts GetZIADLPWebRulesExcludedUserArgs and GetZIADLPWebRulesExcludedUserOutput values.
// You can construct a concrete instance of `GetZIADLPWebRulesExcludedUserInput` via:
//
//	GetZIADLPWebRulesExcludedUserArgs{...}
type GetZIADLPWebRulesExcludedUserInput interface {
	pulumi.Input

	ToGetZIADLPWebRulesExcludedUserOutput() GetZIADLPWebRulesExcludedUserOutput
	ToGetZIADLPWebRulesExcludedUserOutputWithContext(context.Context) GetZIADLPWebRulesExcludedUserOutput
}

type GetZIADLPWebRulesExcludedUserArgs struct {
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// Identifier that uniquely identifies an entity
	Id pulumi.IntInput `pulumi:"id"`
}

func (GetZIADLPWebRulesExcludedUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIADLPWebRulesExcludedUser)(nil)).Elem()
}

func (i GetZIADLPWebRulesExcludedUserArgs) ToGetZIADLPWebRulesExcludedUserOutput() GetZIADLPWebRulesExcludedUserOutput {
	return i.ToGetZIADLPWebRulesExcludedUserOutputWithContext(context.Background())
}

func (i GetZIADLPWebRulesExcludedUserArgs) ToGetZIADLPWebRulesExcludedUserOutputWithContext(ctx context.Context) GetZIADLPWebRulesExcludedUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIADLPWebRulesExcludedUserOutput)
}

// GetZIADLPWebRulesExcludedUserArrayInput is an input type that accepts GetZIADLPWebRulesExcludedUserArray and GetZIADLPWebRulesExcludedUserArrayOutput values.
// You can construct a concrete instance of `GetZIADLPWebRulesExcludedUserArrayInput` via:
//
//	GetZIADLPWebRulesExcludedUserArray{ GetZIADLPWebRulesExcludedUserArgs{...} }
type GetZIADLPWebRulesExcludedUserArrayInput interface {
	pulumi.Input

	ToGetZIADLPWebRulesExcludedUserArrayOutput() GetZIADLPWebRulesExcludedUserArrayOutput
	ToGetZIADLPWebRulesExcludedUserArrayOutputWithContext(context.Context) GetZIADLPWebRulesExcludedUserArrayOutput
}

type GetZIADLPWebRulesExcludedUserArray []GetZIADLPWebRulesExcludedUserInput

func (GetZIADLPWebRulesExcludedUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIADLPWebRulesExcludedUser)(nil)).Elem()
}

func (i GetZIADLPWebRulesExcludedUserArray) ToGetZIADLPWebRulesExcludedUserArrayOutput() GetZIADLPWebRulesExcludedUserArrayOutput {
	return i.ToGetZIADLPWebRulesExcludedUserArrayOutputWithContext(context.Background())
}

func (i GetZIADLPWebRulesExcludedUserArray) ToGetZIADLPWebRulesExcludedUserArrayOutputWithContext(ctx context.Context) GetZIADLPWebRulesExcludedUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIADLPWebRulesExcludedUserArrayOutput)
}

type GetZIADLPWebRulesExcludedUserOutput struct{ *pulumi.OutputState }

func (GetZIADLPWebRulesExcludedUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIADLPWebRulesExcludedUser)(nil)).Elem()
}

func (o GetZIADLPWebRulesExcludedUserOutput) ToGetZIADLPWebRulesExcludedUserOutput() GetZIADLPWebRulesExcludedUserOutput {
	return o
}

func (o GetZIADLPWebRulesExcludedUserOutput) ToGetZIADLPWebRulesExcludedUserOutputWithContext(ctx context.Context) GetZIADLPWebRulesExcludedUserOutput {
	return o
}

func (o GetZIADLPWebRulesExcludedUserOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZIADLPWebRulesExcludedUser) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// Identifier that uniquely identifies an entity
func (o GetZIADLPWebRulesExcludedUserOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIADLPWebRulesExcludedUser) int { return v.Id }).(pulumi.IntOutput)
}

type GetZIADLPWebRulesExcludedUserArrayOutput struct{ *pulumi.OutputState }

func (GetZIADLPWebRulesExcludedUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIADLPWebRulesExcludedUser)(nil)).Elem()
}

func (o GetZIADLPWebRulesExcludedUserArrayOutput) ToGetZIADLPWebRulesExcludedUserArrayOutput() GetZIADLPWebRulesExcludedUserArrayOutput {
	return o
}

func (o GetZIADLPWebRulesExcludedUserArrayOutput) ToGetZIADLPWebRulesExcludedUserArrayOutputWithContext(ctx context.Context) GetZIADLPWebRulesExcludedUserArrayOutput {
	return o
}

func (o GetZIADLPWebRulesExcludedUserArrayOutput) Index(i pulumi.IntInput) GetZIADLPWebRulesExcludedUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIADLPWebRulesExcludedUser {
		return vs[0].([]GetZIADLPWebRulesExcludedUser)[vs[1].(int)]
	}).(GetZIADLPWebRulesExcludedUserOutput)
}

type GetZIADLPWebRulesGroup struct {
	Extensions map[string]string `pulumi:"extensions"`
	// Identifier that uniquely identifies an entity
	Id int `pulumi:"id"`
	// The DLP policy rule name.
	// rules.
	Name string `pulumi:"name"`
}

// GetZIADLPWebRulesGroupInput is an input type that accepts GetZIADLPWebRulesGroupArgs and GetZIADLPWebRulesGroupOutput values.
// You can construct a concrete instance of `GetZIADLPWebRulesGroupInput` via:
//
//	GetZIADLPWebRulesGroupArgs{...}
type GetZIADLPWebRulesGroupInput interface {
	pulumi.Input

	ToGetZIADLPWebRulesGroupOutput() GetZIADLPWebRulesGroupOutput
	ToGetZIADLPWebRulesGroupOutputWithContext(context.Context) GetZIADLPWebRulesGroupOutput
}

type GetZIADLPWebRulesGroupArgs struct {
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// Identifier that uniquely identifies an entity
	Id pulumi.IntInput `pulumi:"id"`
	// The DLP policy rule name.
	// rules.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZIADLPWebRulesGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIADLPWebRulesGroup)(nil)).Elem()
}

func (i GetZIADLPWebRulesGroupArgs) ToGetZIADLPWebRulesGroupOutput() GetZIADLPWebRulesGroupOutput {
	return i.ToGetZIADLPWebRulesGroupOutputWithContext(context.Background())
}

func (i GetZIADLPWebRulesGroupArgs) ToGetZIADLPWebRulesGroupOutputWithContext(ctx context.Context) GetZIADLPWebRulesGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIADLPWebRulesGroupOutput)
}

// GetZIADLPWebRulesGroupArrayInput is an input type that accepts GetZIADLPWebRulesGroupArray and GetZIADLPWebRulesGroupArrayOutput values.
// You can construct a concrete instance of `GetZIADLPWebRulesGroupArrayInput` via:
//
//	GetZIADLPWebRulesGroupArray{ GetZIADLPWebRulesGroupArgs{...} }
type GetZIADLPWebRulesGroupArrayInput interface {
	pulumi.Input

	ToGetZIADLPWebRulesGroupArrayOutput() GetZIADLPWebRulesGroupArrayOutput
	ToGetZIADLPWebRulesGroupArrayOutputWithContext(context.Context) GetZIADLPWebRulesGroupArrayOutput
}

type GetZIADLPWebRulesGroupArray []GetZIADLPWebRulesGroupInput

func (GetZIADLPWebRulesGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIADLPWebRulesGroup)(nil)).Elem()
}

func (i GetZIADLPWebRulesGroupArray) ToGetZIADLPWebRulesGroupArrayOutput() GetZIADLPWebRulesGroupArrayOutput {
	return i.ToGetZIADLPWebRulesGroupArrayOutputWithContext(context.Background())
}

func (i GetZIADLPWebRulesGroupArray) ToGetZIADLPWebRulesGroupArrayOutputWithContext(ctx context.Context) GetZIADLPWebRulesGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIADLPWebRulesGroupArrayOutput)
}

type GetZIADLPWebRulesGroupOutput struct{ *pulumi.OutputState }

func (GetZIADLPWebRulesGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIADLPWebRulesGroup)(nil)).Elem()
}

func (o GetZIADLPWebRulesGroupOutput) ToGetZIADLPWebRulesGroupOutput() GetZIADLPWebRulesGroupOutput {
	return o
}

func (o GetZIADLPWebRulesGroupOutput) ToGetZIADLPWebRulesGroupOutputWithContext(ctx context.Context) GetZIADLPWebRulesGroupOutput {
	return o
}

func (o GetZIADLPWebRulesGroupOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZIADLPWebRulesGroup) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// Identifier that uniquely identifies an entity
func (o GetZIADLPWebRulesGroupOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIADLPWebRulesGroup) int { return v.Id }).(pulumi.IntOutput)
}

// The DLP policy rule name.
// rules.
func (o GetZIADLPWebRulesGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIADLPWebRulesGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetZIADLPWebRulesGroupArrayOutput struct{ *pulumi.OutputState }

func (GetZIADLPWebRulesGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIADLPWebRulesGroup)(nil)).Elem()
}

func (o GetZIADLPWebRulesGroupArrayOutput) ToGetZIADLPWebRulesGroupArrayOutput() GetZIADLPWebRulesGroupArrayOutput {
	return o
}

func (o GetZIADLPWebRulesGroupArrayOutput) ToGetZIADLPWebRulesGroupArrayOutputWithContext(ctx context.Context) GetZIADLPWebRulesGroupArrayOutput {
	return o
}

func (o GetZIADLPWebRulesGroupArrayOutput) Index(i pulumi.IntInput) GetZIADLPWebRulesGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIADLPWebRulesGroup {
		return vs[0].([]GetZIADLPWebRulesGroup)[vs[1].(int)]
	}).(GetZIADLPWebRulesGroupOutput)
}

type GetZIADLPWebRulesIcapServer struct {
	Extensions map[string]string `pulumi:"extensions"`
	// Identifier that uniquely identifies an entity
	Id int `pulumi:"id"`
	// The DLP policy rule name.
	// rules.
	Name string `pulumi:"name"`
}

// GetZIADLPWebRulesIcapServerInput is an input type that accepts GetZIADLPWebRulesIcapServerArgs and GetZIADLPWebRulesIcapServerOutput values.
// You can construct a concrete instance of `GetZIADLPWebRulesIcapServerInput` via:
//
//	GetZIADLPWebRulesIcapServerArgs{...}
type GetZIADLPWebRulesIcapServerInput interface {
	pulumi.Input

	ToGetZIADLPWebRulesIcapServerOutput() GetZIADLPWebRulesIcapServerOutput
	ToGetZIADLPWebRulesIcapServerOutputWithContext(context.Context) GetZIADLPWebRulesIcapServerOutput
}

type GetZIADLPWebRulesIcapServerArgs struct {
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// Identifier that uniquely identifies an entity
	Id pulumi.IntInput `pulumi:"id"`
	// The DLP policy rule name.
	// rules.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZIADLPWebRulesIcapServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIADLPWebRulesIcapServer)(nil)).Elem()
}

func (i GetZIADLPWebRulesIcapServerArgs) ToGetZIADLPWebRulesIcapServerOutput() GetZIADLPWebRulesIcapServerOutput {
	return i.ToGetZIADLPWebRulesIcapServerOutputWithContext(context.Background())
}

func (i GetZIADLPWebRulesIcapServerArgs) ToGetZIADLPWebRulesIcapServerOutputWithContext(ctx context.Context) GetZIADLPWebRulesIcapServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIADLPWebRulesIcapServerOutput)
}

// GetZIADLPWebRulesIcapServerArrayInput is an input type that accepts GetZIADLPWebRulesIcapServerArray and GetZIADLPWebRulesIcapServerArrayOutput values.
// You can construct a concrete instance of `GetZIADLPWebRulesIcapServerArrayInput` via:
//
//	GetZIADLPWebRulesIcapServerArray{ GetZIADLPWebRulesIcapServerArgs{...} }
type GetZIADLPWebRulesIcapServerArrayInput interface {
	pulumi.Input

	ToGetZIADLPWebRulesIcapServerArrayOutput() GetZIADLPWebRulesIcapServerArrayOutput
	ToGetZIADLPWebRulesIcapServerArrayOutputWithContext(context.Context) GetZIADLPWebRulesIcapServerArrayOutput
}

type GetZIADLPWebRulesIcapServerArray []GetZIADLPWebRulesIcapServerInput

func (GetZIADLPWebRulesIcapServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIADLPWebRulesIcapServer)(nil)).Elem()
}

func (i GetZIADLPWebRulesIcapServerArray) ToGetZIADLPWebRulesIcapServerArrayOutput() GetZIADLPWebRulesIcapServerArrayOutput {
	return i.ToGetZIADLPWebRulesIcapServerArrayOutputWithContext(context.Background())
}

func (i GetZIADLPWebRulesIcapServerArray) ToGetZIADLPWebRulesIcapServerArrayOutputWithContext(ctx context.Context) GetZIADLPWebRulesIcapServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIADLPWebRulesIcapServerArrayOutput)
}

type GetZIADLPWebRulesIcapServerOutput struct{ *pulumi.OutputState }

func (GetZIADLPWebRulesIcapServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIADLPWebRulesIcapServer)(nil)).Elem()
}

func (o GetZIADLPWebRulesIcapServerOutput) ToGetZIADLPWebRulesIcapServerOutput() GetZIADLPWebRulesIcapServerOutput {
	return o
}

func (o GetZIADLPWebRulesIcapServerOutput) ToGetZIADLPWebRulesIcapServerOutputWithContext(ctx context.Context) GetZIADLPWebRulesIcapServerOutput {
	return o
}

func (o GetZIADLPWebRulesIcapServerOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZIADLPWebRulesIcapServer) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// Identifier that uniquely identifies an entity
func (o GetZIADLPWebRulesIcapServerOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIADLPWebRulesIcapServer) int { return v.Id }).(pulumi.IntOutput)
}

// The DLP policy rule name.
// rules.
func (o GetZIADLPWebRulesIcapServerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIADLPWebRulesIcapServer) string { return v.Name }).(pulumi.StringOutput)
}

type GetZIADLPWebRulesIcapServerArrayOutput struct{ *pulumi.OutputState }

func (GetZIADLPWebRulesIcapServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIADLPWebRulesIcapServer)(nil)).Elem()
}

func (o GetZIADLPWebRulesIcapServerArrayOutput) ToGetZIADLPWebRulesIcapServerArrayOutput() GetZIADLPWebRulesIcapServerArrayOutput {
	return o
}

func (o GetZIADLPWebRulesIcapServerArrayOutput) ToGetZIADLPWebRulesIcapServerArrayOutputWithContext(ctx context.Context) GetZIADLPWebRulesIcapServerArrayOutput {
	return o
}

func (o GetZIADLPWebRulesIcapServerArrayOutput) Index(i pulumi.IntInput) GetZIADLPWebRulesIcapServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIADLPWebRulesIcapServer {
		return vs[0].([]GetZIADLPWebRulesIcapServer)[vs[1].(int)]
	}).(GetZIADLPWebRulesIcapServerOutput)
}

type GetZIADLPWebRulesLabel struct {
	Extensions map[string]string `pulumi:"extensions"`
	// Identifier that uniquely identifies an entity
	Id int `pulumi:"id"`
	// The DLP policy rule name.
	// rules.
	Name string `pulumi:"name"`
}

// GetZIADLPWebRulesLabelInput is an input type that accepts GetZIADLPWebRulesLabelArgs and GetZIADLPWebRulesLabelOutput values.
// You can construct a concrete instance of `GetZIADLPWebRulesLabelInput` via:
//
//	GetZIADLPWebRulesLabelArgs{...}
type GetZIADLPWebRulesLabelInput interface {
	pulumi.Input

	ToGetZIADLPWebRulesLabelOutput() GetZIADLPWebRulesLabelOutput
	ToGetZIADLPWebRulesLabelOutputWithContext(context.Context) GetZIADLPWebRulesLabelOutput
}

type GetZIADLPWebRulesLabelArgs struct {
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// Identifier that uniquely identifies an entity
	Id pulumi.IntInput `pulumi:"id"`
	// The DLP policy rule name.
	// rules.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZIADLPWebRulesLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIADLPWebRulesLabel)(nil)).Elem()
}

func (i GetZIADLPWebRulesLabelArgs) ToGetZIADLPWebRulesLabelOutput() GetZIADLPWebRulesLabelOutput {
	return i.ToGetZIADLPWebRulesLabelOutputWithContext(context.Background())
}

func (i GetZIADLPWebRulesLabelArgs) ToGetZIADLPWebRulesLabelOutputWithContext(ctx context.Context) GetZIADLPWebRulesLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIADLPWebRulesLabelOutput)
}

// GetZIADLPWebRulesLabelArrayInput is an input type that accepts GetZIADLPWebRulesLabelArray and GetZIADLPWebRulesLabelArrayOutput values.
// You can construct a concrete instance of `GetZIADLPWebRulesLabelArrayInput` via:
//
//	GetZIADLPWebRulesLabelArray{ GetZIADLPWebRulesLabelArgs{...} }
type GetZIADLPWebRulesLabelArrayInput interface {
	pulumi.Input

	ToGetZIADLPWebRulesLabelArrayOutput() GetZIADLPWebRulesLabelArrayOutput
	ToGetZIADLPWebRulesLabelArrayOutputWithContext(context.Context) GetZIADLPWebRulesLabelArrayOutput
}

type GetZIADLPWebRulesLabelArray []GetZIADLPWebRulesLabelInput

func (GetZIADLPWebRulesLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIADLPWebRulesLabel)(nil)).Elem()
}

func (i GetZIADLPWebRulesLabelArray) ToGetZIADLPWebRulesLabelArrayOutput() GetZIADLPWebRulesLabelArrayOutput {
	return i.ToGetZIADLPWebRulesLabelArrayOutputWithContext(context.Background())
}

func (i GetZIADLPWebRulesLabelArray) ToGetZIADLPWebRulesLabelArrayOutputWithContext(ctx context.Context) GetZIADLPWebRulesLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIADLPWebRulesLabelArrayOutput)
}

type GetZIADLPWebRulesLabelOutput struct{ *pulumi.OutputState }

func (GetZIADLPWebRulesLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIADLPWebRulesLabel)(nil)).Elem()
}

func (o GetZIADLPWebRulesLabelOutput) ToGetZIADLPWebRulesLabelOutput() GetZIADLPWebRulesLabelOutput {
	return o
}

func (o GetZIADLPWebRulesLabelOutput) ToGetZIADLPWebRulesLabelOutputWithContext(ctx context.Context) GetZIADLPWebRulesLabelOutput {
	return o
}

func (o GetZIADLPWebRulesLabelOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZIADLPWebRulesLabel) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// Identifier that uniquely identifies an entity
func (o GetZIADLPWebRulesLabelOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIADLPWebRulesLabel) int { return v.Id }).(pulumi.IntOutput)
}

// The DLP policy rule name.
// rules.
func (o GetZIADLPWebRulesLabelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIADLPWebRulesLabel) string { return v.Name }).(pulumi.StringOutput)
}

type GetZIADLPWebRulesLabelArrayOutput struct{ *pulumi.OutputState }

func (GetZIADLPWebRulesLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIADLPWebRulesLabel)(nil)).Elem()
}

func (o GetZIADLPWebRulesLabelArrayOutput) ToGetZIADLPWebRulesLabelArrayOutput() GetZIADLPWebRulesLabelArrayOutput {
	return o
}

func (o GetZIADLPWebRulesLabelArrayOutput) ToGetZIADLPWebRulesLabelArrayOutputWithContext(ctx context.Context) GetZIADLPWebRulesLabelArrayOutput {
	return o
}

func (o GetZIADLPWebRulesLabelArrayOutput) Index(i pulumi.IntInput) GetZIADLPWebRulesLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIADLPWebRulesLabel {
		return vs[0].([]GetZIADLPWebRulesLabel)[vs[1].(int)]
	}).(GetZIADLPWebRulesLabelOutput)
}

type GetZIADLPWebRulesLastModifiedBy struct {
	Extensions map[string]string `pulumi:"extensions"`
	// Identifier that uniquely identifies an entity
	Id int `pulumi:"id"`
	// The DLP policy rule name.
	// rules.
	Name string `pulumi:"name"`
}

// GetZIADLPWebRulesLastModifiedByInput is an input type that accepts GetZIADLPWebRulesLastModifiedByArgs and GetZIADLPWebRulesLastModifiedByOutput values.
// You can construct a concrete instance of `GetZIADLPWebRulesLastModifiedByInput` via:
//
//	GetZIADLPWebRulesLastModifiedByArgs{...}
type GetZIADLPWebRulesLastModifiedByInput interface {
	pulumi.Input

	ToGetZIADLPWebRulesLastModifiedByOutput() GetZIADLPWebRulesLastModifiedByOutput
	ToGetZIADLPWebRulesLastModifiedByOutputWithContext(context.Context) GetZIADLPWebRulesLastModifiedByOutput
}

type GetZIADLPWebRulesLastModifiedByArgs struct {
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// Identifier that uniquely identifies an entity
	Id pulumi.IntInput `pulumi:"id"`
	// The DLP policy rule name.
	// rules.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZIADLPWebRulesLastModifiedByArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIADLPWebRulesLastModifiedBy)(nil)).Elem()
}

func (i GetZIADLPWebRulesLastModifiedByArgs) ToGetZIADLPWebRulesLastModifiedByOutput() GetZIADLPWebRulesLastModifiedByOutput {
	return i.ToGetZIADLPWebRulesLastModifiedByOutputWithContext(context.Background())
}

func (i GetZIADLPWebRulesLastModifiedByArgs) ToGetZIADLPWebRulesLastModifiedByOutputWithContext(ctx context.Context) GetZIADLPWebRulesLastModifiedByOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIADLPWebRulesLastModifiedByOutput)
}

// GetZIADLPWebRulesLastModifiedByArrayInput is an input type that accepts GetZIADLPWebRulesLastModifiedByArray and GetZIADLPWebRulesLastModifiedByArrayOutput values.
// You can construct a concrete instance of `GetZIADLPWebRulesLastModifiedByArrayInput` via:
//
//	GetZIADLPWebRulesLastModifiedByArray{ GetZIADLPWebRulesLastModifiedByArgs{...} }
type GetZIADLPWebRulesLastModifiedByArrayInput interface {
	pulumi.Input

	ToGetZIADLPWebRulesLastModifiedByArrayOutput() GetZIADLPWebRulesLastModifiedByArrayOutput
	ToGetZIADLPWebRulesLastModifiedByArrayOutputWithContext(context.Context) GetZIADLPWebRulesLastModifiedByArrayOutput
}

type GetZIADLPWebRulesLastModifiedByArray []GetZIADLPWebRulesLastModifiedByInput

func (GetZIADLPWebRulesLastModifiedByArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIADLPWebRulesLastModifiedBy)(nil)).Elem()
}

func (i GetZIADLPWebRulesLastModifiedByArray) ToGetZIADLPWebRulesLastModifiedByArrayOutput() GetZIADLPWebRulesLastModifiedByArrayOutput {
	return i.ToGetZIADLPWebRulesLastModifiedByArrayOutputWithContext(context.Background())
}

func (i GetZIADLPWebRulesLastModifiedByArray) ToGetZIADLPWebRulesLastModifiedByArrayOutputWithContext(ctx context.Context) GetZIADLPWebRulesLastModifiedByArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIADLPWebRulesLastModifiedByArrayOutput)
}

type GetZIADLPWebRulesLastModifiedByOutput struct{ *pulumi.OutputState }

func (GetZIADLPWebRulesLastModifiedByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIADLPWebRulesLastModifiedBy)(nil)).Elem()
}

func (o GetZIADLPWebRulesLastModifiedByOutput) ToGetZIADLPWebRulesLastModifiedByOutput() GetZIADLPWebRulesLastModifiedByOutput {
	return o
}

func (o GetZIADLPWebRulesLastModifiedByOutput) ToGetZIADLPWebRulesLastModifiedByOutputWithContext(ctx context.Context) GetZIADLPWebRulesLastModifiedByOutput {
	return o
}

func (o GetZIADLPWebRulesLastModifiedByOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZIADLPWebRulesLastModifiedBy) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// Identifier that uniquely identifies an entity
func (o GetZIADLPWebRulesLastModifiedByOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIADLPWebRulesLastModifiedBy) int { return v.Id }).(pulumi.IntOutput)
}

// The DLP policy rule name.
// rules.
func (o GetZIADLPWebRulesLastModifiedByOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIADLPWebRulesLastModifiedBy) string { return v.Name }).(pulumi.StringOutput)
}

type GetZIADLPWebRulesLastModifiedByArrayOutput struct{ *pulumi.OutputState }

func (GetZIADLPWebRulesLastModifiedByArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIADLPWebRulesLastModifiedBy)(nil)).Elem()
}

func (o GetZIADLPWebRulesLastModifiedByArrayOutput) ToGetZIADLPWebRulesLastModifiedByArrayOutput() GetZIADLPWebRulesLastModifiedByArrayOutput {
	return o
}

func (o GetZIADLPWebRulesLastModifiedByArrayOutput) ToGetZIADLPWebRulesLastModifiedByArrayOutputWithContext(ctx context.Context) GetZIADLPWebRulesLastModifiedByArrayOutput {
	return o
}

func (o GetZIADLPWebRulesLastModifiedByArrayOutput) Index(i pulumi.IntInput) GetZIADLPWebRulesLastModifiedByOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIADLPWebRulesLastModifiedBy {
		return vs[0].([]GetZIADLPWebRulesLastModifiedBy)[vs[1].(int)]
	}).(GetZIADLPWebRulesLastModifiedByOutput)
}

type GetZIADLPWebRulesLocation struct {
	Extensions map[string]string `pulumi:"extensions"`
	// Identifier that uniquely identifies an entity
	Id int `pulumi:"id"`
	// The DLP policy rule name.
	// rules.
	Name string `pulumi:"name"`
}

// GetZIADLPWebRulesLocationInput is an input type that accepts GetZIADLPWebRulesLocationArgs and GetZIADLPWebRulesLocationOutput values.
// You can construct a concrete instance of `GetZIADLPWebRulesLocationInput` via:
//
//	GetZIADLPWebRulesLocationArgs{...}
type GetZIADLPWebRulesLocationInput interface {
	pulumi.Input

	ToGetZIADLPWebRulesLocationOutput() GetZIADLPWebRulesLocationOutput
	ToGetZIADLPWebRulesLocationOutputWithContext(context.Context) GetZIADLPWebRulesLocationOutput
}

type GetZIADLPWebRulesLocationArgs struct {
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// Identifier that uniquely identifies an entity
	Id pulumi.IntInput `pulumi:"id"`
	// The DLP policy rule name.
	// rules.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZIADLPWebRulesLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIADLPWebRulesLocation)(nil)).Elem()
}

func (i GetZIADLPWebRulesLocationArgs) ToGetZIADLPWebRulesLocationOutput() GetZIADLPWebRulesLocationOutput {
	return i.ToGetZIADLPWebRulesLocationOutputWithContext(context.Background())
}

func (i GetZIADLPWebRulesLocationArgs) ToGetZIADLPWebRulesLocationOutputWithContext(ctx context.Context) GetZIADLPWebRulesLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIADLPWebRulesLocationOutput)
}

// GetZIADLPWebRulesLocationArrayInput is an input type that accepts GetZIADLPWebRulesLocationArray and GetZIADLPWebRulesLocationArrayOutput values.
// You can construct a concrete instance of `GetZIADLPWebRulesLocationArrayInput` via:
//
//	GetZIADLPWebRulesLocationArray{ GetZIADLPWebRulesLocationArgs{...} }
type GetZIADLPWebRulesLocationArrayInput interface {
	pulumi.Input

	ToGetZIADLPWebRulesLocationArrayOutput() GetZIADLPWebRulesLocationArrayOutput
	ToGetZIADLPWebRulesLocationArrayOutputWithContext(context.Context) GetZIADLPWebRulesLocationArrayOutput
}

type GetZIADLPWebRulesLocationArray []GetZIADLPWebRulesLocationInput

func (GetZIADLPWebRulesLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIADLPWebRulesLocation)(nil)).Elem()
}

func (i GetZIADLPWebRulesLocationArray) ToGetZIADLPWebRulesLocationArrayOutput() GetZIADLPWebRulesLocationArrayOutput {
	return i.ToGetZIADLPWebRulesLocationArrayOutputWithContext(context.Background())
}

func (i GetZIADLPWebRulesLocationArray) ToGetZIADLPWebRulesLocationArrayOutputWithContext(ctx context.Context) GetZIADLPWebRulesLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIADLPWebRulesLocationArrayOutput)
}

type GetZIADLPWebRulesLocationOutput struct{ *pulumi.OutputState }

func (GetZIADLPWebRulesLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIADLPWebRulesLocation)(nil)).Elem()
}

func (o GetZIADLPWebRulesLocationOutput) ToGetZIADLPWebRulesLocationOutput() GetZIADLPWebRulesLocationOutput {
	return o
}

func (o GetZIADLPWebRulesLocationOutput) ToGetZIADLPWebRulesLocationOutputWithContext(ctx context.Context) GetZIADLPWebRulesLocationOutput {
	return o
}

func (o GetZIADLPWebRulesLocationOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZIADLPWebRulesLocation) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// Identifier that uniquely identifies an entity
func (o GetZIADLPWebRulesLocationOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIADLPWebRulesLocation) int { return v.Id }).(pulumi.IntOutput)
}

// The DLP policy rule name.
// rules.
func (o GetZIADLPWebRulesLocationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIADLPWebRulesLocation) string { return v.Name }).(pulumi.StringOutput)
}

type GetZIADLPWebRulesLocationArrayOutput struct{ *pulumi.OutputState }

func (GetZIADLPWebRulesLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIADLPWebRulesLocation)(nil)).Elem()
}

func (o GetZIADLPWebRulesLocationArrayOutput) ToGetZIADLPWebRulesLocationArrayOutput() GetZIADLPWebRulesLocationArrayOutput {
	return o
}

func (o GetZIADLPWebRulesLocationArrayOutput) ToGetZIADLPWebRulesLocationArrayOutputWithContext(ctx context.Context) GetZIADLPWebRulesLocationArrayOutput {
	return o
}

func (o GetZIADLPWebRulesLocationArrayOutput) Index(i pulumi.IntInput) GetZIADLPWebRulesLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIADLPWebRulesLocation {
		return vs[0].([]GetZIADLPWebRulesLocation)[vs[1].(int)]
	}).(GetZIADLPWebRulesLocationOutput)
}

type GetZIADLPWebRulesLocationGroup struct {
	Extensions map[string]string `pulumi:"extensions"`
	// Identifier that uniquely identifies an entity
	Id int `pulumi:"id"`
	// The DLP policy rule name.
	// rules.
	Name string `pulumi:"name"`
}

// GetZIADLPWebRulesLocationGroupInput is an input type that accepts GetZIADLPWebRulesLocationGroupArgs and GetZIADLPWebRulesLocationGroupOutput values.
// You can construct a concrete instance of `GetZIADLPWebRulesLocationGroupInput` via:
//
//	GetZIADLPWebRulesLocationGroupArgs{...}
type GetZIADLPWebRulesLocationGroupInput interface {
	pulumi.Input

	ToGetZIADLPWebRulesLocationGroupOutput() GetZIADLPWebRulesLocationGroupOutput
	ToGetZIADLPWebRulesLocationGroupOutputWithContext(context.Context) GetZIADLPWebRulesLocationGroupOutput
}

type GetZIADLPWebRulesLocationGroupArgs struct {
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// Identifier that uniquely identifies an entity
	Id pulumi.IntInput `pulumi:"id"`
	// The DLP policy rule name.
	// rules.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZIADLPWebRulesLocationGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIADLPWebRulesLocationGroup)(nil)).Elem()
}

func (i GetZIADLPWebRulesLocationGroupArgs) ToGetZIADLPWebRulesLocationGroupOutput() GetZIADLPWebRulesLocationGroupOutput {
	return i.ToGetZIADLPWebRulesLocationGroupOutputWithContext(context.Background())
}

func (i GetZIADLPWebRulesLocationGroupArgs) ToGetZIADLPWebRulesLocationGroupOutputWithContext(ctx context.Context) GetZIADLPWebRulesLocationGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIADLPWebRulesLocationGroupOutput)
}

// GetZIADLPWebRulesLocationGroupArrayInput is an input type that accepts GetZIADLPWebRulesLocationGroupArray and GetZIADLPWebRulesLocationGroupArrayOutput values.
// You can construct a concrete instance of `GetZIADLPWebRulesLocationGroupArrayInput` via:
//
//	GetZIADLPWebRulesLocationGroupArray{ GetZIADLPWebRulesLocationGroupArgs{...} }
type GetZIADLPWebRulesLocationGroupArrayInput interface {
	pulumi.Input

	ToGetZIADLPWebRulesLocationGroupArrayOutput() GetZIADLPWebRulesLocationGroupArrayOutput
	ToGetZIADLPWebRulesLocationGroupArrayOutputWithContext(context.Context) GetZIADLPWebRulesLocationGroupArrayOutput
}

type GetZIADLPWebRulesLocationGroupArray []GetZIADLPWebRulesLocationGroupInput

func (GetZIADLPWebRulesLocationGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIADLPWebRulesLocationGroup)(nil)).Elem()
}

func (i GetZIADLPWebRulesLocationGroupArray) ToGetZIADLPWebRulesLocationGroupArrayOutput() GetZIADLPWebRulesLocationGroupArrayOutput {
	return i.ToGetZIADLPWebRulesLocationGroupArrayOutputWithContext(context.Background())
}

func (i GetZIADLPWebRulesLocationGroupArray) ToGetZIADLPWebRulesLocationGroupArrayOutputWithContext(ctx context.Context) GetZIADLPWebRulesLocationGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIADLPWebRulesLocationGroupArrayOutput)
}

type GetZIADLPWebRulesLocationGroupOutput struct{ *pulumi.OutputState }

func (GetZIADLPWebRulesLocationGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIADLPWebRulesLocationGroup)(nil)).Elem()
}

func (o GetZIADLPWebRulesLocationGroupOutput) ToGetZIADLPWebRulesLocationGroupOutput() GetZIADLPWebRulesLocationGroupOutput {
	return o
}

func (o GetZIADLPWebRulesLocationGroupOutput) ToGetZIADLPWebRulesLocationGroupOutputWithContext(ctx context.Context) GetZIADLPWebRulesLocationGroupOutput {
	return o
}

func (o GetZIADLPWebRulesLocationGroupOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZIADLPWebRulesLocationGroup) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// Identifier that uniquely identifies an entity
func (o GetZIADLPWebRulesLocationGroupOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIADLPWebRulesLocationGroup) int { return v.Id }).(pulumi.IntOutput)
}

// The DLP policy rule name.
// rules.
func (o GetZIADLPWebRulesLocationGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIADLPWebRulesLocationGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetZIADLPWebRulesLocationGroupArrayOutput struct{ *pulumi.OutputState }

func (GetZIADLPWebRulesLocationGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIADLPWebRulesLocationGroup)(nil)).Elem()
}

func (o GetZIADLPWebRulesLocationGroupArrayOutput) ToGetZIADLPWebRulesLocationGroupArrayOutput() GetZIADLPWebRulesLocationGroupArrayOutput {
	return o
}

func (o GetZIADLPWebRulesLocationGroupArrayOutput) ToGetZIADLPWebRulesLocationGroupArrayOutputWithContext(ctx context.Context) GetZIADLPWebRulesLocationGroupArrayOutput {
	return o
}

func (o GetZIADLPWebRulesLocationGroupArrayOutput) Index(i pulumi.IntInput) GetZIADLPWebRulesLocationGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIADLPWebRulesLocationGroup {
		return vs[0].([]GetZIADLPWebRulesLocationGroup)[vs[1].(int)]
	}).(GetZIADLPWebRulesLocationGroupOutput)
}

type GetZIADLPWebRulesNotificationTemplate struct {
	Extensions map[string]string `pulumi:"extensions"`
	// Identifier that uniquely identifies an entity
	Id int `pulumi:"id"`
	// The DLP policy rule name.
	// rules.
	Name string `pulumi:"name"`
}

// GetZIADLPWebRulesNotificationTemplateInput is an input type that accepts GetZIADLPWebRulesNotificationTemplateArgs and GetZIADLPWebRulesNotificationTemplateOutput values.
// You can construct a concrete instance of `GetZIADLPWebRulesNotificationTemplateInput` via:
//
//	GetZIADLPWebRulesNotificationTemplateArgs{...}
type GetZIADLPWebRulesNotificationTemplateInput interface {
	pulumi.Input

	ToGetZIADLPWebRulesNotificationTemplateOutput() GetZIADLPWebRulesNotificationTemplateOutput
	ToGetZIADLPWebRulesNotificationTemplateOutputWithContext(context.Context) GetZIADLPWebRulesNotificationTemplateOutput
}

type GetZIADLPWebRulesNotificationTemplateArgs struct {
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// Identifier that uniquely identifies an entity
	Id pulumi.IntInput `pulumi:"id"`
	// The DLP policy rule name.
	// rules.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZIADLPWebRulesNotificationTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIADLPWebRulesNotificationTemplate)(nil)).Elem()
}

func (i GetZIADLPWebRulesNotificationTemplateArgs) ToGetZIADLPWebRulesNotificationTemplateOutput() GetZIADLPWebRulesNotificationTemplateOutput {
	return i.ToGetZIADLPWebRulesNotificationTemplateOutputWithContext(context.Background())
}

func (i GetZIADLPWebRulesNotificationTemplateArgs) ToGetZIADLPWebRulesNotificationTemplateOutputWithContext(ctx context.Context) GetZIADLPWebRulesNotificationTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIADLPWebRulesNotificationTemplateOutput)
}

// GetZIADLPWebRulesNotificationTemplateArrayInput is an input type that accepts GetZIADLPWebRulesNotificationTemplateArray and GetZIADLPWebRulesNotificationTemplateArrayOutput values.
// You can construct a concrete instance of `GetZIADLPWebRulesNotificationTemplateArrayInput` via:
//
//	GetZIADLPWebRulesNotificationTemplateArray{ GetZIADLPWebRulesNotificationTemplateArgs{...} }
type GetZIADLPWebRulesNotificationTemplateArrayInput interface {
	pulumi.Input

	ToGetZIADLPWebRulesNotificationTemplateArrayOutput() GetZIADLPWebRulesNotificationTemplateArrayOutput
	ToGetZIADLPWebRulesNotificationTemplateArrayOutputWithContext(context.Context) GetZIADLPWebRulesNotificationTemplateArrayOutput
}

type GetZIADLPWebRulesNotificationTemplateArray []GetZIADLPWebRulesNotificationTemplateInput

func (GetZIADLPWebRulesNotificationTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIADLPWebRulesNotificationTemplate)(nil)).Elem()
}

func (i GetZIADLPWebRulesNotificationTemplateArray) ToGetZIADLPWebRulesNotificationTemplateArrayOutput() GetZIADLPWebRulesNotificationTemplateArrayOutput {
	return i.ToGetZIADLPWebRulesNotificationTemplateArrayOutputWithContext(context.Background())
}

func (i GetZIADLPWebRulesNotificationTemplateArray) ToGetZIADLPWebRulesNotificationTemplateArrayOutputWithContext(ctx context.Context) GetZIADLPWebRulesNotificationTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIADLPWebRulesNotificationTemplateArrayOutput)
}

type GetZIADLPWebRulesNotificationTemplateOutput struct{ *pulumi.OutputState }

func (GetZIADLPWebRulesNotificationTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIADLPWebRulesNotificationTemplate)(nil)).Elem()
}

func (o GetZIADLPWebRulesNotificationTemplateOutput) ToGetZIADLPWebRulesNotificationTemplateOutput() GetZIADLPWebRulesNotificationTemplateOutput {
	return o
}

func (o GetZIADLPWebRulesNotificationTemplateOutput) ToGetZIADLPWebRulesNotificationTemplateOutputWithContext(ctx context.Context) GetZIADLPWebRulesNotificationTemplateOutput {
	return o
}

func (o GetZIADLPWebRulesNotificationTemplateOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZIADLPWebRulesNotificationTemplate) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// Identifier that uniquely identifies an entity
func (o GetZIADLPWebRulesNotificationTemplateOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIADLPWebRulesNotificationTemplate) int { return v.Id }).(pulumi.IntOutput)
}

// The DLP policy rule name.
// rules.
func (o GetZIADLPWebRulesNotificationTemplateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIADLPWebRulesNotificationTemplate) string { return v.Name }).(pulumi.StringOutput)
}

type GetZIADLPWebRulesNotificationTemplateArrayOutput struct{ *pulumi.OutputState }

func (GetZIADLPWebRulesNotificationTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIADLPWebRulesNotificationTemplate)(nil)).Elem()
}

func (o GetZIADLPWebRulesNotificationTemplateArrayOutput) ToGetZIADLPWebRulesNotificationTemplateArrayOutput() GetZIADLPWebRulesNotificationTemplateArrayOutput {
	return o
}

func (o GetZIADLPWebRulesNotificationTemplateArrayOutput) ToGetZIADLPWebRulesNotificationTemplateArrayOutputWithContext(ctx context.Context) GetZIADLPWebRulesNotificationTemplateArrayOutput {
	return o
}

func (o GetZIADLPWebRulesNotificationTemplateArrayOutput) Index(i pulumi.IntInput) GetZIADLPWebRulesNotificationTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIADLPWebRulesNotificationTemplate {
		return vs[0].([]GetZIADLPWebRulesNotificationTemplate)[vs[1].(int)]
	}).(GetZIADLPWebRulesNotificationTemplateOutput)
}

type GetZIADLPWebRulesTimeWindow struct {
	Extensions map[string]string `pulumi:"extensions"`
	// Identifier that uniquely identifies an entity
	Id int `pulumi:"id"`
	// The DLP policy rule name.
	// rules.
	Name string `pulumi:"name"`
}

// GetZIADLPWebRulesTimeWindowInput is an input type that accepts GetZIADLPWebRulesTimeWindowArgs and GetZIADLPWebRulesTimeWindowOutput values.
// You can construct a concrete instance of `GetZIADLPWebRulesTimeWindowInput` via:
//
//	GetZIADLPWebRulesTimeWindowArgs{...}
type GetZIADLPWebRulesTimeWindowInput interface {
	pulumi.Input

	ToGetZIADLPWebRulesTimeWindowOutput() GetZIADLPWebRulesTimeWindowOutput
	ToGetZIADLPWebRulesTimeWindowOutputWithContext(context.Context) GetZIADLPWebRulesTimeWindowOutput
}

type GetZIADLPWebRulesTimeWindowArgs struct {
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// Identifier that uniquely identifies an entity
	Id pulumi.IntInput `pulumi:"id"`
	// The DLP policy rule name.
	// rules.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZIADLPWebRulesTimeWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIADLPWebRulesTimeWindow)(nil)).Elem()
}

func (i GetZIADLPWebRulesTimeWindowArgs) ToGetZIADLPWebRulesTimeWindowOutput() GetZIADLPWebRulesTimeWindowOutput {
	return i.ToGetZIADLPWebRulesTimeWindowOutputWithContext(context.Background())
}

func (i GetZIADLPWebRulesTimeWindowArgs) ToGetZIADLPWebRulesTimeWindowOutputWithContext(ctx context.Context) GetZIADLPWebRulesTimeWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIADLPWebRulesTimeWindowOutput)
}

// GetZIADLPWebRulesTimeWindowArrayInput is an input type that accepts GetZIADLPWebRulesTimeWindowArray and GetZIADLPWebRulesTimeWindowArrayOutput values.
// You can construct a concrete instance of `GetZIADLPWebRulesTimeWindowArrayInput` via:
//
//	GetZIADLPWebRulesTimeWindowArray{ GetZIADLPWebRulesTimeWindowArgs{...} }
type GetZIADLPWebRulesTimeWindowArrayInput interface {
	pulumi.Input

	ToGetZIADLPWebRulesTimeWindowArrayOutput() GetZIADLPWebRulesTimeWindowArrayOutput
	ToGetZIADLPWebRulesTimeWindowArrayOutputWithContext(context.Context) GetZIADLPWebRulesTimeWindowArrayOutput
}

type GetZIADLPWebRulesTimeWindowArray []GetZIADLPWebRulesTimeWindowInput

func (GetZIADLPWebRulesTimeWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIADLPWebRulesTimeWindow)(nil)).Elem()
}

func (i GetZIADLPWebRulesTimeWindowArray) ToGetZIADLPWebRulesTimeWindowArrayOutput() GetZIADLPWebRulesTimeWindowArrayOutput {
	return i.ToGetZIADLPWebRulesTimeWindowArrayOutputWithContext(context.Background())
}

func (i GetZIADLPWebRulesTimeWindowArray) ToGetZIADLPWebRulesTimeWindowArrayOutputWithContext(ctx context.Context) GetZIADLPWebRulesTimeWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIADLPWebRulesTimeWindowArrayOutput)
}

type GetZIADLPWebRulesTimeWindowOutput struct{ *pulumi.OutputState }

func (GetZIADLPWebRulesTimeWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIADLPWebRulesTimeWindow)(nil)).Elem()
}

func (o GetZIADLPWebRulesTimeWindowOutput) ToGetZIADLPWebRulesTimeWindowOutput() GetZIADLPWebRulesTimeWindowOutput {
	return o
}

func (o GetZIADLPWebRulesTimeWindowOutput) ToGetZIADLPWebRulesTimeWindowOutputWithContext(ctx context.Context) GetZIADLPWebRulesTimeWindowOutput {
	return o
}

func (o GetZIADLPWebRulesTimeWindowOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZIADLPWebRulesTimeWindow) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// Identifier that uniquely identifies an entity
func (o GetZIADLPWebRulesTimeWindowOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIADLPWebRulesTimeWindow) int { return v.Id }).(pulumi.IntOutput)
}

// The DLP policy rule name.
// rules.
func (o GetZIADLPWebRulesTimeWindowOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIADLPWebRulesTimeWindow) string { return v.Name }).(pulumi.StringOutput)
}

type GetZIADLPWebRulesTimeWindowArrayOutput struct{ *pulumi.OutputState }

func (GetZIADLPWebRulesTimeWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIADLPWebRulesTimeWindow)(nil)).Elem()
}

func (o GetZIADLPWebRulesTimeWindowArrayOutput) ToGetZIADLPWebRulesTimeWindowArrayOutput() GetZIADLPWebRulesTimeWindowArrayOutput {
	return o
}

func (o GetZIADLPWebRulesTimeWindowArrayOutput) ToGetZIADLPWebRulesTimeWindowArrayOutputWithContext(ctx context.Context) GetZIADLPWebRulesTimeWindowArrayOutput {
	return o
}

func (o GetZIADLPWebRulesTimeWindowArrayOutput) Index(i pulumi.IntInput) GetZIADLPWebRulesTimeWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIADLPWebRulesTimeWindow {
		return vs[0].([]GetZIADLPWebRulesTimeWindow)[vs[1].(int)]
	}).(GetZIADLPWebRulesTimeWindowOutput)
}

type GetZIADLPWebRulesUrlCategory struct {
	Extensions map[string]string `pulumi:"extensions"`
	// Identifier that uniquely identifies an entity
	Id int `pulumi:"id"`
	// The DLP policy rule name.
	// rules.
	Name string `pulumi:"name"`
}

// GetZIADLPWebRulesUrlCategoryInput is an input type that accepts GetZIADLPWebRulesUrlCategoryArgs and GetZIADLPWebRulesUrlCategoryOutput values.
// You can construct a concrete instance of `GetZIADLPWebRulesUrlCategoryInput` via:
//
//	GetZIADLPWebRulesUrlCategoryArgs{...}
type GetZIADLPWebRulesUrlCategoryInput interface {
	pulumi.Input

	ToGetZIADLPWebRulesUrlCategoryOutput() GetZIADLPWebRulesUrlCategoryOutput
	ToGetZIADLPWebRulesUrlCategoryOutputWithContext(context.Context) GetZIADLPWebRulesUrlCategoryOutput
}

type GetZIADLPWebRulesUrlCategoryArgs struct {
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// Identifier that uniquely identifies an entity
	Id pulumi.IntInput `pulumi:"id"`
	// The DLP policy rule name.
	// rules.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZIADLPWebRulesUrlCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIADLPWebRulesUrlCategory)(nil)).Elem()
}

func (i GetZIADLPWebRulesUrlCategoryArgs) ToGetZIADLPWebRulesUrlCategoryOutput() GetZIADLPWebRulesUrlCategoryOutput {
	return i.ToGetZIADLPWebRulesUrlCategoryOutputWithContext(context.Background())
}

func (i GetZIADLPWebRulesUrlCategoryArgs) ToGetZIADLPWebRulesUrlCategoryOutputWithContext(ctx context.Context) GetZIADLPWebRulesUrlCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIADLPWebRulesUrlCategoryOutput)
}

// GetZIADLPWebRulesUrlCategoryArrayInput is an input type that accepts GetZIADLPWebRulesUrlCategoryArray and GetZIADLPWebRulesUrlCategoryArrayOutput values.
// You can construct a concrete instance of `GetZIADLPWebRulesUrlCategoryArrayInput` via:
//
//	GetZIADLPWebRulesUrlCategoryArray{ GetZIADLPWebRulesUrlCategoryArgs{...} }
type GetZIADLPWebRulesUrlCategoryArrayInput interface {
	pulumi.Input

	ToGetZIADLPWebRulesUrlCategoryArrayOutput() GetZIADLPWebRulesUrlCategoryArrayOutput
	ToGetZIADLPWebRulesUrlCategoryArrayOutputWithContext(context.Context) GetZIADLPWebRulesUrlCategoryArrayOutput
}

type GetZIADLPWebRulesUrlCategoryArray []GetZIADLPWebRulesUrlCategoryInput

func (GetZIADLPWebRulesUrlCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIADLPWebRulesUrlCategory)(nil)).Elem()
}

func (i GetZIADLPWebRulesUrlCategoryArray) ToGetZIADLPWebRulesUrlCategoryArrayOutput() GetZIADLPWebRulesUrlCategoryArrayOutput {
	return i.ToGetZIADLPWebRulesUrlCategoryArrayOutputWithContext(context.Background())
}

func (i GetZIADLPWebRulesUrlCategoryArray) ToGetZIADLPWebRulesUrlCategoryArrayOutputWithContext(ctx context.Context) GetZIADLPWebRulesUrlCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIADLPWebRulesUrlCategoryArrayOutput)
}

type GetZIADLPWebRulesUrlCategoryOutput struct{ *pulumi.OutputState }

func (GetZIADLPWebRulesUrlCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIADLPWebRulesUrlCategory)(nil)).Elem()
}

func (o GetZIADLPWebRulesUrlCategoryOutput) ToGetZIADLPWebRulesUrlCategoryOutput() GetZIADLPWebRulesUrlCategoryOutput {
	return o
}

func (o GetZIADLPWebRulesUrlCategoryOutput) ToGetZIADLPWebRulesUrlCategoryOutputWithContext(ctx context.Context) GetZIADLPWebRulesUrlCategoryOutput {
	return o
}

func (o GetZIADLPWebRulesUrlCategoryOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZIADLPWebRulesUrlCategory) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// Identifier that uniquely identifies an entity
func (o GetZIADLPWebRulesUrlCategoryOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIADLPWebRulesUrlCategory) int { return v.Id }).(pulumi.IntOutput)
}

// The DLP policy rule name.
// rules.
func (o GetZIADLPWebRulesUrlCategoryOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIADLPWebRulesUrlCategory) string { return v.Name }).(pulumi.StringOutput)
}

type GetZIADLPWebRulesUrlCategoryArrayOutput struct{ *pulumi.OutputState }

func (GetZIADLPWebRulesUrlCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIADLPWebRulesUrlCategory)(nil)).Elem()
}

func (o GetZIADLPWebRulesUrlCategoryArrayOutput) ToGetZIADLPWebRulesUrlCategoryArrayOutput() GetZIADLPWebRulesUrlCategoryArrayOutput {
	return o
}

func (o GetZIADLPWebRulesUrlCategoryArrayOutput) ToGetZIADLPWebRulesUrlCategoryArrayOutputWithContext(ctx context.Context) GetZIADLPWebRulesUrlCategoryArrayOutput {
	return o
}

func (o GetZIADLPWebRulesUrlCategoryArrayOutput) Index(i pulumi.IntInput) GetZIADLPWebRulesUrlCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIADLPWebRulesUrlCategory {
		return vs[0].([]GetZIADLPWebRulesUrlCategory)[vs[1].(int)]
	}).(GetZIADLPWebRulesUrlCategoryOutput)
}

type GetZIADLPWebRulesUser struct {
	Extensions map[string]string `pulumi:"extensions"`
	// Identifier that uniquely identifies an entity
	Id int `pulumi:"id"`
	// The DLP policy rule name.
	// rules.
	Name string `pulumi:"name"`
}

// GetZIADLPWebRulesUserInput is an input type that accepts GetZIADLPWebRulesUserArgs and GetZIADLPWebRulesUserOutput values.
// You can construct a concrete instance of `GetZIADLPWebRulesUserInput` via:
//
//	GetZIADLPWebRulesUserArgs{...}
type GetZIADLPWebRulesUserInput interface {
	pulumi.Input

	ToGetZIADLPWebRulesUserOutput() GetZIADLPWebRulesUserOutput
	ToGetZIADLPWebRulesUserOutputWithContext(context.Context) GetZIADLPWebRulesUserOutput
}

type GetZIADLPWebRulesUserArgs struct {
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// Identifier that uniquely identifies an entity
	Id pulumi.IntInput `pulumi:"id"`
	// The DLP policy rule name.
	// rules.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZIADLPWebRulesUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIADLPWebRulesUser)(nil)).Elem()
}

func (i GetZIADLPWebRulesUserArgs) ToGetZIADLPWebRulesUserOutput() GetZIADLPWebRulesUserOutput {
	return i.ToGetZIADLPWebRulesUserOutputWithContext(context.Background())
}

func (i GetZIADLPWebRulesUserArgs) ToGetZIADLPWebRulesUserOutputWithContext(ctx context.Context) GetZIADLPWebRulesUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIADLPWebRulesUserOutput)
}

// GetZIADLPWebRulesUserArrayInput is an input type that accepts GetZIADLPWebRulesUserArray and GetZIADLPWebRulesUserArrayOutput values.
// You can construct a concrete instance of `GetZIADLPWebRulesUserArrayInput` via:
//
//	GetZIADLPWebRulesUserArray{ GetZIADLPWebRulesUserArgs{...} }
type GetZIADLPWebRulesUserArrayInput interface {
	pulumi.Input

	ToGetZIADLPWebRulesUserArrayOutput() GetZIADLPWebRulesUserArrayOutput
	ToGetZIADLPWebRulesUserArrayOutputWithContext(context.Context) GetZIADLPWebRulesUserArrayOutput
}

type GetZIADLPWebRulesUserArray []GetZIADLPWebRulesUserInput

func (GetZIADLPWebRulesUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIADLPWebRulesUser)(nil)).Elem()
}

func (i GetZIADLPWebRulesUserArray) ToGetZIADLPWebRulesUserArrayOutput() GetZIADLPWebRulesUserArrayOutput {
	return i.ToGetZIADLPWebRulesUserArrayOutputWithContext(context.Background())
}

func (i GetZIADLPWebRulesUserArray) ToGetZIADLPWebRulesUserArrayOutputWithContext(ctx context.Context) GetZIADLPWebRulesUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIADLPWebRulesUserArrayOutput)
}

type GetZIADLPWebRulesUserOutput struct{ *pulumi.OutputState }

func (GetZIADLPWebRulesUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIADLPWebRulesUser)(nil)).Elem()
}

func (o GetZIADLPWebRulesUserOutput) ToGetZIADLPWebRulesUserOutput() GetZIADLPWebRulesUserOutput {
	return o
}

func (o GetZIADLPWebRulesUserOutput) ToGetZIADLPWebRulesUserOutputWithContext(ctx context.Context) GetZIADLPWebRulesUserOutput {
	return o
}

func (o GetZIADLPWebRulesUserOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZIADLPWebRulesUser) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// Identifier that uniquely identifies an entity
func (o GetZIADLPWebRulesUserOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIADLPWebRulesUser) int { return v.Id }).(pulumi.IntOutput)
}

// The DLP policy rule name.
// rules.
func (o GetZIADLPWebRulesUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIADLPWebRulesUser) string { return v.Name }).(pulumi.StringOutput)
}

type GetZIADLPWebRulesUserArrayOutput struct{ *pulumi.OutputState }

func (GetZIADLPWebRulesUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIADLPWebRulesUser)(nil)).Elem()
}

func (o GetZIADLPWebRulesUserArrayOutput) ToGetZIADLPWebRulesUserArrayOutput() GetZIADLPWebRulesUserArrayOutput {
	return o
}

func (o GetZIADLPWebRulesUserArrayOutput) ToGetZIADLPWebRulesUserArrayOutputWithContext(ctx context.Context) GetZIADLPWebRulesUserArrayOutput {
	return o
}

func (o GetZIADLPWebRulesUserArrayOutput) Index(i pulumi.IntInput) GetZIADLPWebRulesUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIADLPWebRulesUser {
		return vs[0].([]GetZIADLPWebRulesUser)[vs[1].(int)]
	}).(GetZIADLPWebRulesUserOutput)
}

type GetZIAFirewallFilteringNetworkServiceGroupsService struct {
	// (String)
	Description string `pulumi:"description"`
	// The ID of the ip source group to be exported.
	Id int `pulumi:"id"`
	// (Bool) - Default: false
	IsNameL10nTag bool `pulumi:"isNameL10nTag"`
	// The name of the ip source group to be exported.
	Name *string `pulumi:"name"`
}

// GetZIAFirewallFilteringNetworkServiceGroupsServiceInput is an input type that accepts GetZIAFirewallFilteringNetworkServiceGroupsServiceArgs and GetZIAFirewallFilteringNetworkServiceGroupsServiceOutput values.
// You can construct a concrete instance of `GetZIAFirewallFilteringNetworkServiceGroupsServiceInput` via:
//
//	GetZIAFirewallFilteringNetworkServiceGroupsServiceArgs{...}
type GetZIAFirewallFilteringNetworkServiceGroupsServiceInput interface {
	pulumi.Input

	ToGetZIAFirewallFilteringNetworkServiceGroupsServiceOutput() GetZIAFirewallFilteringNetworkServiceGroupsServiceOutput
	ToGetZIAFirewallFilteringNetworkServiceGroupsServiceOutputWithContext(context.Context) GetZIAFirewallFilteringNetworkServiceGroupsServiceOutput
}

type GetZIAFirewallFilteringNetworkServiceGroupsServiceArgs struct {
	// (String)
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the ip source group to be exported.
	Id pulumi.IntInput `pulumi:"id"`
	// (Bool) - Default: false
	IsNameL10nTag pulumi.BoolInput `pulumi:"isNameL10nTag"`
	// The name of the ip source group to be exported.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (GetZIAFirewallFilteringNetworkServiceGroupsServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAFirewallFilteringNetworkServiceGroupsService)(nil)).Elem()
}

func (i GetZIAFirewallFilteringNetworkServiceGroupsServiceArgs) ToGetZIAFirewallFilteringNetworkServiceGroupsServiceOutput() GetZIAFirewallFilteringNetworkServiceGroupsServiceOutput {
	return i.ToGetZIAFirewallFilteringNetworkServiceGroupsServiceOutputWithContext(context.Background())
}

func (i GetZIAFirewallFilteringNetworkServiceGroupsServiceArgs) ToGetZIAFirewallFilteringNetworkServiceGroupsServiceOutputWithContext(ctx context.Context) GetZIAFirewallFilteringNetworkServiceGroupsServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAFirewallFilteringNetworkServiceGroupsServiceOutput)
}

// GetZIAFirewallFilteringNetworkServiceGroupsServiceArrayInput is an input type that accepts GetZIAFirewallFilteringNetworkServiceGroupsServiceArray and GetZIAFirewallFilteringNetworkServiceGroupsServiceArrayOutput values.
// You can construct a concrete instance of `GetZIAFirewallFilteringNetworkServiceGroupsServiceArrayInput` via:
//
//	GetZIAFirewallFilteringNetworkServiceGroupsServiceArray{ GetZIAFirewallFilteringNetworkServiceGroupsServiceArgs{...} }
type GetZIAFirewallFilteringNetworkServiceGroupsServiceArrayInput interface {
	pulumi.Input

	ToGetZIAFirewallFilteringNetworkServiceGroupsServiceArrayOutput() GetZIAFirewallFilteringNetworkServiceGroupsServiceArrayOutput
	ToGetZIAFirewallFilteringNetworkServiceGroupsServiceArrayOutputWithContext(context.Context) GetZIAFirewallFilteringNetworkServiceGroupsServiceArrayOutput
}

type GetZIAFirewallFilteringNetworkServiceGroupsServiceArray []GetZIAFirewallFilteringNetworkServiceGroupsServiceInput

func (GetZIAFirewallFilteringNetworkServiceGroupsServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAFirewallFilteringNetworkServiceGroupsService)(nil)).Elem()
}

func (i GetZIAFirewallFilteringNetworkServiceGroupsServiceArray) ToGetZIAFirewallFilteringNetworkServiceGroupsServiceArrayOutput() GetZIAFirewallFilteringNetworkServiceGroupsServiceArrayOutput {
	return i.ToGetZIAFirewallFilteringNetworkServiceGroupsServiceArrayOutputWithContext(context.Background())
}

func (i GetZIAFirewallFilteringNetworkServiceGroupsServiceArray) ToGetZIAFirewallFilteringNetworkServiceGroupsServiceArrayOutputWithContext(ctx context.Context) GetZIAFirewallFilteringNetworkServiceGroupsServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAFirewallFilteringNetworkServiceGroupsServiceArrayOutput)
}

type GetZIAFirewallFilteringNetworkServiceGroupsServiceOutput struct{ *pulumi.OutputState }

func (GetZIAFirewallFilteringNetworkServiceGroupsServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAFirewallFilteringNetworkServiceGroupsService)(nil)).Elem()
}

func (o GetZIAFirewallFilteringNetworkServiceGroupsServiceOutput) ToGetZIAFirewallFilteringNetworkServiceGroupsServiceOutput() GetZIAFirewallFilteringNetworkServiceGroupsServiceOutput {
	return o
}

func (o GetZIAFirewallFilteringNetworkServiceGroupsServiceOutput) ToGetZIAFirewallFilteringNetworkServiceGroupsServiceOutputWithContext(ctx context.Context) GetZIAFirewallFilteringNetworkServiceGroupsServiceOutput {
	return o
}

// (String)
func (o GetZIAFirewallFilteringNetworkServiceGroupsServiceOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIAFirewallFilteringNetworkServiceGroupsService) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the ip source group to be exported.
func (o GetZIAFirewallFilteringNetworkServiceGroupsServiceOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIAFirewallFilteringNetworkServiceGroupsService) int { return v.Id }).(pulumi.IntOutput)
}

// (Bool) - Default: false
func (o GetZIAFirewallFilteringNetworkServiceGroupsServiceOutput) IsNameL10nTag() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZIAFirewallFilteringNetworkServiceGroupsService) bool { return v.IsNameL10nTag }).(pulumi.BoolOutput)
}

// The name of the ip source group to be exported.
func (o GetZIAFirewallFilteringNetworkServiceGroupsServiceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZIAFirewallFilteringNetworkServiceGroupsService) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type GetZIAFirewallFilteringNetworkServiceGroupsServiceArrayOutput struct{ *pulumi.OutputState }

func (GetZIAFirewallFilteringNetworkServiceGroupsServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAFirewallFilteringNetworkServiceGroupsService)(nil)).Elem()
}

func (o GetZIAFirewallFilteringNetworkServiceGroupsServiceArrayOutput) ToGetZIAFirewallFilteringNetworkServiceGroupsServiceArrayOutput() GetZIAFirewallFilteringNetworkServiceGroupsServiceArrayOutput {
	return o
}

func (o GetZIAFirewallFilteringNetworkServiceGroupsServiceArrayOutput) ToGetZIAFirewallFilteringNetworkServiceGroupsServiceArrayOutputWithContext(ctx context.Context) GetZIAFirewallFilteringNetworkServiceGroupsServiceArrayOutput {
	return o
}

func (o GetZIAFirewallFilteringNetworkServiceGroupsServiceArrayOutput) Index(i pulumi.IntInput) GetZIAFirewallFilteringNetworkServiceGroupsServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIAFirewallFilteringNetworkServiceGroupsService {
		return vs[0].([]GetZIAFirewallFilteringNetworkServiceGroupsService)[vs[1].(int)]
	}).(GetZIAFirewallFilteringNetworkServiceGroupsServiceOutput)
}

type GetZIAFirewallFilteringNetworkServicesDestTcpPort struct {
	// (Number)
	End int `pulumi:"end"`
	// (Number)
	Start int `pulumi:"start"`
}

// GetZIAFirewallFilteringNetworkServicesDestTcpPortInput is an input type that accepts GetZIAFirewallFilteringNetworkServicesDestTcpPortArgs and GetZIAFirewallFilteringNetworkServicesDestTcpPortOutput values.
// You can construct a concrete instance of `GetZIAFirewallFilteringNetworkServicesDestTcpPortInput` via:
//
//	GetZIAFirewallFilteringNetworkServicesDestTcpPortArgs{...}
type GetZIAFirewallFilteringNetworkServicesDestTcpPortInput interface {
	pulumi.Input

	ToGetZIAFirewallFilteringNetworkServicesDestTcpPortOutput() GetZIAFirewallFilteringNetworkServicesDestTcpPortOutput
	ToGetZIAFirewallFilteringNetworkServicesDestTcpPortOutputWithContext(context.Context) GetZIAFirewallFilteringNetworkServicesDestTcpPortOutput
}

type GetZIAFirewallFilteringNetworkServicesDestTcpPortArgs struct {
	// (Number)
	End pulumi.IntInput `pulumi:"end"`
	// (Number)
	Start pulumi.IntInput `pulumi:"start"`
}

func (GetZIAFirewallFilteringNetworkServicesDestTcpPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAFirewallFilteringNetworkServicesDestTcpPort)(nil)).Elem()
}

func (i GetZIAFirewallFilteringNetworkServicesDestTcpPortArgs) ToGetZIAFirewallFilteringNetworkServicesDestTcpPortOutput() GetZIAFirewallFilteringNetworkServicesDestTcpPortOutput {
	return i.ToGetZIAFirewallFilteringNetworkServicesDestTcpPortOutputWithContext(context.Background())
}

func (i GetZIAFirewallFilteringNetworkServicesDestTcpPortArgs) ToGetZIAFirewallFilteringNetworkServicesDestTcpPortOutputWithContext(ctx context.Context) GetZIAFirewallFilteringNetworkServicesDestTcpPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAFirewallFilteringNetworkServicesDestTcpPortOutput)
}

// GetZIAFirewallFilteringNetworkServicesDestTcpPortArrayInput is an input type that accepts GetZIAFirewallFilteringNetworkServicesDestTcpPortArray and GetZIAFirewallFilteringNetworkServicesDestTcpPortArrayOutput values.
// You can construct a concrete instance of `GetZIAFirewallFilteringNetworkServicesDestTcpPortArrayInput` via:
//
//	GetZIAFirewallFilteringNetworkServicesDestTcpPortArray{ GetZIAFirewallFilteringNetworkServicesDestTcpPortArgs{...} }
type GetZIAFirewallFilteringNetworkServicesDestTcpPortArrayInput interface {
	pulumi.Input

	ToGetZIAFirewallFilteringNetworkServicesDestTcpPortArrayOutput() GetZIAFirewallFilteringNetworkServicesDestTcpPortArrayOutput
	ToGetZIAFirewallFilteringNetworkServicesDestTcpPortArrayOutputWithContext(context.Context) GetZIAFirewallFilteringNetworkServicesDestTcpPortArrayOutput
}

type GetZIAFirewallFilteringNetworkServicesDestTcpPortArray []GetZIAFirewallFilteringNetworkServicesDestTcpPortInput

func (GetZIAFirewallFilteringNetworkServicesDestTcpPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAFirewallFilteringNetworkServicesDestTcpPort)(nil)).Elem()
}

func (i GetZIAFirewallFilteringNetworkServicesDestTcpPortArray) ToGetZIAFirewallFilteringNetworkServicesDestTcpPortArrayOutput() GetZIAFirewallFilteringNetworkServicesDestTcpPortArrayOutput {
	return i.ToGetZIAFirewallFilteringNetworkServicesDestTcpPortArrayOutputWithContext(context.Background())
}

func (i GetZIAFirewallFilteringNetworkServicesDestTcpPortArray) ToGetZIAFirewallFilteringNetworkServicesDestTcpPortArrayOutputWithContext(ctx context.Context) GetZIAFirewallFilteringNetworkServicesDestTcpPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAFirewallFilteringNetworkServicesDestTcpPortArrayOutput)
}

type GetZIAFirewallFilteringNetworkServicesDestTcpPortOutput struct{ *pulumi.OutputState }

func (GetZIAFirewallFilteringNetworkServicesDestTcpPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAFirewallFilteringNetworkServicesDestTcpPort)(nil)).Elem()
}

func (o GetZIAFirewallFilteringNetworkServicesDestTcpPortOutput) ToGetZIAFirewallFilteringNetworkServicesDestTcpPortOutput() GetZIAFirewallFilteringNetworkServicesDestTcpPortOutput {
	return o
}

func (o GetZIAFirewallFilteringNetworkServicesDestTcpPortOutput) ToGetZIAFirewallFilteringNetworkServicesDestTcpPortOutputWithContext(ctx context.Context) GetZIAFirewallFilteringNetworkServicesDestTcpPortOutput {
	return o
}

// (Number)
func (o GetZIAFirewallFilteringNetworkServicesDestTcpPortOutput) End() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIAFirewallFilteringNetworkServicesDestTcpPort) int { return v.End }).(pulumi.IntOutput)
}

// (Number)
func (o GetZIAFirewallFilteringNetworkServicesDestTcpPortOutput) Start() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIAFirewallFilteringNetworkServicesDestTcpPort) int { return v.Start }).(pulumi.IntOutput)
}

type GetZIAFirewallFilteringNetworkServicesDestTcpPortArrayOutput struct{ *pulumi.OutputState }

func (GetZIAFirewallFilteringNetworkServicesDestTcpPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAFirewallFilteringNetworkServicesDestTcpPort)(nil)).Elem()
}

func (o GetZIAFirewallFilteringNetworkServicesDestTcpPortArrayOutput) ToGetZIAFirewallFilteringNetworkServicesDestTcpPortArrayOutput() GetZIAFirewallFilteringNetworkServicesDestTcpPortArrayOutput {
	return o
}

func (o GetZIAFirewallFilteringNetworkServicesDestTcpPortArrayOutput) ToGetZIAFirewallFilteringNetworkServicesDestTcpPortArrayOutputWithContext(ctx context.Context) GetZIAFirewallFilteringNetworkServicesDestTcpPortArrayOutput {
	return o
}

func (o GetZIAFirewallFilteringNetworkServicesDestTcpPortArrayOutput) Index(i pulumi.IntInput) GetZIAFirewallFilteringNetworkServicesDestTcpPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIAFirewallFilteringNetworkServicesDestTcpPort {
		return vs[0].([]GetZIAFirewallFilteringNetworkServicesDestTcpPort)[vs[1].(int)]
	}).(GetZIAFirewallFilteringNetworkServicesDestTcpPortOutput)
}

type GetZIAFirewallFilteringNetworkServicesDestUdpPort struct {
	// (Number)
	End int `pulumi:"end"`
	// (Number)
	Start int `pulumi:"start"`
}

// GetZIAFirewallFilteringNetworkServicesDestUdpPortInput is an input type that accepts GetZIAFirewallFilteringNetworkServicesDestUdpPortArgs and GetZIAFirewallFilteringNetworkServicesDestUdpPortOutput values.
// You can construct a concrete instance of `GetZIAFirewallFilteringNetworkServicesDestUdpPortInput` via:
//
//	GetZIAFirewallFilteringNetworkServicesDestUdpPortArgs{...}
type GetZIAFirewallFilteringNetworkServicesDestUdpPortInput interface {
	pulumi.Input

	ToGetZIAFirewallFilteringNetworkServicesDestUdpPortOutput() GetZIAFirewallFilteringNetworkServicesDestUdpPortOutput
	ToGetZIAFirewallFilteringNetworkServicesDestUdpPortOutputWithContext(context.Context) GetZIAFirewallFilteringNetworkServicesDestUdpPortOutput
}

type GetZIAFirewallFilteringNetworkServicesDestUdpPortArgs struct {
	// (Number)
	End pulumi.IntInput `pulumi:"end"`
	// (Number)
	Start pulumi.IntInput `pulumi:"start"`
}

func (GetZIAFirewallFilteringNetworkServicesDestUdpPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAFirewallFilteringNetworkServicesDestUdpPort)(nil)).Elem()
}

func (i GetZIAFirewallFilteringNetworkServicesDestUdpPortArgs) ToGetZIAFirewallFilteringNetworkServicesDestUdpPortOutput() GetZIAFirewallFilteringNetworkServicesDestUdpPortOutput {
	return i.ToGetZIAFirewallFilteringNetworkServicesDestUdpPortOutputWithContext(context.Background())
}

func (i GetZIAFirewallFilteringNetworkServicesDestUdpPortArgs) ToGetZIAFirewallFilteringNetworkServicesDestUdpPortOutputWithContext(ctx context.Context) GetZIAFirewallFilteringNetworkServicesDestUdpPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAFirewallFilteringNetworkServicesDestUdpPortOutput)
}

// GetZIAFirewallFilteringNetworkServicesDestUdpPortArrayInput is an input type that accepts GetZIAFirewallFilteringNetworkServicesDestUdpPortArray and GetZIAFirewallFilteringNetworkServicesDestUdpPortArrayOutput values.
// You can construct a concrete instance of `GetZIAFirewallFilteringNetworkServicesDestUdpPortArrayInput` via:
//
//	GetZIAFirewallFilteringNetworkServicesDestUdpPortArray{ GetZIAFirewallFilteringNetworkServicesDestUdpPortArgs{...} }
type GetZIAFirewallFilteringNetworkServicesDestUdpPortArrayInput interface {
	pulumi.Input

	ToGetZIAFirewallFilteringNetworkServicesDestUdpPortArrayOutput() GetZIAFirewallFilteringNetworkServicesDestUdpPortArrayOutput
	ToGetZIAFirewallFilteringNetworkServicesDestUdpPortArrayOutputWithContext(context.Context) GetZIAFirewallFilteringNetworkServicesDestUdpPortArrayOutput
}

type GetZIAFirewallFilteringNetworkServicesDestUdpPortArray []GetZIAFirewallFilteringNetworkServicesDestUdpPortInput

func (GetZIAFirewallFilteringNetworkServicesDestUdpPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAFirewallFilteringNetworkServicesDestUdpPort)(nil)).Elem()
}

func (i GetZIAFirewallFilteringNetworkServicesDestUdpPortArray) ToGetZIAFirewallFilteringNetworkServicesDestUdpPortArrayOutput() GetZIAFirewallFilteringNetworkServicesDestUdpPortArrayOutput {
	return i.ToGetZIAFirewallFilteringNetworkServicesDestUdpPortArrayOutputWithContext(context.Background())
}

func (i GetZIAFirewallFilteringNetworkServicesDestUdpPortArray) ToGetZIAFirewallFilteringNetworkServicesDestUdpPortArrayOutputWithContext(ctx context.Context) GetZIAFirewallFilteringNetworkServicesDestUdpPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAFirewallFilteringNetworkServicesDestUdpPortArrayOutput)
}

type GetZIAFirewallFilteringNetworkServicesDestUdpPortOutput struct{ *pulumi.OutputState }

func (GetZIAFirewallFilteringNetworkServicesDestUdpPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAFirewallFilteringNetworkServicesDestUdpPort)(nil)).Elem()
}

func (o GetZIAFirewallFilteringNetworkServicesDestUdpPortOutput) ToGetZIAFirewallFilteringNetworkServicesDestUdpPortOutput() GetZIAFirewallFilteringNetworkServicesDestUdpPortOutput {
	return o
}

func (o GetZIAFirewallFilteringNetworkServicesDestUdpPortOutput) ToGetZIAFirewallFilteringNetworkServicesDestUdpPortOutputWithContext(ctx context.Context) GetZIAFirewallFilteringNetworkServicesDestUdpPortOutput {
	return o
}

// (Number)
func (o GetZIAFirewallFilteringNetworkServicesDestUdpPortOutput) End() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIAFirewallFilteringNetworkServicesDestUdpPort) int { return v.End }).(pulumi.IntOutput)
}

// (Number)
func (o GetZIAFirewallFilteringNetworkServicesDestUdpPortOutput) Start() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIAFirewallFilteringNetworkServicesDestUdpPort) int { return v.Start }).(pulumi.IntOutput)
}

type GetZIAFirewallFilteringNetworkServicesDestUdpPortArrayOutput struct{ *pulumi.OutputState }

func (GetZIAFirewallFilteringNetworkServicesDestUdpPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAFirewallFilteringNetworkServicesDestUdpPort)(nil)).Elem()
}

func (o GetZIAFirewallFilteringNetworkServicesDestUdpPortArrayOutput) ToGetZIAFirewallFilteringNetworkServicesDestUdpPortArrayOutput() GetZIAFirewallFilteringNetworkServicesDestUdpPortArrayOutput {
	return o
}

func (o GetZIAFirewallFilteringNetworkServicesDestUdpPortArrayOutput) ToGetZIAFirewallFilteringNetworkServicesDestUdpPortArrayOutputWithContext(ctx context.Context) GetZIAFirewallFilteringNetworkServicesDestUdpPortArrayOutput {
	return o
}

func (o GetZIAFirewallFilteringNetworkServicesDestUdpPortArrayOutput) Index(i pulumi.IntInput) GetZIAFirewallFilteringNetworkServicesDestUdpPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIAFirewallFilteringNetworkServicesDestUdpPort {
		return vs[0].([]GetZIAFirewallFilteringNetworkServicesDestUdpPort)[vs[1].(int)]
	}).(GetZIAFirewallFilteringNetworkServicesDestUdpPortOutput)
}

type GetZIAFirewallFilteringNetworkServicesSrcTcpPort struct {
	// (Number)
	End int `pulumi:"end"`
	// (Number)
	Start int `pulumi:"start"`
}

// GetZIAFirewallFilteringNetworkServicesSrcTcpPortInput is an input type that accepts GetZIAFirewallFilteringNetworkServicesSrcTcpPortArgs and GetZIAFirewallFilteringNetworkServicesSrcTcpPortOutput values.
// You can construct a concrete instance of `GetZIAFirewallFilteringNetworkServicesSrcTcpPortInput` via:
//
//	GetZIAFirewallFilteringNetworkServicesSrcTcpPortArgs{...}
type GetZIAFirewallFilteringNetworkServicesSrcTcpPortInput interface {
	pulumi.Input

	ToGetZIAFirewallFilteringNetworkServicesSrcTcpPortOutput() GetZIAFirewallFilteringNetworkServicesSrcTcpPortOutput
	ToGetZIAFirewallFilteringNetworkServicesSrcTcpPortOutputWithContext(context.Context) GetZIAFirewallFilteringNetworkServicesSrcTcpPortOutput
}

type GetZIAFirewallFilteringNetworkServicesSrcTcpPortArgs struct {
	// (Number)
	End pulumi.IntInput `pulumi:"end"`
	// (Number)
	Start pulumi.IntInput `pulumi:"start"`
}

func (GetZIAFirewallFilteringNetworkServicesSrcTcpPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAFirewallFilteringNetworkServicesSrcTcpPort)(nil)).Elem()
}

func (i GetZIAFirewallFilteringNetworkServicesSrcTcpPortArgs) ToGetZIAFirewallFilteringNetworkServicesSrcTcpPortOutput() GetZIAFirewallFilteringNetworkServicesSrcTcpPortOutput {
	return i.ToGetZIAFirewallFilteringNetworkServicesSrcTcpPortOutputWithContext(context.Background())
}

func (i GetZIAFirewallFilteringNetworkServicesSrcTcpPortArgs) ToGetZIAFirewallFilteringNetworkServicesSrcTcpPortOutputWithContext(ctx context.Context) GetZIAFirewallFilteringNetworkServicesSrcTcpPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAFirewallFilteringNetworkServicesSrcTcpPortOutput)
}

// GetZIAFirewallFilteringNetworkServicesSrcTcpPortArrayInput is an input type that accepts GetZIAFirewallFilteringNetworkServicesSrcTcpPortArray and GetZIAFirewallFilteringNetworkServicesSrcTcpPortArrayOutput values.
// You can construct a concrete instance of `GetZIAFirewallFilteringNetworkServicesSrcTcpPortArrayInput` via:
//
//	GetZIAFirewallFilteringNetworkServicesSrcTcpPortArray{ GetZIAFirewallFilteringNetworkServicesSrcTcpPortArgs{...} }
type GetZIAFirewallFilteringNetworkServicesSrcTcpPortArrayInput interface {
	pulumi.Input

	ToGetZIAFirewallFilteringNetworkServicesSrcTcpPortArrayOutput() GetZIAFirewallFilteringNetworkServicesSrcTcpPortArrayOutput
	ToGetZIAFirewallFilteringNetworkServicesSrcTcpPortArrayOutputWithContext(context.Context) GetZIAFirewallFilteringNetworkServicesSrcTcpPortArrayOutput
}

type GetZIAFirewallFilteringNetworkServicesSrcTcpPortArray []GetZIAFirewallFilteringNetworkServicesSrcTcpPortInput

func (GetZIAFirewallFilteringNetworkServicesSrcTcpPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAFirewallFilteringNetworkServicesSrcTcpPort)(nil)).Elem()
}

func (i GetZIAFirewallFilteringNetworkServicesSrcTcpPortArray) ToGetZIAFirewallFilteringNetworkServicesSrcTcpPortArrayOutput() GetZIAFirewallFilteringNetworkServicesSrcTcpPortArrayOutput {
	return i.ToGetZIAFirewallFilteringNetworkServicesSrcTcpPortArrayOutputWithContext(context.Background())
}

func (i GetZIAFirewallFilteringNetworkServicesSrcTcpPortArray) ToGetZIAFirewallFilteringNetworkServicesSrcTcpPortArrayOutputWithContext(ctx context.Context) GetZIAFirewallFilteringNetworkServicesSrcTcpPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAFirewallFilteringNetworkServicesSrcTcpPortArrayOutput)
}

type GetZIAFirewallFilteringNetworkServicesSrcTcpPortOutput struct{ *pulumi.OutputState }

func (GetZIAFirewallFilteringNetworkServicesSrcTcpPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAFirewallFilteringNetworkServicesSrcTcpPort)(nil)).Elem()
}

func (o GetZIAFirewallFilteringNetworkServicesSrcTcpPortOutput) ToGetZIAFirewallFilteringNetworkServicesSrcTcpPortOutput() GetZIAFirewallFilteringNetworkServicesSrcTcpPortOutput {
	return o
}

func (o GetZIAFirewallFilteringNetworkServicesSrcTcpPortOutput) ToGetZIAFirewallFilteringNetworkServicesSrcTcpPortOutputWithContext(ctx context.Context) GetZIAFirewallFilteringNetworkServicesSrcTcpPortOutput {
	return o
}

// (Number)
func (o GetZIAFirewallFilteringNetworkServicesSrcTcpPortOutput) End() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIAFirewallFilteringNetworkServicesSrcTcpPort) int { return v.End }).(pulumi.IntOutput)
}

// (Number)
func (o GetZIAFirewallFilteringNetworkServicesSrcTcpPortOutput) Start() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIAFirewallFilteringNetworkServicesSrcTcpPort) int { return v.Start }).(pulumi.IntOutput)
}

type GetZIAFirewallFilteringNetworkServicesSrcTcpPortArrayOutput struct{ *pulumi.OutputState }

func (GetZIAFirewallFilteringNetworkServicesSrcTcpPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAFirewallFilteringNetworkServicesSrcTcpPort)(nil)).Elem()
}

func (o GetZIAFirewallFilteringNetworkServicesSrcTcpPortArrayOutput) ToGetZIAFirewallFilteringNetworkServicesSrcTcpPortArrayOutput() GetZIAFirewallFilteringNetworkServicesSrcTcpPortArrayOutput {
	return o
}

func (o GetZIAFirewallFilteringNetworkServicesSrcTcpPortArrayOutput) ToGetZIAFirewallFilteringNetworkServicesSrcTcpPortArrayOutputWithContext(ctx context.Context) GetZIAFirewallFilteringNetworkServicesSrcTcpPortArrayOutput {
	return o
}

func (o GetZIAFirewallFilteringNetworkServicesSrcTcpPortArrayOutput) Index(i pulumi.IntInput) GetZIAFirewallFilteringNetworkServicesSrcTcpPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIAFirewallFilteringNetworkServicesSrcTcpPort {
		return vs[0].([]GetZIAFirewallFilteringNetworkServicesSrcTcpPort)[vs[1].(int)]
	}).(GetZIAFirewallFilteringNetworkServicesSrcTcpPortOutput)
}

type GetZIAFirewallFilteringNetworkServicesSrcUdpPort struct {
	// (Number)
	End int `pulumi:"end"`
	// (Number)
	Start int `pulumi:"start"`
}

// GetZIAFirewallFilteringNetworkServicesSrcUdpPortInput is an input type that accepts GetZIAFirewallFilteringNetworkServicesSrcUdpPortArgs and GetZIAFirewallFilteringNetworkServicesSrcUdpPortOutput values.
// You can construct a concrete instance of `GetZIAFirewallFilteringNetworkServicesSrcUdpPortInput` via:
//
//	GetZIAFirewallFilteringNetworkServicesSrcUdpPortArgs{...}
type GetZIAFirewallFilteringNetworkServicesSrcUdpPortInput interface {
	pulumi.Input

	ToGetZIAFirewallFilteringNetworkServicesSrcUdpPortOutput() GetZIAFirewallFilteringNetworkServicesSrcUdpPortOutput
	ToGetZIAFirewallFilteringNetworkServicesSrcUdpPortOutputWithContext(context.Context) GetZIAFirewallFilteringNetworkServicesSrcUdpPortOutput
}

type GetZIAFirewallFilteringNetworkServicesSrcUdpPortArgs struct {
	// (Number)
	End pulumi.IntInput `pulumi:"end"`
	// (Number)
	Start pulumi.IntInput `pulumi:"start"`
}

func (GetZIAFirewallFilteringNetworkServicesSrcUdpPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAFirewallFilteringNetworkServicesSrcUdpPort)(nil)).Elem()
}

func (i GetZIAFirewallFilteringNetworkServicesSrcUdpPortArgs) ToGetZIAFirewallFilteringNetworkServicesSrcUdpPortOutput() GetZIAFirewallFilteringNetworkServicesSrcUdpPortOutput {
	return i.ToGetZIAFirewallFilteringNetworkServicesSrcUdpPortOutputWithContext(context.Background())
}

func (i GetZIAFirewallFilteringNetworkServicesSrcUdpPortArgs) ToGetZIAFirewallFilteringNetworkServicesSrcUdpPortOutputWithContext(ctx context.Context) GetZIAFirewallFilteringNetworkServicesSrcUdpPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAFirewallFilteringNetworkServicesSrcUdpPortOutput)
}

// GetZIAFirewallFilteringNetworkServicesSrcUdpPortArrayInput is an input type that accepts GetZIAFirewallFilteringNetworkServicesSrcUdpPortArray and GetZIAFirewallFilteringNetworkServicesSrcUdpPortArrayOutput values.
// You can construct a concrete instance of `GetZIAFirewallFilteringNetworkServicesSrcUdpPortArrayInput` via:
//
//	GetZIAFirewallFilteringNetworkServicesSrcUdpPortArray{ GetZIAFirewallFilteringNetworkServicesSrcUdpPortArgs{...} }
type GetZIAFirewallFilteringNetworkServicesSrcUdpPortArrayInput interface {
	pulumi.Input

	ToGetZIAFirewallFilteringNetworkServicesSrcUdpPortArrayOutput() GetZIAFirewallFilteringNetworkServicesSrcUdpPortArrayOutput
	ToGetZIAFirewallFilteringNetworkServicesSrcUdpPortArrayOutputWithContext(context.Context) GetZIAFirewallFilteringNetworkServicesSrcUdpPortArrayOutput
}

type GetZIAFirewallFilteringNetworkServicesSrcUdpPortArray []GetZIAFirewallFilteringNetworkServicesSrcUdpPortInput

func (GetZIAFirewallFilteringNetworkServicesSrcUdpPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAFirewallFilteringNetworkServicesSrcUdpPort)(nil)).Elem()
}

func (i GetZIAFirewallFilteringNetworkServicesSrcUdpPortArray) ToGetZIAFirewallFilteringNetworkServicesSrcUdpPortArrayOutput() GetZIAFirewallFilteringNetworkServicesSrcUdpPortArrayOutput {
	return i.ToGetZIAFirewallFilteringNetworkServicesSrcUdpPortArrayOutputWithContext(context.Background())
}

func (i GetZIAFirewallFilteringNetworkServicesSrcUdpPortArray) ToGetZIAFirewallFilteringNetworkServicesSrcUdpPortArrayOutputWithContext(ctx context.Context) GetZIAFirewallFilteringNetworkServicesSrcUdpPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAFirewallFilteringNetworkServicesSrcUdpPortArrayOutput)
}

type GetZIAFirewallFilteringNetworkServicesSrcUdpPortOutput struct{ *pulumi.OutputState }

func (GetZIAFirewallFilteringNetworkServicesSrcUdpPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAFirewallFilteringNetworkServicesSrcUdpPort)(nil)).Elem()
}

func (o GetZIAFirewallFilteringNetworkServicesSrcUdpPortOutput) ToGetZIAFirewallFilteringNetworkServicesSrcUdpPortOutput() GetZIAFirewallFilteringNetworkServicesSrcUdpPortOutput {
	return o
}

func (o GetZIAFirewallFilteringNetworkServicesSrcUdpPortOutput) ToGetZIAFirewallFilteringNetworkServicesSrcUdpPortOutputWithContext(ctx context.Context) GetZIAFirewallFilteringNetworkServicesSrcUdpPortOutput {
	return o
}

// (Number)
func (o GetZIAFirewallFilteringNetworkServicesSrcUdpPortOutput) End() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIAFirewallFilteringNetworkServicesSrcUdpPort) int { return v.End }).(pulumi.IntOutput)
}

// (Number)
func (o GetZIAFirewallFilteringNetworkServicesSrcUdpPortOutput) Start() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIAFirewallFilteringNetworkServicesSrcUdpPort) int { return v.Start }).(pulumi.IntOutput)
}

type GetZIAFirewallFilteringNetworkServicesSrcUdpPortArrayOutput struct{ *pulumi.OutputState }

func (GetZIAFirewallFilteringNetworkServicesSrcUdpPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAFirewallFilteringNetworkServicesSrcUdpPort)(nil)).Elem()
}

func (o GetZIAFirewallFilteringNetworkServicesSrcUdpPortArrayOutput) ToGetZIAFirewallFilteringNetworkServicesSrcUdpPortArrayOutput() GetZIAFirewallFilteringNetworkServicesSrcUdpPortArrayOutput {
	return o
}

func (o GetZIAFirewallFilteringNetworkServicesSrcUdpPortArrayOutput) ToGetZIAFirewallFilteringNetworkServicesSrcUdpPortArrayOutputWithContext(ctx context.Context) GetZIAFirewallFilteringNetworkServicesSrcUdpPortArrayOutput {
	return o
}

func (o GetZIAFirewallFilteringNetworkServicesSrcUdpPortArrayOutput) Index(i pulumi.IntInput) GetZIAFirewallFilteringNetworkServicesSrcUdpPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIAFirewallFilteringNetworkServicesSrcUdpPort {
		return vs[0].([]GetZIAFirewallFilteringNetworkServicesSrcUdpPort)[vs[1].(int)]
	}).(GetZIAFirewallFilteringNetworkServicesSrcUdpPortOutput)
}

type GetZIAFirewallFilteringRuleAppService struct {
	// (Map of String)
	Extensions map[string]string `pulumi:"extensions"`
	// Unique identifier for the Firewall Filtering policy rule
	Id int `pulumi:"id"`
	// Name of the Firewall Filtering policy rule
	Name string `pulumi:"name"`
}

// GetZIAFirewallFilteringRuleAppServiceInput is an input type that accepts GetZIAFirewallFilteringRuleAppServiceArgs and GetZIAFirewallFilteringRuleAppServiceOutput values.
// You can construct a concrete instance of `GetZIAFirewallFilteringRuleAppServiceInput` via:
//
//	GetZIAFirewallFilteringRuleAppServiceArgs{...}
type GetZIAFirewallFilteringRuleAppServiceInput interface {
	pulumi.Input

	ToGetZIAFirewallFilteringRuleAppServiceOutput() GetZIAFirewallFilteringRuleAppServiceOutput
	ToGetZIAFirewallFilteringRuleAppServiceOutputWithContext(context.Context) GetZIAFirewallFilteringRuleAppServiceOutput
}

type GetZIAFirewallFilteringRuleAppServiceArgs struct {
	// (Map of String)
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// Unique identifier for the Firewall Filtering policy rule
	Id pulumi.IntInput `pulumi:"id"`
	// Name of the Firewall Filtering policy rule
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZIAFirewallFilteringRuleAppServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAFirewallFilteringRuleAppService)(nil)).Elem()
}

func (i GetZIAFirewallFilteringRuleAppServiceArgs) ToGetZIAFirewallFilteringRuleAppServiceOutput() GetZIAFirewallFilteringRuleAppServiceOutput {
	return i.ToGetZIAFirewallFilteringRuleAppServiceOutputWithContext(context.Background())
}

func (i GetZIAFirewallFilteringRuleAppServiceArgs) ToGetZIAFirewallFilteringRuleAppServiceOutputWithContext(ctx context.Context) GetZIAFirewallFilteringRuleAppServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAFirewallFilteringRuleAppServiceOutput)
}

// GetZIAFirewallFilteringRuleAppServiceArrayInput is an input type that accepts GetZIAFirewallFilteringRuleAppServiceArray and GetZIAFirewallFilteringRuleAppServiceArrayOutput values.
// You can construct a concrete instance of `GetZIAFirewallFilteringRuleAppServiceArrayInput` via:
//
//	GetZIAFirewallFilteringRuleAppServiceArray{ GetZIAFirewallFilteringRuleAppServiceArgs{...} }
type GetZIAFirewallFilteringRuleAppServiceArrayInput interface {
	pulumi.Input

	ToGetZIAFirewallFilteringRuleAppServiceArrayOutput() GetZIAFirewallFilteringRuleAppServiceArrayOutput
	ToGetZIAFirewallFilteringRuleAppServiceArrayOutputWithContext(context.Context) GetZIAFirewallFilteringRuleAppServiceArrayOutput
}

type GetZIAFirewallFilteringRuleAppServiceArray []GetZIAFirewallFilteringRuleAppServiceInput

func (GetZIAFirewallFilteringRuleAppServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAFirewallFilteringRuleAppService)(nil)).Elem()
}

func (i GetZIAFirewallFilteringRuleAppServiceArray) ToGetZIAFirewallFilteringRuleAppServiceArrayOutput() GetZIAFirewallFilteringRuleAppServiceArrayOutput {
	return i.ToGetZIAFirewallFilteringRuleAppServiceArrayOutputWithContext(context.Background())
}

func (i GetZIAFirewallFilteringRuleAppServiceArray) ToGetZIAFirewallFilteringRuleAppServiceArrayOutputWithContext(ctx context.Context) GetZIAFirewallFilteringRuleAppServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAFirewallFilteringRuleAppServiceArrayOutput)
}

type GetZIAFirewallFilteringRuleAppServiceOutput struct{ *pulumi.OutputState }

func (GetZIAFirewallFilteringRuleAppServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAFirewallFilteringRuleAppService)(nil)).Elem()
}

func (o GetZIAFirewallFilteringRuleAppServiceOutput) ToGetZIAFirewallFilteringRuleAppServiceOutput() GetZIAFirewallFilteringRuleAppServiceOutput {
	return o
}

func (o GetZIAFirewallFilteringRuleAppServiceOutput) ToGetZIAFirewallFilteringRuleAppServiceOutputWithContext(ctx context.Context) GetZIAFirewallFilteringRuleAppServiceOutput {
	return o
}

// (Map of String)
func (o GetZIAFirewallFilteringRuleAppServiceOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZIAFirewallFilteringRuleAppService) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// Unique identifier for the Firewall Filtering policy rule
func (o GetZIAFirewallFilteringRuleAppServiceOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIAFirewallFilteringRuleAppService) int { return v.Id }).(pulumi.IntOutput)
}

// Name of the Firewall Filtering policy rule
func (o GetZIAFirewallFilteringRuleAppServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIAFirewallFilteringRuleAppService) string { return v.Name }).(pulumi.StringOutput)
}

type GetZIAFirewallFilteringRuleAppServiceArrayOutput struct{ *pulumi.OutputState }

func (GetZIAFirewallFilteringRuleAppServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAFirewallFilteringRuleAppService)(nil)).Elem()
}

func (o GetZIAFirewallFilteringRuleAppServiceArrayOutput) ToGetZIAFirewallFilteringRuleAppServiceArrayOutput() GetZIAFirewallFilteringRuleAppServiceArrayOutput {
	return o
}

func (o GetZIAFirewallFilteringRuleAppServiceArrayOutput) ToGetZIAFirewallFilteringRuleAppServiceArrayOutputWithContext(ctx context.Context) GetZIAFirewallFilteringRuleAppServiceArrayOutput {
	return o
}

func (o GetZIAFirewallFilteringRuleAppServiceArrayOutput) Index(i pulumi.IntInput) GetZIAFirewallFilteringRuleAppServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIAFirewallFilteringRuleAppService {
		return vs[0].([]GetZIAFirewallFilteringRuleAppService)[vs[1].(int)]
	}).(GetZIAFirewallFilteringRuleAppServiceOutput)
}

type GetZIAFirewallFilteringRuleAppServiceGroup struct {
	// (Map of String)
	Extensions map[string]string `pulumi:"extensions"`
	// Unique identifier for the Firewall Filtering policy rule
	Id int `pulumi:"id"`
	// Name of the Firewall Filtering policy rule
	Name string `pulumi:"name"`
}

// GetZIAFirewallFilteringRuleAppServiceGroupInput is an input type that accepts GetZIAFirewallFilteringRuleAppServiceGroupArgs and GetZIAFirewallFilteringRuleAppServiceGroupOutput values.
// You can construct a concrete instance of `GetZIAFirewallFilteringRuleAppServiceGroupInput` via:
//
//	GetZIAFirewallFilteringRuleAppServiceGroupArgs{...}
type GetZIAFirewallFilteringRuleAppServiceGroupInput interface {
	pulumi.Input

	ToGetZIAFirewallFilteringRuleAppServiceGroupOutput() GetZIAFirewallFilteringRuleAppServiceGroupOutput
	ToGetZIAFirewallFilteringRuleAppServiceGroupOutputWithContext(context.Context) GetZIAFirewallFilteringRuleAppServiceGroupOutput
}

type GetZIAFirewallFilteringRuleAppServiceGroupArgs struct {
	// (Map of String)
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// Unique identifier for the Firewall Filtering policy rule
	Id pulumi.IntInput `pulumi:"id"`
	// Name of the Firewall Filtering policy rule
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZIAFirewallFilteringRuleAppServiceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAFirewallFilteringRuleAppServiceGroup)(nil)).Elem()
}

func (i GetZIAFirewallFilteringRuleAppServiceGroupArgs) ToGetZIAFirewallFilteringRuleAppServiceGroupOutput() GetZIAFirewallFilteringRuleAppServiceGroupOutput {
	return i.ToGetZIAFirewallFilteringRuleAppServiceGroupOutputWithContext(context.Background())
}

func (i GetZIAFirewallFilteringRuleAppServiceGroupArgs) ToGetZIAFirewallFilteringRuleAppServiceGroupOutputWithContext(ctx context.Context) GetZIAFirewallFilteringRuleAppServiceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAFirewallFilteringRuleAppServiceGroupOutput)
}

// GetZIAFirewallFilteringRuleAppServiceGroupArrayInput is an input type that accepts GetZIAFirewallFilteringRuleAppServiceGroupArray and GetZIAFirewallFilteringRuleAppServiceGroupArrayOutput values.
// You can construct a concrete instance of `GetZIAFirewallFilteringRuleAppServiceGroupArrayInput` via:
//
//	GetZIAFirewallFilteringRuleAppServiceGroupArray{ GetZIAFirewallFilteringRuleAppServiceGroupArgs{...} }
type GetZIAFirewallFilteringRuleAppServiceGroupArrayInput interface {
	pulumi.Input

	ToGetZIAFirewallFilteringRuleAppServiceGroupArrayOutput() GetZIAFirewallFilteringRuleAppServiceGroupArrayOutput
	ToGetZIAFirewallFilteringRuleAppServiceGroupArrayOutputWithContext(context.Context) GetZIAFirewallFilteringRuleAppServiceGroupArrayOutput
}

type GetZIAFirewallFilteringRuleAppServiceGroupArray []GetZIAFirewallFilteringRuleAppServiceGroupInput

func (GetZIAFirewallFilteringRuleAppServiceGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAFirewallFilteringRuleAppServiceGroup)(nil)).Elem()
}

func (i GetZIAFirewallFilteringRuleAppServiceGroupArray) ToGetZIAFirewallFilteringRuleAppServiceGroupArrayOutput() GetZIAFirewallFilteringRuleAppServiceGroupArrayOutput {
	return i.ToGetZIAFirewallFilteringRuleAppServiceGroupArrayOutputWithContext(context.Background())
}

func (i GetZIAFirewallFilteringRuleAppServiceGroupArray) ToGetZIAFirewallFilteringRuleAppServiceGroupArrayOutputWithContext(ctx context.Context) GetZIAFirewallFilteringRuleAppServiceGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAFirewallFilteringRuleAppServiceGroupArrayOutput)
}

type GetZIAFirewallFilteringRuleAppServiceGroupOutput struct{ *pulumi.OutputState }

func (GetZIAFirewallFilteringRuleAppServiceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAFirewallFilteringRuleAppServiceGroup)(nil)).Elem()
}

func (o GetZIAFirewallFilteringRuleAppServiceGroupOutput) ToGetZIAFirewallFilteringRuleAppServiceGroupOutput() GetZIAFirewallFilteringRuleAppServiceGroupOutput {
	return o
}

func (o GetZIAFirewallFilteringRuleAppServiceGroupOutput) ToGetZIAFirewallFilteringRuleAppServiceGroupOutputWithContext(ctx context.Context) GetZIAFirewallFilteringRuleAppServiceGroupOutput {
	return o
}

// (Map of String)
func (o GetZIAFirewallFilteringRuleAppServiceGroupOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZIAFirewallFilteringRuleAppServiceGroup) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// Unique identifier for the Firewall Filtering policy rule
func (o GetZIAFirewallFilteringRuleAppServiceGroupOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIAFirewallFilteringRuleAppServiceGroup) int { return v.Id }).(pulumi.IntOutput)
}

// Name of the Firewall Filtering policy rule
func (o GetZIAFirewallFilteringRuleAppServiceGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIAFirewallFilteringRuleAppServiceGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetZIAFirewallFilteringRuleAppServiceGroupArrayOutput struct{ *pulumi.OutputState }

func (GetZIAFirewallFilteringRuleAppServiceGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAFirewallFilteringRuleAppServiceGroup)(nil)).Elem()
}

func (o GetZIAFirewallFilteringRuleAppServiceGroupArrayOutput) ToGetZIAFirewallFilteringRuleAppServiceGroupArrayOutput() GetZIAFirewallFilteringRuleAppServiceGroupArrayOutput {
	return o
}

func (o GetZIAFirewallFilteringRuleAppServiceGroupArrayOutput) ToGetZIAFirewallFilteringRuleAppServiceGroupArrayOutputWithContext(ctx context.Context) GetZIAFirewallFilteringRuleAppServiceGroupArrayOutput {
	return o
}

func (o GetZIAFirewallFilteringRuleAppServiceGroupArrayOutput) Index(i pulumi.IntInput) GetZIAFirewallFilteringRuleAppServiceGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIAFirewallFilteringRuleAppServiceGroup {
		return vs[0].([]GetZIAFirewallFilteringRuleAppServiceGroup)[vs[1].(int)]
	}).(GetZIAFirewallFilteringRuleAppServiceGroupOutput)
}

type GetZIAFirewallFilteringRuleDepartment struct {
	// (Map of String)
	Extensions map[string]string `pulumi:"extensions"`
	// Unique identifier for the Firewall Filtering policy rule
	Id int `pulumi:"id"`
	// Name of the Firewall Filtering policy rule
	Name string `pulumi:"name"`
}

// GetZIAFirewallFilteringRuleDepartmentInput is an input type that accepts GetZIAFirewallFilteringRuleDepartmentArgs and GetZIAFirewallFilteringRuleDepartmentOutput values.
// You can construct a concrete instance of `GetZIAFirewallFilteringRuleDepartmentInput` via:
//
//	GetZIAFirewallFilteringRuleDepartmentArgs{...}
type GetZIAFirewallFilteringRuleDepartmentInput interface {
	pulumi.Input

	ToGetZIAFirewallFilteringRuleDepartmentOutput() GetZIAFirewallFilteringRuleDepartmentOutput
	ToGetZIAFirewallFilteringRuleDepartmentOutputWithContext(context.Context) GetZIAFirewallFilteringRuleDepartmentOutput
}

type GetZIAFirewallFilteringRuleDepartmentArgs struct {
	// (Map of String)
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// Unique identifier for the Firewall Filtering policy rule
	Id pulumi.IntInput `pulumi:"id"`
	// Name of the Firewall Filtering policy rule
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZIAFirewallFilteringRuleDepartmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAFirewallFilteringRuleDepartment)(nil)).Elem()
}

func (i GetZIAFirewallFilteringRuleDepartmentArgs) ToGetZIAFirewallFilteringRuleDepartmentOutput() GetZIAFirewallFilteringRuleDepartmentOutput {
	return i.ToGetZIAFirewallFilteringRuleDepartmentOutputWithContext(context.Background())
}

func (i GetZIAFirewallFilteringRuleDepartmentArgs) ToGetZIAFirewallFilteringRuleDepartmentOutputWithContext(ctx context.Context) GetZIAFirewallFilteringRuleDepartmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAFirewallFilteringRuleDepartmentOutput)
}

// GetZIAFirewallFilteringRuleDepartmentArrayInput is an input type that accepts GetZIAFirewallFilteringRuleDepartmentArray and GetZIAFirewallFilteringRuleDepartmentArrayOutput values.
// You can construct a concrete instance of `GetZIAFirewallFilteringRuleDepartmentArrayInput` via:
//
//	GetZIAFirewallFilteringRuleDepartmentArray{ GetZIAFirewallFilteringRuleDepartmentArgs{...} }
type GetZIAFirewallFilteringRuleDepartmentArrayInput interface {
	pulumi.Input

	ToGetZIAFirewallFilteringRuleDepartmentArrayOutput() GetZIAFirewallFilteringRuleDepartmentArrayOutput
	ToGetZIAFirewallFilteringRuleDepartmentArrayOutputWithContext(context.Context) GetZIAFirewallFilteringRuleDepartmentArrayOutput
}

type GetZIAFirewallFilteringRuleDepartmentArray []GetZIAFirewallFilteringRuleDepartmentInput

func (GetZIAFirewallFilteringRuleDepartmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAFirewallFilteringRuleDepartment)(nil)).Elem()
}

func (i GetZIAFirewallFilteringRuleDepartmentArray) ToGetZIAFirewallFilteringRuleDepartmentArrayOutput() GetZIAFirewallFilteringRuleDepartmentArrayOutput {
	return i.ToGetZIAFirewallFilteringRuleDepartmentArrayOutputWithContext(context.Background())
}

func (i GetZIAFirewallFilteringRuleDepartmentArray) ToGetZIAFirewallFilteringRuleDepartmentArrayOutputWithContext(ctx context.Context) GetZIAFirewallFilteringRuleDepartmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAFirewallFilteringRuleDepartmentArrayOutput)
}

type GetZIAFirewallFilteringRuleDepartmentOutput struct{ *pulumi.OutputState }

func (GetZIAFirewallFilteringRuleDepartmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAFirewallFilteringRuleDepartment)(nil)).Elem()
}

func (o GetZIAFirewallFilteringRuleDepartmentOutput) ToGetZIAFirewallFilteringRuleDepartmentOutput() GetZIAFirewallFilteringRuleDepartmentOutput {
	return o
}

func (o GetZIAFirewallFilteringRuleDepartmentOutput) ToGetZIAFirewallFilteringRuleDepartmentOutputWithContext(ctx context.Context) GetZIAFirewallFilteringRuleDepartmentOutput {
	return o
}

// (Map of String)
func (o GetZIAFirewallFilteringRuleDepartmentOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZIAFirewallFilteringRuleDepartment) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// Unique identifier for the Firewall Filtering policy rule
func (o GetZIAFirewallFilteringRuleDepartmentOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIAFirewallFilteringRuleDepartment) int { return v.Id }).(pulumi.IntOutput)
}

// Name of the Firewall Filtering policy rule
func (o GetZIAFirewallFilteringRuleDepartmentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIAFirewallFilteringRuleDepartment) string { return v.Name }).(pulumi.StringOutput)
}

type GetZIAFirewallFilteringRuleDepartmentArrayOutput struct{ *pulumi.OutputState }

func (GetZIAFirewallFilteringRuleDepartmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAFirewallFilteringRuleDepartment)(nil)).Elem()
}

func (o GetZIAFirewallFilteringRuleDepartmentArrayOutput) ToGetZIAFirewallFilteringRuleDepartmentArrayOutput() GetZIAFirewallFilteringRuleDepartmentArrayOutput {
	return o
}

func (o GetZIAFirewallFilteringRuleDepartmentArrayOutput) ToGetZIAFirewallFilteringRuleDepartmentArrayOutputWithContext(ctx context.Context) GetZIAFirewallFilteringRuleDepartmentArrayOutput {
	return o
}

func (o GetZIAFirewallFilteringRuleDepartmentArrayOutput) Index(i pulumi.IntInput) GetZIAFirewallFilteringRuleDepartmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIAFirewallFilteringRuleDepartment {
		return vs[0].([]GetZIAFirewallFilteringRuleDepartment)[vs[1].(int)]
	}).(GetZIAFirewallFilteringRuleDepartmentOutput)
}

type GetZIAFirewallFilteringRuleGroup struct {
	// (Map of String)
	Extensions map[string]string `pulumi:"extensions"`
	// Unique identifier for the Firewall Filtering policy rule
	Id int `pulumi:"id"`
	// Name of the Firewall Filtering policy rule
	Name string `pulumi:"name"`
}

// GetZIAFirewallFilteringRuleGroupInput is an input type that accepts GetZIAFirewallFilteringRuleGroupArgs and GetZIAFirewallFilteringRuleGroupOutput values.
// You can construct a concrete instance of `GetZIAFirewallFilteringRuleGroupInput` via:
//
//	GetZIAFirewallFilteringRuleGroupArgs{...}
type GetZIAFirewallFilteringRuleGroupInput interface {
	pulumi.Input

	ToGetZIAFirewallFilteringRuleGroupOutput() GetZIAFirewallFilteringRuleGroupOutput
	ToGetZIAFirewallFilteringRuleGroupOutputWithContext(context.Context) GetZIAFirewallFilteringRuleGroupOutput
}

type GetZIAFirewallFilteringRuleGroupArgs struct {
	// (Map of String)
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// Unique identifier for the Firewall Filtering policy rule
	Id pulumi.IntInput `pulumi:"id"`
	// Name of the Firewall Filtering policy rule
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZIAFirewallFilteringRuleGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAFirewallFilteringRuleGroup)(nil)).Elem()
}

func (i GetZIAFirewallFilteringRuleGroupArgs) ToGetZIAFirewallFilteringRuleGroupOutput() GetZIAFirewallFilteringRuleGroupOutput {
	return i.ToGetZIAFirewallFilteringRuleGroupOutputWithContext(context.Background())
}

func (i GetZIAFirewallFilteringRuleGroupArgs) ToGetZIAFirewallFilteringRuleGroupOutputWithContext(ctx context.Context) GetZIAFirewallFilteringRuleGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAFirewallFilteringRuleGroupOutput)
}

// GetZIAFirewallFilteringRuleGroupArrayInput is an input type that accepts GetZIAFirewallFilteringRuleGroupArray and GetZIAFirewallFilteringRuleGroupArrayOutput values.
// You can construct a concrete instance of `GetZIAFirewallFilteringRuleGroupArrayInput` via:
//
//	GetZIAFirewallFilteringRuleGroupArray{ GetZIAFirewallFilteringRuleGroupArgs{...} }
type GetZIAFirewallFilteringRuleGroupArrayInput interface {
	pulumi.Input

	ToGetZIAFirewallFilteringRuleGroupArrayOutput() GetZIAFirewallFilteringRuleGroupArrayOutput
	ToGetZIAFirewallFilteringRuleGroupArrayOutputWithContext(context.Context) GetZIAFirewallFilteringRuleGroupArrayOutput
}

type GetZIAFirewallFilteringRuleGroupArray []GetZIAFirewallFilteringRuleGroupInput

func (GetZIAFirewallFilteringRuleGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAFirewallFilteringRuleGroup)(nil)).Elem()
}

func (i GetZIAFirewallFilteringRuleGroupArray) ToGetZIAFirewallFilteringRuleGroupArrayOutput() GetZIAFirewallFilteringRuleGroupArrayOutput {
	return i.ToGetZIAFirewallFilteringRuleGroupArrayOutputWithContext(context.Background())
}

func (i GetZIAFirewallFilteringRuleGroupArray) ToGetZIAFirewallFilteringRuleGroupArrayOutputWithContext(ctx context.Context) GetZIAFirewallFilteringRuleGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAFirewallFilteringRuleGroupArrayOutput)
}

type GetZIAFirewallFilteringRuleGroupOutput struct{ *pulumi.OutputState }

func (GetZIAFirewallFilteringRuleGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAFirewallFilteringRuleGroup)(nil)).Elem()
}

func (o GetZIAFirewallFilteringRuleGroupOutput) ToGetZIAFirewallFilteringRuleGroupOutput() GetZIAFirewallFilteringRuleGroupOutput {
	return o
}

func (o GetZIAFirewallFilteringRuleGroupOutput) ToGetZIAFirewallFilteringRuleGroupOutputWithContext(ctx context.Context) GetZIAFirewallFilteringRuleGroupOutput {
	return o
}

// (Map of String)
func (o GetZIAFirewallFilteringRuleGroupOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZIAFirewallFilteringRuleGroup) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// Unique identifier for the Firewall Filtering policy rule
func (o GetZIAFirewallFilteringRuleGroupOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIAFirewallFilteringRuleGroup) int { return v.Id }).(pulumi.IntOutput)
}

// Name of the Firewall Filtering policy rule
func (o GetZIAFirewallFilteringRuleGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIAFirewallFilteringRuleGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetZIAFirewallFilteringRuleGroupArrayOutput struct{ *pulumi.OutputState }

func (GetZIAFirewallFilteringRuleGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAFirewallFilteringRuleGroup)(nil)).Elem()
}

func (o GetZIAFirewallFilteringRuleGroupArrayOutput) ToGetZIAFirewallFilteringRuleGroupArrayOutput() GetZIAFirewallFilteringRuleGroupArrayOutput {
	return o
}

func (o GetZIAFirewallFilteringRuleGroupArrayOutput) ToGetZIAFirewallFilteringRuleGroupArrayOutputWithContext(ctx context.Context) GetZIAFirewallFilteringRuleGroupArrayOutput {
	return o
}

func (o GetZIAFirewallFilteringRuleGroupArrayOutput) Index(i pulumi.IntInput) GetZIAFirewallFilteringRuleGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIAFirewallFilteringRuleGroup {
		return vs[0].([]GetZIAFirewallFilteringRuleGroup)[vs[1].(int)]
	}).(GetZIAFirewallFilteringRuleGroupOutput)
}

type GetZIAFirewallFilteringRuleLabel struct {
	// (Map of String)
	Extensions map[string]string `pulumi:"extensions"`
	// Unique identifier for the Firewall Filtering policy rule
	Id int `pulumi:"id"`
	// Name of the Firewall Filtering policy rule
	Name string `pulumi:"name"`
}

// GetZIAFirewallFilteringRuleLabelInput is an input type that accepts GetZIAFirewallFilteringRuleLabelArgs and GetZIAFirewallFilteringRuleLabelOutput values.
// You can construct a concrete instance of `GetZIAFirewallFilteringRuleLabelInput` via:
//
//	GetZIAFirewallFilteringRuleLabelArgs{...}
type GetZIAFirewallFilteringRuleLabelInput interface {
	pulumi.Input

	ToGetZIAFirewallFilteringRuleLabelOutput() GetZIAFirewallFilteringRuleLabelOutput
	ToGetZIAFirewallFilteringRuleLabelOutputWithContext(context.Context) GetZIAFirewallFilteringRuleLabelOutput
}

type GetZIAFirewallFilteringRuleLabelArgs struct {
	// (Map of String)
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// Unique identifier for the Firewall Filtering policy rule
	Id pulumi.IntInput `pulumi:"id"`
	// Name of the Firewall Filtering policy rule
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZIAFirewallFilteringRuleLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAFirewallFilteringRuleLabel)(nil)).Elem()
}

func (i GetZIAFirewallFilteringRuleLabelArgs) ToGetZIAFirewallFilteringRuleLabelOutput() GetZIAFirewallFilteringRuleLabelOutput {
	return i.ToGetZIAFirewallFilteringRuleLabelOutputWithContext(context.Background())
}

func (i GetZIAFirewallFilteringRuleLabelArgs) ToGetZIAFirewallFilteringRuleLabelOutputWithContext(ctx context.Context) GetZIAFirewallFilteringRuleLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAFirewallFilteringRuleLabelOutput)
}

// GetZIAFirewallFilteringRuleLabelArrayInput is an input type that accepts GetZIAFirewallFilteringRuleLabelArray and GetZIAFirewallFilteringRuleLabelArrayOutput values.
// You can construct a concrete instance of `GetZIAFirewallFilteringRuleLabelArrayInput` via:
//
//	GetZIAFirewallFilteringRuleLabelArray{ GetZIAFirewallFilteringRuleLabelArgs{...} }
type GetZIAFirewallFilteringRuleLabelArrayInput interface {
	pulumi.Input

	ToGetZIAFirewallFilteringRuleLabelArrayOutput() GetZIAFirewallFilteringRuleLabelArrayOutput
	ToGetZIAFirewallFilteringRuleLabelArrayOutputWithContext(context.Context) GetZIAFirewallFilteringRuleLabelArrayOutput
}

type GetZIAFirewallFilteringRuleLabelArray []GetZIAFirewallFilteringRuleLabelInput

func (GetZIAFirewallFilteringRuleLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAFirewallFilteringRuleLabel)(nil)).Elem()
}

func (i GetZIAFirewallFilteringRuleLabelArray) ToGetZIAFirewallFilteringRuleLabelArrayOutput() GetZIAFirewallFilteringRuleLabelArrayOutput {
	return i.ToGetZIAFirewallFilteringRuleLabelArrayOutputWithContext(context.Background())
}

func (i GetZIAFirewallFilteringRuleLabelArray) ToGetZIAFirewallFilteringRuleLabelArrayOutputWithContext(ctx context.Context) GetZIAFirewallFilteringRuleLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAFirewallFilteringRuleLabelArrayOutput)
}

type GetZIAFirewallFilteringRuleLabelOutput struct{ *pulumi.OutputState }

func (GetZIAFirewallFilteringRuleLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAFirewallFilteringRuleLabel)(nil)).Elem()
}

func (o GetZIAFirewallFilteringRuleLabelOutput) ToGetZIAFirewallFilteringRuleLabelOutput() GetZIAFirewallFilteringRuleLabelOutput {
	return o
}

func (o GetZIAFirewallFilteringRuleLabelOutput) ToGetZIAFirewallFilteringRuleLabelOutputWithContext(ctx context.Context) GetZIAFirewallFilteringRuleLabelOutput {
	return o
}

// (Map of String)
func (o GetZIAFirewallFilteringRuleLabelOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZIAFirewallFilteringRuleLabel) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// Unique identifier for the Firewall Filtering policy rule
func (o GetZIAFirewallFilteringRuleLabelOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIAFirewallFilteringRuleLabel) int { return v.Id }).(pulumi.IntOutput)
}

// Name of the Firewall Filtering policy rule
func (o GetZIAFirewallFilteringRuleLabelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIAFirewallFilteringRuleLabel) string { return v.Name }).(pulumi.StringOutput)
}

type GetZIAFirewallFilteringRuleLabelArrayOutput struct{ *pulumi.OutputState }

func (GetZIAFirewallFilteringRuleLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAFirewallFilteringRuleLabel)(nil)).Elem()
}

func (o GetZIAFirewallFilteringRuleLabelArrayOutput) ToGetZIAFirewallFilteringRuleLabelArrayOutput() GetZIAFirewallFilteringRuleLabelArrayOutput {
	return o
}

func (o GetZIAFirewallFilteringRuleLabelArrayOutput) ToGetZIAFirewallFilteringRuleLabelArrayOutputWithContext(ctx context.Context) GetZIAFirewallFilteringRuleLabelArrayOutput {
	return o
}

func (o GetZIAFirewallFilteringRuleLabelArrayOutput) Index(i pulumi.IntInput) GetZIAFirewallFilteringRuleLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIAFirewallFilteringRuleLabel {
		return vs[0].([]GetZIAFirewallFilteringRuleLabel)[vs[1].(int)]
	}).(GetZIAFirewallFilteringRuleLabelOutput)
}

type GetZIAFirewallFilteringRuleLastModifiedBy struct {
	// (Map of String)
	Extensions map[string]string `pulumi:"extensions"`
	// Unique identifier for the Firewall Filtering policy rule
	Id int `pulumi:"id"`
	// Name of the Firewall Filtering policy rule
	Name string `pulumi:"name"`
}

// GetZIAFirewallFilteringRuleLastModifiedByInput is an input type that accepts GetZIAFirewallFilteringRuleLastModifiedByArgs and GetZIAFirewallFilteringRuleLastModifiedByOutput values.
// You can construct a concrete instance of `GetZIAFirewallFilteringRuleLastModifiedByInput` via:
//
//	GetZIAFirewallFilteringRuleLastModifiedByArgs{...}
type GetZIAFirewallFilteringRuleLastModifiedByInput interface {
	pulumi.Input

	ToGetZIAFirewallFilteringRuleLastModifiedByOutput() GetZIAFirewallFilteringRuleLastModifiedByOutput
	ToGetZIAFirewallFilteringRuleLastModifiedByOutputWithContext(context.Context) GetZIAFirewallFilteringRuleLastModifiedByOutput
}

type GetZIAFirewallFilteringRuleLastModifiedByArgs struct {
	// (Map of String)
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// Unique identifier for the Firewall Filtering policy rule
	Id pulumi.IntInput `pulumi:"id"`
	// Name of the Firewall Filtering policy rule
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZIAFirewallFilteringRuleLastModifiedByArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAFirewallFilteringRuleLastModifiedBy)(nil)).Elem()
}

func (i GetZIAFirewallFilteringRuleLastModifiedByArgs) ToGetZIAFirewallFilteringRuleLastModifiedByOutput() GetZIAFirewallFilteringRuleLastModifiedByOutput {
	return i.ToGetZIAFirewallFilteringRuleLastModifiedByOutputWithContext(context.Background())
}

func (i GetZIAFirewallFilteringRuleLastModifiedByArgs) ToGetZIAFirewallFilteringRuleLastModifiedByOutputWithContext(ctx context.Context) GetZIAFirewallFilteringRuleLastModifiedByOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAFirewallFilteringRuleLastModifiedByOutput)
}

// GetZIAFirewallFilteringRuleLastModifiedByArrayInput is an input type that accepts GetZIAFirewallFilteringRuleLastModifiedByArray and GetZIAFirewallFilteringRuleLastModifiedByArrayOutput values.
// You can construct a concrete instance of `GetZIAFirewallFilteringRuleLastModifiedByArrayInput` via:
//
//	GetZIAFirewallFilteringRuleLastModifiedByArray{ GetZIAFirewallFilteringRuleLastModifiedByArgs{...} }
type GetZIAFirewallFilteringRuleLastModifiedByArrayInput interface {
	pulumi.Input

	ToGetZIAFirewallFilteringRuleLastModifiedByArrayOutput() GetZIAFirewallFilteringRuleLastModifiedByArrayOutput
	ToGetZIAFirewallFilteringRuleLastModifiedByArrayOutputWithContext(context.Context) GetZIAFirewallFilteringRuleLastModifiedByArrayOutput
}

type GetZIAFirewallFilteringRuleLastModifiedByArray []GetZIAFirewallFilteringRuleLastModifiedByInput

func (GetZIAFirewallFilteringRuleLastModifiedByArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAFirewallFilteringRuleLastModifiedBy)(nil)).Elem()
}

func (i GetZIAFirewallFilteringRuleLastModifiedByArray) ToGetZIAFirewallFilteringRuleLastModifiedByArrayOutput() GetZIAFirewallFilteringRuleLastModifiedByArrayOutput {
	return i.ToGetZIAFirewallFilteringRuleLastModifiedByArrayOutputWithContext(context.Background())
}

func (i GetZIAFirewallFilteringRuleLastModifiedByArray) ToGetZIAFirewallFilteringRuleLastModifiedByArrayOutputWithContext(ctx context.Context) GetZIAFirewallFilteringRuleLastModifiedByArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAFirewallFilteringRuleLastModifiedByArrayOutput)
}

type GetZIAFirewallFilteringRuleLastModifiedByOutput struct{ *pulumi.OutputState }

func (GetZIAFirewallFilteringRuleLastModifiedByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAFirewallFilteringRuleLastModifiedBy)(nil)).Elem()
}

func (o GetZIAFirewallFilteringRuleLastModifiedByOutput) ToGetZIAFirewallFilteringRuleLastModifiedByOutput() GetZIAFirewallFilteringRuleLastModifiedByOutput {
	return o
}

func (o GetZIAFirewallFilteringRuleLastModifiedByOutput) ToGetZIAFirewallFilteringRuleLastModifiedByOutputWithContext(ctx context.Context) GetZIAFirewallFilteringRuleLastModifiedByOutput {
	return o
}

// (Map of String)
func (o GetZIAFirewallFilteringRuleLastModifiedByOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZIAFirewallFilteringRuleLastModifiedBy) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// Unique identifier for the Firewall Filtering policy rule
func (o GetZIAFirewallFilteringRuleLastModifiedByOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIAFirewallFilteringRuleLastModifiedBy) int { return v.Id }).(pulumi.IntOutput)
}

// Name of the Firewall Filtering policy rule
func (o GetZIAFirewallFilteringRuleLastModifiedByOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIAFirewallFilteringRuleLastModifiedBy) string { return v.Name }).(pulumi.StringOutput)
}

type GetZIAFirewallFilteringRuleLastModifiedByArrayOutput struct{ *pulumi.OutputState }

func (GetZIAFirewallFilteringRuleLastModifiedByArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAFirewallFilteringRuleLastModifiedBy)(nil)).Elem()
}

func (o GetZIAFirewallFilteringRuleLastModifiedByArrayOutput) ToGetZIAFirewallFilteringRuleLastModifiedByArrayOutput() GetZIAFirewallFilteringRuleLastModifiedByArrayOutput {
	return o
}

func (o GetZIAFirewallFilteringRuleLastModifiedByArrayOutput) ToGetZIAFirewallFilteringRuleLastModifiedByArrayOutputWithContext(ctx context.Context) GetZIAFirewallFilteringRuleLastModifiedByArrayOutput {
	return o
}

func (o GetZIAFirewallFilteringRuleLastModifiedByArrayOutput) Index(i pulumi.IntInput) GetZIAFirewallFilteringRuleLastModifiedByOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIAFirewallFilteringRuleLastModifiedBy {
		return vs[0].([]GetZIAFirewallFilteringRuleLastModifiedBy)[vs[1].(int)]
	}).(GetZIAFirewallFilteringRuleLastModifiedByOutput)
}

type GetZIAFirewallFilteringRuleLocation struct {
	// (Map of String)
	Extensions map[string]string `pulumi:"extensions"`
	// Unique identifier for the Firewall Filtering policy rule
	Id int `pulumi:"id"`
	// Name of the Firewall Filtering policy rule
	Name string `pulumi:"name"`
}

// GetZIAFirewallFilteringRuleLocationInput is an input type that accepts GetZIAFirewallFilteringRuleLocationArgs and GetZIAFirewallFilteringRuleLocationOutput values.
// You can construct a concrete instance of `GetZIAFirewallFilteringRuleLocationInput` via:
//
//	GetZIAFirewallFilteringRuleLocationArgs{...}
type GetZIAFirewallFilteringRuleLocationInput interface {
	pulumi.Input

	ToGetZIAFirewallFilteringRuleLocationOutput() GetZIAFirewallFilteringRuleLocationOutput
	ToGetZIAFirewallFilteringRuleLocationOutputWithContext(context.Context) GetZIAFirewallFilteringRuleLocationOutput
}

type GetZIAFirewallFilteringRuleLocationArgs struct {
	// (Map of String)
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// Unique identifier for the Firewall Filtering policy rule
	Id pulumi.IntInput `pulumi:"id"`
	// Name of the Firewall Filtering policy rule
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZIAFirewallFilteringRuleLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAFirewallFilteringRuleLocation)(nil)).Elem()
}

func (i GetZIAFirewallFilteringRuleLocationArgs) ToGetZIAFirewallFilteringRuleLocationOutput() GetZIAFirewallFilteringRuleLocationOutput {
	return i.ToGetZIAFirewallFilteringRuleLocationOutputWithContext(context.Background())
}

func (i GetZIAFirewallFilteringRuleLocationArgs) ToGetZIAFirewallFilteringRuleLocationOutputWithContext(ctx context.Context) GetZIAFirewallFilteringRuleLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAFirewallFilteringRuleLocationOutput)
}

// GetZIAFirewallFilteringRuleLocationArrayInput is an input type that accepts GetZIAFirewallFilteringRuleLocationArray and GetZIAFirewallFilteringRuleLocationArrayOutput values.
// You can construct a concrete instance of `GetZIAFirewallFilteringRuleLocationArrayInput` via:
//
//	GetZIAFirewallFilteringRuleLocationArray{ GetZIAFirewallFilteringRuleLocationArgs{...} }
type GetZIAFirewallFilteringRuleLocationArrayInput interface {
	pulumi.Input

	ToGetZIAFirewallFilteringRuleLocationArrayOutput() GetZIAFirewallFilteringRuleLocationArrayOutput
	ToGetZIAFirewallFilteringRuleLocationArrayOutputWithContext(context.Context) GetZIAFirewallFilteringRuleLocationArrayOutput
}

type GetZIAFirewallFilteringRuleLocationArray []GetZIAFirewallFilteringRuleLocationInput

func (GetZIAFirewallFilteringRuleLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAFirewallFilteringRuleLocation)(nil)).Elem()
}

func (i GetZIAFirewallFilteringRuleLocationArray) ToGetZIAFirewallFilteringRuleLocationArrayOutput() GetZIAFirewallFilteringRuleLocationArrayOutput {
	return i.ToGetZIAFirewallFilteringRuleLocationArrayOutputWithContext(context.Background())
}

func (i GetZIAFirewallFilteringRuleLocationArray) ToGetZIAFirewallFilteringRuleLocationArrayOutputWithContext(ctx context.Context) GetZIAFirewallFilteringRuleLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAFirewallFilteringRuleLocationArrayOutput)
}

type GetZIAFirewallFilteringRuleLocationOutput struct{ *pulumi.OutputState }

func (GetZIAFirewallFilteringRuleLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAFirewallFilteringRuleLocation)(nil)).Elem()
}

func (o GetZIAFirewallFilteringRuleLocationOutput) ToGetZIAFirewallFilteringRuleLocationOutput() GetZIAFirewallFilteringRuleLocationOutput {
	return o
}

func (o GetZIAFirewallFilteringRuleLocationOutput) ToGetZIAFirewallFilteringRuleLocationOutputWithContext(ctx context.Context) GetZIAFirewallFilteringRuleLocationOutput {
	return o
}

// (Map of String)
func (o GetZIAFirewallFilteringRuleLocationOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZIAFirewallFilteringRuleLocation) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// Unique identifier for the Firewall Filtering policy rule
func (o GetZIAFirewallFilteringRuleLocationOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIAFirewallFilteringRuleLocation) int { return v.Id }).(pulumi.IntOutput)
}

// Name of the Firewall Filtering policy rule
func (o GetZIAFirewallFilteringRuleLocationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIAFirewallFilteringRuleLocation) string { return v.Name }).(pulumi.StringOutput)
}

type GetZIAFirewallFilteringRuleLocationArrayOutput struct{ *pulumi.OutputState }

func (GetZIAFirewallFilteringRuleLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAFirewallFilteringRuleLocation)(nil)).Elem()
}

func (o GetZIAFirewallFilteringRuleLocationArrayOutput) ToGetZIAFirewallFilteringRuleLocationArrayOutput() GetZIAFirewallFilteringRuleLocationArrayOutput {
	return o
}

func (o GetZIAFirewallFilteringRuleLocationArrayOutput) ToGetZIAFirewallFilteringRuleLocationArrayOutputWithContext(ctx context.Context) GetZIAFirewallFilteringRuleLocationArrayOutput {
	return o
}

func (o GetZIAFirewallFilteringRuleLocationArrayOutput) Index(i pulumi.IntInput) GetZIAFirewallFilteringRuleLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIAFirewallFilteringRuleLocation {
		return vs[0].([]GetZIAFirewallFilteringRuleLocation)[vs[1].(int)]
	}).(GetZIAFirewallFilteringRuleLocationOutput)
}

type GetZIAFirewallFilteringRuleLocationGroup struct {
	// (Map of String)
	Extensions map[string]string `pulumi:"extensions"`
	// Unique identifier for the Firewall Filtering policy rule
	Id int `pulumi:"id"`
	// Name of the Firewall Filtering policy rule
	Name string `pulumi:"name"`
}

// GetZIAFirewallFilteringRuleLocationGroupInput is an input type that accepts GetZIAFirewallFilteringRuleLocationGroupArgs and GetZIAFirewallFilteringRuleLocationGroupOutput values.
// You can construct a concrete instance of `GetZIAFirewallFilteringRuleLocationGroupInput` via:
//
//	GetZIAFirewallFilteringRuleLocationGroupArgs{...}
type GetZIAFirewallFilteringRuleLocationGroupInput interface {
	pulumi.Input

	ToGetZIAFirewallFilteringRuleLocationGroupOutput() GetZIAFirewallFilteringRuleLocationGroupOutput
	ToGetZIAFirewallFilteringRuleLocationGroupOutputWithContext(context.Context) GetZIAFirewallFilteringRuleLocationGroupOutput
}

type GetZIAFirewallFilteringRuleLocationGroupArgs struct {
	// (Map of String)
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// Unique identifier for the Firewall Filtering policy rule
	Id pulumi.IntInput `pulumi:"id"`
	// Name of the Firewall Filtering policy rule
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZIAFirewallFilteringRuleLocationGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAFirewallFilteringRuleLocationGroup)(nil)).Elem()
}

func (i GetZIAFirewallFilteringRuleLocationGroupArgs) ToGetZIAFirewallFilteringRuleLocationGroupOutput() GetZIAFirewallFilteringRuleLocationGroupOutput {
	return i.ToGetZIAFirewallFilteringRuleLocationGroupOutputWithContext(context.Background())
}

func (i GetZIAFirewallFilteringRuleLocationGroupArgs) ToGetZIAFirewallFilteringRuleLocationGroupOutputWithContext(ctx context.Context) GetZIAFirewallFilteringRuleLocationGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAFirewallFilteringRuleLocationGroupOutput)
}

// GetZIAFirewallFilteringRuleLocationGroupArrayInput is an input type that accepts GetZIAFirewallFilteringRuleLocationGroupArray and GetZIAFirewallFilteringRuleLocationGroupArrayOutput values.
// You can construct a concrete instance of `GetZIAFirewallFilteringRuleLocationGroupArrayInput` via:
//
//	GetZIAFirewallFilteringRuleLocationGroupArray{ GetZIAFirewallFilteringRuleLocationGroupArgs{...} }
type GetZIAFirewallFilteringRuleLocationGroupArrayInput interface {
	pulumi.Input

	ToGetZIAFirewallFilteringRuleLocationGroupArrayOutput() GetZIAFirewallFilteringRuleLocationGroupArrayOutput
	ToGetZIAFirewallFilteringRuleLocationGroupArrayOutputWithContext(context.Context) GetZIAFirewallFilteringRuleLocationGroupArrayOutput
}

type GetZIAFirewallFilteringRuleLocationGroupArray []GetZIAFirewallFilteringRuleLocationGroupInput

func (GetZIAFirewallFilteringRuleLocationGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAFirewallFilteringRuleLocationGroup)(nil)).Elem()
}

func (i GetZIAFirewallFilteringRuleLocationGroupArray) ToGetZIAFirewallFilteringRuleLocationGroupArrayOutput() GetZIAFirewallFilteringRuleLocationGroupArrayOutput {
	return i.ToGetZIAFirewallFilteringRuleLocationGroupArrayOutputWithContext(context.Background())
}

func (i GetZIAFirewallFilteringRuleLocationGroupArray) ToGetZIAFirewallFilteringRuleLocationGroupArrayOutputWithContext(ctx context.Context) GetZIAFirewallFilteringRuleLocationGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAFirewallFilteringRuleLocationGroupArrayOutput)
}

type GetZIAFirewallFilteringRuleLocationGroupOutput struct{ *pulumi.OutputState }

func (GetZIAFirewallFilteringRuleLocationGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAFirewallFilteringRuleLocationGroup)(nil)).Elem()
}

func (o GetZIAFirewallFilteringRuleLocationGroupOutput) ToGetZIAFirewallFilteringRuleLocationGroupOutput() GetZIAFirewallFilteringRuleLocationGroupOutput {
	return o
}

func (o GetZIAFirewallFilteringRuleLocationGroupOutput) ToGetZIAFirewallFilteringRuleLocationGroupOutputWithContext(ctx context.Context) GetZIAFirewallFilteringRuleLocationGroupOutput {
	return o
}

// (Map of String)
func (o GetZIAFirewallFilteringRuleLocationGroupOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZIAFirewallFilteringRuleLocationGroup) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// Unique identifier for the Firewall Filtering policy rule
func (o GetZIAFirewallFilteringRuleLocationGroupOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIAFirewallFilteringRuleLocationGroup) int { return v.Id }).(pulumi.IntOutput)
}

// Name of the Firewall Filtering policy rule
func (o GetZIAFirewallFilteringRuleLocationGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIAFirewallFilteringRuleLocationGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetZIAFirewallFilteringRuleLocationGroupArrayOutput struct{ *pulumi.OutputState }

func (GetZIAFirewallFilteringRuleLocationGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAFirewallFilteringRuleLocationGroup)(nil)).Elem()
}

func (o GetZIAFirewallFilteringRuleLocationGroupArrayOutput) ToGetZIAFirewallFilteringRuleLocationGroupArrayOutput() GetZIAFirewallFilteringRuleLocationGroupArrayOutput {
	return o
}

func (o GetZIAFirewallFilteringRuleLocationGroupArrayOutput) ToGetZIAFirewallFilteringRuleLocationGroupArrayOutputWithContext(ctx context.Context) GetZIAFirewallFilteringRuleLocationGroupArrayOutput {
	return o
}

func (o GetZIAFirewallFilteringRuleLocationGroupArrayOutput) Index(i pulumi.IntInput) GetZIAFirewallFilteringRuleLocationGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIAFirewallFilteringRuleLocationGroup {
		return vs[0].([]GetZIAFirewallFilteringRuleLocationGroup)[vs[1].(int)]
	}).(GetZIAFirewallFilteringRuleLocationGroupOutput)
}

type GetZIAFirewallFilteringRuleNwApplicationGroup struct {
	// (Map of String)
	Extensions map[string]string `pulumi:"extensions"`
	// Unique identifier for the Firewall Filtering policy rule
	Id int `pulumi:"id"`
	// Name of the Firewall Filtering policy rule
	Name string `pulumi:"name"`
}

// GetZIAFirewallFilteringRuleNwApplicationGroupInput is an input type that accepts GetZIAFirewallFilteringRuleNwApplicationGroupArgs and GetZIAFirewallFilteringRuleNwApplicationGroupOutput values.
// You can construct a concrete instance of `GetZIAFirewallFilteringRuleNwApplicationGroupInput` via:
//
//	GetZIAFirewallFilteringRuleNwApplicationGroupArgs{...}
type GetZIAFirewallFilteringRuleNwApplicationGroupInput interface {
	pulumi.Input

	ToGetZIAFirewallFilteringRuleNwApplicationGroupOutput() GetZIAFirewallFilteringRuleNwApplicationGroupOutput
	ToGetZIAFirewallFilteringRuleNwApplicationGroupOutputWithContext(context.Context) GetZIAFirewallFilteringRuleNwApplicationGroupOutput
}

type GetZIAFirewallFilteringRuleNwApplicationGroupArgs struct {
	// (Map of String)
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// Unique identifier for the Firewall Filtering policy rule
	Id pulumi.IntInput `pulumi:"id"`
	// Name of the Firewall Filtering policy rule
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZIAFirewallFilteringRuleNwApplicationGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAFirewallFilteringRuleNwApplicationGroup)(nil)).Elem()
}

func (i GetZIAFirewallFilteringRuleNwApplicationGroupArgs) ToGetZIAFirewallFilteringRuleNwApplicationGroupOutput() GetZIAFirewallFilteringRuleNwApplicationGroupOutput {
	return i.ToGetZIAFirewallFilteringRuleNwApplicationGroupOutputWithContext(context.Background())
}

func (i GetZIAFirewallFilteringRuleNwApplicationGroupArgs) ToGetZIAFirewallFilteringRuleNwApplicationGroupOutputWithContext(ctx context.Context) GetZIAFirewallFilteringRuleNwApplicationGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAFirewallFilteringRuleNwApplicationGroupOutput)
}

// GetZIAFirewallFilteringRuleNwApplicationGroupArrayInput is an input type that accepts GetZIAFirewallFilteringRuleNwApplicationGroupArray and GetZIAFirewallFilteringRuleNwApplicationGroupArrayOutput values.
// You can construct a concrete instance of `GetZIAFirewallFilteringRuleNwApplicationGroupArrayInput` via:
//
//	GetZIAFirewallFilteringRuleNwApplicationGroupArray{ GetZIAFirewallFilteringRuleNwApplicationGroupArgs{...} }
type GetZIAFirewallFilteringRuleNwApplicationGroupArrayInput interface {
	pulumi.Input

	ToGetZIAFirewallFilteringRuleNwApplicationGroupArrayOutput() GetZIAFirewallFilteringRuleNwApplicationGroupArrayOutput
	ToGetZIAFirewallFilteringRuleNwApplicationGroupArrayOutputWithContext(context.Context) GetZIAFirewallFilteringRuleNwApplicationGroupArrayOutput
}

type GetZIAFirewallFilteringRuleNwApplicationGroupArray []GetZIAFirewallFilteringRuleNwApplicationGroupInput

func (GetZIAFirewallFilteringRuleNwApplicationGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAFirewallFilteringRuleNwApplicationGroup)(nil)).Elem()
}

func (i GetZIAFirewallFilteringRuleNwApplicationGroupArray) ToGetZIAFirewallFilteringRuleNwApplicationGroupArrayOutput() GetZIAFirewallFilteringRuleNwApplicationGroupArrayOutput {
	return i.ToGetZIAFirewallFilteringRuleNwApplicationGroupArrayOutputWithContext(context.Background())
}

func (i GetZIAFirewallFilteringRuleNwApplicationGroupArray) ToGetZIAFirewallFilteringRuleNwApplicationGroupArrayOutputWithContext(ctx context.Context) GetZIAFirewallFilteringRuleNwApplicationGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAFirewallFilteringRuleNwApplicationGroupArrayOutput)
}

type GetZIAFirewallFilteringRuleNwApplicationGroupOutput struct{ *pulumi.OutputState }

func (GetZIAFirewallFilteringRuleNwApplicationGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAFirewallFilteringRuleNwApplicationGroup)(nil)).Elem()
}

func (o GetZIAFirewallFilteringRuleNwApplicationGroupOutput) ToGetZIAFirewallFilteringRuleNwApplicationGroupOutput() GetZIAFirewallFilteringRuleNwApplicationGroupOutput {
	return o
}

func (o GetZIAFirewallFilteringRuleNwApplicationGroupOutput) ToGetZIAFirewallFilteringRuleNwApplicationGroupOutputWithContext(ctx context.Context) GetZIAFirewallFilteringRuleNwApplicationGroupOutput {
	return o
}

// (Map of String)
func (o GetZIAFirewallFilteringRuleNwApplicationGroupOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZIAFirewallFilteringRuleNwApplicationGroup) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// Unique identifier for the Firewall Filtering policy rule
func (o GetZIAFirewallFilteringRuleNwApplicationGroupOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIAFirewallFilteringRuleNwApplicationGroup) int { return v.Id }).(pulumi.IntOutput)
}

// Name of the Firewall Filtering policy rule
func (o GetZIAFirewallFilteringRuleNwApplicationGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIAFirewallFilteringRuleNwApplicationGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetZIAFirewallFilteringRuleNwApplicationGroupArrayOutput struct{ *pulumi.OutputState }

func (GetZIAFirewallFilteringRuleNwApplicationGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAFirewallFilteringRuleNwApplicationGroup)(nil)).Elem()
}

func (o GetZIAFirewallFilteringRuleNwApplicationGroupArrayOutput) ToGetZIAFirewallFilteringRuleNwApplicationGroupArrayOutput() GetZIAFirewallFilteringRuleNwApplicationGroupArrayOutput {
	return o
}

func (o GetZIAFirewallFilteringRuleNwApplicationGroupArrayOutput) ToGetZIAFirewallFilteringRuleNwApplicationGroupArrayOutputWithContext(ctx context.Context) GetZIAFirewallFilteringRuleNwApplicationGroupArrayOutput {
	return o
}

func (o GetZIAFirewallFilteringRuleNwApplicationGroupArrayOutput) Index(i pulumi.IntInput) GetZIAFirewallFilteringRuleNwApplicationGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIAFirewallFilteringRuleNwApplicationGroup {
		return vs[0].([]GetZIAFirewallFilteringRuleNwApplicationGroup)[vs[1].(int)]
	}).(GetZIAFirewallFilteringRuleNwApplicationGroupOutput)
}

type GetZIAFirewallFilteringRuleNwService struct {
	// (Map of String)
	Extensions map[string]string `pulumi:"extensions"`
	// Unique identifier for the Firewall Filtering policy rule
	Id int `pulumi:"id"`
	// Name of the Firewall Filtering policy rule
	Name string `pulumi:"name"`
}

// GetZIAFirewallFilteringRuleNwServiceInput is an input type that accepts GetZIAFirewallFilteringRuleNwServiceArgs and GetZIAFirewallFilteringRuleNwServiceOutput values.
// You can construct a concrete instance of `GetZIAFirewallFilteringRuleNwServiceInput` via:
//
//	GetZIAFirewallFilteringRuleNwServiceArgs{...}
type GetZIAFirewallFilteringRuleNwServiceInput interface {
	pulumi.Input

	ToGetZIAFirewallFilteringRuleNwServiceOutput() GetZIAFirewallFilteringRuleNwServiceOutput
	ToGetZIAFirewallFilteringRuleNwServiceOutputWithContext(context.Context) GetZIAFirewallFilteringRuleNwServiceOutput
}

type GetZIAFirewallFilteringRuleNwServiceArgs struct {
	// (Map of String)
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// Unique identifier for the Firewall Filtering policy rule
	Id pulumi.IntInput `pulumi:"id"`
	// Name of the Firewall Filtering policy rule
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZIAFirewallFilteringRuleNwServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAFirewallFilteringRuleNwService)(nil)).Elem()
}

func (i GetZIAFirewallFilteringRuleNwServiceArgs) ToGetZIAFirewallFilteringRuleNwServiceOutput() GetZIAFirewallFilteringRuleNwServiceOutput {
	return i.ToGetZIAFirewallFilteringRuleNwServiceOutputWithContext(context.Background())
}

func (i GetZIAFirewallFilteringRuleNwServiceArgs) ToGetZIAFirewallFilteringRuleNwServiceOutputWithContext(ctx context.Context) GetZIAFirewallFilteringRuleNwServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAFirewallFilteringRuleNwServiceOutput)
}

// GetZIAFirewallFilteringRuleNwServiceArrayInput is an input type that accepts GetZIAFirewallFilteringRuleNwServiceArray and GetZIAFirewallFilteringRuleNwServiceArrayOutput values.
// You can construct a concrete instance of `GetZIAFirewallFilteringRuleNwServiceArrayInput` via:
//
//	GetZIAFirewallFilteringRuleNwServiceArray{ GetZIAFirewallFilteringRuleNwServiceArgs{...} }
type GetZIAFirewallFilteringRuleNwServiceArrayInput interface {
	pulumi.Input

	ToGetZIAFirewallFilteringRuleNwServiceArrayOutput() GetZIAFirewallFilteringRuleNwServiceArrayOutput
	ToGetZIAFirewallFilteringRuleNwServiceArrayOutputWithContext(context.Context) GetZIAFirewallFilteringRuleNwServiceArrayOutput
}

type GetZIAFirewallFilteringRuleNwServiceArray []GetZIAFirewallFilteringRuleNwServiceInput

func (GetZIAFirewallFilteringRuleNwServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAFirewallFilteringRuleNwService)(nil)).Elem()
}

func (i GetZIAFirewallFilteringRuleNwServiceArray) ToGetZIAFirewallFilteringRuleNwServiceArrayOutput() GetZIAFirewallFilteringRuleNwServiceArrayOutput {
	return i.ToGetZIAFirewallFilteringRuleNwServiceArrayOutputWithContext(context.Background())
}

func (i GetZIAFirewallFilteringRuleNwServiceArray) ToGetZIAFirewallFilteringRuleNwServiceArrayOutputWithContext(ctx context.Context) GetZIAFirewallFilteringRuleNwServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAFirewallFilteringRuleNwServiceArrayOutput)
}

type GetZIAFirewallFilteringRuleNwServiceOutput struct{ *pulumi.OutputState }

func (GetZIAFirewallFilteringRuleNwServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAFirewallFilteringRuleNwService)(nil)).Elem()
}

func (o GetZIAFirewallFilteringRuleNwServiceOutput) ToGetZIAFirewallFilteringRuleNwServiceOutput() GetZIAFirewallFilteringRuleNwServiceOutput {
	return o
}

func (o GetZIAFirewallFilteringRuleNwServiceOutput) ToGetZIAFirewallFilteringRuleNwServiceOutputWithContext(ctx context.Context) GetZIAFirewallFilteringRuleNwServiceOutput {
	return o
}

// (Map of String)
func (o GetZIAFirewallFilteringRuleNwServiceOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZIAFirewallFilteringRuleNwService) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// Unique identifier for the Firewall Filtering policy rule
func (o GetZIAFirewallFilteringRuleNwServiceOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIAFirewallFilteringRuleNwService) int { return v.Id }).(pulumi.IntOutput)
}

// Name of the Firewall Filtering policy rule
func (o GetZIAFirewallFilteringRuleNwServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIAFirewallFilteringRuleNwService) string { return v.Name }).(pulumi.StringOutput)
}

type GetZIAFirewallFilteringRuleNwServiceArrayOutput struct{ *pulumi.OutputState }

func (GetZIAFirewallFilteringRuleNwServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAFirewallFilteringRuleNwService)(nil)).Elem()
}

func (o GetZIAFirewallFilteringRuleNwServiceArrayOutput) ToGetZIAFirewallFilteringRuleNwServiceArrayOutput() GetZIAFirewallFilteringRuleNwServiceArrayOutput {
	return o
}

func (o GetZIAFirewallFilteringRuleNwServiceArrayOutput) ToGetZIAFirewallFilteringRuleNwServiceArrayOutputWithContext(ctx context.Context) GetZIAFirewallFilteringRuleNwServiceArrayOutput {
	return o
}

func (o GetZIAFirewallFilteringRuleNwServiceArrayOutput) Index(i pulumi.IntInput) GetZIAFirewallFilteringRuleNwServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIAFirewallFilteringRuleNwService {
		return vs[0].([]GetZIAFirewallFilteringRuleNwService)[vs[1].(int)]
	}).(GetZIAFirewallFilteringRuleNwServiceOutput)
}

type GetZIAFirewallFilteringRuleNwServiceGroup struct {
	// (Map of String)
	Extensions map[string]string `pulumi:"extensions"`
	// Unique identifier for the Firewall Filtering policy rule
	Id int `pulumi:"id"`
	// Name of the Firewall Filtering policy rule
	Name string `pulumi:"name"`
}

// GetZIAFirewallFilteringRuleNwServiceGroupInput is an input type that accepts GetZIAFirewallFilteringRuleNwServiceGroupArgs and GetZIAFirewallFilteringRuleNwServiceGroupOutput values.
// You can construct a concrete instance of `GetZIAFirewallFilteringRuleNwServiceGroupInput` via:
//
//	GetZIAFirewallFilteringRuleNwServiceGroupArgs{...}
type GetZIAFirewallFilteringRuleNwServiceGroupInput interface {
	pulumi.Input

	ToGetZIAFirewallFilteringRuleNwServiceGroupOutput() GetZIAFirewallFilteringRuleNwServiceGroupOutput
	ToGetZIAFirewallFilteringRuleNwServiceGroupOutputWithContext(context.Context) GetZIAFirewallFilteringRuleNwServiceGroupOutput
}

type GetZIAFirewallFilteringRuleNwServiceGroupArgs struct {
	// (Map of String)
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// Unique identifier for the Firewall Filtering policy rule
	Id pulumi.IntInput `pulumi:"id"`
	// Name of the Firewall Filtering policy rule
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZIAFirewallFilteringRuleNwServiceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAFirewallFilteringRuleNwServiceGroup)(nil)).Elem()
}

func (i GetZIAFirewallFilteringRuleNwServiceGroupArgs) ToGetZIAFirewallFilteringRuleNwServiceGroupOutput() GetZIAFirewallFilteringRuleNwServiceGroupOutput {
	return i.ToGetZIAFirewallFilteringRuleNwServiceGroupOutputWithContext(context.Background())
}

func (i GetZIAFirewallFilteringRuleNwServiceGroupArgs) ToGetZIAFirewallFilteringRuleNwServiceGroupOutputWithContext(ctx context.Context) GetZIAFirewallFilteringRuleNwServiceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAFirewallFilteringRuleNwServiceGroupOutput)
}

// GetZIAFirewallFilteringRuleNwServiceGroupArrayInput is an input type that accepts GetZIAFirewallFilteringRuleNwServiceGroupArray and GetZIAFirewallFilteringRuleNwServiceGroupArrayOutput values.
// You can construct a concrete instance of `GetZIAFirewallFilteringRuleNwServiceGroupArrayInput` via:
//
//	GetZIAFirewallFilteringRuleNwServiceGroupArray{ GetZIAFirewallFilteringRuleNwServiceGroupArgs{...} }
type GetZIAFirewallFilteringRuleNwServiceGroupArrayInput interface {
	pulumi.Input

	ToGetZIAFirewallFilteringRuleNwServiceGroupArrayOutput() GetZIAFirewallFilteringRuleNwServiceGroupArrayOutput
	ToGetZIAFirewallFilteringRuleNwServiceGroupArrayOutputWithContext(context.Context) GetZIAFirewallFilteringRuleNwServiceGroupArrayOutput
}

type GetZIAFirewallFilteringRuleNwServiceGroupArray []GetZIAFirewallFilteringRuleNwServiceGroupInput

func (GetZIAFirewallFilteringRuleNwServiceGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAFirewallFilteringRuleNwServiceGroup)(nil)).Elem()
}

func (i GetZIAFirewallFilteringRuleNwServiceGroupArray) ToGetZIAFirewallFilteringRuleNwServiceGroupArrayOutput() GetZIAFirewallFilteringRuleNwServiceGroupArrayOutput {
	return i.ToGetZIAFirewallFilteringRuleNwServiceGroupArrayOutputWithContext(context.Background())
}

func (i GetZIAFirewallFilteringRuleNwServiceGroupArray) ToGetZIAFirewallFilteringRuleNwServiceGroupArrayOutputWithContext(ctx context.Context) GetZIAFirewallFilteringRuleNwServiceGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAFirewallFilteringRuleNwServiceGroupArrayOutput)
}

type GetZIAFirewallFilteringRuleNwServiceGroupOutput struct{ *pulumi.OutputState }

func (GetZIAFirewallFilteringRuleNwServiceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAFirewallFilteringRuleNwServiceGroup)(nil)).Elem()
}

func (o GetZIAFirewallFilteringRuleNwServiceGroupOutput) ToGetZIAFirewallFilteringRuleNwServiceGroupOutput() GetZIAFirewallFilteringRuleNwServiceGroupOutput {
	return o
}

func (o GetZIAFirewallFilteringRuleNwServiceGroupOutput) ToGetZIAFirewallFilteringRuleNwServiceGroupOutputWithContext(ctx context.Context) GetZIAFirewallFilteringRuleNwServiceGroupOutput {
	return o
}

// (Map of String)
func (o GetZIAFirewallFilteringRuleNwServiceGroupOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZIAFirewallFilteringRuleNwServiceGroup) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// Unique identifier for the Firewall Filtering policy rule
func (o GetZIAFirewallFilteringRuleNwServiceGroupOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIAFirewallFilteringRuleNwServiceGroup) int { return v.Id }).(pulumi.IntOutput)
}

// Name of the Firewall Filtering policy rule
func (o GetZIAFirewallFilteringRuleNwServiceGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIAFirewallFilteringRuleNwServiceGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetZIAFirewallFilteringRuleNwServiceGroupArrayOutput struct{ *pulumi.OutputState }

func (GetZIAFirewallFilteringRuleNwServiceGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAFirewallFilteringRuleNwServiceGroup)(nil)).Elem()
}

func (o GetZIAFirewallFilteringRuleNwServiceGroupArrayOutput) ToGetZIAFirewallFilteringRuleNwServiceGroupArrayOutput() GetZIAFirewallFilteringRuleNwServiceGroupArrayOutput {
	return o
}

func (o GetZIAFirewallFilteringRuleNwServiceGroupArrayOutput) ToGetZIAFirewallFilteringRuleNwServiceGroupArrayOutputWithContext(ctx context.Context) GetZIAFirewallFilteringRuleNwServiceGroupArrayOutput {
	return o
}

func (o GetZIAFirewallFilteringRuleNwServiceGroupArrayOutput) Index(i pulumi.IntInput) GetZIAFirewallFilteringRuleNwServiceGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIAFirewallFilteringRuleNwServiceGroup {
		return vs[0].([]GetZIAFirewallFilteringRuleNwServiceGroup)[vs[1].(int)]
	}).(GetZIAFirewallFilteringRuleNwServiceGroupOutput)
}

type GetZIAFirewallFilteringRuleTimeWindow struct {
	// (Map of String)
	Extensions map[string]string `pulumi:"extensions"`
	// Unique identifier for the Firewall Filtering policy rule
	Id int `pulumi:"id"`
	// Name of the Firewall Filtering policy rule
	Name string `pulumi:"name"`
}

// GetZIAFirewallFilteringRuleTimeWindowInput is an input type that accepts GetZIAFirewallFilteringRuleTimeWindowArgs and GetZIAFirewallFilteringRuleTimeWindowOutput values.
// You can construct a concrete instance of `GetZIAFirewallFilteringRuleTimeWindowInput` via:
//
//	GetZIAFirewallFilteringRuleTimeWindowArgs{...}
type GetZIAFirewallFilteringRuleTimeWindowInput interface {
	pulumi.Input

	ToGetZIAFirewallFilteringRuleTimeWindowOutput() GetZIAFirewallFilteringRuleTimeWindowOutput
	ToGetZIAFirewallFilteringRuleTimeWindowOutputWithContext(context.Context) GetZIAFirewallFilteringRuleTimeWindowOutput
}

type GetZIAFirewallFilteringRuleTimeWindowArgs struct {
	// (Map of String)
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// Unique identifier for the Firewall Filtering policy rule
	Id pulumi.IntInput `pulumi:"id"`
	// Name of the Firewall Filtering policy rule
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZIAFirewallFilteringRuleTimeWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAFirewallFilteringRuleTimeWindow)(nil)).Elem()
}

func (i GetZIAFirewallFilteringRuleTimeWindowArgs) ToGetZIAFirewallFilteringRuleTimeWindowOutput() GetZIAFirewallFilteringRuleTimeWindowOutput {
	return i.ToGetZIAFirewallFilteringRuleTimeWindowOutputWithContext(context.Background())
}

func (i GetZIAFirewallFilteringRuleTimeWindowArgs) ToGetZIAFirewallFilteringRuleTimeWindowOutputWithContext(ctx context.Context) GetZIAFirewallFilteringRuleTimeWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAFirewallFilteringRuleTimeWindowOutput)
}

// GetZIAFirewallFilteringRuleTimeWindowArrayInput is an input type that accepts GetZIAFirewallFilteringRuleTimeWindowArray and GetZIAFirewallFilteringRuleTimeWindowArrayOutput values.
// You can construct a concrete instance of `GetZIAFirewallFilteringRuleTimeWindowArrayInput` via:
//
//	GetZIAFirewallFilteringRuleTimeWindowArray{ GetZIAFirewallFilteringRuleTimeWindowArgs{...} }
type GetZIAFirewallFilteringRuleTimeWindowArrayInput interface {
	pulumi.Input

	ToGetZIAFirewallFilteringRuleTimeWindowArrayOutput() GetZIAFirewallFilteringRuleTimeWindowArrayOutput
	ToGetZIAFirewallFilteringRuleTimeWindowArrayOutputWithContext(context.Context) GetZIAFirewallFilteringRuleTimeWindowArrayOutput
}

type GetZIAFirewallFilteringRuleTimeWindowArray []GetZIAFirewallFilteringRuleTimeWindowInput

func (GetZIAFirewallFilteringRuleTimeWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAFirewallFilteringRuleTimeWindow)(nil)).Elem()
}

func (i GetZIAFirewallFilteringRuleTimeWindowArray) ToGetZIAFirewallFilteringRuleTimeWindowArrayOutput() GetZIAFirewallFilteringRuleTimeWindowArrayOutput {
	return i.ToGetZIAFirewallFilteringRuleTimeWindowArrayOutputWithContext(context.Background())
}

func (i GetZIAFirewallFilteringRuleTimeWindowArray) ToGetZIAFirewallFilteringRuleTimeWindowArrayOutputWithContext(ctx context.Context) GetZIAFirewallFilteringRuleTimeWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAFirewallFilteringRuleTimeWindowArrayOutput)
}

type GetZIAFirewallFilteringRuleTimeWindowOutput struct{ *pulumi.OutputState }

func (GetZIAFirewallFilteringRuleTimeWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAFirewallFilteringRuleTimeWindow)(nil)).Elem()
}

func (o GetZIAFirewallFilteringRuleTimeWindowOutput) ToGetZIAFirewallFilteringRuleTimeWindowOutput() GetZIAFirewallFilteringRuleTimeWindowOutput {
	return o
}

func (o GetZIAFirewallFilteringRuleTimeWindowOutput) ToGetZIAFirewallFilteringRuleTimeWindowOutputWithContext(ctx context.Context) GetZIAFirewallFilteringRuleTimeWindowOutput {
	return o
}

// (Map of String)
func (o GetZIAFirewallFilteringRuleTimeWindowOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZIAFirewallFilteringRuleTimeWindow) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// Unique identifier for the Firewall Filtering policy rule
func (o GetZIAFirewallFilteringRuleTimeWindowOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIAFirewallFilteringRuleTimeWindow) int { return v.Id }).(pulumi.IntOutput)
}

// Name of the Firewall Filtering policy rule
func (o GetZIAFirewallFilteringRuleTimeWindowOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIAFirewallFilteringRuleTimeWindow) string { return v.Name }).(pulumi.StringOutput)
}

type GetZIAFirewallFilteringRuleTimeWindowArrayOutput struct{ *pulumi.OutputState }

func (GetZIAFirewallFilteringRuleTimeWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAFirewallFilteringRuleTimeWindow)(nil)).Elem()
}

func (o GetZIAFirewallFilteringRuleTimeWindowArrayOutput) ToGetZIAFirewallFilteringRuleTimeWindowArrayOutput() GetZIAFirewallFilteringRuleTimeWindowArrayOutput {
	return o
}

func (o GetZIAFirewallFilteringRuleTimeWindowArrayOutput) ToGetZIAFirewallFilteringRuleTimeWindowArrayOutputWithContext(ctx context.Context) GetZIAFirewallFilteringRuleTimeWindowArrayOutput {
	return o
}

func (o GetZIAFirewallFilteringRuleTimeWindowArrayOutput) Index(i pulumi.IntInput) GetZIAFirewallFilteringRuleTimeWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIAFirewallFilteringRuleTimeWindow {
		return vs[0].([]GetZIAFirewallFilteringRuleTimeWindow)[vs[1].(int)]
	}).(GetZIAFirewallFilteringRuleTimeWindowOutput)
}

type GetZIAFirewallFilteringRuleUser struct {
	// (Map of String)
	Extensions map[string]string `pulumi:"extensions"`
	// Unique identifier for the Firewall Filtering policy rule
	Id int `pulumi:"id"`
	// Name of the Firewall Filtering policy rule
	Name string `pulumi:"name"`
}

// GetZIAFirewallFilteringRuleUserInput is an input type that accepts GetZIAFirewallFilteringRuleUserArgs and GetZIAFirewallFilteringRuleUserOutput values.
// You can construct a concrete instance of `GetZIAFirewallFilteringRuleUserInput` via:
//
//	GetZIAFirewallFilteringRuleUserArgs{...}
type GetZIAFirewallFilteringRuleUserInput interface {
	pulumi.Input

	ToGetZIAFirewallFilteringRuleUserOutput() GetZIAFirewallFilteringRuleUserOutput
	ToGetZIAFirewallFilteringRuleUserOutputWithContext(context.Context) GetZIAFirewallFilteringRuleUserOutput
}

type GetZIAFirewallFilteringRuleUserArgs struct {
	// (Map of String)
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// Unique identifier for the Firewall Filtering policy rule
	Id pulumi.IntInput `pulumi:"id"`
	// Name of the Firewall Filtering policy rule
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZIAFirewallFilteringRuleUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAFirewallFilteringRuleUser)(nil)).Elem()
}

func (i GetZIAFirewallFilteringRuleUserArgs) ToGetZIAFirewallFilteringRuleUserOutput() GetZIAFirewallFilteringRuleUserOutput {
	return i.ToGetZIAFirewallFilteringRuleUserOutputWithContext(context.Background())
}

func (i GetZIAFirewallFilteringRuleUserArgs) ToGetZIAFirewallFilteringRuleUserOutputWithContext(ctx context.Context) GetZIAFirewallFilteringRuleUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAFirewallFilteringRuleUserOutput)
}

// GetZIAFirewallFilteringRuleUserArrayInput is an input type that accepts GetZIAFirewallFilteringRuleUserArray and GetZIAFirewallFilteringRuleUserArrayOutput values.
// You can construct a concrete instance of `GetZIAFirewallFilteringRuleUserArrayInput` via:
//
//	GetZIAFirewallFilteringRuleUserArray{ GetZIAFirewallFilteringRuleUserArgs{...} }
type GetZIAFirewallFilteringRuleUserArrayInput interface {
	pulumi.Input

	ToGetZIAFirewallFilteringRuleUserArrayOutput() GetZIAFirewallFilteringRuleUserArrayOutput
	ToGetZIAFirewallFilteringRuleUserArrayOutputWithContext(context.Context) GetZIAFirewallFilteringRuleUserArrayOutput
}

type GetZIAFirewallFilteringRuleUserArray []GetZIAFirewallFilteringRuleUserInput

func (GetZIAFirewallFilteringRuleUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAFirewallFilteringRuleUser)(nil)).Elem()
}

func (i GetZIAFirewallFilteringRuleUserArray) ToGetZIAFirewallFilteringRuleUserArrayOutput() GetZIAFirewallFilteringRuleUserArrayOutput {
	return i.ToGetZIAFirewallFilteringRuleUserArrayOutputWithContext(context.Background())
}

func (i GetZIAFirewallFilteringRuleUserArray) ToGetZIAFirewallFilteringRuleUserArrayOutputWithContext(ctx context.Context) GetZIAFirewallFilteringRuleUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAFirewallFilteringRuleUserArrayOutput)
}

type GetZIAFirewallFilteringRuleUserOutput struct{ *pulumi.OutputState }

func (GetZIAFirewallFilteringRuleUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAFirewallFilteringRuleUser)(nil)).Elem()
}

func (o GetZIAFirewallFilteringRuleUserOutput) ToGetZIAFirewallFilteringRuleUserOutput() GetZIAFirewallFilteringRuleUserOutput {
	return o
}

func (o GetZIAFirewallFilteringRuleUserOutput) ToGetZIAFirewallFilteringRuleUserOutputWithContext(ctx context.Context) GetZIAFirewallFilteringRuleUserOutput {
	return o
}

// (Map of String)
func (o GetZIAFirewallFilteringRuleUserOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZIAFirewallFilteringRuleUser) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// Unique identifier for the Firewall Filtering policy rule
func (o GetZIAFirewallFilteringRuleUserOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIAFirewallFilteringRuleUser) int { return v.Id }).(pulumi.IntOutput)
}

// Name of the Firewall Filtering policy rule
func (o GetZIAFirewallFilteringRuleUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIAFirewallFilteringRuleUser) string { return v.Name }).(pulumi.StringOutput)
}

type GetZIAFirewallFilteringRuleUserArrayOutput struct{ *pulumi.OutputState }

func (GetZIAFirewallFilteringRuleUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAFirewallFilteringRuleUser)(nil)).Elem()
}

func (o GetZIAFirewallFilteringRuleUserArrayOutput) ToGetZIAFirewallFilteringRuleUserArrayOutput() GetZIAFirewallFilteringRuleUserArrayOutput {
	return o
}

func (o GetZIAFirewallFilteringRuleUserArrayOutput) ToGetZIAFirewallFilteringRuleUserArrayOutputWithContext(ctx context.Context) GetZIAFirewallFilteringRuleUserArrayOutput {
	return o
}

func (o GetZIAFirewallFilteringRuleUserArrayOutput) Index(i pulumi.IntInput) GetZIAFirewallFilteringRuleUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIAFirewallFilteringRuleUser {
		return vs[0].([]GetZIAFirewallFilteringRuleUser)[vs[1].(int)]
	}).(GetZIAFirewallFilteringRuleUserOutput)
}

type GetZIALocationGroupsDynamicLocationGroupCriteria struct {
	// (Block List)
	Cities []GetZIALocationGroupsDynamicLocationGroupCriteriaCity `pulumi:"cities"`
	// (List of String) One or more countries from a predefined set
	Countries []string `pulumi:"countries"`
	// (Boolean) Enable Bandwidth Control. When set to true, Bandwidth Control is enabled for the location.
	EnableBandwidthControl bool `pulumi:"enableBandwidthControl"`
	// (Boolean) Enable Caution. When set to true, a caution notifcation is enabled for the location.
	EnableCaution bool `pulumi:"enableCaution"`
	// (Boolean) Enable `XFF` Forwarding. When set to true, traffic is passed to Zscaler Cloud via the X-Forwarded-For (XFF) header.
	EnableXffForwarding bool `pulumi:"enableXffForwarding"`
	// (Boolean) Enable AUP. When set to true, AUP is enabled for the location.
	EnforceAup bool `pulumi:"enforceAup"`
	// (Boolean) Enforce Authentication. Required when ports are enabled, IP Surrogate is enabled, or Kerberos Authentication is enabled.
	EnforceAuthentication bool `pulumi:"enforceAuthentication"`
	// (Boolean) Enable Firewall. When set to true, Firewall is enabled for the location.
	EnforceFirewallControl bool `pulumi:"enforceFirewallControl"`
	// (Block List)
	ManagedBies []GetZIALocationGroupsDynamicLocationGroupCriteriaManagedBy `pulumi:"managedBies"`
	// Location group name
	Names []GetZIALocationGroupsDynamicLocationGroupCriteriaName `pulumi:"names"`
	// (List of String) One or more location profiles from a predefined set
	Profiles []string `pulumi:"profiles"`
}

// GetZIALocationGroupsDynamicLocationGroupCriteriaInput is an input type that accepts GetZIALocationGroupsDynamicLocationGroupCriteriaArgs and GetZIALocationGroupsDynamicLocationGroupCriteriaOutput values.
// You can construct a concrete instance of `GetZIALocationGroupsDynamicLocationGroupCriteriaInput` via:
//
//	GetZIALocationGroupsDynamicLocationGroupCriteriaArgs{...}
type GetZIALocationGroupsDynamicLocationGroupCriteriaInput interface {
	pulumi.Input

	ToGetZIALocationGroupsDynamicLocationGroupCriteriaOutput() GetZIALocationGroupsDynamicLocationGroupCriteriaOutput
	ToGetZIALocationGroupsDynamicLocationGroupCriteriaOutputWithContext(context.Context) GetZIALocationGroupsDynamicLocationGroupCriteriaOutput
}

type GetZIALocationGroupsDynamicLocationGroupCriteriaArgs struct {
	// (Block List)
	Cities GetZIALocationGroupsDynamicLocationGroupCriteriaCityArrayInput `pulumi:"cities"`
	// (List of String) One or more countries from a predefined set
	Countries pulumi.StringArrayInput `pulumi:"countries"`
	// (Boolean) Enable Bandwidth Control. When set to true, Bandwidth Control is enabled for the location.
	EnableBandwidthControl pulumi.BoolInput `pulumi:"enableBandwidthControl"`
	// (Boolean) Enable Caution. When set to true, a caution notifcation is enabled for the location.
	EnableCaution pulumi.BoolInput `pulumi:"enableCaution"`
	// (Boolean) Enable `XFF` Forwarding. When set to true, traffic is passed to Zscaler Cloud via the X-Forwarded-For (XFF) header.
	EnableXffForwarding pulumi.BoolInput `pulumi:"enableXffForwarding"`
	// (Boolean) Enable AUP. When set to true, AUP is enabled for the location.
	EnforceAup pulumi.BoolInput `pulumi:"enforceAup"`
	// (Boolean) Enforce Authentication. Required when ports are enabled, IP Surrogate is enabled, or Kerberos Authentication is enabled.
	EnforceAuthentication pulumi.BoolInput `pulumi:"enforceAuthentication"`
	// (Boolean) Enable Firewall. When set to true, Firewall is enabled for the location.
	EnforceFirewallControl pulumi.BoolInput `pulumi:"enforceFirewallControl"`
	// (Block List)
	ManagedBies GetZIALocationGroupsDynamicLocationGroupCriteriaManagedByArrayInput `pulumi:"managedBies"`
	// Location group name
	Names GetZIALocationGroupsDynamicLocationGroupCriteriaNameArrayInput `pulumi:"names"`
	// (List of String) One or more location profiles from a predefined set
	Profiles pulumi.StringArrayInput `pulumi:"profiles"`
}

func (GetZIALocationGroupsDynamicLocationGroupCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIALocationGroupsDynamicLocationGroupCriteria)(nil)).Elem()
}

func (i GetZIALocationGroupsDynamicLocationGroupCriteriaArgs) ToGetZIALocationGroupsDynamicLocationGroupCriteriaOutput() GetZIALocationGroupsDynamicLocationGroupCriteriaOutput {
	return i.ToGetZIALocationGroupsDynamicLocationGroupCriteriaOutputWithContext(context.Background())
}

func (i GetZIALocationGroupsDynamicLocationGroupCriteriaArgs) ToGetZIALocationGroupsDynamicLocationGroupCriteriaOutputWithContext(ctx context.Context) GetZIALocationGroupsDynamicLocationGroupCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIALocationGroupsDynamicLocationGroupCriteriaOutput)
}

// GetZIALocationGroupsDynamicLocationGroupCriteriaArrayInput is an input type that accepts GetZIALocationGroupsDynamicLocationGroupCriteriaArray and GetZIALocationGroupsDynamicLocationGroupCriteriaArrayOutput values.
// You can construct a concrete instance of `GetZIALocationGroupsDynamicLocationGroupCriteriaArrayInput` via:
//
//	GetZIALocationGroupsDynamicLocationGroupCriteriaArray{ GetZIALocationGroupsDynamicLocationGroupCriteriaArgs{...} }
type GetZIALocationGroupsDynamicLocationGroupCriteriaArrayInput interface {
	pulumi.Input

	ToGetZIALocationGroupsDynamicLocationGroupCriteriaArrayOutput() GetZIALocationGroupsDynamicLocationGroupCriteriaArrayOutput
	ToGetZIALocationGroupsDynamicLocationGroupCriteriaArrayOutputWithContext(context.Context) GetZIALocationGroupsDynamicLocationGroupCriteriaArrayOutput
}

type GetZIALocationGroupsDynamicLocationGroupCriteriaArray []GetZIALocationGroupsDynamicLocationGroupCriteriaInput

func (GetZIALocationGroupsDynamicLocationGroupCriteriaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIALocationGroupsDynamicLocationGroupCriteria)(nil)).Elem()
}

func (i GetZIALocationGroupsDynamicLocationGroupCriteriaArray) ToGetZIALocationGroupsDynamicLocationGroupCriteriaArrayOutput() GetZIALocationGroupsDynamicLocationGroupCriteriaArrayOutput {
	return i.ToGetZIALocationGroupsDynamicLocationGroupCriteriaArrayOutputWithContext(context.Background())
}

func (i GetZIALocationGroupsDynamicLocationGroupCriteriaArray) ToGetZIALocationGroupsDynamicLocationGroupCriteriaArrayOutputWithContext(ctx context.Context) GetZIALocationGroupsDynamicLocationGroupCriteriaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIALocationGroupsDynamicLocationGroupCriteriaArrayOutput)
}

type GetZIALocationGroupsDynamicLocationGroupCriteriaOutput struct{ *pulumi.OutputState }

func (GetZIALocationGroupsDynamicLocationGroupCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIALocationGroupsDynamicLocationGroupCriteria)(nil)).Elem()
}

func (o GetZIALocationGroupsDynamicLocationGroupCriteriaOutput) ToGetZIALocationGroupsDynamicLocationGroupCriteriaOutput() GetZIALocationGroupsDynamicLocationGroupCriteriaOutput {
	return o
}

func (o GetZIALocationGroupsDynamicLocationGroupCriteriaOutput) ToGetZIALocationGroupsDynamicLocationGroupCriteriaOutputWithContext(ctx context.Context) GetZIALocationGroupsDynamicLocationGroupCriteriaOutput {
	return o
}

// (Block List)
func (o GetZIALocationGroupsDynamicLocationGroupCriteriaOutput) Cities() GetZIALocationGroupsDynamicLocationGroupCriteriaCityArrayOutput {
	return o.ApplyT(func(v GetZIALocationGroupsDynamicLocationGroupCriteria) []GetZIALocationGroupsDynamicLocationGroupCriteriaCity {
		return v.Cities
	}).(GetZIALocationGroupsDynamicLocationGroupCriteriaCityArrayOutput)
}

// (List of String) One or more countries from a predefined set
func (o GetZIALocationGroupsDynamicLocationGroupCriteriaOutput) Countries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetZIALocationGroupsDynamicLocationGroupCriteria) []string { return v.Countries }).(pulumi.StringArrayOutput)
}

// (Boolean) Enable Bandwidth Control. When set to true, Bandwidth Control is enabled for the location.
func (o GetZIALocationGroupsDynamicLocationGroupCriteriaOutput) EnableBandwidthControl() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZIALocationGroupsDynamicLocationGroupCriteria) bool { return v.EnableBandwidthControl }).(pulumi.BoolOutput)
}

// (Boolean) Enable Caution. When set to true, a caution notifcation is enabled for the location.
func (o GetZIALocationGroupsDynamicLocationGroupCriteriaOutput) EnableCaution() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZIALocationGroupsDynamicLocationGroupCriteria) bool { return v.EnableCaution }).(pulumi.BoolOutput)
}

// (Boolean) Enable `XFF` Forwarding. When set to true, traffic is passed to Zscaler Cloud via the X-Forwarded-For (XFF) header.
func (o GetZIALocationGroupsDynamicLocationGroupCriteriaOutput) EnableXffForwarding() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZIALocationGroupsDynamicLocationGroupCriteria) bool { return v.EnableXffForwarding }).(pulumi.BoolOutput)
}

// (Boolean) Enable AUP. When set to true, AUP is enabled for the location.
func (o GetZIALocationGroupsDynamicLocationGroupCriteriaOutput) EnforceAup() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZIALocationGroupsDynamicLocationGroupCriteria) bool { return v.EnforceAup }).(pulumi.BoolOutput)
}

// (Boolean) Enforce Authentication. Required when ports are enabled, IP Surrogate is enabled, or Kerberos Authentication is enabled.
func (o GetZIALocationGroupsDynamicLocationGroupCriteriaOutput) EnforceAuthentication() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZIALocationGroupsDynamicLocationGroupCriteria) bool { return v.EnforceAuthentication }).(pulumi.BoolOutput)
}

// (Boolean) Enable Firewall. When set to true, Firewall is enabled for the location.
func (o GetZIALocationGroupsDynamicLocationGroupCriteriaOutput) EnforceFirewallControl() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZIALocationGroupsDynamicLocationGroupCriteria) bool { return v.EnforceFirewallControl }).(pulumi.BoolOutput)
}

// (Block List)
func (o GetZIALocationGroupsDynamicLocationGroupCriteriaOutput) ManagedBies() GetZIALocationGroupsDynamicLocationGroupCriteriaManagedByArrayOutput {
	return o.ApplyT(func(v GetZIALocationGroupsDynamicLocationGroupCriteria) []GetZIALocationGroupsDynamicLocationGroupCriteriaManagedBy {
		return v.ManagedBies
	}).(GetZIALocationGroupsDynamicLocationGroupCriteriaManagedByArrayOutput)
}

// Location group name
func (o GetZIALocationGroupsDynamicLocationGroupCriteriaOutput) Names() GetZIALocationGroupsDynamicLocationGroupCriteriaNameArrayOutput {
	return o.ApplyT(func(v GetZIALocationGroupsDynamicLocationGroupCriteria) []GetZIALocationGroupsDynamicLocationGroupCriteriaName {
		return v.Names
	}).(GetZIALocationGroupsDynamicLocationGroupCriteriaNameArrayOutput)
}

// (List of String) One or more location profiles from a predefined set
func (o GetZIALocationGroupsDynamicLocationGroupCriteriaOutput) Profiles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetZIALocationGroupsDynamicLocationGroupCriteria) []string { return v.Profiles }).(pulumi.StringArrayOutput)
}

type GetZIALocationGroupsDynamicLocationGroupCriteriaArrayOutput struct{ *pulumi.OutputState }

func (GetZIALocationGroupsDynamicLocationGroupCriteriaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIALocationGroupsDynamicLocationGroupCriteria)(nil)).Elem()
}

func (o GetZIALocationGroupsDynamicLocationGroupCriteriaArrayOutput) ToGetZIALocationGroupsDynamicLocationGroupCriteriaArrayOutput() GetZIALocationGroupsDynamicLocationGroupCriteriaArrayOutput {
	return o
}

func (o GetZIALocationGroupsDynamicLocationGroupCriteriaArrayOutput) ToGetZIALocationGroupsDynamicLocationGroupCriteriaArrayOutputWithContext(ctx context.Context) GetZIALocationGroupsDynamicLocationGroupCriteriaArrayOutput {
	return o
}

func (o GetZIALocationGroupsDynamicLocationGroupCriteriaArrayOutput) Index(i pulumi.IntInput) GetZIALocationGroupsDynamicLocationGroupCriteriaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIALocationGroupsDynamicLocationGroupCriteria {
		return vs[0].([]GetZIALocationGroupsDynamicLocationGroupCriteria)[vs[1].(int)]
	}).(GetZIALocationGroupsDynamicLocationGroupCriteriaOutput)
}

type GetZIALocationGroupsDynamicLocationGroupCriteriaCity struct {
	// (String) String value to be matched or partially matched
	MatchString *string `pulumi:"matchString"`
	// (String) Operator that performs match action
	MatchType *string `pulumi:"matchType"`
}

// GetZIALocationGroupsDynamicLocationGroupCriteriaCityInput is an input type that accepts GetZIALocationGroupsDynamicLocationGroupCriteriaCityArgs and GetZIALocationGroupsDynamicLocationGroupCriteriaCityOutput values.
// You can construct a concrete instance of `GetZIALocationGroupsDynamicLocationGroupCriteriaCityInput` via:
//
//	GetZIALocationGroupsDynamicLocationGroupCriteriaCityArgs{...}
type GetZIALocationGroupsDynamicLocationGroupCriteriaCityInput interface {
	pulumi.Input

	ToGetZIALocationGroupsDynamicLocationGroupCriteriaCityOutput() GetZIALocationGroupsDynamicLocationGroupCriteriaCityOutput
	ToGetZIALocationGroupsDynamicLocationGroupCriteriaCityOutputWithContext(context.Context) GetZIALocationGroupsDynamicLocationGroupCriteriaCityOutput
}

type GetZIALocationGroupsDynamicLocationGroupCriteriaCityArgs struct {
	// (String) String value to be matched or partially matched
	MatchString pulumi.StringPtrInput `pulumi:"matchString"`
	// (String) Operator that performs match action
	MatchType pulumi.StringPtrInput `pulumi:"matchType"`
}

func (GetZIALocationGroupsDynamicLocationGroupCriteriaCityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIALocationGroupsDynamicLocationGroupCriteriaCity)(nil)).Elem()
}

func (i GetZIALocationGroupsDynamicLocationGroupCriteriaCityArgs) ToGetZIALocationGroupsDynamicLocationGroupCriteriaCityOutput() GetZIALocationGroupsDynamicLocationGroupCriteriaCityOutput {
	return i.ToGetZIALocationGroupsDynamicLocationGroupCriteriaCityOutputWithContext(context.Background())
}

func (i GetZIALocationGroupsDynamicLocationGroupCriteriaCityArgs) ToGetZIALocationGroupsDynamicLocationGroupCriteriaCityOutputWithContext(ctx context.Context) GetZIALocationGroupsDynamicLocationGroupCriteriaCityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIALocationGroupsDynamicLocationGroupCriteriaCityOutput)
}

// GetZIALocationGroupsDynamicLocationGroupCriteriaCityArrayInput is an input type that accepts GetZIALocationGroupsDynamicLocationGroupCriteriaCityArray and GetZIALocationGroupsDynamicLocationGroupCriteriaCityArrayOutput values.
// You can construct a concrete instance of `GetZIALocationGroupsDynamicLocationGroupCriteriaCityArrayInput` via:
//
//	GetZIALocationGroupsDynamicLocationGroupCriteriaCityArray{ GetZIALocationGroupsDynamicLocationGroupCriteriaCityArgs{...} }
type GetZIALocationGroupsDynamicLocationGroupCriteriaCityArrayInput interface {
	pulumi.Input

	ToGetZIALocationGroupsDynamicLocationGroupCriteriaCityArrayOutput() GetZIALocationGroupsDynamicLocationGroupCriteriaCityArrayOutput
	ToGetZIALocationGroupsDynamicLocationGroupCriteriaCityArrayOutputWithContext(context.Context) GetZIALocationGroupsDynamicLocationGroupCriteriaCityArrayOutput
}

type GetZIALocationGroupsDynamicLocationGroupCriteriaCityArray []GetZIALocationGroupsDynamicLocationGroupCriteriaCityInput

func (GetZIALocationGroupsDynamicLocationGroupCriteriaCityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIALocationGroupsDynamicLocationGroupCriteriaCity)(nil)).Elem()
}

func (i GetZIALocationGroupsDynamicLocationGroupCriteriaCityArray) ToGetZIALocationGroupsDynamicLocationGroupCriteriaCityArrayOutput() GetZIALocationGroupsDynamicLocationGroupCriteriaCityArrayOutput {
	return i.ToGetZIALocationGroupsDynamicLocationGroupCriteriaCityArrayOutputWithContext(context.Background())
}

func (i GetZIALocationGroupsDynamicLocationGroupCriteriaCityArray) ToGetZIALocationGroupsDynamicLocationGroupCriteriaCityArrayOutputWithContext(ctx context.Context) GetZIALocationGroupsDynamicLocationGroupCriteriaCityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIALocationGroupsDynamicLocationGroupCriteriaCityArrayOutput)
}

type GetZIALocationGroupsDynamicLocationGroupCriteriaCityOutput struct{ *pulumi.OutputState }

func (GetZIALocationGroupsDynamicLocationGroupCriteriaCityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIALocationGroupsDynamicLocationGroupCriteriaCity)(nil)).Elem()
}

func (o GetZIALocationGroupsDynamicLocationGroupCriteriaCityOutput) ToGetZIALocationGroupsDynamicLocationGroupCriteriaCityOutput() GetZIALocationGroupsDynamicLocationGroupCriteriaCityOutput {
	return o
}

func (o GetZIALocationGroupsDynamicLocationGroupCriteriaCityOutput) ToGetZIALocationGroupsDynamicLocationGroupCriteriaCityOutputWithContext(ctx context.Context) GetZIALocationGroupsDynamicLocationGroupCriteriaCityOutput {
	return o
}

// (String) String value to be matched or partially matched
func (o GetZIALocationGroupsDynamicLocationGroupCriteriaCityOutput) MatchString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZIALocationGroupsDynamicLocationGroupCriteriaCity) *string { return v.MatchString }).(pulumi.StringPtrOutput)
}

// (String) Operator that performs match action
func (o GetZIALocationGroupsDynamicLocationGroupCriteriaCityOutput) MatchType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZIALocationGroupsDynamicLocationGroupCriteriaCity) *string { return v.MatchType }).(pulumi.StringPtrOutput)
}

type GetZIALocationGroupsDynamicLocationGroupCriteriaCityArrayOutput struct{ *pulumi.OutputState }

func (GetZIALocationGroupsDynamicLocationGroupCriteriaCityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIALocationGroupsDynamicLocationGroupCriteriaCity)(nil)).Elem()
}

func (o GetZIALocationGroupsDynamicLocationGroupCriteriaCityArrayOutput) ToGetZIALocationGroupsDynamicLocationGroupCriteriaCityArrayOutput() GetZIALocationGroupsDynamicLocationGroupCriteriaCityArrayOutput {
	return o
}

func (o GetZIALocationGroupsDynamicLocationGroupCriteriaCityArrayOutput) ToGetZIALocationGroupsDynamicLocationGroupCriteriaCityArrayOutputWithContext(ctx context.Context) GetZIALocationGroupsDynamicLocationGroupCriteriaCityArrayOutput {
	return o
}

func (o GetZIALocationGroupsDynamicLocationGroupCriteriaCityArrayOutput) Index(i pulumi.IntInput) GetZIALocationGroupsDynamicLocationGroupCriteriaCityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIALocationGroupsDynamicLocationGroupCriteriaCity {
		return vs[0].([]GetZIALocationGroupsDynamicLocationGroupCriteriaCity)[vs[1].(int)]
	}).(GetZIALocationGroupsDynamicLocationGroupCriteriaCityOutput)
}

type GetZIALocationGroupsDynamicLocationGroupCriteriaManagedBy struct {
	// (Map of String)
	Extensions map[string]string `pulumi:"extensions"`
	// Unique identifier for the location group
	Id int `pulumi:"id"`
	// Location group name
	Name string `pulumi:"name"`
}

// GetZIALocationGroupsDynamicLocationGroupCriteriaManagedByInput is an input type that accepts GetZIALocationGroupsDynamicLocationGroupCriteriaManagedByArgs and GetZIALocationGroupsDynamicLocationGroupCriteriaManagedByOutput values.
// You can construct a concrete instance of `GetZIALocationGroupsDynamicLocationGroupCriteriaManagedByInput` via:
//
//	GetZIALocationGroupsDynamicLocationGroupCriteriaManagedByArgs{...}
type GetZIALocationGroupsDynamicLocationGroupCriteriaManagedByInput interface {
	pulumi.Input

	ToGetZIALocationGroupsDynamicLocationGroupCriteriaManagedByOutput() GetZIALocationGroupsDynamicLocationGroupCriteriaManagedByOutput
	ToGetZIALocationGroupsDynamicLocationGroupCriteriaManagedByOutputWithContext(context.Context) GetZIALocationGroupsDynamicLocationGroupCriteriaManagedByOutput
}

type GetZIALocationGroupsDynamicLocationGroupCriteriaManagedByArgs struct {
	// (Map of String)
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// Unique identifier for the location group
	Id pulumi.IntInput `pulumi:"id"`
	// Location group name
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZIALocationGroupsDynamicLocationGroupCriteriaManagedByArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIALocationGroupsDynamicLocationGroupCriteriaManagedBy)(nil)).Elem()
}

func (i GetZIALocationGroupsDynamicLocationGroupCriteriaManagedByArgs) ToGetZIALocationGroupsDynamicLocationGroupCriteriaManagedByOutput() GetZIALocationGroupsDynamicLocationGroupCriteriaManagedByOutput {
	return i.ToGetZIALocationGroupsDynamicLocationGroupCriteriaManagedByOutputWithContext(context.Background())
}

func (i GetZIALocationGroupsDynamicLocationGroupCriteriaManagedByArgs) ToGetZIALocationGroupsDynamicLocationGroupCriteriaManagedByOutputWithContext(ctx context.Context) GetZIALocationGroupsDynamicLocationGroupCriteriaManagedByOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIALocationGroupsDynamicLocationGroupCriteriaManagedByOutput)
}

// GetZIALocationGroupsDynamicLocationGroupCriteriaManagedByArrayInput is an input type that accepts GetZIALocationGroupsDynamicLocationGroupCriteriaManagedByArray and GetZIALocationGroupsDynamicLocationGroupCriteriaManagedByArrayOutput values.
// You can construct a concrete instance of `GetZIALocationGroupsDynamicLocationGroupCriteriaManagedByArrayInput` via:
//
//	GetZIALocationGroupsDynamicLocationGroupCriteriaManagedByArray{ GetZIALocationGroupsDynamicLocationGroupCriteriaManagedByArgs{...} }
type GetZIALocationGroupsDynamicLocationGroupCriteriaManagedByArrayInput interface {
	pulumi.Input

	ToGetZIALocationGroupsDynamicLocationGroupCriteriaManagedByArrayOutput() GetZIALocationGroupsDynamicLocationGroupCriteriaManagedByArrayOutput
	ToGetZIALocationGroupsDynamicLocationGroupCriteriaManagedByArrayOutputWithContext(context.Context) GetZIALocationGroupsDynamicLocationGroupCriteriaManagedByArrayOutput
}

type GetZIALocationGroupsDynamicLocationGroupCriteriaManagedByArray []GetZIALocationGroupsDynamicLocationGroupCriteriaManagedByInput

func (GetZIALocationGroupsDynamicLocationGroupCriteriaManagedByArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIALocationGroupsDynamicLocationGroupCriteriaManagedBy)(nil)).Elem()
}

func (i GetZIALocationGroupsDynamicLocationGroupCriteriaManagedByArray) ToGetZIALocationGroupsDynamicLocationGroupCriteriaManagedByArrayOutput() GetZIALocationGroupsDynamicLocationGroupCriteriaManagedByArrayOutput {
	return i.ToGetZIALocationGroupsDynamicLocationGroupCriteriaManagedByArrayOutputWithContext(context.Background())
}

func (i GetZIALocationGroupsDynamicLocationGroupCriteriaManagedByArray) ToGetZIALocationGroupsDynamicLocationGroupCriteriaManagedByArrayOutputWithContext(ctx context.Context) GetZIALocationGroupsDynamicLocationGroupCriteriaManagedByArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIALocationGroupsDynamicLocationGroupCriteriaManagedByArrayOutput)
}

type GetZIALocationGroupsDynamicLocationGroupCriteriaManagedByOutput struct{ *pulumi.OutputState }

func (GetZIALocationGroupsDynamicLocationGroupCriteriaManagedByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIALocationGroupsDynamicLocationGroupCriteriaManagedBy)(nil)).Elem()
}

func (o GetZIALocationGroupsDynamicLocationGroupCriteriaManagedByOutput) ToGetZIALocationGroupsDynamicLocationGroupCriteriaManagedByOutput() GetZIALocationGroupsDynamicLocationGroupCriteriaManagedByOutput {
	return o
}

func (o GetZIALocationGroupsDynamicLocationGroupCriteriaManagedByOutput) ToGetZIALocationGroupsDynamicLocationGroupCriteriaManagedByOutputWithContext(ctx context.Context) GetZIALocationGroupsDynamicLocationGroupCriteriaManagedByOutput {
	return o
}

// (Map of String)
func (o GetZIALocationGroupsDynamicLocationGroupCriteriaManagedByOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZIALocationGroupsDynamicLocationGroupCriteriaManagedBy) map[string]string {
		return v.Extensions
	}).(pulumi.StringMapOutput)
}

// Unique identifier for the location group
func (o GetZIALocationGroupsDynamicLocationGroupCriteriaManagedByOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIALocationGroupsDynamicLocationGroupCriteriaManagedBy) int { return v.Id }).(pulumi.IntOutput)
}

// Location group name
func (o GetZIALocationGroupsDynamicLocationGroupCriteriaManagedByOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIALocationGroupsDynamicLocationGroupCriteriaManagedBy) string { return v.Name }).(pulumi.StringOutput)
}

type GetZIALocationGroupsDynamicLocationGroupCriteriaManagedByArrayOutput struct{ *pulumi.OutputState }

func (GetZIALocationGroupsDynamicLocationGroupCriteriaManagedByArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIALocationGroupsDynamicLocationGroupCriteriaManagedBy)(nil)).Elem()
}

func (o GetZIALocationGroupsDynamicLocationGroupCriteriaManagedByArrayOutput) ToGetZIALocationGroupsDynamicLocationGroupCriteriaManagedByArrayOutput() GetZIALocationGroupsDynamicLocationGroupCriteriaManagedByArrayOutput {
	return o
}

func (o GetZIALocationGroupsDynamicLocationGroupCriteriaManagedByArrayOutput) ToGetZIALocationGroupsDynamicLocationGroupCriteriaManagedByArrayOutputWithContext(ctx context.Context) GetZIALocationGroupsDynamicLocationGroupCriteriaManagedByArrayOutput {
	return o
}

func (o GetZIALocationGroupsDynamicLocationGroupCriteriaManagedByArrayOutput) Index(i pulumi.IntInput) GetZIALocationGroupsDynamicLocationGroupCriteriaManagedByOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIALocationGroupsDynamicLocationGroupCriteriaManagedBy {
		return vs[0].([]GetZIALocationGroupsDynamicLocationGroupCriteriaManagedBy)[vs[1].(int)]
	}).(GetZIALocationGroupsDynamicLocationGroupCriteriaManagedByOutput)
}

type GetZIALocationGroupsDynamicLocationGroupCriteriaName struct {
	// (String) String value to be matched or partially matched
	MatchString *string `pulumi:"matchString"`
	// (String) Operator that performs match action
	MatchType *string `pulumi:"matchType"`
}

// GetZIALocationGroupsDynamicLocationGroupCriteriaNameInput is an input type that accepts GetZIALocationGroupsDynamicLocationGroupCriteriaNameArgs and GetZIALocationGroupsDynamicLocationGroupCriteriaNameOutput values.
// You can construct a concrete instance of `GetZIALocationGroupsDynamicLocationGroupCriteriaNameInput` via:
//
//	GetZIALocationGroupsDynamicLocationGroupCriteriaNameArgs{...}
type GetZIALocationGroupsDynamicLocationGroupCriteriaNameInput interface {
	pulumi.Input

	ToGetZIALocationGroupsDynamicLocationGroupCriteriaNameOutput() GetZIALocationGroupsDynamicLocationGroupCriteriaNameOutput
	ToGetZIALocationGroupsDynamicLocationGroupCriteriaNameOutputWithContext(context.Context) GetZIALocationGroupsDynamicLocationGroupCriteriaNameOutput
}

type GetZIALocationGroupsDynamicLocationGroupCriteriaNameArgs struct {
	// (String) String value to be matched or partially matched
	MatchString pulumi.StringPtrInput `pulumi:"matchString"`
	// (String) Operator that performs match action
	MatchType pulumi.StringPtrInput `pulumi:"matchType"`
}

func (GetZIALocationGroupsDynamicLocationGroupCriteriaNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIALocationGroupsDynamicLocationGroupCriteriaName)(nil)).Elem()
}

func (i GetZIALocationGroupsDynamicLocationGroupCriteriaNameArgs) ToGetZIALocationGroupsDynamicLocationGroupCriteriaNameOutput() GetZIALocationGroupsDynamicLocationGroupCriteriaNameOutput {
	return i.ToGetZIALocationGroupsDynamicLocationGroupCriteriaNameOutputWithContext(context.Background())
}

func (i GetZIALocationGroupsDynamicLocationGroupCriteriaNameArgs) ToGetZIALocationGroupsDynamicLocationGroupCriteriaNameOutputWithContext(ctx context.Context) GetZIALocationGroupsDynamicLocationGroupCriteriaNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIALocationGroupsDynamicLocationGroupCriteriaNameOutput)
}

// GetZIALocationGroupsDynamicLocationGroupCriteriaNameArrayInput is an input type that accepts GetZIALocationGroupsDynamicLocationGroupCriteriaNameArray and GetZIALocationGroupsDynamicLocationGroupCriteriaNameArrayOutput values.
// You can construct a concrete instance of `GetZIALocationGroupsDynamicLocationGroupCriteriaNameArrayInput` via:
//
//	GetZIALocationGroupsDynamicLocationGroupCriteriaNameArray{ GetZIALocationGroupsDynamicLocationGroupCriteriaNameArgs{...} }
type GetZIALocationGroupsDynamicLocationGroupCriteriaNameArrayInput interface {
	pulumi.Input

	ToGetZIALocationGroupsDynamicLocationGroupCriteriaNameArrayOutput() GetZIALocationGroupsDynamicLocationGroupCriteriaNameArrayOutput
	ToGetZIALocationGroupsDynamicLocationGroupCriteriaNameArrayOutputWithContext(context.Context) GetZIALocationGroupsDynamicLocationGroupCriteriaNameArrayOutput
}

type GetZIALocationGroupsDynamicLocationGroupCriteriaNameArray []GetZIALocationGroupsDynamicLocationGroupCriteriaNameInput

func (GetZIALocationGroupsDynamicLocationGroupCriteriaNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIALocationGroupsDynamicLocationGroupCriteriaName)(nil)).Elem()
}

func (i GetZIALocationGroupsDynamicLocationGroupCriteriaNameArray) ToGetZIALocationGroupsDynamicLocationGroupCriteriaNameArrayOutput() GetZIALocationGroupsDynamicLocationGroupCriteriaNameArrayOutput {
	return i.ToGetZIALocationGroupsDynamicLocationGroupCriteriaNameArrayOutputWithContext(context.Background())
}

func (i GetZIALocationGroupsDynamicLocationGroupCriteriaNameArray) ToGetZIALocationGroupsDynamicLocationGroupCriteriaNameArrayOutputWithContext(ctx context.Context) GetZIALocationGroupsDynamicLocationGroupCriteriaNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIALocationGroupsDynamicLocationGroupCriteriaNameArrayOutput)
}

type GetZIALocationGroupsDynamicLocationGroupCriteriaNameOutput struct{ *pulumi.OutputState }

func (GetZIALocationGroupsDynamicLocationGroupCriteriaNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIALocationGroupsDynamicLocationGroupCriteriaName)(nil)).Elem()
}

func (o GetZIALocationGroupsDynamicLocationGroupCriteriaNameOutput) ToGetZIALocationGroupsDynamicLocationGroupCriteriaNameOutput() GetZIALocationGroupsDynamicLocationGroupCriteriaNameOutput {
	return o
}

func (o GetZIALocationGroupsDynamicLocationGroupCriteriaNameOutput) ToGetZIALocationGroupsDynamicLocationGroupCriteriaNameOutputWithContext(ctx context.Context) GetZIALocationGroupsDynamicLocationGroupCriteriaNameOutput {
	return o
}

// (String) String value to be matched or partially matched
func (o GetZIALocationGroupsDynamicLocationGroupCriteriaNameOutput) MatchString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZIALocationGroupsDynamicLocationGroupCriteriaName) *string { return v.MatchString }).(pulumi.StringPtrOutput)
}

// (String) Operator that performs match action
func (o GetZIALocationGroupsDynamicLocationGroupCriteriaNameOutput) MatchType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZIALocationGroupsDynamicLocationGroupCriteriaName) *string { return v.MatchType }).(pulumi.StringPtrOutput)
}

type GetZIALocationGroupsDynamicLocationGroupCriteriaNameArrayOutput struct{ *pulumi.OutputState }

func (GetZIALocationGroupsDynamicLocationGroupCriteriaNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIALocationGroupsDynamicLocationGroupCriteriaName)(nil)).Elem()
}

func (o GetZIALocationGroupsDynamicLocationGroupCriteriaNameArrayOutput) ToGetZIALocationGroupsDynamicLocationGroupCriteriaNameArrayOutput() GetZIALocationGroupsDynamicLocationGroupCriteriaNameArrayOutput {
	return o
}

func (o GetZIALocationGroupsDynamicLocationGroupCriteriaNameArrayOutput) ToGetZIALocationGroupsDynamicLocationGroupCriteriaNameArrayOutputWithContext(ctx context.Context) GetZIALocationGroupsDynamicLocationGroupCriteriaNameArrayOutput {
	return o
}

func (o GetZIALocationGroupsDynamicLocationGroupCriteriaNameArrayOutput) Index(i pulumi.IntInput) GetZIALocationGroupsDynamicLocationGroupCriteriaNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIALocationGroupsDynamicLocationGroupCriteriaName {
		return vs[0].([]GetZIALocationGroupsDynamicLocationGroupCriteriaName)[vs[1].(int)]
	}).(GetZIALocationGroupsDynamicLocationGroupCriteriaNameOutput)
}

type GetZIALocationGroupsLastModUser struct {
	// (Map of String)
	Extensions map[string]string `pulumi:"extensions"`
	// Unique identifier for the location group
	Id int `pulumi:"id"`
	// Location group name
	Name string `pulumi:"name"`
}

// GetZIALocationGroupsLastModUserInput is an input type that accepts GetZIALocationGroupsLastModUserArgs and GetZIALocationGroupsLastModUserOutput values.
// You can construct a concrete instance of `GetZIALocationGroupsLastModUserInput` via:
//
//	GetZIALocationGroupsLastModUserArgs{...}
type GetZIALocationGroupsLastModUserInput interface {
	pulumi.Input

	ToGetZIALocationGroupsLastModUserOutput() GetZIALocationGroupsLastModUserOutput
	ToGetZIALocationGroupsLastModUserOutputWithContext(context.Context) GetZIALocationGroupsLastModUserOutput
}

type GetZIALocationGroupsLastModUserArgs struct {
	// (Map of String)
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// Unique identifier for the location group
	Id pulumi.IntInput `pulumi:"id"`
	// Location group name
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZIALocationGroupsLastModUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIALocationGroupsLastModUser)(nil)).Elem()
}

func (i GetZIALocationGroupsLastModUserArgs) ToGetZIALocationGroupsLastModUserOutput() GetZIALocationGroupsLastModUserOutput {
	return i.ToGetZIALocationGroupsLastModUserOutputWithContext(context.Background())
}

func (i GetZIALocationGroupsLastModUserArgs) ToGetZIALocationGroupsLastModUserOutputWithContext(ctx context.Context) GetZIALocationGroupsLastModUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIALocationGroupsLastModUserOutput)
}

// GetZIALocationGroupsLastModUserArrayInput is an input type that accepts GetZIALocationGroupsLastModUserArray and GetZIALocationGroupsLastModUserArrayOutput values.
// You can construct a concrete instance of `GetZIALocationGroupsLastModUserArrayInput` via:
//
//	GetZIALocationGroupsLastModUserArray{ GetZIALocationGroupsLastModUserArgs{...} }
type GetZIALocationGroupsLastModUserArrayInput interface {
	pulumi.Input

	ToGetZIALocationGroupsLastModUserArrayOutput() GetZIALocationGroupsLastModUserArrayOutput
	ToGetZIALocationGroupsLastModUserArrayOutputWithContext(context.Context) GetZIALocationGroupsLastModUserArrayOutput
}

type GetZIALocationGroupsLastModUserArray []GetZIALocationGroupsLastModUserInput

func (GetZIALocationGroupsLastModUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIALocationGroupsLastModUser)(nil)).Elem()
}

func (i GetZIALocationGroupsLastModUserArray) ToGetZIALocationGroupsLastModUserArrayOutput() GetZIALocationGroupsLastModUserArrayOutput {
	return i.ToGetZIALocationGroupsLastModUserArrayOutputWithContext(context.Background())
}

func (i GetZIALocationGroupsLastModUserArray) ToGetZIALocationGroupsLastModUserArrayOutputWithContext(ctx context.Context) GetZIALocationGroupsLastModUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIALocationGroupsLastModUserArrayOutput)
}

type GetZIALocationGroupsLastModUserOutput struct{ *pulumi.OutputState }

func (GetZIALocationGroupsLastModUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIALocationGroupsLastModUser)(nil)).Elem()
}

func (o GetZIALocationGroupsLastModUserOutput) ToGetZIALocationGroupsLastModUserOutput() GetZIALocationGroupsLastModUserOutput {
	return o
}

func (o GetZIALocationGroupsLastModUserOutput) ToGetZIALocationGroupsLastModUserOutputWithContext(ctx context.Context) GetZIALocationGroupsLastModUserOutput {
	return o
}

// (Map of String)
func (o GetZIALocationGroupsLastModUserOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZIALocationGroupsLastModUser) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// Unique identifier for the location group
func (o GetZIALocationGroupsLastModUserOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIALocationGroupsLastModUser) int { return v.Id }).(pulumi.IntOutput)
}

// Location group name
func (o GetZIALocationGroupsLastModUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIALocationGroupsLastModUser) string { return v.Name }).(pulumi.StringOutput)
}

type GetZIALocationGroupsLastModUserArrayOutput struct{ *pulumi.OutputState }

func (GetZIALocationGroupsLastModUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIALocationGroupsLastModUser)(nil)).Elem()
}

func (o GetZIALocationGroupsLastModUserArrayOutput) ToGetZIALocationGroupsLastModUserArrayOutput() GetZIALocationGroupsLastModUserArrayOutput {
	return o
}

func (o GetZIALocationGroupsLastModUserArrayOutput) ToGetZIALocationGroupsLastModUserArrayOutputWithContext(ctx context.Context) GetZIALocationGroupsLastModUserArrayOutput {
	return o
}

func (o GetZIALocationGroupsLastModUserArrayOutput) Index(i pulumi.IntInput) GetZIALocationGroupsLastModUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIALocationGroupsLastModUser {
		return vs[0].([]GetZIALocationGroupsLastModUser)[vs[1].(int)]
	}).(GetZIALocationGroupsLastModUserOutput)
}

type GetZIALocationGroupsLocation struct {
	// (Map of String)
	Extensions map[string]string `pulumi:"extensions"`
	// Unique identifier for the location group
	Id int `pulumi:"id"`
	// Location group name
	Name string `pulumi:"name"`
}

// GetZIALocationGroupsLocationInput is an input type that accepts GetZIALocationGroupsLocationArgs and GetZIALocationGroupsLocationOutput values.
// You can construct a concrete instance of `GetZIALocationGroupsLocationInput` via:
//
//	GetZIALocationGroupsLocationArgs{...}
type GetZIALocationGroupsLocationInput interface {
	pulumi.Input

	ToGetZIALocationGroupsLocationOutput() GetZIALocationGroupsLocationOutput
	ToGetZIALocationGroupsLocationOutputWithContext(context.Context) GetZIALocationGroupsLocationOutput
}

type GetZIALocationGroupsLocationArgs struct {
	// (Map of String)
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// Unique identifier for the location group
	Id pulumi.IntInput `pulumi:"id"`
	// Location group name
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZIALocationGroupsLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIALocationGroupsLocation)(nil)).Elem()
}

func (i GetZIALocationGroupsLocationArgs) ToGetZIALocationGroupsLocationOutput() GetZIALocationGroupsLocationOutput {
	return i.ToGetZIALocationGroupsLocationOutputWithContext(context.Background())
}

func (i GetZIALocationGroupsLocationArgs) ToGetZIALocationGroupsLocationOutputWithContext(ctx context.Context) GetZIALocationGroupsLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIALocationGroupsLocationOutput)
}

// GetZIALocationGroupsLocationArrayInput is an input type that accepts GetZIALocationGroupsLocationArray and GetZIALocationGroupsLocationArrayOutput values.
// You can construct a concrete instance of `GetZIALocationGroupsLocationArrayInput` via:
//
//	GetZIALocationGroupsLocationArray{ GetZIALocationGroupsLocationArgs{...} }
type GetZIALocationGroupsLocationArrayInput interface {
	pulumi.Input

	ToGetZIALocationGroupsLocationArrayOutput() GetZIALocationGroupsLocationArrayOutput
	ToGetZIALocationGroupsLocationArrayOutputWithContext(context.Context) GetZIALocationGroupsLocationArrayOutput
}

type GetZIALocationGroupsLocationArray []GetZIALocationGroupsLocationInput

func (GetZIALocationGroupsLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIALocationGroupsLocation)(nil)).Elem()
}

func (i GetZIALocationGroupsLocationArray) ToGetZIALocationGroupsLocationArrayOutput() GetZIALocationGroupsLocationArrayOutput {
	return i.ToGetZIALocationGroupsLocationArrayOutputWithContext(context.Background())
}

func (i GetZIALocationGroupsLocationArray) ToGetZIALocationGroupsLocationArrayOutputWithContext(ctx context.Context) GetZIALocationGroupsLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIALocationGroupsLocationArrayOutput)
}

type GetZIALocationGroupsLocationOutput struct{ *pulumi.OutputState }

func (GetZIALocationGroupsLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIALocationGroupsLocation)(nil)).Elem()
}

func (o GetZIALocationGroupsLocationOutput) ToGetZIALocationGroupsLocationOutput() GetZIALocationGroupsLocationOutput {
	return o
}

func (o GetZIALocationGroupsLocationOutput) ToGetZIALocationGroupsLocationOutputWithContext(ctx context.Context) GetZIALocationGroupsLocationOutput {
	return o
}

// (Map of String)
func (o GetZIALocationGroupsLocationOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZIALocationGroupsLocation) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// Unique identifier for the location group
func (o GetZIALocationGroupsLocationOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIALocationGroupsLocation) int { return v.Id }).(pulumi.IntOutput)
}

// Location group name
func (o GetZIALocationGroupsLocationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIALocationGroupsLocation) string { return v.Name }).(pulumi.StringOutput)
}

type GetZIALocationGroupsLocationArrayOutput struct{ *pulumi.OutputState }

func (GetZIALocationGroupsLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIALocationGroupsLocation)(nil)).Elem()
}

func (o GetZIALocationGroupsLocationArrayOutput) ToGetZIALocationGroupsLocationArrayOutput() GetZIALocationGroupsLocationArrayOutput {
	return o
}

func (o GetZIALocationGroupsLocationArrayOutput) ToGetZIALocationGroupsLocationArrayOutputWithContext(ctx context.Context) GetZIALocationGroupsLocationArrayOutput {
	return o
}

func (o GetZIALocationGroupsLocationArrayOutput) Index(i pulumi.IntInput) GetZIALocationGroupsLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIALocationGroupsLocation {
		return vs[0].([]GetZIALocationGroupsLocation)[vs[1].(int)]
	}).(GetZIALocationGroupsLocationOutput)
}

type GetZIALocationManagementVpnCredential struct {
	// (String) Additional information about this VPN credential.
	// Additional information about this VPN credential.
	Comments string `pulumi:"comments"`
	// (String) Fully Qualified Domain Name. Applicable only to `UFQDN` or `XAUTH` (or `HOSTED_MOBILE_USERS`) auth type.
	Fqdn string `pulumi:"fqdn"`
	// The ID of the location to be exported.
	Id int `pulumi:"id"`
	// (List of Object)
	Locations []GetZIALocationManagementVpnCredentialLocation `pulumi:"locations"`
	// (List of Object)
	ManagedBies []GetZIALocationManagementVpnCredentialManagedBy `pulumi:"managedBies"`
	// (String) Pre-shared key. This is a required field for `UFQDN` and IP auth type.
	PreSharedKey string `pulumi:"preSharedKey"`
	// (String) VPN authentication type (i.e., how the VPN credential is sent to the server). It is not modifiable after VpnCredential is created.
	Type string `pulumi:"type"`
}

// GetZIALocationManagementVpnCredentialInput is an input type that accepts GetZIALocationManagementVpnCredentialArgs and GetZIALocationManagementVpnCredentialOutput values.
// You can construct a concrete instance of `GetZIALocationManagementVpnCredentialInput` via:
//
//	GetZIALocationManagementVpnCredentialArgs{...}
type GetZIALocationManagementVpnCredentialInput interface {
	pulumi.Input

	ToGetZIALocationManagementVpnCredentialOutput() GetZIALocationManagementVpnCredentialOutput
	ToGetZIALocationManagementVpnCredentialOutputWithContext(context.Context) GetZIALocationManagementVpnCredentialOutput
}

type GetZIALocationManagementVpnCredentialArgs struct {
	// (String) Additional information about this VPN credential.
	// Additional information about this VPN credential.
	Comments pulumi.StringInput `pulumi:"comments"`
	// (String) Fully Qualified Domain Name. Applicable only to `UFQDN` or `XAUTH` (or `HOSTED_MOBILE_USERS`) auth type.
	Fqdn pulumi.StringInput `pulumi:"fqdn"`
	// The ID of the location to be exported.
	Id pulumi.IntInput `pulumi:"id"`
	// (List of Object)
	Locations GetZIALocationManagementVpnCredentialLocationArrayInput `pulumi:"locations"`
	// (List of Object)
	ManagedBies GetZIALocationManagementVpnCredentialManagedByArrayInput `pulumi:"managedBies"`
	// (String) Pre-shared key. This is a required field for `UFQDN` and IP auth type.
	PreSharedKey pulumi.StringInput `pulumi:"preSharedKey"`
	// (String) VPN authentication type (i.e., how the VPN credential is sent to the server). It is not modifiable after VpnCredential is created.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetZIALocationManagementVpnCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIALocationManagementVpnCredential)(nil)).Elem()
}

func (i GetZIALocationManagementVpnCredentialArgs) ToGetZIALocationManagementVpnCredentialOutput() GetZIALocationManagementVpnCredentialOutput {
	return i.ToGetZIALocationManagementVpnCredentialOutputWithContext(context.Background())
}

func (i GetZIALocationManagementVpnCredentialArgs) ToGetZIALocationManagementVpnCredentialOutputWithContext(ctx context.Context) GetZIALocationManagementVpnCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIALocationManagementVpnCredentialOutput)
}

// GetZIALocationManagementVpnCredentialArrayInput is an input type that accepts GetZIALocationManagementVpnCredentialArray and GetZIALocationManagementVpnCredentialArrayOutput values.
// You can construct a concrete instance of `GetZIALocationManagementVpnCredentialArrayInput` via:
//
//	GetZIALocationManagementVpnCredentialArray{ GetZIALocationManagementVpnCredentialArgs{...} }
type GetZIALocationManagementVpnCredentialArrayInput interface {
	pulumi.Input

	ToGetZIALocationManagementVpnCredentialArrayOutput() GetZIALocationManagementVpnCredentialArrayOutput
	ToGetZIALocationManagementVpnCredentialArrayOutputWithContext(context.Context) GetZIALocationManagementVpnCredentialArrayOutput
}

type GetZIALocationManagementVpnCredentialArray []GetZIALocationManagementVpnCredentialInput

func (GetZIALocationManagementVpnCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIALocationManagementVpnCredential)(nil)).Elem()
}

func (i GetZIALocationManagementVpnCredentialArray) ToGetZIALocationManagementVpnCredentialArrayOutput() GetZIALocationManagementVpnCredentialArrayOutput {
	return i.ToGetZIALocationManagementVpnCredentialArrayOutputWithContext(context.Background())
}

func (i GetZIALocationManagementVpnCredentialArray) ToGetZIALocationManagementVpnCredentialArrayOutputWithContext(ctx context.Context) GetZIALocationManagementVpnCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIALocationManagementVpnCredentialArrayOutput)
}

type GetZIALocationManagementVpnCredentialOutput struct{ *pulumi.OutputState }

func (GetZIALocationManagementVpnCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIALocationManagementVpnCredential)(nil)).Elem()
}

func (o GetZIALocationManagementVpnCredentialOutput) ToGetZIALocationManagementVpnCredentialOutput() GetZIALocationManagementVpnCredentialOutput {
	return o
}

func (o GetZIALocationManagementVpnCredentialOutput) ToGetZIALocationManagementVpnCredentialOutputWithContext(ctx context.Context) GetZIALocationManagementVpnCredentialOutput {
	return o
}

// (String) Additional information about this VPN credential.
// Additional information about this VPN credential.
func (o GetZIALocationManagementVpnCredentialOutput) Comments() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIALocationManagementVpnCredential) string { return v.Comments }).(pulumi.StringOutput)
}

// (String) Fully Qualified Domain Name. Applicable only to `UFQDN` or `XAUTH` (or `HOSTED_MOBILE_USERS`) auth type.
func (o GetZIALocationManagementVpnCredentialOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIALocationManagementVpnCredential) string { return v.Fqdn }).(pulumi.StringOutput)
}

// The ID of the location to be exported.
func (o GetZIALocationManagementVpnCredentialOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIALocationManagementVpnCredential) int { return v.Id }).(pulumi.IntOutput)
}

// (List of Object)
func (o GetZIALocationManagementVpnCredentialOutput) Locations() GetZIALocationManagementVpnCredentialLocationArrayOutput {
	return o.ApplyT(func(v GetZIALocationManagementVpnCredential) []GetZIALocationManagementVpnCredentialLocation {
		return v.Locations
	}).(GetZIALocationManagementVpnCredentialLocationArrayOutput)
}

// (List of Object)
func (o GetZIALocationManagementVpnCredentialOutput) ManagedBies() GetZIALocationManagementVpnCredentialManagedByArrayOutput {
	return o.ApplyT(func(v GetZIALocationManagementVpnCredential) []GetZIALocationManagementVpnCredentialManagedBy {
		return v.ManagedBies
	}).(GetZIALocationManagementVpnCredentialManagedByArrayOutput)
}

// (String) Pre-shared key. This is a required field for `UFQDN` and IP auth type.
func (o GetZIALocationManagementVpnCredentialOutput) PreSharedKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIALocationManagementVpnCredential) string { return v.PreSharedKey }).(pulumi.StringOutput)
}

// (String) VPN authentication type (i.e., how the VPN credential is sent to the server). It is not modifiable after VpnCredential is created.
func (o GetZIALocationManagementVpnCredentialOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIALocationManagementVpnCredential) string { return v.Type }).(pulumi.StringOutput)
}

type GetZIALocationManagementVpnCredentialArrayOutput struct{ *pulumi.OutputState }

func (GetZIALocationManagementVpnCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIALocationManagementVpnCredential)(nil)).Elem()
}

func (o GetZIALocationManagementVpnCredentialArrayOutput) ToGetZIALocationManagementVpnCredentialArrayOutput() GetZIALocationManagementVpnCredentialArrayOutput {
	return o
}

func (o GetZIALocationManagementVpnCredentialArrayOutput) ToGetZIALocationManagementVpnCredentialArrayOutputWithContext(ctx context.Context) GetZIALocationManagementVpnCredentialArrayOutput {
	return o
}

func (o GetZIALocationManagementVpnCredentialArrayOutput) Index(i pulumi.IntInput) GetZIALocationManagementVpnCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIALocationManagementVpnCredential {
		return vs[0].([]GetZIALocationManagementVpnCredential)[vs[1].(int)]
	}).(GetZIALocationManagementVpnCredentialOutput)
}

type GetZIALocationManagementVpnCredentialLocation struct {
	// (Map of String)
	Extensions map[string]string `pulumi:"extensions"`
	// The ID of the location to be exported.
	Id int `pulumi:"id"`
	// The name of the location to be exported.
	Name string `pulumi:"name"`
}

// GetZIALocationManagementVpnCredentialLocationInput is an input type that accepts GetZIALocationManagementVpnCredentialLocationArgs and GetZIALocationManagementVpnCredentialLocationOutput values.
// You can construct a concrete instance of `GetZIALocationManagementVpnCredentialLocationInput` via:
//
//	GetZIALocationManagementVpnCredentialLocationArgs{...}
type GetZIALocationManagementVpnCredentialLocationInput interface {
	pulumi.Input

	ToGetZIALocationManagementVpnCredentialLocationOutput() GetZIALocationManagementVpnCredentialLocationOutput
	ToGetZIALocationManagementVpnCredentialLocationOutputWithContext(context.Context) GetZIALocationManagementVpnCredentialLocationOutput
}

type GetZIALocationManagementVpnCredentialLocationArgs struct {
	// (Map of String)
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// The ID of the location to be exported.
	Id pulumi.IntInput `pulumi:"id"`
	// The name of the location to be exported.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZIALocationManagementVpnCredentialLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIALocationManagementVpnCredentialLocation)(nil)).Elem()
}

func (i GetZIALocationManagementVpnCredentialLocationArgs) ToGetZIALocationManagementVpnCredentialLocationOutput() GetZIALocationManagementVpnCredentialLocationOutput {
	return i.ToGetZIALocationManagementVpnCredentialLocationOutputWithContext(context.Background())
}

func (i GetZIALocationManagementVpnCredentialLocationArgs) ToGetZIALocationManagementVpnCredentialLocationOutputWithContext(ctx context.Context) GetZIALocationManagementVpnCredentialLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIALocationManagementVpnCredentialLocationOutput)
}

// GetZIALocationManagementVpnCredentialLocationArrayInput is an input type that accepts GetZIALocationManagementVpnCredentialLocationArray and GetZIALocationManagementVpnCredentialLocationArrayOutput values.
// You can construct a concrete instance of `GetZIALocationManagementVpnCredentialLocationArrayInput` via:
//
//	GetZIALocationManagementVpnCredentialLocationArray{ GetZIALocationManagementVpnCredentialLocationArgs{...} }
type GetZIALocationManagementVpnCredentialLocationArrayInput interface {
	pulumi.Input

	ToGetZIALocationManagementVpnCredentialLocationArrayOutput() GetZIALocationManagementVpnCredentialLocationArrayOutput
	ToGetZIALocationManagementVpnCredentialLocationArrayOutputWithContext(context.Context) GetZIALocationManagementVpnCredentialLocationArrayOutput
}

type GetZIALocationManagementVpnCredentialLocationArray []GetZIALocationManagementVpnCredentialLocationInput

func (GetZIALocationManagementVpnCredentialLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIALocationManagementVpnCredentialLocation)(nil)).Elem()
}

func (i GetZIALocationManagementVpnCredentialLocationArray) ToGetZIALocationManagementVpnCredentialLocationArrayOutput() GetZIALocationManagementVpnCredentialLocationArrayOutput {
	return i.ToGetZIALocationManagementVpnCredentialLocationArrayOutputWithContext(context.Background())
}

func (i GetZIALocationManagementVpnCredentialLocationArray) ToGetZIALocationManagementVpnCredentialLocationArrayOutputWithContext(ctx context.Context) GetZIALocationManagementVpnCredentialLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIALocationManagementVpnCredentialLocationArrayOutput)
}

type GetZIALocationManagementVpnCredentialLocationOutput struct{ *pulumi.OutputState }

func (GetZIALocationManagementVpnCredentialLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIALocationManagementVpnCredentialLocation)(nil)).Elem()
}

func (o GetZIALocationManagementVpnCredentialLocationOutput) ToGetZIALocationManagementVpnCredentialLocationOutput() GetZIALocationManagementVpnCredentialLocationOutput {
	return o
}

func (o GetZIALocationManagementVpnCredentialLocationOutput) ToGetZIALocationManagementVpnCredentialLocationOutputWithContext(ctx context.Context) GetZIALocationManagementVpnCredentialLocationOutput {
	return o
}

// (Map of String)
func (o GetZIALocationManagementVpnCredentialLocationOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZIALocationManagementVpnCredentialLocation) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// The ID of the location to be exported.
func (o GetZIALocationManagementVpnCredentialLocationOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIALocationManagementVpnCredentialLocation) int { return v.Id }).(pulumi.IntOutput)
}

// The name of the location to be exported.
func (o GetZIALocationManagementVpnCredentialLocationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIALocationManagementVpnCredentialLocation) string { return v.Name }).(pulumi.StringOutput)
}

type GetZIALocationManagementVpnCredentialLocationArrayOutput struct{ *pulumi.OutputState }

func (GetZIALocationManagementVpnCredentialLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIALocationManagementVpnCredentialLocation)(nil)).Elem()
}

func (o GetZIALocationManagementVpnCredentialLocationArrayOutput) ToGetZIALocationManagementVpnCredentialLocationArrayOutput() GetZIALocationManagementVpnCredentialLocationArrayOutput {
	return o
}

func (o GetZIALocationManagementVpnCredentialLocationArrayOutput) ToGetZIALocationManagementVpnCredentialLocationArrayOutputWithContext(ctx context.Context) GetZIALocationManagementVpnCredentialLocationArrayOutput {
	return o
}

func (o GetZIALocationManagementVpnCredentialLocationArrayOutput) Index(i pulumi.IntInput) GetZIALocationManagementVpnCredentialLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIALocationManagementVpnCredentialLocation {
		return vs[0].([]GetZIALocationManagementVpnCredentialLocation)[vs[1].(int)]
	}).(GetZIALocationManagementVpnCredentialLocationOutput)
}

type GetZIALocationManagementVpnCredentialManagedBy struct {
	// (Map of String)
	Extensions map[string]string `pulumi:"extensions"`
	// The ID of the location to be exported.
	Id int `pulumi:"id"`
	// The name of the location to be exported.
	Name string `pulumi:"name"`
}

// GetZIALocationManagementVpnCredentialManagedByInput is an input type that accepts GetZIALocationManagementVpnCredentialManagedByArgs and GetZIALocationManagementVpnCredentialManagedByOutput values.
// You can construct a concrete instance of `GetZIALocationManagementVpnCredentialManagedByInput` via:
//
//	GetZIALocationManagementVpnCredentialManagedByArgs{...}
type GetZIALocationManagementVpnCredentialManagedByInput interface {
	pulumi.Input

	ToGetZIALocationManagementVpnCredentialManagedByOutput() GetZIALocationManagementVpnCredentialManagedByOutput
	ToGetZIALocationManagementVpnCredentialManagedByOutputWithContext(context.Context) GetZIALocationManagementVpnCredentialManagedByOutput
}

type GetZIALocationManagementVpnCredentialManagedByArgs struct {
	// (Map of String)
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// The ID of the location to be exported.
	Id pulumi.IntInput `pulumi:"id"`
	// The name of the location to be exported.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZIALocationManagementVpnCredentialManagedByArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIALocationManagementVpnCredentialManagedBy)(nil)).Elem()
}

func (i GetZIALocationManagementVpnCredentialManagedByArgs) ToGetZIALocationManagementVpnCredentialManagedByOutput() GetZIALocationManagementVpnCredentialManagedByOutput {
	return i.ToGetZIALocationManagementVpnCredentialManagedByOutputWithContext(context.Background())
}

func (i GetZIALocationManagementVpnCredentialManagedByArgs) ToGetZIALocationManagementVpnCredentialManagedByOutputWithContext(ctx context.Context) GetZIALocationManagementVpnCredentialManagedByOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIALocationManagementVpnCredentialManagedByOutput)
}

// GetZIALocationManagementVpnCredentialManagedByArrayInput is an input type that accepts GetZIALocationManagementVpnCredentialManagedByArray and GetZIALocationManagementVpnCredentialManagedByArrayOutput values.
// You can construct a concrete instance of `GetZIALocationManagementVpnCredentialManagedByArrayInput` via:
//
//	GetZIALocationManagementVpnCredentialManagedByArray{ GetZIALocationManagementVpnCredentialManagedByArgs{...} }
type GetZIALocationManagementVpnCredentialManagedByArrayInput interface {
	pulumi.Input

	ToGetZIALocationManagementVpnCredentialManagedByArrayOutput() GetZIALocationManagementVpnCredentialManagedByArrayOutput
	ToGetZIALocationManagementVpnCredentialManagedByArrayOutputWithContext(context.Context) GetZIALocationManagementVpnCredentialManagedByArrayOutput
}

type GetZIALocationManagementVpnCredentialManagedByArray []GetZIALocationManagementVpnCredentialManagedByInput

func (GetZIALocationManagementVpnCredentialManagedByArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIALocationManagementVpnCredentialManagedBy)(nil)).Elem()
}

func (i GetZIALocationManagementVpnCredentialManagedByArray) ToGetZIALocationManagementVpnCredentialManagedByArrayOutput() GetZIALocationManagementVpnCredentialManagedByArrayOutput {
	return i.ToGetZIALocationManagementVpnCredentialManagedByArrayOutputWithContext(context.Background())
}

func (i GetZIALocationManagementVpnCredentialManagedByArray) ToGetZIALocationManagementVpnCredentialManagedByArrayOutputWithContext(ctx context.Context) GetZIALocationManagementVpnCredentialManagedByArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIALocationManagementVpnCredentialManagedByArrayOutput)
}

type GetZIALocationManagementVpnCredentialManagedByOutput struct{ *pulumi.OutputState }

func (GetZIALocationManagementVpnCredentialManagedByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIALocationManagementVpnCredentialManagedBy)(nil)).Elem()
}

func (o GetZIALocationManagementVpnCredentialManagedByOutput) ToGetZIALocationManagementVpnCredentialManagedByOutput() GetZIALocationManagementVpnCredentialManagedByOutput {
	return o
}

func (o GetZIALocationManagementVpnCredentialManagedByOutput) ToGetZIALocationManagementVpnCredentialManagedByOutputWithContext(ctx context.Context) GetZIALocationManagementVpnCredentialManagedByOutput {
	return o
}

// (Map of String)
func (o GetZIALocationManagementVpnCredentialManagedByOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZIALocationManagementVpnCredentialManagedBy) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// The ID of the location to be exported.
func (o GetZIALocationManagementVpnCredentialManagedByOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIALocationManagementVpnCredentialManagedBy) int { return v.Id }).(pulumi.IntOutput)
}

// The name of the location to be exported.
func (o GetZIALocationManagementVpnCredentialManagedByOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIALocationManagementVpnCredentialManagedBy) string { return v.Name }).(pulumi.StringOutput)
}

type GetZIALocationManagementVpnCredentialManagedByArrayOutput struct{ *pulumi.OutputState }

func (GetZIALocationManagementVpnCredentialManagedByArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIALocationManagementVpnCredentialManagedBy)(nil)).Elem()
}

func (o GetZIALocationManagementVpnCredentialManagedByArrayOutput) ToGetZIALocationManagementVpnCredentialManagedByArrayOutput() GetZIALocationManagementVpnCredentialManagedByArrayOutput {
	return o
}

func (o GetZIALocationManagementVpnCredentialManagedByArrayOutput) ToGetZIALocationManagementVpnCredentialManagedByArrayOutputWithContext(ctx context.Context) GetZIALocationManagementVpnCredentialManagedByArrayOutput {
	return o
}

func (o GetZIALocationManagementVpnCredentialManagedByArrayOutput) Index(i pulumi.IntInput) GetZIALocationManagementVpnCredentialManagedByOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIALocationManagementVpnCredentialManagedBy {
		return vs[0].([]GetZIALocationManagementVpnCredentialManagedBy)[vs[1].(int)]
	}).(GetZIALocationManagementVpnCredentialManagedByOutput)
}

type GetZIARuleLabelsCreatedBy struct {
	Extensions map[string]string `pulumi:"extensions"`
	// The unique identifer for the device group.
	Id int `pulumi:"id"`
	// The name of the rule label to be exported.
	Name string `pulumi:"name"`
}

// GetZIARuleLabelsCreatedByInput is an input type that accepts GetZIARuleLabelsCreatedByArgs and GetZIARuleLabelsCreatedByOutput values.
// You can construct a concrete instance of `GetZIARuleLabelsCreatedByInput` via:
//
//	GetZIARuleLabelsCreatedByArgs{...}
type GetZIARuleLabelsCreatedByInput interface {
	pulumi.Input

	ToGetZIARuleLabelsCreatedByOutput() GetZIARuleLabelsCreatedByOutput
	ToGetZIARuleLabelsCreatedByOutputWithContext(context.Context) GetZIARuleLabelsCreatedByOutput
}

type GetZIARuleLabelsCreatedByArgs struct {
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// The unique identifer for the device group.
	Id pulumi.IntInput `pulumi:"id"`
	// The name of the rule label to be exported.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZIARuleLabelsCreatedByArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIARuleLabelsCreatedBy)(nil)).Elem()
}

func (i GetZIARuleLabelsCreatedByArgs) ToGetZIARuleLabelsCreatedByOutput() GetZIARuleLabelsCreatedByOutput {
	return i.ToGetZIARuleLabelsCreatedByOutputWithContext(context.Background())
}

func (i GetZIARuleLabelsCreatedByArgs) ToGetZIARuleLabelsCreatedByOutputWithContext(ctx context.Context) GetZIARuleLabelsCreatedByOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIARuleLabelsCreatedByOutput)
}

// GetZIARuleLabelsCreatedByArrayInput is an input type that accepts GetZIARuleLabelsCreatedByArray and GetZIARuleLabelsCreatedByArrayOutput values.
// You can construct a concrete instance of `GetZIARuleLabelsCreatedByArrayInput` via:
//
//	GetZIARuleLabelsCreatedByArray{ GetZIARuleLabelsCreatedByArgs{...} }
type GetZIARuleLabelsCreatedByArrayInput interface {
	pulumi.Input

	ToGetZIARuleLabelsCreatedByArrayOutput() GetZIARuleLabelsCreatedByArrayOutput
	ToGetZIARuleLabelsCreatedByArrayOutputWithContext(context.Context) GetZIARuleLabelsCreatedByArrayOutput
}

type GetZIARuleLabelsCreatedByArray []GetZIARuleLabelsCreatedByInput

func (GetZIARuleLabelsCreatedByArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIARuleLabelsCreatedBy)(nil)).Elem()
}

func (i GetZIARuleLabelsCreatedByArray) ToGetZIARuleLabelsCreatedByArrayOutput() GetZIARuleLabelsCreatedByArrayOutput {
	return i.ToGetZIARuleLabelsCreatedByArrayOutputWithContext(context.Background())
}

func (i GetZIARuleLabelsCreatedByArray) ToGetZIARuleLabelsCreatedByArrayOutputWithContext(ctx context.Context) GetZIARuleLabelsCreatedByArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIARuleLabelsCreatedByArrayOutput)
}

type GetZIARuleLabelsCreatedByOutput struct{ *pulumi.OutputState }

func (GetZIARuleLabelsCreatedByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIARuleLabelsCreatedBy)(nil)).Elem()
}

func (o GetZIARuleLabelsCreatedByOutput) ToGetZIARuleLabelsCreatedByOutput() GetZIARuleLabelsCreatedByOutput {
	return o
}

func (o GetZIARuleLabelsCreatedByOutput) ToGetZIARuleLabelsCreatedByOutputWithContext(ctx context.Context) GetZIARuleLabelsCreatedByOutput {
	return o
}

func (o GetZIARuleLabelsCreatedByOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZIARuleLabelsCreatedBy) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// The unique identifer for the device group.
func (o GetZIARuleLabelsCreatedByOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIARuleLabelsCreatedBy) int { return v.Id }).(pulumi.IntOutput)
}

// The name of the rule label to be exported.
func (o GetZIARuleLabelsCreatedByOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIARuleLabelsCreatedBy) string { return v.Name }).(pulumi.StringOutput)
}

type GetZIARuleLabelsCreatedByArrayOutput struct{ *pulumi.OutputState }

func (GetZIARuleLabelsCreatedByArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIARuleLabelsCreatedBy)(nil)).Elem()
}

func (o GetZIARuleLabelsCreatedByArrayOutput) ToGetZIARuleLabelsCreatedByArrayOutput() GetZIARuleLabelsCreatedByArrayOutput {
	return o
}

func (o GetZIARuleLabelsCreatedByArrayOutput) ToGetZIARuleLabelsCreatedByArrayOutputWithContext(ctx context.Context) GetZIARuleLabelsCreatedByArrayOutput {
	return o
}

func (o GetZIARuleLabelsCreatedByArrayOutput) Index(i pulumi.IntInput) GetZIARuleLabelsCreatedByOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIARuleLabelsCreatedBy {
		return vs[0].([]GetZIARuleLabelsCreatedBy)[vs[1].(int)]
	}).(GetZIARuleLabelsCreatedByOutput)
}

type GetZIARuleLabelsLastModifiedBy struct {
	Extensions map[string]string `pulumi:"extensions"`
	// The unique identifer for the device group.
	Id int `pulumi:"id"`
	// The name of the rule label to be exported.
	Name string `pulumi:"name"`
}

// GetZIARuleLabelsLastModifiedByInput is an input type that accepts GetZIARuleLabelsLastModifiedByArgs and GetZIARuleLabelsLastModifiedByOutput values.
// You can construct a concrete instance of `GetZIARuleLabelsLastModifiedByInput` via:
//
//	GetZIARuleLabelsLastModifiedByArgs{...}
type GetZIARuleLabelsLastModifiedByInput interface {
	pulumi.Input

	ToGetZIARuleLabelsLastModifiedByOutput() GetZIARuleLabelsLastModifiedByOutput
	ToGetZIARuleLabelsLastModifiedByOutputWithContext(context.Context) GetZIARuleLabelsLastModifiedByOutput
}

type GetZIARuleLabelsLastModifiedByArgs struct {
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// The unique identifer for the device group.
	Id pulumi.IntInput `pulumi:"id"`
	// The name of the rule label to be exported.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZIARuleLabelsLastModifiedByArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIARuleLabelsLastModifiedBy)(nil)).Elem()
}

func (i GetZIARuleLabelsLastModifiedByArgs) ToGetZIARuleLabelsLastModifiedByOutput() GetZIARuleLabelsLastModifiedByOutput {
	return i.ToGetZIARuleLabelsLastModifiedByOutputWithContext(context.Background())
}

func (i GetZIARuleLabelsLastModifiedByArgs) ToGetZIARuleLabelsLastModifiedByOutputWithContext(ctx context.Context) GetZIARuleLabelsLastModifiedByOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIARuleLabelsLastModifiedByOutput)
}

// GetZIARuleLabelsLastModifiedByArrayInput is an input type that accepts GetZIARuleLabelsLastModifiedByArray and GetZIARuleLabelsLastModifiedByArrayOutput values.
// You can construct a concrete instance of `GetZIARuleLabelsLastModifiedByArrayInput` via:
//
//	GetZIARuleLabelsLastModifiedByArray{ GetZIARuleLabelsLastModifiedByArgs{...} }
type GetZIARuleLabelsLastModifiedByArrayInput interface {
	pulumi.Input

	ToGetZIARuleLabelsLastModifiedByArrayOutput() GetZIARuleLabelsLastModifiedByArrayOutput
	ToGetZIARuleLabelsLastModifiedByArrayOutputWithContext(context.Context) GetZIARuleLabelsLastModifiedByArrayOutput
}

type GetZIARuleLabelsLastModifiedByArray []GetZIARuleLabelsLastModifiedByInput

func (GetZIARuleLabelsLastModifiedByArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIARuleLabelsLastModifiedBy)(nil)).Elem()
}

func (i GetZIARuleLabelsLastModifiedByArray) ToGetZIARuleLabelsLastModifiedByArrayOutput() GetZIARuleLabelsLastModifiedByArrayOutput {
	return i.ToGetZIARuleLabelsLastModifiedByArrayOutputWithContext(context.Background())
}

func (i GetZIARuleLabelsLastModifiedByArray) ToGetZIARuleLabelsLastModifiedByArrayOutputWithContext(ctx context.Context) GetZIARuleLabelsLastModifiedByArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIARuleLabelsLastModifiedByArrayOutput)
}

type GetZIARuleLabelsLastModifiedByOutput struct{ *pulumi.OutputState }

func (GetZIARuleLabelsLastModifiedByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIARuleLabelsLastModifiedBy)(nil)).Elem()
}

func (o GetZIARuleLabelsLastModifiedByOutput) ToGetZIARuleLabelsLastModifiedByOutput() GetZIARuleLabelsLastModifiedByOutput {
	return o
}

func (o GetZIARuleLabelsLastModifiedByOutput) ToGetZIARuleLabelsLastModifiedByOutputWithContext(ctx context.Context) GetZIARuleLabelsLastModifiedByOutput {
	return o
}

func (o GetZIARuleLabelsLastModifiedByOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZIARuleLabelsLastModifiedBy) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// The unique identifer for the device group.
func (o GetZIARuleLabelsLastModifiedByOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIARuleLabelsLastModifiedBy) int { return v.Id }).(pulumi.IntOutput)
}

// The name of the rule label to be exported.
func (o GetZIARuleLabelsLastModifiedByOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIARuleLabelsLastModifiedBy) string { return v.Name }).(pulumi.StringOutput)
}

type GetZIARuleLabelsLastModifiedByArrayOutput struct{ *pulumi.OutputState }

func (GetZIARuleLabelsLastModifiedByArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIARuleLabelsLastModifiedBy)(nil)).Elem()
}

func (o GetZIARuleLabelsLastModifiedByArrayOutput) ToGetZIARuleLabelsLastModifiedByArrayOutput() GetZIARuleLabelsLastModifiedByArrayOutput {
	return o
}

func (o GetZIARuleLabelsLastModifiedByArrayOutput) ToGetZIARuleLabelsLastModifiedByArrayOutputWithContext(ctx context.Context) GetZIARuleLabelsLastModifiedByArrayOutput {
	return o
}

func (o GetZIARuleLabelsLastModifiedByArrayOutput) Index(i pulumi.IntInput) GetZIARuleLabelsLastModifiedByOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIARuleLabelsLastModifiedBy {
		return vs[0].([]GetZIARuleLabelsLastModifiedBy)[vs[1].(int)]
	}).(GetZIARuleLabelsLastModifiedByOutput)
}

type GetZIATrafficForwardingGREInternalIPRangeList struct {
	EndIpAddress   string `pulumi:"endIpAddress"`
	StartIpAddress string `pulumi:"startIpAddress"`
}

// GetZIATrafficForwardingGREInternalIPRangeListInput is an input type that accepts GetZIATrafficForwardingGREInternalIPRangeListArgs and GetZIATrafficForwardingGREInternalIPRangeListOutput values.
// You can construct a concrete instance of `GetZIATrafficForwardingGREInternalIPRangeListInput` via:
//
//	GetZIATrafficForwardingGREInternalIPRangeListArgs{...}
type GetZIATrafficForwardingGREInternalIPRangeListInput interface {
	pulumi.Input

	ToGetZIATrafficForwardingGREInternalIPRangeListOutput() GetZIATrafficForwardingGREInternalIPRangeListOutput
	ToGetZIATrafficForwardingGREInternalIPRangeListOutputWithContext(context.Context) GetZIATrafficForwardingGREInternalIPRangeListOutput
}

type GetZIATrafficForwardingGREInternalIPRangeListArgs struct {
	EndIpAddress   pulumi.StringInput `pulumi:"endIpAddress"`
	StartIpAddress pulumi.StringInput `pulumi:"startIpAddress"`
}

func (GetZIATrafficForwardingGREInternalIPRangeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIATrafficForwardingGREInternalIPRangeList)(nil)).Elem()
}

func (i GetZIATrafficForwardingGREInternalIPRangeListArgs) ToGetZIATrafficForwardingGREInternalIPRangeListOutput() GetZIATrafficForwardingGREInternalIPRangeListOutput {
	return i.ToGetZIATrafficForwardingGREInternalIPRangeListOutputWithContext(context.Background())
}

func (i GetZIATrafficForwardingGREInternalIPRangeListArgs) ToGetZIATrafficForwardingGREInternalIPRangeListOutputWithContext(ctx context.Context) GetZIATrafficForwardingGREInternalIPRangeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIATrafficForwardingGREInternalIPRangeListOutput)
}

// GetZIATrafficForwardingGREInternalIPRangeListArrayInput is an input type that accepts GetZIATrafficForwardingGREInternalIPRangeListArray and GetZIATrafficForwardingGREInternalIPRangeListArrayOutput values.
// You can construct a concrete instance of `GetZIATrafficForwardingGREInternalIPRangeListArrayInput` via:
//
//	GetZIATrafficForwardingGREInternalIPRangeListArray{ GetZIATrafficForwardingGREInternalIPRangeListArgs{...} }
type GetZIATrafficForwardingGREInternalIPRangeListArrayInput interface {
	pulumi.Input

	ToGetZIATrafficForwardingGREInternalIPRangeListArrayOutput() GetZIATrafficForwardingGREInternalIPRangeListArrayOutput
	ToGetZIATrafficForwardingGREInternalIPRangeListArrayOutputWithContext(context.Context) GetZIATrafficForwardingGREInternalIPRangeListArrayOutput
}

type GetZIATrafficForwardingGREInternalIPRangeListArray []GetZIATrafficForwardingGREInternalIPRangeListInput

func (GetZIATrafficForwardingGREInternalIPRangeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIATrafficForwardingGREInternalIPRangeList)(nil)).Elem()
}

func (i GetZIATrafficForwardingGREInternalIPRangeListArray) ToGetZIATrafficForwardingGREInternalIPRangeListArrayOutput() GetZIATrafficForwardingGREInternalIPRangeListArrayOutput {
	return i.ToGetZIATrafficForwardingGREInternalIPRangeListArrayOutputWithContext(context.Background())
}

func (i GetZIATrafficForwardingGREInternalIPRangeListArray) ToGetZIATrafficForwardingGREInternalIPRangeListArrayOutputWithContext(ctx context.Context) GetZIATrafficForwardingGREInternalIPRangeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIATrafficForwardingGREInternalIPRangeListArrayOutput)
}

type GetZIATrafficForwardingGREInternalIPRangeListOutput struct{ *pulumi.OutputState }

func (GetZIATrafficForwardingGREInternalIPRangeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIATrafficForwardingGREInternalIPRangeList)(nil)).Elem()
}

func (o GetZIATrafficForwardingGREInternalIPRangeListOutput) ToGetZIATrafficForwardingGREInternalIPRangeListOutput() GetZIATrafficForwardingGREInternalIPRangeListOutput {
	return o
}

func (o GetZIATrafficForwardingGREInternalIPRangeListOutput) ToGetZIATrafficForwardingGREInternalIPRangeListOutputWithContext(ctx context.Context) GetZIATrafficForwardingGREInternalIPRangeListOutput {
	return o
}

func (o GetZIATrafficForwardingGREInternalIPRangeListOutput) EndIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingGREInternalIPRangeList) string { return v.EndIpAddress }).(pulumi.StringOutput)
}

func (o GetZIATrafficForwardingGREInternalIPRangeListOutput) StartIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingGREInternalIPRangeList) string { return v.StartIpAddress }).(pulumi.StringOutput)
}

type GetZIATrafficForwardingGREInternalIPRangeListArrayOutput struct{ *pulumi.OutputState }

func (GetZIATrafficForwardingGREInternalIPRangeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIATrafficForwardingGREInternalIPRangeList)(nil)).Elem()
}

func (o GetZIATrafficForwardingGREInternalIPRangeListArrayOutput) ToGetZIATrafficForwardingGREInternalIPRangeListArrayOutput() GetZIATrafficForwardingGREInternalIPRangeListArrayOutput {
	return o
}

func (o GetZIATrafficForwardingGREInternalIPRangeListArrayOutput) ToGetZIATrafficForwardingGREInternalIPRangeListArrayOutputWithContext(ctx context.Context) GetZIATrafficForwardingGREInternalIPRangeListArrayOutput {
	return o
}

func (o GetZIATrafficForwardingGREInternalIPRangeListArrayOutput) Index(i pulumi.IntInput) GetZIATrafficForwardingGREInternalIPRangeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIATrafficForwardingGREInternalIPRangeList {
		return vs[0].([]GetZIATrafficForwardingGREInternalIPRangeList)[vs[1].(int)]
	}).(GetZIATrafficForwardingGREInternalIPRangeListOutput)
}

type GetZIATrafficForwardingGRETunnelLastModifiedBy struct {
	Id   int    `pulumi:"id"`
	Name string `pulumi:"name"`
}

// GetZIATrafficForwardingGRETunnelLastModifiedByInput is an input type that accepts GetZIATrafficForwardingGRETunnelLastModifiedByArgs and GetZIATrafficForwardingGRETunnelLastModifiedByOutput values.
// You can construct a concrete instance of `GetZIATrafficForwardingGRETunnelLastModifiedByInput` via:
//
//	GetZIATrafficForwardingGRETunnelLastModifiedByArgs{...}
type GetZIATrafficForwardingGRETunnelLastModifiedByInput interface {
	pulumi.Input

	ToGetZIATrafficForwardingGRETunnelLastModifiedByOutput() GetZIATrafficForwardingGRETunnelLastModifiedByOutput
	ToGetZIATrafficForwardingGRETunnelLastModifiedByOutputWithContext(context.Context) GetZIATrafficForwardingGRETunnelLastModifiedByOutput
}

type GetZIATrafficForwardingGRETunnelLastModifiedByArgs struct {
	Id   pulumi.IntInput    `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZIATrafficForwardingGRETunnelLastModifiedByArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIATrafficForwardingGRETunnelLastModifiedBy)(nil)).Elem()
}

func (i GetZIATrafficForwardingGRETunnelLastModifiedByArgs) ToGetZIATrafficForwardingGRETunnelLastModifiedByOutput() GetZIATrafficForwardingGRETunnelLastModifiedByOutput {
	return i.ToGetZIATrafficForwardingGRETunnelLastModifiedByOutputWithContext(context.Background())
}

func (i GetZIATrafficForwardingGRETunnelLastModifiedByArgs) ToGetZIATrafficForwardingGRETunnelLastModifiedByOutputWithContext(ctx context.Context) GetZIATrafficForwardingGRETunnelLastModifiedByOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIATrafficForwardingGRETunnelLastModifiedByOutput)
}

// GetZIATrafficForwardingGRETunnelLastModifiedByArrayInput is an input type that accepts GetZIATrafficForwardingGRETunnelLastModifiedByArray and GetZIATrafficForwardingGRETunnelLastModifiedByArrayOutput values.
// You can construct a concrete instance of `GetZIATrafficForwardingGRETunnelLastModifiedByArrayInput` via:
//
//	GetZIATrafficForwardingGRETunnelLastModifiedByArray{ GetZIATrafficForwardingGRETunnelLastModifiedByArgs{...} }
type GetZIATrafficForwardingGRETunnelLastModifiedByArrayInput interface {
	pulumi.Input

	ToGetZIATrafficForwardingGRETunnelLastModifiedByArrayOutput() GetZIATrafficForwardingGRETunnelLastModifiedByArrayOutput
	ToGetZIATrafficForwardingGRETunnelLastModifiedByArrayOutputWithContext(context.Context) GetZIATrafficForwardingGRETunnelLastModifiedByArrayOutput
}

type GetZIATrafficForwardingGRETunnelLastModifiedByArray []GetZIATrafficForwardingGRETunnelLastModifiedByInput

func (GetZIATrafficForwardingGRETunnelLastModifiedByArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIATrafficForwardingGRETunnelLastModifiedBy)(nil)).Elem()
}

func (i GetZIATrafficForwardingGRETunnelLastModifiedByArray) ToGetZIATrafficForwardingGRETunnelLastModifiedByArrayOutput() GetZIATrafficForwardingGRETunnelLastModifiedByArrayOutput {
	return i.ToGetZIATrafficForwardingGRETunnelLastModifiedByArrayOutputWithContext(context.Background())
}

func (i GetZIATrafficForwardingGRETunnelLastModifiedByArray) ToGetZIATrafficForwardingGRETunnelLastModifiedByArrayOutputWithContext(ctx context.Context) GetZIATrafficForwardingGRETunnelLastModifiedByArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIATrafficForwardingGRETunnelLastModifiedByArrayOutput)
}

type GetZIATrafficForwardingGRETunnelLastModifiedByOutput struct{ *pulumi.OutputState }

func (GetZIATrafficForwardingGRETunnelLastModifiedByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIATrafficForwardingGRETunnelLastModifiedBy)(nil)).Elem()
}

func (o GetZIATrafficForwardingGRETunnelLastModifiedByOutput) ToGetZIATrafficForwardingGRETunnelLastModifiedByOutput() GetZIATrafficForwardingGRETunnelLastModifiedByOutput {
	return o
}

func (o GetZIATrafficForwardingGRETunnelLastModifiedByOutput) ToGetZIATrafficForwardingGRETunnelLastModifiedByOutputWithContext(ctx context.Context) GetZIATrafficForwardingGRETunnelLastModifiedByOutput {
	return o
}

func (o GetZIATrafficForwardingGRETunnelLastModifiedByOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingGRETunnelLastModifiedBy) int { return v.Id }).(pulumi.IntOutput)
}

func (o GetZIATrafficForwardingGRETunnelLastModifiedByOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingGRETunnelLastModifiedBy) string { return v.Name }).(pulumi.StringOutput)
}

type GetZIATrafficForwardingGRETunnelLastModifiedByArrayOutput struct{ *pulumi.OutputState }

func (GetZIATrafficForwardingGRETunnelLastModifiedByArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIATrafficForwardingGRETunnelLastModifiedBy)(nil)).Elem()
}

func (o GetZIATrafficForwardingGRETunnelLastModifiedByArrayOutput) ToGetZIATrafficForwardingGRETunnelLastModifiedByArrayOutput() GetZIATrafficForwardingGRETunnelLastModifiedByArrayOutput {
	return o
}

func (o GetZIATrafficForwardingGRETunnelLastModifiedByArrayOutput) ToGetZIATrafficForwardingGRETunnelLastModifiedByArrayOutputWithContext(ctx context.Context) GetZIATrafficForwardingGRETunnelLastModifiedByArrayOutput {
	return o
}

func (o GetZIATrafficForwardingGRETunnelLastModifiedByArrayOutput) Index(i pulumi.IntInput) GetZIATrafficForwardingGRETunnelLastModifiedByOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIATrafficForwardingGRETunnelLastModifiedBy {
		return vs[0].([]GetZIATrafficForwardingGRETunnelLastModifiedBy)[vs[1].(int)]
	}).(GetZIATrafficForwardingGRETunnelLastModifiedByOutput)
}

type GetZIATrafficForwardingGRETunnelManagedBy struct {
	Id   int    `pulumi:"id"`
	Name string `pulumi:"name"`
}

// GetZIATrafficForwardingGRETunnelManagedByInput is an input type that accepts GetZIATrafficForwardingGRETunnelManagedByArgs and GetZIATrafficForwardingGRETunnelManagedByOutput values.
// You can construct a concrete instance of `GetZIATrafficForwardingGRETunnelManagedByInput` via:
//
//	GetZIATrafficForwardingGRETunnelManagedByArgs{...}
type GetZIATrafficForwardingGRETunnelManagedByInput interface {
	pulumi.Input

	ToGetZIATrafficForwardingGRETunnelManagedByOutput() GetZIATrafficForwardingGRETunnelManagedByOutput
	ToGetZIATrafficForwardingGRETunnelManagedByOutputWithContext(context.Context) GetZIATrafficForwardingGRETunnelManagedByOutput
}

type GetZIATrafficForwardingGRETunnelManagedByArgs struct {
	Id   pulumi.IntInput    `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZIATrafficForwardingGRETunnelManagedByArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIATrafficForwardingGRETunnelManagedBy)(nil)).Elem()
}

func (i GetZIATrafficForwardingGRETunnelManagedByArgs) ToGetZIATrafficForwardingGRETunnelManagedByOutput() GetZIATrafficForwardingGRETunnelManagedByOutput {
	return i.ToGetZIATrafficForwardingGRETunnelManagedByOutputWithContext(context.Background())
}

func (i GetZIATrafficForwardingGRETunnelManagedByArgs) ToGetZIATrafficForwardingGRETunnelManagedByOutputWithContext(ctx context.Context) GetZIATrafficForwardingGRETunnelManagedByOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIATrafficForwardingGRETunnelManagedByOutput)
}

// GetZIATrafficForwardingGRETunnelManagedByArrayInput is an input type that accepts GetZIATrafficForwardingGRETunnelManagedByArray and GetZIATrafficForwardingGRETunnelManagedByArrayOutput values.
// You can construct a concrete instance of `GetZIATrafficForwardingGRETunnelManagedByArrayInput` via:
//
//	GetZIATrafficForwardingGRETunnelManagedByArray{ GetZIATrafficForwardingGRETunnelManagedByArgs{...} }
type GetZIATrafficForwardingGRETunnelManagedByArrayInput interface {
	pulumi.Input

	ToGetZIATrafficForwardingGRETunnelManagedByArrayOutput() GetZIATrafficForwardingGRETunnelManagedByArrayOutput
	ToGetZIATrafficForwardingGRETunnelManagedByArrayOutputWithContext(context.Context) GetZIATrafficForwardingGRETunnelManagedByArrayOutput
}

type GetZIATrafficForwardingGRETunnelManagedByArray []GetZIATrafficForwardingGRETunnelManagedByInput

func (GetZIATrafficForwardingGRETunnelManagedByArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIATrafficForwardingGRETunnelManagedBy)(nil)).Elem()
}

func (i GetZIATrafficForwardingGRETunnelManagedByArray) ToGetZIATrafficForwardingGRETunnelManagedByArrayOutput() GetZIATrafficForwardingGRETunnelManagedByArrayOutput {
	return i.ToGetZIATrafficForwardingGRETunnelManagedByArrayOutputWithContext(context.Background())
}

func (i GetZIATrafficForwardingGRETunnelManagedByArray) ToGetZIATrafficForwardingGRETunnelManagedByArrayOutputWithContext(ctx context.Context) GetZIATrafficForwardingGRETunnelManagedByArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIATrafficForwardingGRETunnelManagedByArrayOutput)
}

type GetZIATrafficForwardingGRETunnelManagedByOutput struct{ *pulumi.OutputState }

func (GetZIATrafficForwardingGRETunnelManagedByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIATrafficForwardingGRETunnelManagedBy)(nil)).Elem()
}

func (o GetZIATrafficForwardingGRETunnelManagedByOutput) ToGetZIATrafficForwardingGRETunnelManagedByOutput() GetZIATrafficForwardingGRETunnelManagedByOutput {
	return o
}

func (o GetZIATrafficForwardingGRETunnelManagedByOutput) ToGetZIATrafficForwardingGRETunnelManagedByOutputWithContext(ctx context.Context) GetZIATrafficForwardingGRETunnelManagedByOutput {
	return o
}

func (o GetZIATrafficForwardingGRETunnelManagedByOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingGRETunnelManagedBy) int { return v.Id }).(pulumi.IntOutput)
}

func (o GetZIATrafficForwardingGRETunnelManagedByOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingGRETunnelManagedBy) string { return v.Name }).(pulumi.StringOutput)
}

type GetZIATrafficForwardingGRETunnelManagedByArrayOutput struct{ *pulumi.OutputState }

func (GetZIATrafficForwardingGRETunnelManagedByArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIATrafficForwardingGRETunnelManagedBy)(nil)).Elem()
}

func (o GetZIATrafficForwardingGRETunnelManagedByArrayOutput) ToGetZIATrafficForwardingGRETunnelManagedByArrayOutput() GetZIATrafficForwardingGRETunnelManagedByArrayOutput {
	return o
}

func (o GetZIATrafficForwardingGRETunnelManagedByArrayOutput) ToGetZIATrafficForwardingGRETunnelManagedByArrayOutputWithContext(ctx context.Context) GetZIATrafficForwardingGRETunnelManagedByArrayOutput {
	return o
}

func (o GetZIATrafficForwardingGRETunnelManagedByArrayOutput) Index(i pulumi.IntInput) GetZIATrafficForwardingGRETunnelManagedByOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIATrafficForwardingGRETunnelManagedBy {
		return vs[0].([]GetZIATrafficForwardingGRETunnelManagedBy)[vs[1].(int)]
	}).(GetZIATrafficForwardingGRETunnelManagedByOutput)
}

type GetZIATrafficForwardingGRETunnelPrimaryDestVip struct {
	City               string `pulumi:"city"`
	CountryCode        string `pulumi:"countryCode"`
	Datacenter         string `pulumi:"datacenter"`
	Id                 int    `pulumi:"id"`
	Latitude           int    `pulumi:"latitude"`
	Longitude          int    `pulumi:"longitude"`
	PrivateServiceEdge bool   `pulumi:"privateServiceEdge"`
	Region             string `pulumi:"region"`
	VirtualIp          string `pulumi:"virtualIp"`
}

// GetZIATrafficForwardingGRETunnelPrimaryDestVipInput is an input type that accepts GetZIATrafficForwardingGRETunnelPrimaryDestVipArgs and GetZIATrafficForwardingGRETunnelPrimaryDestVipOutput values.
// You can construct a concrete instance of `GetZIATrafficForwardingGRETunnelPrimaryDestVipInput` via:
//
//	GetZIATrafficForwardingGRETunnelPrimaryDestVipArgs{...}
type GetZIATrafficForwardingGRETunnelPrimaryDestVipInput interface {
	pulumi.Input

	ToGetZIATrafficForwardingGRETunnelPrimaryDestVipOutput() GetZIATrafficForwardingGRETunnelPrimaryDestVipOutput
	ToGetZIATrafficForwardingGRETunnelPrimaryDestVipOutputWithContext(context.Context) GetZIATrafficForwardingGRETunnelPrimaryDestVipOutput
}

type GetZIATrafficForwardingGRETunnelPrimaryDestVipArgs struct {
	City               pulumi.StringInput `pulumi:"city"`
	CountryCode        pulumi.StringInput `pulumi:"countryCode"`
	Datacenter         pulumi.StringInput `pulumi:"datacenter"`
	Id                 pulumi.IntInput    `pulumi:"id"`
	Latitude           pulumi.IntInput    `pulumi:"latitude"`
	Longitude          pulumi.IntInput    `pulumi:"longitude"`
	PrivateServiceEdge pulumi.BoolInput   `pulumi:"privateServiceEdge"`
	Region             pulumi.StringInput `pulumi:"region"`
	VirtualIp          pulumi.StringInput `pulumi:"virtualIp"`
}

func (GetZIATrafficForwardingGRETunnelPrimaryDestVipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIATrafficForwardingGRETunnelPrimaryDestVip)(nil)).Elem()
}

func (i GetZIATrafficForwardingGRETunnelPrimaryDestVipArgs) ToGetZIATrafficForwardingGRETunnelPrimaryDestVipOutput() GetZIATrafficForwardingGRETunnelPrimaryDestVipOutput {
	return i.ToGetZIATrafficForwardingGRETunnelPrimaryDestVipOutputWithContext(context.Background())
}

func (i GetZIATrafficForwardingGRETunnelPrimaryDestVipArgs) ToGetZIATrafficForwardingGRETunnelPrimaryDestVipOutputWithContext(ctx context.Context) GetZIATrafficForwardingGRETunnelPrimaryDestVipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIATrafficForwardingGRETunnelPrimaryDestVipOutput)
}

// GetZIATrafficForwardingGRETunnelPrimaryDestVipArrayInput is an input type that accepts GetZIATrafficForwardingGRETunnelPrimaryDestVipArray and GetZIATrafficForwardingGRETunnelPrimaryDestVipArrayOutput values.
// You can construct a concrete instance of `GetZIATrafficForwardingGRETunnelPrimaryDestVipArrayInput` via:
//
//	GetZIATrafficForwardingGRETunnelPrimaryDestVipArray{ GetZIATrafficForwardingGRETunnelPrimaryDestVipArgs{...} }
type GetZIATrafficForwardingGRETunnelPrimaryDestVipArrayInput interface {
	pulumi.Input

	ToGetZIATrafficForwardingGRETunnelPrimaryDestVipArrayOutput() GetZIATrafficForwardingGRETunnelPrimaryDestVipArrayOutput
	ToGetZIATrafficForwardingGRETunnelPrimaryDestVipArrayOutputWithContext(context.Context) GetZIATrafficForwardingGRETunnelPrimaryDestVipArrayOutput
}

type GetZIATrafficForwardingGRETunnelPrimaryDestVipArray []GetZIATrafficForwardingGRETunnelPrimaryDestVipInput

func (GetZIATrafficForwardingGRETunnelPrimaryDestVipArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIATrafficForwardingGRETunnelPrimaryDestVip)(nil)).Elem()
}

func (i GetZIATrafficForwardingGRETunnelPrimaryDestVipArray) ToGetZIATrafficForwardingGRETunnelPrimaryDestVipArrayOutput() GetZIATrafficForwardingGRETunnelPrimaryDestVipArrayOutput {
	return i.ToGetZIATrafficForwardingGRETunnelPrimaryDestVipArrayOutputWithContext(context.Background())
}

func (i GetZIATrafficForwardingGRETunnelPrimaryDestVipArray) ToGetZIATrafficForwardingGRETunnelPrimaryDestVipArrayOutputWithContext(ctx context.Context) GetZIATrafficForwardingGRETunnelPrimaryDestVipArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIATrafficForwardingGRETunnelPrimaryDestVipArrayOutput)
}

type GetZIATrafficForwardingGRETunnelPrimaryDestVipOutput struct{ *pulumi.OutputState }

func (GetZIATrafficForwardingGRETunnelPrimaryDestVipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIATrafficForwardingGRETunnelPrimaryDestVip)(nil)).Elem()
}

func (o GetZIATrafficForwardingGRETunnelPrimaryDestVipOutput) ToGetZIATrafficForwardingGRETunnelPrimaryDestVipOutput() GetZIATrafficForwardingGRETunnelPrimaryDestVipOutput {
	return o
}

func (o GetZIATrafficForwardingGRETunnelPrimaryDestVipOutput) ToGetZIATrafficForwardingGRETunnelPrimaryDestVipOutputWithContext(ctx context.Context) GetZIATrafficForwardingGRETunnelPrimaryDestVipOutput {
	return o
}

func (o GetZIATrafficForwardingGRETunnelPrimaryDestVipOutput) City() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingGRETunnelPrimaryDestVip) string { return v.City }).(pulumi.StringOutput)
}

func (o GetZIATrafficForwardingGRETunnelPrimaryDestVipOutput) CountryCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingGRETunnelPrimaryDestVip) string { return v.CountryCode }).(pulumi.StringOutput)
}

func (o GetZIATrafficForwardingGRETunnelPrimaryDestVipOutput) Datacenter() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingGRETunnelPrimaryDestVip) string { return v.Datacenter }).(pulumi.StringOutput)
}

func (o GetZIATrafficForwardingGRETunnelPrimaryDestVipOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingGRETunnelPrimaryDestVip) int { return v.Id }).(pulumi.IntOutput)
}

func (o GetZIATrafficForwardingGRETunnelPrimaryDestVipOutput) Latitude() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingGRETunnelPrimaryDestVip) int { return v.Latitude }).(pulumi.IntOutput)
}

func (o GetZIATrafficForwardingGRETunnelPrimaryDestVipOutput) Longitude() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingGRETunnelPrimaryDestVip) int { return v.Longitude }).(pulumi.IntOutput)
}

func (o GetZIATrafficForwardingGRETunnelPrimaryDestVipOutput) PrivateServiceEdge() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingGRETunnelPrimaryDestVip) bool { return v.PrivateServiceEdge }).(pulumi.BoolOutput)
}

func (o GetZIATrafficForwardingGRETunnelPrimaryDestVipOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingGRETunnelPrimaryDestVip) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetZIATrafficForwardingGRETunnelPrimaryDestVipOutput) VirtualIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingGRETunnelPrimaryDestVip) string { return v.VirtualIp }).(pulumi.StringOutput)
}

type GetZIATrafficForwardingGRETunnelPrimaryDestVipArrayOutput struct{ *pulumi.OutputState }

func (GetZIATrafficForwardingGRETunnelPrimaryDestVipArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIATrafficForwardingGRETunnelPrimaryDestVip)(nil)).Elem()
}

func (o GetZIATrafficForwardingGRETunnelPrimaryDestVipArrayOutput) ToGetZIATrafficForwardingGRETunnelPrimaryDestVipArrayOutput() GetZIATrafficForwardingGRETunnelPrimaryDestVipArrayOutput {
	return o
}

func (o GetZIATrafficForwardingGRETunnelPrimaryDestVipArrayOutput) ToGetZIATrafficForwardingGRETunnelPrimaryDestVipArrayOutputWithContext(ctx context.Context) GetZIATrafficForwardingGRETunnelPrimaryDestVipArrayOutput {
	return o
}

func (o GetZIATrafficForwardingGRETunnelPrimaryDestVipArrayOutput) Index(i pulumi.IntInput) GetZIATrafficForwardingGRETunnelPrimaryDestVipOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIATrafficForwardingGRETunnelPrimaryDestVip {
		return vs[0].([]GetZIATrafficForwardingGRETunnelPrimaryDestVip)[vs[1].(int)]
	}).(GetZIATrafficForwardingGRETunnelPrimaryDestVipOutput)
}

type GetZIATrafficForwardingGRETunnelSecondaryDestVip struct {
	City               string `pulumi:"city"`
	CountryCode        string `pulumi:"countryCode"`
	Datacenter         string `pulumi:"datacenter"`
	Id                 int    `pulumi:"id"`
	Latitude           int    `pulumi:"latitude"`
	Longitude          int    `pulumi:"longitude"`
	PrivateServiceEdge bool   `pulumi:"privateServiceEdge"`
	Region             string `pulumi:"region"`
	VirtualIp          string `pulumi:"virtualIp"`
}

// GetZIATrafficForwardingGRETunnelSecondaryDestVipInput is an input type that accepts GetZIATrafficForwardingGRETunnelSecondaryDestVipArgs and GetZIATrafficForwardingGRETunnelSecondaryDestVipOutput values.
// You can construct a concrete instance of `GetZIATrafficForwardingGRETunnelSecondaryDestVipInput` via:
//
//	GetZIATrafficForwardingGRETunnelSecondaryDestVipArgs{...}
type GetZIATrafficForwardingGRETunnelSecondaryDestVipInput interface {
	pulumi.Input

	ToGetZIATrafficForwardingGRETunnelSecondaryDestVipOutput() GetZIATrafficForwardingGRETunnelSecondaryDestVipOutput
	ToGetZIATrafficForwardingGRETunnelSecondaryDestVipOutputWithContext(context.Context) GetZIATrafficForwardingGRETunnelSecondaryDestVipOutput
}

type GetZIATrafficForwardingGRETunnelSecondaryDestVipArgs struct {
	City               pulumi.StringInput `pulumi:"city"`
	CountryCode        pulumi.StringInput `pulumi:"countryCode"`
	Datacenter         pulumi.StringInput `pulumi:"datacenter"`
	Id                 pulumi.IntInput    `pulumi:"id"`
	Latitude           pulumi.IntInput    `pulumi:"latitude"`
	Longitude          pulumi.IntInput    `pulumi:"longitude"`
	PrivateServiceEdge pulumi.BoolInput   `pulumi:"privateServiceEdge"`
	Region             pulumi.StringInput `pulumi:"region"`
	VirtualIp          pulumi.StringInput `pulumi:"virtualIp"`
}

func (GetZIATrafficForwardingGRETunnelSecondaryDestVipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIATrafficForwardingGRETunnelSecondaryDestVip)(nil)).Elem()
}

func (i GetZIATrafficForwardingGRETunnelSecondaryDestVipArgs) ToGetZIATrafficForwardingGRETunnelSecondaryDestVipOutput() GetZIATrafficForwardingGRETunnelSecondaryDestVipOutput {
	return i.ToGetZIATrafficForwardingGRETunnelSecondaryDestVipOutputWithContext(context.Background())
}

func (i GetZIATrafficForwardingGRETunnelSecondaryDestVipArgs) ToGetZIATrafficForwardingGRETunnelSecondaryDestVipOutputWithContext(ctx context.Context) GetZIATrafficForwardingGRETunnelSecondaryDestVipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIATrafficForwardingGRETunnelSecondaryDestVipOutput)
}

// GetZIATrafficForwardingGRETunnelSecondaryDestVipArrayInput is an input type that accepts GetZIATrafficForwardingGRETunnelSecondaryDestVipArray and GetZIATrafficForwardingGRETunnelSecondaryDestVipArrayOutput values.
// You can construct a concrete instance of `GetZIATrafficForwardingGRETunnelSecondaryDestVipArrayInput` via:
//
//	GetZIATrafficForwardingGRETunnelSecondaryDestVipArray{ GetZIATrafficForwardingGRETunnelSecondaryDestVipArgs{...} }
type GetZIATrafficForwardingGRETunnelSecondaryDestVipArrayInput interface {
	pulumi.Input

	ToGetZIATrafficForwardingGRETunnelSecondaryDestVipArrayOutput() GetZIATrafficForwardingGRETunnelSecondaryDestVipArrayOutput
	ToGetZIATrafficForwardingGRETunnelSecondaryDestVipArrayOutputWithContext(context.Context) GetZIATrafficForwardingGRETunnelSecondaryDestVipArrayOutput
}

type GetZIATrafficForwardingGRETunnelSecondaryDestVipArray []GetZIATrafficForwardingGRETunnelSecondaryDestVipInput

func (GetZIATrafficForwardingGRETunnelSecondaryDestVipArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIATrafficForwardingGRETunnelSecondaryDestVip)(nil)).Elem()
}

func (i GetZIATrafficForwardingGRETunnelSecondaryDestVipArray) ToGetZIATrafficForwardingGRETunnelSecondaryDestVipArrayOutput() GetZIATrafficForwardingGRETunnelSecondaryDestVipArrayOutput {
	return i.ToGetZIATrafficForwardingGRETunnelSecondaryDestVipArrayOutputWithContext(context.Background())
}

func (i GetZIATrafficForwardingGRETunnelSecondaryDestVipArray) ToGetZIATrafficForwardingGRETunnelSecondaryDestVipArrayOutputWithContext(ctx context.Context) GetZIATrafficForwardingGRETunnelSecondaryDestVipArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIATrafficForwardingGRETunnelSecondaryDestVipArrayOutput)
}

type GetZIATrafficForwardingGRETunnelSecondaryDestVipOutput struct{ *pulumi.OutputState }

func (GetZIATrafficForwardingGRETunnelSecondaryDestVipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIATrafficForwardingGRETunnelSecondaryDestVip)(nil)).Elem()
}

func (o GetZIATrafficForwardingGRETunnelSecondaryDestVipOutput) ToGetZIATrafficForwardingGRETunnelSecondaryDestVipOutput() GetZIATrafficForwardingGRETunnelSecondaryDestVipOutput {
	return o
}

func (o GetZIATrafficForwardingGRETunnelSecondaryDestVipOutput) ToGetZIATrafficForwardingGRETunnelSecondaryDestVipOutputWithContext(ctx context.Context) GetZIATrafficForwardingGRETunnelSecondaryDestVipOutput {
	return o
}

func (o GetZIATrafficForwardingGRETunnelSecondaryDestVipOutput) City() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingGRETunnelSecondaryDestVip) string { return v.City }).(pulumi.StringOutput)
}

func (o GetZIATrafficForwardingGRETunnelSecondaryDestVipOutput) CountryCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingGRETunnelSecondaryDestVip) string { return v.CountryCode }).(pulumi.StringOutput)
}

func (o GetZIATrafficForwardingGRETunnelSecondaryDestVipOutput) Datacenter() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingGRETunnelSecondaryDestVip) string { return v.Datacenter }).(pulumi.StringOutput)
}

func (o GetZIATrafficForwardingGRETunnelSecondaryDestVipOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingGRETunnelSecondaryDestVip) int { return v.Id }).(pulumi.IntOutput)
}

func (o GetZIATrafficForwardingGRETunnelSecondaryDestVipOutput) Latitude() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingGRETunnelSecondaryDestVip) int { return v.Latitude }).(pulumi.IntOutput)
}

func (o GetZIATrafficForwardingGRETunnelSecondaryDestVipOutput) Longitude() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingGRETunnelSecondaryDestVip) int { return v.Longitude }).(pulumi.IntOutput)
}

func (o GetZIATrafficForwardingGRETunnelSecondaryDestVipOutput) PrivateServiceEdge() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingGRETunnelSecondaryDestVip) bool { return v.PrivateServiceEdge }).(pulumi.BoolOutput)
}

func (o GetZIATrafficForwardingGRETunnelSecondaryDestVipOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingGRETunnelSecondaryDestVip) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetZIATrafficForwardingGRETunnelSecondaryDestVipOutput) VirtualIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingGRETunnelSecondaryDestVip) string { return v.VirtualIp }).(pulumi.StringOutput)
}

type GetZIATrafficForwardingGRETunnelSecondaryDestVipArrayOutput struct{ *pulumi.OutputState }

func (GetZIATrafficForwardingGRETunnelSecondaryDestVipArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIATrafficForwardingGRETunnelSecondaryDestVip)(nil)).Elem()
}

func (o GetZIATrafficForwardingGRETunnelSecondaryDestVipArrayOutput) ToGetZIATrafficForwardingGRETunnelSecondaryDestVipArrayOutput() GetZIATrafficForwardingGRETunnelSecondaryDestVipArrayOutput {
	return o
}

func (o GetZIATrafficForwardingGRETunnelSecondaryDestVipArrayOutput) ToGetZIATrafficForwardingGRETunnelSecondaryDestVipArrayOutputWithContext(ctx context.Context) GetZIATrafficForwardingGRETunnelSecondaryDestVipArrayOutput {
	return o
}

func (o GetZIATrafficForwardingGRETunnelSecondaryDestVipArrayOutput) Index(i pulumi.IntInput) GetZIATrafficForwardingGRETunnelSecondaryDestVipOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIATrafficForwardingGRETunnelSecondaryDestVip {
		return vs[0].([]GetZIATrafficForwardingGRETunnelSecondaryDestVip)[vs[1].(int)]
	}).(GetZIATrafficForwardingGRETunnelSecondaryDestVipOutput)
}

type GetZIATrafficForwardingStaticIPLastModifiedBy struct {
	// (Map of String)
	Extensions map[string]string `pulumi:"extensions"`
	// The unique identifier for the static IP address
	Id int `pulumi:"id"`
	// (String) The configured name of the entity
	Name string `pulumi:"name"`
}

// GetZIATrafficForwardingStaticIPLastModifiedByInput is an input type that accepts GetZIATrafficForwardingStaticIPLastModifiedByArgs and GetZIATrafficForwardingStaticIPLastModifiedByOutput values.
// You can construct a concrete instance of `GetZIATrafficForwardingStaticIPLastModifiedByInput` via:
//
//	GetZIATrafficForwardingStaticIPLastModifiedByArgs{...}
type GetZIATrafficForwardingStaticIPLastModifiedByInput interface {
	pulumi.Input

	ToGetZIATrafficForwardingStaticIPLastModifiedByOutput() GetZIATrafficForwardingStaticIPLastModifiedByOutput
	ToGetZIATrafficForwardingStaticIPLastModifiedByOutputWithContext(context.Context) GetZIATrafficForwardingStaticIPLastModifiedByOutput
}

type GetZIATrafficForwardingStaticIPLastModifiedByArgs struct {
	// (Map of String)
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// The unique identifier for the static IP address
	Id pulumi.IntInput `pulumi:"id"`
	// (String) The configured name of the entity
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZIATrafficForwardingStaticIPLastModifiedByArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIATrafficForwardingStaticIPLastModifiedBy)(nil)).Elem()
}

func (i GetZIATrafficForwardingStaticIPLastModifiedByArgs) ToGetZIATrafficForwardingStaticIPLastModifiedByOutput() GetZIATrafficForwardingStaticIPLastModifiedByOutput {
	return i.ToGetZIATrafficForwardingStaticIPLastModifiedByOutputWithContext(context.Background())
}

func (i GetZIATrafficForwardingStaticIPLastModifiedByArgs) ToGetZIATrafficForwardingStaticIPLastModifiedByOutputWithContext(ctx context.Context) GetZIATrafficForwardingStaticIPLastModifiedByOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIATrafficForwardingStaticIPLastModifiedByOutput)
}

// GetZIATrafficForwardingStaticIPLastModifiedByArrayInput is an input type that accepts GetZIATrafficForwardingStaticIPLastModifiedByArray and GetZIATrafficForwardingStaticIPLastModifiedByArrayOutput values.
// You can construct a concrete instance of `GetZIATrafficForwardingStaticIPLastModifiedByArrayInput` via:
//
//	GetZIATrafficForwardingStaticIPLastModifiedByArray{ GetZIATrafficForwardingStaticIPLastModifiedByArgs{...} }
type GetZIATrafficForwardingStaticIPLastModifiedByArrayInput interface {
	pulumi.Input

	ToGetZIATrafficForwardingStaticIPLastModifiedByArrayOutput() GetZIATrafficForwardingStaticIPLastModifiedByArrayOutput
	ToGetZIATrafficForwardingStaticIPLastModifiedByArrayOutputWithContext(context.Context) GetZIATrafficForwardingStaticIPLastModifiedByArrayOutput
}

type GetZIATrafficForwardingStaticIPLastModifiedByArray []GetZIATrafficForwardingStaticIPLastModifiedByInput

func (GetZIATrafficForwardingStaticIPLastModifiedByArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIATrafficForwardingStaticIPLastModifiedBy)(nil)).Elem()
}

func (i GetZIATrafficForwardingStaticIPLastModifiedByArray) ToGetZIATrafficForwardingStaticIPLastModifiedByArrayOutput() GetZIATrafficForwardingStaticIPLastModifiedByArrayOutput {
	return i.ToGetZIATrafficForwardingStaticIPLastModifiedByArrayOutputWithContext(context.Background())
}

func (i GetZIATrafficForwardingStaticIPLastModifiedByArray) ToGetZIATrafficForwardingStaticIPLastModifiedByArrayOutputWithContext(ctx context.Context) GetZIATrafficForwardingStaticIPLastModifiedByArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIATrafficForwardingStaticIPLastModifiedByArrayOutput)
}

type GetZIATrafficForwardingStaticIPLastModifiedByOutput struct{ *pulumi.OutputState }

func (GetZIATrafficForwardingStaticIPLastModifiedByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIATrafficForwardingStaticIPLastModifiedBy)(nil)).Elem()
}

func (o GetZIATrafficForwardingStaticIPLastModifiedByOutput) ToGetZIATrafficForwardingStaticIPLastModifiedByOutput() GetZIATrafficForwardingStaticIPLastModifiedByOutput {
	return o
}

func (o GetZIATrafficForwardingStaticIPLastModifiedByOutput) ToGetZIATrafficForwardingStaticIPLastModifiedByOutputWithContext(ctx context.Context) GetZIATrafficForwardingStaticIPLastModifiedByOutput {
	return o
}

// (Map of String)
func (o GetZIATrafficForwardingStaticIPLastModifiedByOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingStaticIPLastModifiedBy) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// The unique identifier for the static IP address
func (o GetZIATrafficForwardingStaticIPLastModifiedByOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingStaticIPLastModifiedBy) int { return v.Id }).(pulumi.IntOutput)
}

// (String) The configured name of the entity
func (o GetZIATrafficForwardingStaticIPLastModifiedByOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingStaticIPLastModifiedBy) string { return v.Name }).(pulumi.StringOutput)
}

type GetZIATrafficForwardingStaticIPLastModifiedByArrayOutput struct{ *pulumi.OutputState }

func (GetZIATrafficForwardingStaticIPLastModifiedByArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIATrafficForwardingStaticIPLastModifiedBy)(nil)).Elem()
}

func (o GetZIATrafficForwardingStaticIPLastModifiedByArrayOutput) ToGetZIATrafficForwardingStaticIPLastModifiedByArrayOutput() GetZIATrafficForwardingStaticIPLastModifiedByArrayOutput {
	return o
}

func (o GetZIATrafficForwardingStaticIPLastModifiedByArrayOutput) ToGetZIATrafficForwardingStaticIPLastModifiedByArrayOutputWithContext(ctx context.Context) GetZIATrafficForwardingStaticIPLastModifiedByArrayOutput {
	return o
}

func (o GetZIATrafficForwardingStaticIPLastModifiedByArrayOutput) Index(i pulumi.IntInput) GetZIATrafficForwardingStaticIPLastModifiedByOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIATrafficForwardingStaticIPLastModifiedBy {
		return vs[0].([]GetZIATrafficForwardingStaticIPLastModifiedBy)[vs[1].(int)]
	}).(GetZIATrafficForwardingStaticIPLastModifiedByOutput)
}

type GetZIATrafficForwardingStaticIPManagedBy struct {
	// The unique identifier for the static IP address
	Id int `pulumi:"id"`
	// (String) The configured name of the entity
	Name string `pulumi:"name"`
}

// GetZIATrafficForwardingStaticIPManagedByInput is an input type that accepts GetZIATrafficForwardingStaticIPManagedByArgs and GetZIATrafficForwardingStaticIPManagedByOutput values.
// You can construct a concrete instance of `GetZIATrafficForwardingStaticIPManagedByInput` via:
//
//	GetZIATrafficForwardingStaticIPManagedByArgs{...}
type GetZIATrafficForwardingStaticIPManagedByInput interface {
	pulumi.Input

	ToGetZIATrafficForwardingStaticIPManagedByOutput() GetZIATrafficForwardingStaticIPManagedByOutput
	ToGetZIATrafficForwardingStaticIPManagedByOutputWithContext(context.Context) GetZIATrafficForwardingStaticIPManagedByOutput
}

type GetZIATrafficForwardingStaticIPManagedByArgs struct {
	// The unique identifier for the static IP address
	Id pulumi.IntInput `pulumi:"id"`
	// (String) The configured name of the entity
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZIATrafficForwardingStaticIPManagedByArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIATrafficForwardingStaticIPManagedBy)(nil)).Elem()
}

func (i GetZIATrafficForwardingStaticIPManagedByArgs) ToGetZIATrafficForwardingStaticIPManagedByOutput() GetZIATrafficForwardingStaticIPManagedByOutput {
	return i.ToGetZIATrafficForwardingStaticIPManagedByOutputWithContext(context.Background())
}

func (i GetZIATrafficForwardingStaticIPManagedByArgs) ToGetZIATrafficForwardingStaticIPManagedByOutputWithContext(ctx context.Context) GetZIATrafficForwardingStaticIPManagedByOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIATrafficForwardingStaticIPManagedByOutput)
}

// GetZIATrafficForwardingStaticIPManagedByArrayInput is an input type that accepts GetZIATrafficForwardingStaticIPManagedByArray and GetZIATrafficForwardingStaticIPManagedByArrayOutput values.
// You can construct a concrete instance of `GetZIATrafficForwardingStaticIPManagedByArrayInput` via:
//
//	GetZIATrafficForwardingStaticIPManagedByArray{ GetZIATrafficForwardingStaticIPManagedByArgs{...} }
type GetZIATrafficForwardingStaticIPManagedByArrayInput interface {
	pulumi.Input

	ToGetZIATrafficForwardingStaticIPManagedByArrayOutput() GetZIATrafficForwardingStaticIPManagedByArrayOutput
	ToGetZIATrafficForwardingStaticIPManagedByArrayOutputWithContext(context.Context) GetZIATrafficForwardingStaticIPManagedByArrayOutput
}

type GetZIATrafficForwardingStaticIPManagedByArray []GetZIATrafficForwardingStaticIPManagedByInput

func (GetZIATrafficForwardingStaticIPManagedByArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIATrafficForwardingStaticIPManagedBy)(nil)).Elem()
}

func (i GetZIATrafficForwardingStaticIPManagedByArray) ToGetZIATrafficForwardingStaticIPManagedByArrayOutput() GetZIATrafficForwardingStaticIPManagedByArrayOutput {
	return i.ToGetZIATrafficForwardingStaticIPManagedByArrayOutputWithContext(context.Background())
}

func (i GetZIATrafficForwardingStaticIPManagedByArray) ToGetZIATrafficForwardingStaticIPManagedByArrayOutputWithContext(ctx context.Context) GetZIATrafficForwardingStaticIPManagedByArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIATrafficForwardingStaticIPManagedByArrayOutput)
}

type GetZIATrafficForwardingStaticIPManagedByOutput struct{ *pulumi.OutputState }

func (GetZIATrafficForwardingStaticIPManagedByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIATrafficForwardingStaticIPManagedBy)(nil)).Elem()
}

func (o GetZIATrafficForwardingStaticIPManagedByOutput) ToGetZIATrafficForwardingStaticIPManagedByOutput() GetZIATrafficForwardingStaticIPManagedByOutput {
	return o
}

func (o GetZIATrafficForwardingStaticIPManagedByOutput) ToGetZIATrafficForwardingStaticIPManagedByOutputWithContext(ctx context.Context) GetZIATrafficForwardingStaticIPManagedByOutput {
	return o
}

// The unique identifier for the static IP address
func (o GetZIATrafficForwardingStaticIPManagedByOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingStaticIPManagedBy) int { return v.Id }).(pulumi.IntOutput)
}

// (String) The configured name of the entity
func (o GetZIATrafficForwardingStaticIPManagedByOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingStaticIPManagedBy) string { return v.Name }).(pulumi.StringOutput)
}

type GetZIATrafficForwardingStaticIPManagedByArrayOutput struct{ *pulumi.OutputState }

func (GetZIATrafficForwardingStaticIPManagedByArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIATrafficForwardingStaticIPManagedBy)(nil)).Elem()
}

func (o GetZIATrafficForwardingStaticIPManagedByArrayOutput) ToGetZIATrafficForwardingStaticIPManagedByArrayOutput() GetZIATrafficForwardingStaticIPManagedByArrayOutput {
	return o
}

func (o GetZIATrafficForwardingStaticIPManagedByArrayOutput) ToGetZIATrafficForwardingStaticIPManagedByArrayOutputWithContext(ctx context.Context) GetZIATrafficForwardingStaticIPManagedByArrayOutput {
	return o
}

func (o GetZIATrafficForwardingStaticIPManagedByArrayOutput) Index(i pulumi.IntInput) GetZIATrafficForwardingStaticIPManagedByOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIATrafficForwardingStaticIPManagedBy {
		return vs[0].([]GetZIATrafficForwardingStaticIPManagedBy)[vs[1].(int)]
	}).(GetZIATrafficForwardingStaticIPManagedByOutput)
}

type GetZIATrafficForwardingVIPRecommendedListList struct {
	// (String) Data center information
	Datacenter *string `pulumi:"datacenter"`
	// Unique identifer of the GRE virtual IP address (VIP)
	Id *int `pulumi:"id"`
	// (Boolean) Set to true if the virtual IP address (VIP) is a ZIA Private Service Edge
	PrivateServiceEdge *bool `pulumi:"privateServiceEdge"`
	// (String) GRE cluster virtual IP address (VIP)
	VirtualIp *string `pulumi:"virtualIp"`
}

// GetZIATrafficForwardingVIPRecommendedListListInput is an input type that accepts GetZIATrafficForwardingVIPRecommendedListListArgs and GetZIATrafficForwardingVIPRecommendedListListOutput values.
// You can construct a concrete instance of `GetZIATrafficForwardingVIPRecommendedListListInput` via:
//
//	GetZIATrafficForwardingVIPRecommendedListListArgs{...}
type GetZIATrafficForwardingVIPRecommendedListListInput interface {
	pulumi.Input

	ToGetZIATrafficForwardingVIPRecommendedListListOutput() GetZIATrafficForwardingVIPRecommendedListListOutput
	ToGetZIATrafficForwardingVIPRecommendedListListOutputWithContext(context.Context) GetZIATrafficForwardingVIPRecommendedListListOutput
}

type GetZIATrafficForwardingVIPRecommendedListListArgs struct {
	// (String) Data center information
	Datacenter pulumi.StringPtrInput `pulumi:"datacenter"`
	// Unique identifer of the GRE virtual IP address (VIP)
	Id pulumi.IntPtrInput `pulumi:"id"`
	// (Boolean) Set to true if the virtual IP address (VIP) is a ZIA Private Service Edge
	PrivateServiceEdge pulumi.BoolPtrInput `pulumi:"privateServiceEdge"`
	// (String) GRE cluster virtual IP address (VIP)
	VirtualIp pulumi.StringPtrInput `pulumi:"virtualIp"`
}

func (GetZIATrafficForwardingVIPRecommendedListListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIATrafficForwardingVIPRecommendedListList)(nil)).Elem()
}

func (i GetZIATrafficForwardingVIPRecommendedListListArgs) ToGetZIATrafficForwardingVIPRecommendedListListOutput() GetZIATrafficForwardingVIPRecommendedListListOutput {
	return i.ToGetZIATrafficForwardingVIPRecommendedListListOutputWithContext(context.Background())
}

func (i GetZIATrafficForwardingVIPRecommendedListListArgs) ToGetZIATrafficForwardingVIPRecommendedListListOutputWithContext(ctx context.Context) GetZIATrafficForwardingVIPRecommendedListListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIATrafficForwardingVIPRecommendedListListOutput)
}

// GetZIATrafficForwardingVIPRecommendedListListArrayInput is an input type that accepts GetZIATrafficForwardingVIPRecommendedListListArray and GetZIATrafficForwardingVIPRecommendedListListArrayOutput values.
// You can construct a concrete instance of `GetZIATrafficForwardingVIPRecommendedListListArrayInput` via:
//
//	GetZIATrafficForwardingVIPRecommendedListListArray{ GetZIATrafficForwardingVIPRecommendedListListArgs{...} }
type GetZIATrafficForwardingVIPRecommendedListListArrayInput interface {
	pulumi.Input

	ToGetZIATrafficForwardingVIPRecommendedListListArrayOutput() GetZIATrafficForwardingVIPRecommendedListListArrayOutput
	ToGetZIATrafficForwardingVIPRecommendedListListArrayOutputWithContext(context.Context) GetZIATrafficForwardingVIPRecommendedListListArrayOutput
}

type GetZIATrafficForwardingVIPRecommendedListListArray []GetZIATrafficForwardingVIPRecommendedListListInput

func (GetZIATrafficForwardingVIPRecommendedListListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIATrafficForwardingVIPRecommendedListList)(nil)).Elem()
}

func (i GetZIATrafficForwardingVIPRecommendedListListArray) ToGetZIATrafficForwardingVIPRecommendedListListArrayOutput() GetZIATrafficForwardingVIPRecommendedListListArrayOutput {
	return i.ToGetZIATrafficForwardingVIPRecommendedListListArrayOutputWithContext(context.Background())
}

func (i GetZIATrafficForwardingVIPRecommendedListListArray) ToGetZIATrafficForwardingVIPRecommendedListListArrayOutputWithContext(ctx context.Context) GetZIATrafficForwardingVIPRecommendedListListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIATrafficForwardingVIPRecommendedListListArrayOutput)
}

type GetZIATrafficForwardingVIPRecommendedListListOutput struct{ *pulumi.OutputState }

func (GetZIATrafficForwardingVIPRecommendedListListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIATrafficForwardingVIPRecommendedListList)(nil)).Elem()
}

func (o GetZIATrafficForwardingVIPRecommendedListListOutput) ToGetZIATrafficForwardingVIPRecommendedListListOutput() GetZIATrafficForwardingVIPRecommendedListListOutput {
	return o
}

func (o GetZIATrafficForwardingVIPRecommendedListListOutput) ToGetZIATrafficForwardingVIPRecommendedListListOutputWithContext(ctx context.Context) GetZIATrafficForwardingVIPRecommendedListListOutput {
	return o
}

// (String) Data center information
func (o GetZIATrafficForwardingVIPRecommendedListListOutput) Datacenter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingVIPRecommendedListList) *string { return v.Datacenter }).(pulumi.StringPtrOutput)
}

// Unique identifer of the GRE virtual IP address (VIP)
func (o GetZIATrafficForwardingVIPRecommendedListListOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingVIPRecommendedListList) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// (Boolean) Set to true if the virtual IP address (VIP) is a ZIA Private Service Edge
func (o GetZIATrafficForwardingVIPRecommendedListListOutput) PrivateServiceEdge() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingVIPRecommendedListList) *bool { return v.PrivateServiceEdge }).(pulumi.BoolPtrOutput)
}

// (String) GRE cluster virtual IP address (VIP)
func (o GetZIATrafficForwardingVIPRecommendedListListOutput) VirtualIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingVIPRecommendedListList) *string { return v.VirtualIp }).(pulumi.StringPtrOutput)
}

type GetZIATrafficForwardingVIPRecommendedListListArrayOutput struct{ *pulumi.OutputState }

func (GetZIATrafficForwardingVIPRecommendedListListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIATrafficForwardingVIPRecommendedListList)(nil)).Elem()
}

func (o GetZIATrafficForwardingVIPRecommendedListListArrayOutput) ToGetZIATrafficForwardingVIPRecommendedListListArrayOutput() GetZIATrafficForwardingVIPRecommendedListListArrayOutput {
	return o
}

func (o GetZIATrafficForwardingVIPRecommendedListListArrayOutput) ToGetZIATrafficForwardingVIPRecommendedListListArrayOutputWithContext(ctx context.Context) GetZIATrafficForwardingVIPRecommendedListListArrayOutput {
	return o
}

func (o GetZIATrafficForwardingVIPRecommendedListListArrayOutput) Index(i pulumi.IntInput) GetZIATrafficForwardingVIPRecommendedListListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIATrafficForwardingVIPRecommendedListList {
		return vs[0].([]GetZIATrafficForwardingVIPRecommendedListList)[vs[1].(int)]
	}).(GetZIATrafficForwardingVIPRecommendedListListOutput)
}

type GetZIATrafficForwardingVPNCredentialsLocation struct {
	// (Map of String)
	Extensions map[string]string `pulumi:"extensions"`
	// Unique identifer of the GRE virtual IP address (VIP)
	Id int `pulumi:"id"`
	// (String) The configured name of the entity
	Name string `pulumi:"name"`
}

// GetZIATrafficForwardingVPNCredentialsLocationInput is an input type that accepts GetZIATrafficForwardingVPNCredentialsLocationArgs and GetZIATrafficForwardingVPNCredentialsLocationOutput values.
// You can construct a concrete instance of `GetZIATrafficForwardingVPNCredentialsLocationInput` via:
//
//	GetZIATrafficForwardingVPNCredentialsLocationArgs{...}
type GetZIATrafficForwardingVPNCredentialsLocationInput interface {
	pulumi.Input

	ToGetZIATrafficForwardingVPNCredentialsLocationOutput() GetZIATrafficForwardingVPNCredentialsLocationOutput
	ToGetZIATrafficForwardingVPNCredentialsLocationOutputWithContext(context.Context) GetZIATrafficForwardingVPNCredentialsLocationOutput
}

type GetZIATrafficForwardingVPNCredentialsLocationArgs struct {
	// (Map of String)
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// Unique identifer of the GRE virtual IP address (VIP)
	Id pulumi.IntInput `pulumi:"id"`
	// (String) The configured name of the entity
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZIATrafficForwardingVPNCredentialsLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIATrafficForwardingVPNCredentialsLocation)(nil)).Elem()
}

func (i GetZIATrafficForwardingVPNCredentialsLocationArgs) ToGetZIATrafficForwardingVPNCredentialsLocationOutput() GetZIATrafficForwardingVPNCredentialsLocationOutput {
	return i.ToGetZIATrafficForwardingVPNCredentialsLocationOutputWithContext(context.Background())
}

func (i GetZIATrafficForwardingVPNCredentialsLocationArgs) ToGetZIATrafficForwardingVPNCredentialsLocationOutputWithContext(ctx context.Context) GetZIATrafficForwardingVPNCredentialsLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIATrafficForwardingVPNCredentialsLocationOutput)
}

// GetZIATrafficForwardingVPNCredentialsLocationArrayInput is an input type that accepts GetZIATrafficForwardingVPNCredentialsLocationArray and GetZIATrafficForwardingVPNCredentialsLocationArrayOutput values.
// You can construct a concrete instance of `GetZIATrafficForwardingVPNCredentialsLocationArrayInput` via:
//
//	GetZIATrafficForwardingVPNCredentialsLocationArray{ GetZIATrafficForwardingVPNCredentialsLocationArgs{...} }
type GetZIATrafficForwardingVPNCredentialsLocationArrayInput interface {
	pulumi.Input

	ToGetZIATrafficForwardingVPNCredentialsLocationArrayOutput() GetZIATrafficForwardingVPNCredentialsLocationArrayOutput
	ToGetZIATrafficForwardingVPNCredentialsLocationArrayOutputWithContext(context.Context) GetZIATrafficForwardingVPNCredentialsLocationArrayOutput
}

type GetZIATrafficForwardingVPNCredentialsLocationArray []GetZIATrafficForwardingVPNCredentialsLocationInput

func (GetZIATrafficForwardingVPNCredentialsLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIATrafficForwardingVPNCredentialsLocation)(nil)).Elem()
}

func (i GetZIATrafficForwardingVPNCredentialsLocationArray) ToGetZIATrafficForwardingVPNCredentialsLocationArrayOutput() GetZIATrafficForwardingVPNCredentialsLocationArrayOutput {
	return i.ToGetZIATrafficForwardingVPNCredentialsLocationArrayOutputWithContext(context.Background())
}

func (i GetZIATrafficForwardingVPNCredentialsLocationArray) ToGetZIATrafficForwardingVPNCredentialsLocationArrayOutputWithContext(ctx context.Context) GetZIATrafficForwardingVPNCredentialsLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIATrafficForwardingVPNCredentialsLocationArrayOutput)
}

type GetZIATrafficForwardingVPNCredentialsLocationOutput struct{ *pulumi.OutputState }

func (GetZIATrafficForwardingVPNCredentialsLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIATrafficForwardingVPNCredentialsLocation)(nil)).Elem()
}

func (o GetZIATrafficForwardingVPNCredentialsLocationOutput) ToGetZIATrafficForwardingVPNCredentialsLocationOutput() GetZIATrafficForwardingVPNCredentialsLocationOutput {
	return o
}

func (o GetZIATrafficForwardingVPNCredentialsLocationOutput) ToGetZIATrafficForwardingVPNCredentialsLocationOutputWithContext(ctx context.Context) GetZIATrafficForwardingVPNCredentialsLocationOutput {
	return o
}

// (Map of String)
func (o GetZIATrafficForwardingVPNCredentialsLocationOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingVPNCredentialsLocation) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// Unique identifer of the GRE virtual IP address (VIP)
func (o GetZIATrafficForwardingVPNCredentialsLocationOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingVPNCredentialsLocation) int { return v.Id }).(pulumi.IntOutput)
}

// (String) The configured name of the entity
func (o GetZIATrafficForwardingVPNCredentialsLocationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingVPNCredentialsLocation) string { return v.Name }).(pulumi.StringOutput)
}

type GetZIATrafficForwardingVPNCredentialsLocationArrayOutput struct{ *pulumi.OutputState }

func (GetZIATrafficForwardingVPNCredentialsLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIATrafficForwardingVPNCredentialsLocation)(nil)).Elem()
}

func (o GetZIATrafficForwardingVPNCredentialsLocationArrayOutput) ToGetZIATrafficForwardingVPNCredentialsLocationArrayOutput() GetZIATrafficForwardingVPNCredentialsLocationArrayOutput {
	return o
}

func (o GetZIATrafficForwardingVPNCredentialsLocationArrayOutput) ToGetZIATrafficForwardingVPNCredentialsLocationArrayOutputWithContext(ctx context.Context) GetZIATrafficForwardingVPNCredentialsLocationArrayOutput {
	return o
}

func (o GetZIATrafficForwardingVPNCredentialsLocationArrayOutput) Index(i pulumi.IntInput) GetZIATrafficForwardingVPNCredentialsLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIATrafficForwardingVPNCredentialsLocation {
		return vs[0].([]GetZIATrafficForwardingVPNCredentialsLocation)[vs[1].(int)]
	}).(GetZIATrafficForwardingVPNCredentialsLocationOutput)
}

type GetZIATrafficForwardingVPNCredentialsManagedBy struct {
	// (Map of String)
	Extensions map[string]string `pulumi:"extensions"`
	// Unique identifer of the GRE virtual IP address (VIP)
	Id int `pulumi:"id"`
	// (String) The configured name of the entity
	Name string `pulumi:"name"`
}

// GetZIATrafficForwardingVPNCredentialsManagedByInput is an input type that accepts GetZIATrafficForwardingVPNCredentialsManagedByArgs and GetZIATrafficForwardingVPNCredentialsManagedByOutput values.
// You can construct a concrete instance of `GetZIATrafficForwardingVPNCredentialsManagedByInput` via:
//
//	GetZIATrafficForwardingVPNCredentialsManagedByArgs{...}
type GetZIATrafficForwardingVPNCredentialsManagedByInput interface {
	pulumi.Input

	ToGetZIATrafficForwardingVPNCredentialsManagedByOutput() GetZIATrafficForwardingVPNCredentialsManagedByOutput
	ToGetZIATrafficForwardingVPNCredentialsManagedByOutputWithContext(context.Context) GetZIATrafficForwardingVPNCredentialsManagedByOutput
}

type GetZIATrafficForwardingVPNCredentialsManagedByArgs struct {
	// (Map of String)
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// Unique identifer of the GRE virtual IP address (VIP)
	Id pulumi.IntInput `pulumi:"id"`
	// (String) The configured name of the entity
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZIATrafficForwardingVPNCredentialsManagedByArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIATrafficForwardingVPNCredentialsManagedBy)(nil)).Elem()
}

func (i GetZIATrafficForwardingVPNCredentialsManagedByArgs) ToGetZIATrafficForwardingVPNCredentialsManagedByOutput() GetZIATrafficForwardingVPNCredentialsManagedByOutput {
	return i.ToGetZIATrafficForwardingVPNCredentialsManagedByOutputWithContext(context.Background())
}

func (i GetZIATrafficForwardingVPNCredentialsManagedByArgs) ToGetZIATrafficForwardingVPNCredentialsManagedByOutputWithContext(ctx context.Context) GetZIATrafficForwardingVPNCredentialsManagedByOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIATrafficForwardingVPNCredentialsManagedByOutput)
}

// GetZIATrafficForwardingVPNCredentialsManagedByArrayInput is an input type that accepts GetZIATrafficForwardingVPNCredentialsManagedByArray and GetZIATrafficForwardingVPNCredentialsManagedByArrayOutput values.
// You can construct a concrete instance of `GetZIATrafficForwardingVPNCredentialsManagedByArrayInput` via:
//
//	GetZIATrafficForwardingVPNCredentialsManagedByArray{ GetZIATrafficForwardingVPNCredentialsManagedByArgs{...} }
type GetZIATrafficForwardingVPNCredentialsManagedByArrayInput interface {
	pulumi.Input

	ToGetZIATrafficForwardingVPNCredentialsManagedByArrayOutput() GetZIATrafficForwardingVPNCredentialsManagedByArrayOutput
	ToGetZIATrafficForwardingVPNCredentialsManagedByArrayOutputWithContext(context.Context) GetZIATrafficForwardingVPNCredentialsManagedByArrayOutput
}

type GetZIATrafficForwardingVPNCredentialsManagedByArray []GetZIATrafficForwardingVPNCredentialsManagedByInput

func (GetZIATrafficForwardingVPNCredentialsManagedByArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIATrafficForwardingVPNCredentialsManagedBy)(nil)).Elem()
}

func (i GetZIATrafficForwardingVPNCredentialsManagedByArray) ToGetZIATrafficForwardingVPNCredentialsManagedByArrayOutput() GetZIATrafficForwardingVPNCredentialsManagedByArrayOutput {
	return i.ToGetZIATrafficForwardingVPNCredentialsManagedByArrayOutputWithContext(context.Background())
}

func (i GetZIATrafficForwardingVPNCredentialsManagedByArray) ToGetZIATrafficForwardingVPNCredentialsManagedByArrayOutputWithContext(ctx context.Context) GetZIATrafficForwardingVPNCredentialsManagedByArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIATrafficForwardingVPNCredentialsManagedByArrayOutput)
}

type GetZIATrafficForwardingVPNCredentialsManagedByOutput struct{ *pulumi.OutputState }

func (GetZIATrafficForwardingVPNCredentialsManagedByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIATrafficForwardingVPNCredentialsManagedBy)(nil)).Elem()
}

func (o GetZIATrafficForwardingVPNCredentialsManagedByOutput) ToGetZIATrafficForwardingVPNCredentialsManagedByOutput() GetZIATrafficForwardingVPNCredentialsManagedByOutput {
	return o
}

func (o GetZIATrafficForwardingVPNCredentialsManagedByOutput) ToGetZIATrafficForwardingVPNCredentialsManagedByOutputWithContext(ctx context.Context) GetZIATrafficForwardingVPNCredentialsManagedByOutput {
	return o
}

// (Map of String)
func (o GetZIATrafficForwardingVPNCredentialsManagedByOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingVPNCredentialsManagedBy) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// Unique identifer of the GRE virtual IP address (VIP)
func (o GetZIATrafficForwardingVPNCredentialsManagedByOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingVPNCredentialsManagedBy) int { return v.Id }).(pulumi.IntOutput)
}

// (String) The configured name of the entity
func (o GetZIATrafficForwardingVPNCredentialsManagedByOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingVPNCredentialsManagedBy) string { return v.Name }).(pulumi.StringOutput)
}

type GetZIATrafficForwardingVPNCredentialsManagedByArrayOutput struct{ *pulumi.OutputState }

func (GetZIATrafficForwardingVPNCredentialsManagedByArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIATrafficForwardingVPNCredentialsManagedBy)(nil)).Elem()
}

func (o GetZIATrafficForwardingVPNCredentialsManagedByArrayOutput) ToGetZIATrafficForwardingVPNCredentialsManagedByArrayOutput() GetZIATrafficForwardingVPNCredentialsManagedByArrayOutput {
	return o
}

func (o GetZIATrafficForwardingVPNCredentialsManagedByArrayOutput) ToGetZIATrafficForwardingVPNCredentialsManagedByArrayOutputWithContext(ctx context.Context) GetZIATrafficForwardingVPNCredentialsManagedByArrayOutput {
	return o
}

func (o GetZIATrafficForwardingVPNCredentialsManagedByArrayOutput) Index(i pulumi.IntInput) GetZIATrafficForwardingVPNCredentialsManagedByOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIATrafficForwardingVPNCredentialsManagedBy {
		return vs[0].([]GetZIATrafficForwardingVPNCredentialsManagedBy)[vs[1].(int)]
	}).(GetZIATrafficForwardingVPNCredentialsManagedByOutput)
}

type GetZIAURLCategoriesScope struct {
	// (List of Object)
	ScopeEntities []GetZIAURLCategoriesScopeScopeEntity `pulumi:"scopeEntities"`
	// (List of Object) Only applicable for the LOCATION_GROUP admin scope type, in which case this attribute gives the list of ID/name pairs of locations within the location group. The attribute name is subject to change.
	ScopeGroupMemberEntities []GetZIAURLCategoriesScopeScopeGroupMemberEntity `pulumi:"scopeGroupMemberEntities"`
	// (String) The admin scope type. The attribute name is subject to change. `ORGANIZATION`, `DEPARTMENT`, `LOCATION`, `LOCATION_GROUP`
	Type string `pulumi:"type"`
}

// GetZIAURLCategoriesScopeInput is an input type that accepts GetZIAURLCategoriesScopeArgs and GetZIAURLCategoriesScopeOutput values.
// You can construct a concrete instance of `GetZIAURLCategoriesScopeInput` via:
//
//	GetZIAURLCategoriesScopeArgs{...}
type GetZIAURLCategoriesScopeInput interface {
	pulumi.Input

	ToGetZIAURLCategoriesScopeOutput() GetZIAURLCategoriesScopeOutput
	ToGetZIAURLCategoriesScopeOutputWithContext(context.Context) GetZIAURLCategoriesScopeOutput
}

type GetZIAURLCategoriesScopeArgs struct {
	// (List of Object)
	ScopeEntities GetZIAURLCategoriesScopeScopeEntityArrayInput `pulumi:"scopeEntities"`
	// (List of Object) Only applicable for the LOCATION_GROUP admin scope type, in which case this attribute gives the list of ID/name pairs of locations within the location group. The attribute name is subject to change.
	ScopeGroupMemberEntities GetZIAURLCategoriesScopeScopeGroupMemberEntityArrayInput `pulumi:"scopeGroupMemberEntities"`
	// (String) The admin scope type. The attribute name is subject to change. `ORGANIZATION`, `DEPARTMENT`, `LOCATION`, `LOCATION_GROUP`
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetZIAURLCategoriesScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAURLCategoriesScope)(nil)).Elem()
}

func (i GetZIAURLCategoriesScopeArgs) ToGetZIAURLCategoriesScopeOutput() GetZIAURLCategoriesScopeOutput {
	return i.ToGetZIAURLCategoriesScopeOutputWithContext(context.Background())
}

func (i GetZIAURLCategoriesScopeArgs) ToGetZIAURLCategoriesScopeOutputWithContext(ctx context.Context) GetZIAURLCategoriesScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAURLCategoriesScopeOutput)
}

// GetZIAURLCategoriesScopeArrayInput is an input type that accepts GetZIAURLCategoriesScopeArray and GetZIAURLCategoriesScopeArrayOutput values.
// You can construct a concrete instance of `GetZIAURLCategoriesScopeArrayInput` via:
//
//	GetZIAURLCategoriesScopeArray{ GetZIAURLCategoriesScopeArgs{...} }
type GetZIAURLCategoriesScopeArrayInput interface {
	pulumi.Input

	ToGetZIAURLCategoriesScopeArrayOutput() GetZIAURLCategoriesScopeArrayOutput
	ToGetZIAURLCategoriesScopeArrayOutputWithContext(context.Context) GetZIAURLCategoriesScopeArrayOutput
}

type GetZIAURLCategoriesScopeArray []GetZIAURLCategoriesScopeInput

func (GetZIAURLCategoriesScopeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAURLCategoriesScope)(nil)).Elem()
}

func (i GetZIAURLCategoriesScopeArray) ToGetZIAURLCategoriesScopeArrayOutput() GetZIAURLCategoriesScopeArrayOutput {
	return i.ToGetZIAURLCategoriesScopeArrayOutputWithContext(context.Background())
}

func (i GetZIAURLCategoriesScopeArray) ToGetZIAURLCategoriesScopeArrayOutputWithContext(ctx context.Context) GetZIAURLCategoriesScopeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAURLCategoriesScopeArrayOutput)
}

type GetZIAURLCategoriesScopeOutput struct{ *pulumi.OutputState }

func (GetZIAURLCategoriesScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAURLCategoriesScope)(nil)).Elem()
}

func (o GetZIAURLCategoriesScopeOutput) ToGetZIAURLCategoriesScopeOutput() GetZIAURLCategoriesScopeOutput {
	return o
}

func (o GetZIAURLCategoriesScopeOutput) ToGetZIAURLCategoriesScopeOutputWithContext(ctx context.Context) GetZIAURLCategoriesScopeOutput {
	return o
}

// (List of Object)
func (o GetZIAURLCategoriesScopeOutput) ScopeEntities() GetZIAURLCategoriesScopeScopeEntityArrayOutput {
	return o.ApplyT(func(v GetZIAURLCategoriesScope) []GetZIAURLCategoriesScopeScopeEntity { return v.ScopeEntities }).(GetZIAURLCategoriesScopeScopeEntityArrayOutput)
}

// (List of Object) Only applicable for the LOCATION_GROUP admin scope type, in which case this attribute gives the list of ID/name pairs of locations within the location group. The attribute name is subject to change.
func (o GetZIAURLCategoriesScopeOutput) ScopeGroupMemberEntities() GetZIAURLCategoriesScopeScopeGroupMemberEntityArrayOutput {
	return o.ApplyT(func(v GetZIAURLCategoriesScope) []GetZIAURLCategoriesScopeScopeGroupMemberEntity {
		return v.ScopeGroupMemberEntities
	}).(GetZIAURLCategoriesScopeScopeGroupMemberEntityArrayOutput)
}

// (String) The admin scope type. The attribute name is subject to change. `ORGANIZATION`, `DEPARTMENT`, `LOCATION`, `LOCATION_GROUP`
func (o GetZIAURLCategoriesScopeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIAURLCategoriesScope) string { return v.Type }).(pulumi.StringOutput)
}

type GetZIAURLCategoriesScopeArrayOutput struct{ *pulumi.OutputState }

func (GetZIAURLCategoriesScopeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAURLCategoriesScope)(nil)).Elem()
}

func (o GetZIAURLCategoriesScopeArrayOutput) ToGetZIAURLCategoriesScopeArrayOutput() GetZIAURLCategoriesScopeArrayOutput {
	return o
}

func (o GetZIAURLCategoriesScopeArrayOutput) ToGetZIAURLCategoriesScopeArrayOutputWithContext(ctx context.Context) GetZIAURLCategoriesScopeArrayOutput {
	return o
}

func (o GetZIAURLCategoriesScopeArrayOutput) Index(i pulumi.IntInput) GetZIAURLCategoriesScopeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIAURLCategoriesScope {
		return vs[0].([]GetZIAURLCategoriesScope)[vs[1].(int)]
	}).(GetZIAURLCategoriesScopeOutput)
}

type GetZIAURLCategoriesScopeScopeEntity struct {
	// (Map of String)
	Extensions map[string]string `pulumi:"extensions"`
	// URL category
	Id int `pulumi:"id"`
	// (String) The configured name of the entity
	Name string `pulumi:"name"`
}

// GetZIAURLCategoriesScopeScopeEntityInput is an input type that accepts GetZIAURLCategoriesScopeScopeEntityArgs and GetZIAURLCategoriesScopeScopeEntityOutput values.
// You can construct a concrete instance of `GetZIAURLCategoriesScopeScopeEntityInput` via:
//
//	GetZIAURLCategoriesScopeScopeEntityArgs{...}
type GetZIAURLCategoriesScopeScopeEntityInput interface {
	pulumi.Input

	ToGetZIAURLCategoriesScopeScopeEntityOutput() GetZIAURLCategoriesScopeScopeEntityOutput
	ToGetZIAURLCategoriesScopeScopeEntityOutputWithContext(context.Context) GetZIAURLCategoriesScopeScopeEntityOutput
}

type GetZIAURLCategoriesScopeScopeEntityArgs struct {
	// (Map of String)
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// URL category
	Id pulumi.IntInput `pulumi:"id"`
	// (String) The configured name of the entity
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZIAURLCategoriesScopeScopeEntityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAURLCategoriesScopeScopeEntity)(nil)).Elem()
}

func (i GetZIAURLCategoriesScopeScopeEntityArgs) ToGetZIAURLCategoriesScopeScopeEntityOutput() GetZIAURLCategoriesScopeScopeEntityOutput {
	return i.ToGetZIAURLCategoriesScopeScopeEntityOutputWithContext(context.Background())
}

func (i GetZIAURLCategoriesScopeScopeEntityArgs) ToGetZIAURLCategoriesScopeScopeEntityOutputWithContext(ctx context.Context) GetZIAURLCategoriesScopeScopeEntityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAURLCategoriesScopeScopeEntityOutput)
}

// GetZIAURLCategoriesScopeScopeEntityArrayInput is an input type that accepts GetZIAURLCategoriesScopeScopeEntityArray and GetZIAURLCategoriesScopeScopeEntityArrayOutput values.
// You can construct a concrete instance of `GetZIAURLCategoriesScopeScopeEntityArrayInput` via:
//
//	GetZIAURLCategoriesScopeScopeEntityArray{ GetZIAURLCategoriesScopeScopeEntityArgs{...} }
type GetZIAURLCategoriesScopeScopeEntityArrayInput interface {
	pulumi.Input

	ToGetZIAURLCategoriesScopeScopeEntityArrayOutput() GetZIAURLCategoriesScopeScopeEntityArrayOutput
	ToGetZIAURLCategoriesScopeScopeEntityArrayOutputWithContext(context.Context) GetZIAURLCategoriesScopeScopeEntityArrayOutput
}

type GetZIAURLCategoriesScopeScopeEntityArray []GetZIAURLCategoriesScopeScopeEntityInput

func (GetZIAURLCategoriesScopeScopeEntityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAURLCategoriesScopeScopeEntity)(nil)).Elem()
}

func (i GetZIAURLCategoriesScopeScopeEntityArray) ToGetZIAURLCategoriesScopeScopeEntityArrayOutput() GetZIAURLCategoriesScopeScopeEntityArrayOutput {
	return i.ToGetZIAURLCategoriesScopeScopeEntityArrayOutputWithContext(context.Background())
}

func (i GetZIAURLCategoriesScopeScopeEntityArray) ToGetZIAURLCategoriesScopeScopeEntityArrayOutputWithContext(ctx context.Context) GetZIAURLCategoriesScopeScopeEntityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAURLCategoriesScopeScopeEntityArrayOutput)
}

type GetZIAURLCategoriesScopeScopeEntityOutput struct{ *pulumi.OutputState }

func (GetZIAURLCategoriesScopeScopeEntityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAURLCategoriesScopeScopeEntity)(nil)).Elem()
}

func (o GetZIAURLCategoriesScopeScopeEntityOutput) ToGetZIAURLCategoriesScopeScopeEntityOutput() GetZIAURLCategoriesScopeScopeEntityOutput {
	return o
}

func (o GetZIAURLCategoriesScopeScopeEntityOutput) ToGetZIAURLCategoriesScopeScopeEntityOutputWithContext(ctx context.Context) GetZIAURLCategoriesScopeScopeEntityOutput {
	return o
}

// (Map of String)
func (o GetZIAURLCategoriesScopeScopeEntityOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZIAURLCategoriesScopeScopeEntity) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// URL category
func (o GetZIAURLCategoriesScopeScopeEntityOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIAURLCategoriesScopeScopeEntity) int { return v.Id }).(pulumi.IntOutput)
}

// (String) The configured name of the entity
func (o GetZIAURLCategoriesScopeScopeEntityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIAURLCategoriesScopeScopeEntity) string { return v.Name }).(pulumi.StringOutput)
}

type GetZIAURLCategoriesScopeScopeEntityArrayOutput struct{ *pulumi.OutputState }

func (GetZIAURLCategoriesScopeScopeEntityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAURLCategoriesScopeScopeEntity)(nil)).Elem()
}

func (o GetZIAURLCategoriesScopeScopeEntityArrayOutput) ToGetZIAURLCategoriesScopeScopeEntityArrayOutput() GetZIAURLCategoriesScopeScopeEntityArrayOutput {
	return o
}

func (o GetZIAURLCategoriesScopeScopeEntityArrayOutput) ToGetZIAURLCategoriesScopeScopeEntityArrayOutputWithContext(ctx context.Context) GetZIAURLCategoriesScopeScopeEntityArrayOutput {
	return o
}

func (o GetZIAURLCategoriesScopeScopeEntityArrayOutput) Index(i pulumi.IntInput) GetZIAURLCategoriesScopeScopeEntityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIAURLCategoriesScopeScopeEntity {
		return vs[0].([]GetZIAURLCategoriesScopeScopeEntity)[vs[1].(int)]
	}).(GetZIAURLCategoriesScopeScopeEntityOutput)
}

type GetZIAURLCategoriesScopeScopeGroupMemberEntity struct {
	// (Map of String)
	Extensions map[string]string `pulumi:"extensions"`
	// URL category
	Id int `pulumi:"id"`
	// (String) The configured name of the entity
	Name string `pulumi:"name"`
}

// GetZIAURLCategoriesScopeScopeGroupMemberEntityInput is an input type that accepts GetZIAURLCategoriesScopeScopeGroupMemberEntityArgs and GetZIAURLCategoriesScopeScopeGroupMemberEntityOutput values.
// You can construct a concrete instance of `GetZIAURLCategoriesScopeScopeGroupMemberEntityInput` via:
//
//	GetZIAURLCategoriesScopeScopeGroupMemberEntityArgs{...}
type GetZIAURLCategoriesScopeScopeGroupMemberEntityInput interface {
	pulumi.Input

	ToGetZIAURLCategoriesScopeScopeGroupMemberEntityOutput() GetZIAURLCategoriesScopeScopeGroupMemberEntityOutput
	ToGetZIAURLCategoriesScopeScopeGroupMemberEntityOutputWithContext(context.Context) GetZIAURLCategoriesScopeScopeGroupMemberEntityOutput
}

type GetZIAURLCategoriesScopeScopeGroupMemberEntityArgs struct {
	// (Map of String)
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// URL category
	Id pulumi.IntInput `pulumi:"id"`
	// (String) The configured name of the entity
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZIAURLCategoriesScopeScopeGroupMemberEntityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAURLCategoriesScopeScopeGroupMemberEntity)(nil)).Elem()
}

func (i GetZIAURLCategoriesScopeScopeGroupMemberEntityArgs) ToGetZIAURLCategoriesScopeScopeGroupMemberEntityOutput() GetZIAURLCategoriesScopeScopeGroupMemberEntityOutput {
	return i.ToGetZIAURLCategoriesScopeScopeGroupMemberEntityOutputWithContext(context.Background())
}

func (i GetZIAURLCategoriesScopeScopeGroupMemberEntityArgs) ToGetZIAURLCategoriesScopeScopeGroupMemberEntityOutputWithContext(ctx context.Context) GetZIAURLCategoriesScopeScopeGroupMemberEntityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAURLCategoriesScopeScopeGroupMemberEntityOutput)
}

// GetZIAURLCategoriesScopeScopeGroupMemberEntityArrayInput is an input type that accepts GetZIAURLCategoriesScopeScopeGroupMemberEntityArray and GetZIAURLCategoriesScopeScopeGroupMemberEntityArrayOutput values.
// You can construct a concrete instance of `GetZIAURLCategoriesScopeScopeGroupMemberEntityArrayInput` via:
//
//	GetZIAURLCategoriesScopeScopeGroupMemberEntityArray{ GetZIAURLCategoriesScopeScopeGroupMemberEntityArgs{...} }
type GetZIAURLCategoriesScopeScopeGroupMemberEntityArrayInput interface {
	pulumi.Input

	ToGetZIAURLCategoriesScopeScopeGroupMemberEntityArrayOutput() GetZIAURLCategoriesScopeScopeGroupMemberEntityArrayOutput
	ToGetZIAURLCategoriesScopeScopeGroupMemberEntityArrayOutputWithContext(context.Context) GetZIAURLCategoriesScopeScopeGroupMemberEntityArrayOutput
}

type GetZIAURLCategoriesScopeScopeGroupMemberEntityArray []GetZIAURLCategoriesScopeScopeGroupMemberEntityInput

func (GetZIAURLCategoriesScopeScopeGroupMemberEntityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAURLCategoriesScopeScopeGroupMemberEntity)(nil)).Elem()
}

func (i GetZIAURLCategoriesScopeScopeGroupMemberEntityArray) ToGetZIAURLCategoriesScopeScopeGroupMemberEntityArrayOutput() GetZIAURLCategoriesScopeScopeGroupMemberEntityArrayOutput {
	return i.ToGetZIAURLCategoriesScopeScopeGroupMemberEntityArrayOutputWithContext(context.Background())
}

func (i GetZIAURLCategoriesScopeScopeGroupMemberEntityArray) ToGetZIAURLCategoriesScopeScopeGroupMemberEntityArrayOutputWithContext(ctx context.Context) GetZIAURLCategoriesScopeScopeGroupMemberEntityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAURLCategoriesScopeScopeGroupMemberEntityArrayOutput)
}

type GetZIAURLCategoriesScopeScopeGroupMemberEntityOutput struct{ *pulumi.OutputState }

func (GetZIAURLCategoriesScopeScopeGroupMemberEntityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAURLCategoriesScopeScopeGroupMemberEntity)(nil)).Elem()
}

func (o GetZIAURLCategoriesScopeScopeGroupMemberEntityOutput) ToGetZIAURLCategoriesScopeScopeGroupMemberEntityOutput() GetZIAURLCategoriesScopeScopeGroupMemberEntityOutput {
	return o
}

func (o GetZIAURLCategoriesScopeScopeGroupMemberEntityOutput) ToGetZIAURLCategoriesScopeScopeGroupMemberEntityOutputWithContext(ctx context.Context) GetZIAURLCategoriesScopeScopeGroupMemberEntityOutput {
	return o
}

// (Map of String)
func (o GetZIAURLCategoriesScopeScopeGroupMemberEntityOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZIAURLCategoriesScopeScopeGroupMemberEntity) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// URL category
func (o GetZIAURLCategoriesScopeScopeGroupMemberEntityOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIAURLCategoriesScopeScopeGroupMemberEntity) int { return v.Id }).(pulumi.IntOutput)
}

// (String) The configured name of the entity
func (o GetZIAURLCategoriesScopeScopeGroupMemberEntityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIAURLCategoriesScopeScopeGroupMemberEntity) string { return v.Name }).(pulumi.StringOutput)
}

type GetZIAURLCategoriesScopeScopeGroupMemberEntityArrayOutput struct{ *pulumi.OutputState }

func (GetZIAURLCategoriesScopeScopeGroupMemberEntityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAURLCategoriesScopeScopeGroupMemberEntity)(nil)).Elem()
}

func (o GetZIAURLCategoriesScopeScopeGroupMemberEntityArrayOutput) ToGetZIAURLCategoriesScopeScopeGroupMemberEntityArrayOutput() GetZIAURLCategoriesScopeScopeGroupMemberEntityArrayOutput {
	return o
}

func (o GetZIAURLCategoriesScopeScopeGroupMemberEntityArrayOutput) ToGetZIAURLCategoriesScopeScopeGroupMemberEntityArrayOutputWithContext(ctx context.Context) GetZIAURLCategoriesScopeScopeGroupMemberEntityArrayOutput {
	return o
}

func (o GetZIAURLCategoriesScopeScopeGroupMemberEntityArrayOutput) Index(i pulumi.IntInput) GetZIAURLCategoriesScopeScopeGroupMemberEntityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIAURLCategoriesScopeScopeGroupMemberEntity {
		return vs[0].([]GetZIAURLCategoriesScopeScopeGroupMemberEntity)[vs[1].(int)]
	}).(GetZIAURLCategoriesScopeScopeGroupMemberEntityOutput)
}

type GetZIAURLCategoriesUrlKeywordCount struct {
	// (Number) Count of total keywords with retain parent category.
	RetainParentKeywordCount int `pulumi:"retainParentKeywordCount"`
	// (Number) Count of URLs with retain parent category.
	RetainParentUrlCount int `pulumi:"retainParentUrlCount"`
	// (Number) Total keyword count for the category.
	TotalKeywordCount int `pulumi:"totalKeywordCount"`
	// (Number) Custom URL count for the category.
	TotalUrlCount int `pulumi:"totalUrlCount"`
}

// GetZIAURLCategoriesUrlKeywordCountInput is an input type that accepts GetZIAURLCategoriesUrlKeywordCountArgs and GetZIAURLCategoriesUrlKeywordCountOutput values.
// You can construct a concrete instance of `GetZIAURLCategoriesUrlKeywordCountInput` via:
//
//	GetZIAURLCategoriesUrlKeywordCountArgs{...}
type GetZIAURLCategoriesUrlKeywordCountInput interface {
	pulumi.Input

	ToGetZIAURLCategoriesUrlKeywordCountOutput() GetZIAURLCategoriesUrlKeywordCountOutput
	ToGetZIAURLCategoriesUrlKeywordCountOutputWithContext(context.Context) GetZIAURLCategoriesUrlKeywordCountOutput
}

type GetZIAURLCategoriesUrlKeywordCountArgs struct {
	// (Number) Count of total keywords with retain parent category.
	RetainParentKeywordCount pulumi.IntInput `pulumi:"retainParentKeywordCount"`
	// (Number) Count of URLs with retain parent category.
	RetainParentUrlCount pulumi.IntInput `pulumi:"retainParentUrlCount"`
	// (Number) Total keyword count for the category.
	TotalKeywordCount pulumi.IntInput `pulumi:"totalKeywordCount"`
	// (Number) Custom URL count for the category.
	TotalUrlCount pulumi.IntInput `pulumi:"totalUrlCount"`
}

func (GetZIAURLCategoriesUrlKeywordCountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAURLCategoriesUrlKeywordCount)(nil)).Elem()
}

func (i GetZIAURLCategoriesUrlKeywordCountArgs) ToGetZIAURLCategoriesUrlKeywordCountOutput() GetZIAURLCategoriesUrlKeywordCountOutput {
	return i.ToGetZIAURLCategoriesUrlKeywordCountOutputWithContext(context.Background())
}

func (i GetZIAURLCategoriesUrlKeywordCountArgs) ToGetZIAURLCategoriesUrlKeywordCountOutputWithContext(ctx context.Context) GetZIAURLCategoriesUrlKeywordCountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAURLCategoriesUrlKeywordCountOutput)
}

// GetZIAURLCategoriesUrlKeywordCountArrayInput is an input type that accepts GetZIAURLCategoriesUrlKeywordCountArray and GetZIAURLCategoriesUrlKeywordCountArrayOutput values.
// You can construct a concrete instance of `GetZIAURLCategoriesUrlKeywordCountArrayInput` via:
//
//	GetZIAURLCategoriesUrlKeywordCountArray{ GetZIAURLCategoriesUrlKeywordCountArgs{...} }
type GetZIAURLCategoriesUrlKeywordCountArrayInput interface {
	pulumi.Input

	ToGetZIAURLCategoriesUrlKeywordCountArrayOutput() GetZIAURLCategoriesUrlKeywordCountArrayOutput
	ToGetZIAURLCategoriesUrlKeywordCountArrayOutputWithContext(context.Context) GetZIAURLCategoriesUrlKeywordCountArrayOutput
}

type GetZIAURLCategoriesUrlKeywordCountArray []GetZIAURLCategoriesUrlKeywordCountInput

func (GetZIAURLCategoriesUrlKeywordCountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAURLCategoriesUrlKeywordCount)(nil)).Elem()
}

func (i GetZIAURLCategoriesUrlKeywordCountArray) ToGetZIAURLCategoriesUrlKeywordCountArrayOutput() GetZIAURLCategoriesUrlKeywordCountArrayOutput {
	return i.ToGetZIAURLCategoriesUrlKeywordCountArrayOutputWithContext(context.Background())
}

func (i GetZIAURLCategoriesUrlKeywordCountArray) ToGetZIAURLCategoriesUrlKeywordCountArrayOutputWithContext(ctx context.Context) GetZIAURLCategoriesUrlKeywordCountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAURLCategoriesUrlKeywordCountArrayOutput)
}

type GetZIAURLCategoriesUrlKeywordCountOutput struct{ *pulumi.OutputState }

func (GetZIAURLCategoriesUrlKeywordCountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAURLCategoriesUrlKeywordCount)(nil)).Elem()
}

func (o GetZIAURLCategoriesUrlKeywordCountOutput) ToGetZIAURLCategoriesUrlKeywordCountOutput() GetZIAURLCategoriesUrlKeywordCountOutput {
	return o
}

func (o GetZIAURLCategoriesUrlKeywordCountOutput) ToGetZIAURLCategoriesUrlKeywordCountOutputWithContext(ctx context.Context) GetZIAURLCategoriesUrlKeywordCountOutput {
	return o
}

// (Number) Count of total keywords with retain parent category.
func (o GetZIAURLCategoriesUrlKeywordCountOutput) RetainParentKeywordCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIAURLCategoriesUrlKeywordCount) int { return v.RetainParentKeywordCount }).(pulumi.IntOutput)
}

// (Number) Count of URLs with retain parent category.
func (o GetZIAURLCategoriesUrlKeywordCountOutput) RetainParentUrlCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIAURLCategoriesUrlKeywordCount) int { return v.RetainParentUrlCount }).(pulumi.IntOutput)
}

// (Number) Total keyword count for the category.
func (o GetZIAURLCategoriesUrlKeywordCountOutput) TotalKeywordCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIAURLCategoriesUrlKeywordCount) int { return v.TotalKeywordCount }).(pulumi.IntOutput)
}

// (Number) Custom URL count for the category.
func (o GetZIAURLCategoriesUrlKeywordCountOutput) TotalUrlCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIAURLCategoriesUrlKeywordCount) int { return v.TotalUrlCount }).(pulumi.IntOutput)
}

type GetZIAURLCategoriesUrlKeywordCountArrayOutput struct{ *pulumi.OutputState }

func (GetZIAURLCategoriesUrlKeywordCountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAURLCategoriesUrlKeywordCount)(nil)).Elem()
}

func (o GetZIAURLCategoriesUrlKeywordCountArrayOutput) ToGetZIAURLCategoriesUrlKeywordCountArrayOutput() GetZIAURLCategoriesUrlKeywordCountArrayOutput {
	return o
}

func (o GetZIAURLCategoriesUrlKeywordCountArrayOutput) ToGetZIAURLCategoriesUrlKeywordCountArrayOutputWithContext(ctx context.Context) GetZIAURLCategoriesUrlKeywordCountArrayOutput {
	return o
}

func (o GetZIAURLCategoriesUrlKeywordCountArrayOutput) Index(i pulumi.IntInput) GetZIAURLCategoriesUrlKeywordCountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIAURLCategoriesUrlKeywordCount {
		return vs[0].([]GetZIAURLCategoriesUrlKeywordCount)[vs[1].(int)]
	}).(GetZIAURLCategoriesUrlKeywordCountOutput)
}

type GetZIAURLFilteringRulesDepartment struct {
	// (Map of String)
	Extensions map[string]string `pulumi:"extensions"`
	// URL Filtering Rule ID
	Id int `pulumi:"id"`
	// Name of the URL Filtering policy rule
	Name string `pulumi:"name"`
}

// GetZIAURLFilteringRulesDepartmentInput is an input type that accepts GetZIAURLFilteringRulesDepartmentArgs and GetZIAURLFilteringRulesDepartmentOutput values.
// You can construct a concrete instance of `GetZIAURLFilteringRulesDepartmentInput` via:
//
//	GetZIAURLFilteringRulesDepartmentArgs{...}
type GetZIAURLFilteringRulesDepartmentInput interface {
	pulumi.Input

	ToGetZIAURLFilteringRulesDepartmentOutput() GetZIAURLFilteringRulesDepartmentOutput
	ToGetZIAURLFilteringRulesDepartmentOutputWithContext(context.Context) GetZIAURLFilteringRulesDepartmentOutput
}

type GetZIAURLFilteringRulesDepartmentArgs struct {
	// (Map of String)
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// URL Filtering Rule ID
	Id pulumi.IntInput `pulumi:"id"`
	// Name of the URL Filtering policy rule
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZIAURLFilteringRulesDepartmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAURLFilteringRulesDepartment)(nil)).Elem()
}

func (i GetZIAURLFilteringRulesDepartmentArgs) ToGetZIAURLFilteringRulesDepartmentOutput() GetZIAURLFilteringRulesDepartmentOutput {
	return i.ToGetZIAURLFilteringRulesDepartmentOutputWithContext(context.Background())
}

func (i GetZIAURLFilteringRulesDepartmentArgs) ToGetZIAURLFilteringRulesDepartmentOutputWithContext(ctx context.Context) GetZIAURLFilteringRulesDepartmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAURLFilteringRulesDepartmentOutput)
}

// GetZIAURLFilteringRulesDepartmentArrayInput is an input type that accepts GetZIAURLFilteringRulesDepartmentArray and GetZIAURLFilteringRulesDepartmentArrayOutput values.
// You can construct a concrete instance of `GetZIAURLFilteringRulesDepartmentArrayInput` via:
//
//	GetZIAURLFilteringRulesDepartmentArray{ GetZIAURLFilteringRulesDepartmentArgs{...} }
type GetZIAURLFilteringRulesDepartmentArrayInput interface {
	pulumi.Input

	ToGetZIAURLFilteringRulesDepartmentArrayOutput() GetZIAURLFilteringRulesDepartmentArrayOutput
	ToGetZIAURLFilteringRulesDepartmentArrayOutputWithContext(context.Context) GetZIAURLFilteringRulesDepartmentArrayOutput
}

type GetZIAURLFilteringRulesDepartmentArray []GetZIAURLFilteringRulesDepartmentInput

func (GetZIAURLFilteringRulesDepartmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAURLFilteringRulesDepartment)(nil)).Elem()
}

func (i GetZIAURLFilteringRulesDepartmentArray) ToGetZIAURLFilteringRulesDepartmentArrayOutput() GetZIAURLFilteringRulesDepartmentArrayOutput {
	return i.ToGetZIAURLFilteringRulesDepartmentArrayOutputWithContext(context.Background())
}

func (i GetZIAURLFilteringRulesDepartmentArray) ToGetZIAURLFilteringRulesDepartmentArrayOutputWithContext(ctx context.Context) GetZIAURLFilteringRulesDepartmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAURLFilteringRulesDepartmentArrayOutput)
}

type GetZIAURLFilteringRulesDepartmentOutput struct{ *pulumi.OutputState }

func (GetZIAURLFilteringRulesDepartmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAURLFilteringRulesDepartment)(nil)).Elem()
}

func (o GetZIAURLFilteringRulesDepartmentOutput) ToGetZIAURLFilteringRulesDepartmentOutput() GetZIAURLFilteringRulesDepartmentOutput {
	return o
}

func (o GetZIAURLFilteringRulesDepartmentOutput) ToGetZIAURLFilteringRulesDepartmentOutputWithContext(ctx context.Context) GetZIAURLFilteringRulesDepartmentOutput {
	return o
}

// (Map of String)
func (o GetZIAURLFilteringRulesDepartmentOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZIAURLFilteringRulesDepartment) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// URL Filtering Rule ID
func (o GetZIAURLFilteringRulesDepartmentOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIAURLFilteringRulesDepartment) int { return v.Id }).(pulumi.IntOutput)
}

// Name of the URL Filtering policy rule
func (o GetZIAURLFilteringRulesDepartmentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIAURLFilteringRulesDepartment) string { return v.Name }).(pulumi.StringOutput)
}

type GetZIAURLFilteringRulesDepartmentArrayOutput struct{ *pulumi.OutputState }

func (GetZIAURLFilteringRulesDepartmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAURLFilteringRulesDepartment)(nil)).Elem()
}

func (o GetZIAURLFilteringRulesDepartmentArrayOutput) ToGetZIAURLFilteringRulesDepartmentArrayOutput() GetZIAURLFilteringRulesDepartmentArrayOutput {
	return o
}

func (o GetZIAURLFilteringRulesDepartmentArrayOutput) ToGetZIAURLFilteringRulesDepartmentArrayOutputWithContext(ctx context.Context) GetZIAURLFilteringRulesDepartmentArrayOutput {
	return o
}

func (o GetZIAURLFilteringRulesDepartmentArrayOutput) Index(i pulumi.IntInput) GetZIAURLFilteringRulesDepartmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIAURLFilteringRulesDepartment {
		return vs[0].([]GetZIAURLFilteringRulesDepartment)[vs[1].(int)]
	}).(GetZIAURLFilteringRulesDepartmentOutput)
}

type GetZIAURLFilteringRulesDevice struct {
	// (Map of String)
	Extensions map[string]string `pulumi:"extensions"`
	// URL Filtering Rule ID
	Id int `pulumi:"id"`
	// Name of the URL Filtering policy rule
	Name string `pulumi:"name"`
}

// GetZIAURLFilteringRulesDeviceInput is an input type that accepts GetZIAURLFilteringRulesDeviceArgs and GetZIAURLFilteringRulesDeviceOutput values.
// You can construct a concrete instance of `GetZIAURLFilteringRulesDeviceInput` via:
//
//	GetZIAURLFilteringRulesDeviceArgs{...}
type GetZIAURLFilteringRulesDeviceInput interface {
	pulumi.Input

	ToGetZIAURLFilteringRulesDeviceOutput() GetZIAURLFilteringRulesDeviceOutput
	ToGetZIAURLFilteringRulesDeviceOutputWithContext(context.Context) GetZIAURLFilteringRulesDeviceOutput
}

type GetZIAURLFilteringRulesDeviceArgs struct {
	// (Map of String)
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// URL Filtering Rule ID
	Id pulumi.IntInput `pulumi:"id"`
	// Name of the URL Filtering policy rule
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZIAURLFilteringRulesDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAURLFilteringRulesDevice)(nil)).Elem()
}

func (i GetZIAURLFilteringRulesDeviceArgs) ToGetZIAURLFilteringRulesDeviceOutput() GetZIAURLFilteringRulesDeviceOutput {
	return i.ToGetZIAURLFilteringRulesDeviceOutputWithContext(context.Background())
}

func (i GetZIAURLFilteringRulesDeviceArgs) ToGetZIAURLFilteringRulesDeviceOutputWithContext(ctx context.Context) GetZIAURLFilteringRulesDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAURLFilteringRulesDeviceOutput)
}

// GetZIAURLFilteringRulesDeviceArrayInput is an input type that accepts GetZIAURLFilteringRulesDeviceArray and GetZIAURLFilteringRulesDeviceArrayOutput values.
// You can construct a concrete instance of `GetZIAURLFilteringRulesDeviceArrayInput` via:
//
//	GetZIAURLFilteringRulesDeviceArray{ GetZIAURLFilteringRulesDeviceArgs{...} }
type GetZIAURLFilteringRulesDeviceArrayInput interface {
	pulumi.Input

	ToGetZIAURLFilteringRulesDeviceArrayOutput() GetZIAURLFilteringRulesDeviceArrayOutput
	ToGetZIAURLFilteringRulesDeviceArrayOutputWithContext(context.Context) GetZIAURLFilteringRulesDeviceArrayOutput
}

type GetZIAURLFilteringRulesDeviceArray []GetZIAURLFilteringRulesDeviceInput

func (GetZIAURLFilteringRulesDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAURLFilteringRulesDevice)(nil)).Elem()
}

func (i GetZIAURLFilteringRulesDeviceArray) ToGetZIAURLFilteringRulesDeviceArrayOutput() GetZIAURLFilteringRulesDeviceArrayOutput {
	return i.ToGetZIAURLFilteringRulesDeviceArrayOutputWithContext(context.Background())
}

func (i GetZIAURLFilteringRulesDeviceArray) ToGetZIAURLFilteringRulesDeviceArrayOutputWithContext(ctx context.Context) GetZIAURLFilteringRulesDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAURLFilteringRulesDeviceArrayOutput)
}

type GetZIAURLFilteringRulesDeviceOutput struct{ *pulumi.OutputState }

func (GetZIAURLFilteringRulesDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAURLFilteringRulesDevice)(nil)).Elem()
}

func (o GetZIAURLFilteringRulesDeviceOutput) ToGetZIAURLFilteringRulesDeviceOutput() GetZIAURLFilteringRulesDeviceOutput {
	return o
}

func (o GetZIAURLFilteringRulesDeviceOutput) ToGetZIAURLFilteringRulesDeviceOutputWithContext(ctx context.Context) GetZIAURLFilteringRulesDeviceOutput {
	return o
}

// (Map of String)
func (o GetZIAURLFilteringRulesDeviceOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZIAURLFilteringRulesDevice) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// URL Filtering Rule ID
func (o GetZIAURLFilteringRulesDeviceOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIAURLFilteringRulesDevice) int { return v.Id }).(pulumi.IntOutput)
}

// Name of the URL Filtering policy rule
func (o GetZIAURLFilteringRulesDeviceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIAURLFilteringRulesDevice) string { return v.Name }).(pulumi.StringOutput)
}

type GetZIAURLFilteringRulesDeviceArrayOutput struct{ *pulumi.OutputState }

func (GetZIAURLFilteringRulesDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAURLFilteringRulesDevice)(nil)).Elem()
}

func (o GetZIAURLFilteringRulesDeviceArrayOutput) ToGetZIAURLFilteringRulesDeviceArrayOutput() GetZIAURLFilteringRulesDeviceArrayOutput {
	return o
}

func (o GetZIAURLFilteringRulesDeviceArrayOutput) ToGetZIAURLFilteringRulesDeviceArrayOutputWithContext(ctx context.Context) GetZIAURLFilteringRulesDeviceArrayOutput {
	return o
}

func (o GetZIAURLFilteringRulesDeviceArrayOutput) Index(i pulumi.IntInput) GetZIAURLFilteringRulesDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIAURLFilteringRulesDevice {
		return vs[0].([]GetZIAURLFilteringRulesDevice)[vs[1].(int)]
	}).(GetZIAURLFilteringRulesDeviceOutput)
}

type GetZIAURLFilteringRulesDeviceGroup struct {
	// (Map of String)
	Extensions map[string]string `pulumi:"extensions"`
	// URL Filtering Rule ID
	Id int `pulumi:"id"`
	// Name of the URL Filtering policy rule
	Name string `pulumi:"name"`
}

// GetZIAURLFilteringRulesDeviceGroupInput is an input type that accepts GetZIAURLFilteringRulesDeviceGroupArgs and GetZIAURLFilteringRulesDeviceGroupOutput values.
// You can construct a concrete instance of `GetZIAURLFilteringRulesDeviceGroupInput` via:
//
//	GetZIAURLFilteringRulesDeviceGroupArgs{...}
type GetZIAURLFilteringRulesDeviceGroupInput interface {
	pulumi.Input

	ToGetZIAURLFilteringRulesDeviceGroupOutput() GetZIAURLFilteringRulesDeviceGroupOutput
	ToGetZIAURLFilteringRulesDeviceGroupOutputWithContext(context.Context) GetZIAURLFilteringRulesDeviceGroupOutput
}

type GetZIAURLFilteringRulesDeviceGroupArgs struct {
	// (Map of String)
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// URL Filtering Rule ID
	Id pulumi.IntInput `pulumi:"id"`
	// Name of the URL Filtering policy rule
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZIAURLFilteringRulesDeviceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAURLFilteringRulesDeviceGroup)(nil)).Elem()
}

func (i GetZIAURLFilteringRulesDeviceGroupArgs) ToGetZIAURLFilteringRulesDeviceGroupOutput() GetZIAURLFilteringRulesDeviceGroupOutput {
	return i.ToGetZIAURLFilteringRulesDeviceGroupOutputWithContext(context.Background())
}

func (i GetZIAURLFilteringRulesDeviceGroupArgs) ToGetZIAURLFilteringRulesDeviceGroupOutputWithContext(ctx context.Context) GetZIAURLFilteringRulesDeviceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAURLFilteringRulesDeviceGroupOutput)
}

// GetZIAURLFilteringRulesDeviceGroupArrayInput is an input type that accepts GetZIAURLFilteringRulesDeviceGroupArray and GetZIAURLFilteringRulesDeviceGroupArrayOutput values.
// You can construct a concrete instance of `GetZIAURLFilteringRulesDeviceGroupArrayInput` via:
//
//	GetZIAURLFilteringRulesDeviceGroupArray{ GetZIAURLFilteringRulesDeviceGroupArgs{...} }
type GetZIAURLFilteringRulesDeviceGroupArrayInput interface {
	pulumi.Input

	ToGetZIAURLFilteringRulesDeviceGroupArrayOutput() GetZIAURLFilteringRulesDeviceGroupArrayOutput
	ToGetZIAURLFilteringRulesDeviceGroupArrayOutputWithContext(context.Context) GetZIAURLFilteringRulesDeviceGroupArrayOutput
}

type GetZIAURLFilteringRulesDeviceGroupArray []GetZIAURLFilteringRulesDeviceGroupInput

func (GetZIAURLFilteringRulesDeviceGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAURLFilteringRulesDeviceGroup)(nil)).Elem()
}

func (i GetZIAURLFilteringRulesDeviceGroupArray) ToGetZIAURLFilteringRulesDeviceGroupArrayOutput() GetZIAURLFilteringRulesDeviceGroupArrayOutput {
	return i.ToGetZIAURLFilteringRulesDeviceGroupArrayOutputWithContext(context.Background())
}

func (i GetZIAURLFilteringRulesDeviceGroupArray) ToGetZIAURLFilteringRulesDeviceGroupArrayOutputWithContext(ctx context.Context) GetZIAURLFilteringRulesDeviceGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAURLFilteringRulesDeviceGroupArrayOutput)
}

type GetZIAURLFilteringRulesDeviceGroupOutput struct{ *pulumi.OutputState }

func (GetZIAURLFilteringRulesDeviceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAURLFilteringRulesDeviceGroup)(nil)).Elem()
}

func (o GetZIAURLFilteringRulesDeviceGroupOutput) ToGetZIAURLFilteringRulesDeviceGroupOutput() GetZIAURLFilteringRulesDeviceGroupOutput {
	return o
}

func (o GetZIAURLFilteringRulesDeviceGroupOutput) ToGetZIAURLFilteringRulesDeviceGroupOutputWithContext(ctx context.Context) GetZIAURLFilteringRulesDeviceGroupOutput {
	return o
}

// (Map of String)
func (o GetZIAURLFilteringRulesDeviceGroupOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZIAURLFilteringRulesDeviceGroup) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// URL Filtering Rule ID
func (o GetZIAURLFilteringRulesDeviceGroupOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIAURLFilteringRulesDeviceGroup) int { return v.Id }).(pulumi.IntOutput)
}

// Name of the URL Filtering policy rule
func (o GetZIAURLFilteringRulesDeviceGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIAURLFilteringRulesDeviceGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetZIAURLFilteringRulesDeviceGroupArrayOutput struct{ *pulumi.OutputState }

func (GetZIAURLFilteringRulesDeviceGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAURLFilteringRulesDeviceGroup)(nil)).Elem()
}

func (o GetZIAURLFilteringRulesDeviceGroupArrayOutput) ToGetZIAURLFilteringRulesDeviceGroupArrayOutput() GetZIAURLFilteringRulesDeviceGroupArrayOutput {
	return o
}

func (o GetZIAURLFilteringRulesDeviceGroupArrayOutput) ToGetZIAURLFilteringRulesDeviceGroupArrayOutputWithContext(ctx context.Context) GetZIAURLFilteringRulesDeviceGroupArrayOutput {
	return o
}

func (o GetZIAURLFilteringRulesDeviceGroupArrayOutput) Index(i pulumi.IntInput) GetZIAURLFilteringRulesDeviceGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIAURLFilteringRulesDeviceGroup {
		return vs[0].([]GetZIAURLFilteringRulesDeviceGroup)[vs[1].(int)]
	}).(GetZIAURLFilteringRulesDeviceGroupOutput)
}

type GetZIAURLFilteringRulesGroup struct {
	// (Map of String)
	Extensions map[string]string `pulumi:"extensions"`
	// URL Filtering Rule ID
	Id int `pulumi:"id"`
	// Name of the URL Filtering policy rule
	Name string `pulumi:"name"`
}

// GetZIAURLFilteringRulesGroupInput is an input type that accepts GetZIAURLFilteringRulesGroupArgs and GetZIAURLFilteringRulesGroupOutput values.
// You can construct a concrete instance of `GetZIAURLFilteringRulesGroupInput` via:
//
//	GetZIAURLFilteringRulesGroupArgs{...}
type GetZIAURLFilteringRulesGroupInput interface {
	pulumi.Input

	ToGetZIAURLFilteringRulesGroupOutput() GetZIAURLFilteringRulesGroupOutput
	ToGetZIAURLFilteringRulesGroupOutputWithContext(context.Context) GetZIAURLFilteringRulesGroupOutput
}

type GetZIAURLFilteringRulesGroupArgs struct {
	// (Map of String)
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// URL Filtering Rule ID
	Id pulumi.IntInput `pulumi:"id"`
	// Name of the URL Filtering policy rule
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZIAURLFilteringRulesGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAURLFilteringRulesGroup)(nil)).Elem()
}

func (i GetZIAURLFilteringRulesGroupArgs) ToGetZIAURLFilteringRulesGroupOutput() GetZIAURLFilteringRulesGroupOutput {
	return i.ToGetZIAURLFilteringRulesGroupOutputWithContext(context.Background())
}

func (i GetZIAURLFilteringRulesGroupArgs) ToGetZIAURLFilteringRulesGroupOutputWithContext(ctx context.Context) GetZIAURLFilteringRulesGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAURLFilteringRulesGroupOutput)
}

// GetZIAURLFilteringRulesGroupArrayInput is an input type that accepts GetZIAURLFilteringRulesGroupArray and GetZIAURLFilteringRulesGroupArrayOutput values.
// You can construct a concrete instance of `GetZIAURLFilteringRulesGroupArrayInput` via:
//
//	GetZIAURLFilteringRulesGroupArray{ GetZIAURLFilteringRulesGroupArgs{...} }
type GetZIAURLFilteringRulesGroupArrayInput interface {
	pulumi.Input

	ToGetZIAURLFilteringRulesGroupArrayOutput() GetZIAURLFilteringRulesGroupArrayOutput
	ToGetZIAURLFilteringRulesGroupArrayOutputWithContext(context.Context) GetZIAURLFilteringRulesGroupArrayOutput
}

type GetZIAURLFilteringRulesGroupArray []GetZIAURLFilteringRulesGroupInput

func (GetZIAURLFilteringRulesGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAURLFilteringRulesGroup)(nil)).Elem()
}

func (i GetZIAURLFilteringRulesGroupArray) ToGetZIAURLFilteringRulesGroupArrayOutput() GetZIAURLFilteringRulesGroupArrayOutput {
	return i.ToGetZIAURLFilteringRulesGroupArrayOutputWithContext(context.Background())
}

func (i GetZIAURLFilteringRulesGroupArray) ToGetZIAURLFilteringRulesGroupArrayOutputWithContext(ctx context.Context) GetZIAURLFilteringRulesGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAURLFilteringRulesGroupArrayOutput)
}

type GetZIAURLFilteringRulesGroupOutput struct{ *pulumi.OutputState }

func (GetZIAURLFilteringRulesGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAURLFilteringRulesGroup)(nil)).Elem()
}

func (o GetZIAURLFilteringRulesGroupOutput) ToGetZIAURLFilteringRulesGroupOutput() GetZIAURLFilteringRulesGroupOutput {
	return o
}

func (o GetZIAURLFilteringRulesGroupOutput) ToGetZIAURLFilteringRulesGroupOutputWithContext(ctx context.Context) GetZIAURLFilteringRulesGroupOutput {
	return o
}

// (Map of String)
func (o GetZIAURLFilteringRulesGroupOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZIAURLFilteringRulesGroup) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// URL Filtering Rule ID
func (o GetZIAURLFilteringRulesGroupOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIAURLFilteringRulesGroup) int { return v.Id }).(pulumi.IntOutput)
}

// Name of the URL Filtering policy rule
func (o GetZIAURLFilteringRulesGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIAURLFilteringRulesGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetZIAURLFilteringRulesGroupArrayOutput struct{ *pulumi.OutputState }

func (GetZIAURLFilteringRulesGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAURLFilteringRulesGroup)(nil)).Elem()
}

func (o GetZIAURLFilteringRulesGroupArrayOutput) ToGetZIAURLFilteringRulesGroupArrayOutput() GetZIAURLFilteringRulesGroupArrayOutput {
	return o
}

func (o GetZIAURLFilteringRulesGroupArrayOutput) ToGetZIAURLFilteringRulesGroupArrayOutputWithContext(ctx context.Context) GetZIAURLFilteringRulesGroupArrayOutput {
	return o
}

func (o GetZIAURLFilteringRulesGroupArrayOutput) Index(i pulumi.IntInput) GetZIAURLFilteringRulesGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIAURLFilteringRulesGroup {
		return vs[0].([]GetZIAURLFilteringRulesGroup)[vs[1].(int)]
	}).(GetZIAURLFilteringRulesGroupOutput)
}

type GetZIAURLFilteringRulesLabel struct {
	// (Map of String)
	Extensions map[string]string `pulumi:"extensions"`
	// URL Filtering Rule ID
	Id int `pulumi:"id"`
	// Name of the URL Filtering policy rule
	Name string `pulumi:"name"`
}

// GetZIAURLFilteringRulesLabelInput is an input type that accepts GetZIAURLFilteringRulesLabelArgs and GetZIAURLFilteringRulesLabelOutput values.
// You can construct a concrete instance of `GetZIAURLFilteringRulesLabelInput` via:
//
//	GetZIAURLFilteringRulesLabelArgs{...}
type GetZIAURLFilteringRulesLabelInput interface {
	pulumi.Input

	ToGetZIAURLFilteringRulesLabelOutput() GetZIAURLFilteringRulesLabelOutput
	ToGetZIAURLFilteringRulesLabelOutputWithContext(context.Context) GetZIAURLFilteringRulesLabelOutput
}

type GetZIAURLFilteringRulesLabelArgs struct {
	// (Map of String)
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// URL Filtering Rule ID
	Id pulumi.IntInput `pulumi:"id"`
	// Name of the URL Filtering policy rule
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZIAURLFilteringRulesLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAURLFilteringRulesLabel)(nil)).Elem()
}

func (i GetZIAURLFilteringRulesLabelArgs) ToGetZIAURLFilteringRulesLabelOutput() GetZIAURLFilteringRulesLabelOutput {
	return i.ToGetZIAURLFilteringRulesLabelOutputWithContext(context.Background())
}

func (i GetZIAURLFilteringRulesLabelArgs) ToGetZIAURLFilteringRulesLabelOutputWithContext(ctx context.Context) GetZIAURLFilteringRulesLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAURLFilteringRulesLabelOutput)
}

// GetZIAURLFilteringRulesLabelArrayInput is an input type that accepts GetZIAURLFilteringRulesLabelArray and GetZIAURLFilteringRulesLabelArrayOutput values.
// You can construct a concrete instance of `GetZIAURLFilteringRulesLabelArrayInput` via:
//
//	GetZIAURLFilteringRulesLabelArray{ GetZIAURLFilteringRulesLabelArgs{...} }
type GetZIAURLFilteringRulesLabelArrayInput interface {
	pulumi.Input

	ToGetZIAURLFilteringRulesLabelArrayOutput() GetZIAURLFilteringRulesLabelArrayOutput
	ToGetZIAURLFilteringRulesLabelArrayOutputWithContext(context.Context) GetZIAURLFilteringRulesLabelArrayOutput
}

type GetZIAURLFilteringRulesLabelArray []GetZIAURLFilteringRulesLabelInput

func (GetZIAURLFilteringRulesLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAURLFilteringRulesLabel)(nil)).Elem()
}

func (i GetZIAURLFilteringRulesLabelArray) ToGetZIAURLFilteringRulesLabelArrayOutput() GetZIAURLFilteringRulesLabelArrayOutput {
	return i.ToGetZIAURLFilteringRulesLabelArrayOutputWithContext(context.Background())
}

func (i GetZIAURLFilteringRulesLabelArray) ToGetZIAURLFilteringRulesLabelArrayOutputWithContext(ctx context.Context) GetZIAURLFilteringRulesLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAURLFilteringRulesLabelArrayOutput)
}

type GetZIAURLFilteringRulesLabelOutput struct{ *pulumi.OutputState }

func (GetZIAURLFilteringRulesLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAURLFilteringRulesLabel)(nil)).Elem()
}

func (o GetZIAURLFilteringRulesLabelOutput) ToGetZIAURLFilteringRulesLabelOutput() GetZIAURLFilteringRulesLabelOutput {
	return o
}

func (o GetZIAURLFilteringRulesLabelOutput) ToGetZIAURLFilteringRulesLabelOutputWithContext(ctx context.Context) GetZIAURLFilteringRulesLabelOutput {
	return o
}

// (Map of String)
func (o GetZIAURLFilteringRulesLabelOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZIAURLFilteringRulesLabel) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// URL Filtering Rule ID
func (o GetZIAURLFilteringRulesLabelOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIAURLFilteringRulesLabel) int { return v.Id }).(pulumi.IntOutput)
}

// Name of the URL Filtering policy rule
func (o GetZIAURLFilteringRulesLabelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIAURLFilteringRulesLabel) string { return v.Name }).(pulumi.StringOutput)
}

type GetZIAURLFilteringRulesLabelArrayOutput struct{ *pulumi.OutputState }

func (GetZIAURLFilteringRulesLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAURLFilteringRulesLabel)(nil)).Elem()
}

func (o GetZIAURLFilteringRulesLabelArrayOutput) ToGetZIAURLFilteringRulesLabelArrayOutput() GetZIAURLFilteringRulesLabelArrayOutput {
	return o
}

func (o GetZIAURLFilteringRulesLabelArrayOutput) ToGetZIAURLFilteringRulesLabelArrayOutputWithContext(ctx context.Context) GetZIAURLFilteringRulesLabelArrayOutput {
	return o
}

func (o GetZIAURLFilteringRulesLabelArrayOutput) Index(i pulumi.IntInput) GetZIAURLFilteringRulesLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIAURLFilteringRulesLabel {
		return vs[0].([]GetZIAURLFilteringRulesLabel)[vs[1].(int)]
	}).(GetZIAURLFilteringRulesLabelOutput)
}

type GetZIAURLFilteringRulesLastModifiedBy struct {
	// (Map of String)
	Extensions map[string]string `pulumi:"extensions"`
	// URL Filtering Rule ID
	Id int `pulumi:"id"`
	// Name of the URL Filtering policy rule
	Name string `pulumi:"name"`
}

// GetZIAURLFilteringRulesLastModifiedByInput is an input type that accepts GetZIAURLFilteringRulesLastModifiedByArgs and GetZIAURLFilteringRulesLastModifiedByOutput values.
// You can construct a concrete instance of `GetZIAURLFilteringRulesLastModifiedByInput` via:
//
//	GetZIAURLFilteringRulesLastModifiedByArgs{...}
type GetZIAURLFilteringRulesLastModifiedByInput interface {
	pulumi.Input

	ToGetZIAURLFilteringRulesLastModifiedByOutput() GetZIAURLFilteringRulesLastModifiedByOutput
	ToGetZIAURLFilteringRulesLastModifiedByOutputWithContext(context.Context) GetZIAURLFilteringRulesLastModifiedByOutput
}

type GetZIAURLFilteringRulesLastModifiedByArgs struct {
	// (Map of String)
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// URL Filtering Rule ID
	Id pulumi.IntInput `pulumi:"id"`
	// Name of the URL Filtering policy rule
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZIAURLFilteringRulesLastModifiedByArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAURLFilteringRulesLastModifiedBy)(nil)).Elem()
}

func (i GetZIAURLFilteringRulesLastModifiedByArgs) ToGetZIAURLFilteringRulesLastModifiedByOutput() GetZIAURLFilteringRulesLastModifiedByOutput {
	return i.ToGetZIAURLFilteringRulesLastModifiedByOutputWithContext(context.Background())
}

func (i GetZIAURLFilteringRulesLastModifiedByArgs) ToGetZIAURLFilteringRulesLastModifiedByOutputWithContext(ctx context.Context) GetZIAURLFilteringRulesLastModifiedByOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAURLFilteringRulesLastModifiedByOutput)
}

// GetZIAURLFilteringRulesLastModifiedByArrayInput is an input type that accepts GetZIAURLFilteringRulesLastModifiedByArray and GetZIAURLFilteringRulesLastModifiedByArrayOutput values.
// You can construct a concrete instance of `GetZIAURLFilteringRulesLastModifiedByArrayInput` via:
//
//	GetZIAURLFilteringRulesLastModifiedByArray{ GetZIAURLFilteringRulesLastModifiedByArgs{...} }
type GetZIAURLFilteringRulesLastModifiedByArrayInput interface {
	pulumi.Input

	ToGetZIAURLFilteringRulesLastModifiedByArrayOutput() GetZIAURLFilteringRulesLastModifiedByArrayOutput
	ToGetZIAURLFilteringRulesLastModifiedByArrayOutputWithContext(context.Context) GetZIAURLFilteringRulesLastModifiedByArrayOutput
}

type GetZIAURLFilteringRulesLastModifiedByArray []GetZIAURLFilteringRulesLastModifiedByInput

func (GetZIAURLFilteringRulesLastModifiedByArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAURLFilteringRulesLastModifiedBy)(nil)).Elem()
}

func (i GetZIAURLFilteringRulesLastModifiedByArray) ToGetZIAURLFilteringRulesLastModifiedByArrayOutput() GetZIAURLFilteringRulesLastModifiedByArrayOutput {
	return i.ToGetZIAURLFilteringRulesLastModifiedByArrayOutputWithContext(context.Background())
}

func (i GetZIAURLFilteringRulesLastModifiedByArray) ToGetZIAURLFilteringRulesLastModifiedByArrayOutputWithContext(ctx context.Context) GetZIAURLFilteringRulesLastModifiedByArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAURLFilteringRulesLastModifiedByArrayOutput)
}

type GetZIAURLFilteringRulesLastModifiedByOutput struct{ *pulumi.OutputState }

func (GetZIAURLFilteringRulesLastModifiedByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAURLFilteringRulesLastModifiedBy)(nil)).Elem()
}

func (o GetZIAURLFilteringRulesLastModifiedByOutput) ToGetZIAURLFilteringRulesLastModifiedByOutput() GetZIAURLFilteringRulesLastModifiedByOutput {
	return o
}

func (o GetZIAURLFilteringRulesLastModifiedByOutput) ToGetZIAURLFilteringRulesLastModifiedByOutputWithContext(ctx context.Context) GetZIAURLFilteringRulesLastModifiedByOutput {
	return o
}

// (Map of String)
func (o GetZIAURLFilteringRulesLastModifiedByOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZIAURLFilteringRulesLastModifiedBy) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// URL Filtering Rule ID
func (o GetZIAURLFilteringRulesLastModifiedByOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIAURLFilteringRulesLastModifiedBy) int { return v.Id }).(pulumi.IntOutput)
}

// Name of the URL Filtering policy rule
func (o GetZIAURLFilteringRulesLastModifiedByOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIAURLFilteringRulesLastModifiedBy) string { return v.Name }).(pulumi.StringOutput)
}

type GetZIAURLFilteringRulesLastModifiedByArrayOutput struct{ *pulumi.OutputState }

func (GetZIAURLFilteringRulesLastModifiedByArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAURLFilteringRulesLastModifiedBy)(nil)).Elem()
}

func (o GetZIAURLFilteringRulesLastModifiedByArrayOutput) ToGetZIAURLFilteringRulesLastModifiedByArrayOutput() GetZIAURLFilteringRulesLastModifiedByArrayOutput {
	return o
}

func (o GetZIAURLFilteringRulesLastModifiedByArrayOutput) ToGetZIAURLFilteringRulesLastModifiedByArrayOutputWithContext(ctx context.Context) GetZIAURLFilteringRulesLastModifiedByArrayOutput {
	return o
}

func (o GetZIAURLFilteringRulesLastModifiedByArrayOutput) Index(i pulumi.IntInput) GetZIAURLFilteringRulesLastModifiedByOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIAURLFilteringRulesLastModifiedBy {
		return vs[0].([]GetZIAURLFilteringRulesLastModifiedBy)[vs[1].(int)]
	}).(GetZIAURLFilteringRulesLastModifiedByOutput)
}

type GetZIAURLFilteringRulesLocation struct {
	// (Map of String)
	Extensions map[string]string `pulumi:"extensions"`
	// URL Filtering Rule ID
	Id int `pulumi:"id"`
	// Name of the URL Filtering policy rule
	Name string `pulumi:"name"`
}

// GetZIAURLFilteringRulesLocationInput is an input type that accepts GetZIAURLFilteringRulesLocationArgs and GetZIAURLFilteringRulesLocationOutput values.
// You can construct a concrete instance of `GetZIAURLFilteringRulesLocationInput` via:
//
//	GetZIAURLFilteringRulesLocationArgs{...}
type GetZIAURLFilteringRulesLocationInput interface {
	pulumi.Input

	ToGetZIAURLFilteringRulesLocationOutput() GetZIAURLFilteringRulesLocationOutput
	ToGetZIAURLFilteringRulesLocationOutputWithContext(context.Context) GetZIAURLFilteringRulesLocationOutput
}

type GetZIAURLFilteringRulesLocationArgs struct {
	// (Map of String)
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// URL Filtering Rule ID
	Id pulumi.IntInput `pulumi:"id"`
	// Name of the URL Filtering policy rule
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZIAURLFilteringRulesLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAURLFilteringRulesLocation)(nil)).Elem()
}

func (i GetZIAURLFilteringRulesLocationArgs) ToGetZIAURLFilteringRulesLocationOutput() GetZIAURLFilteringRulesLocationOutput {
	return i.ToGetZIAURLFilteringRulesLocationOutputWithContext(context.Background())
}

func (i GetZIAURLFilteringRulesLocationArgs) ToGetZIAURLFilteringRulesLocationOutputWithContext(ctx context.Context) GetZIAURLFilteringRulesLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAURLFilteringRulesLocationOutput)
}

// GetZIAURLFilteringRulesLocationArrayInput is an input type that accepts GetZIAURLFilteringRulesLocationArray and GetZIAURLFilteringRulesLocationArrayOutput values.
// You can construct a concrete instance of `GetZIAURLFilteringRulesLocationArrayInput` via:
//
//	GetZIAURLFilteringRulesLocationArray{ GetZIAURLFilteringRulesLocationArgs{...} }
type GetZIAURLFilteringRulesLocationArrayInput interface {
	pulumi.Input

	ToGetZIAURLFilteringRulesLocationArrayOutput() GetZIAURLFilteringRulesLocationArrayOutput
	ToGetZIAURLFilteringRulesLocationArrayOutputWithContext(context.Context) GetZIAURLFilteringRulesLocationArrayOutput
}

type GetZIAURLFilteringRulesLocationArray []GetZIAURLFilteringRulesLocationInput

func (GetZIAURLFilteringRulesLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAURLFilteringRulesLocation)(nil)).Elem()
}

func (i GetZIAURLFilteringRulesLocationArray) ToGetZIAURLFilteringRulesLocationArrayOutput() GetZIAURLFilteringRulesLocationArrayOutput {
	return i.ToGetZIAURLFilteringRulesLocationArrayOutputWithContext(context.Background())
}

func (i GetZIAURLFilteringRulesLocationArray) ToGetZIAURLFilteringRulesLocationArrayOutputWithContext(ctx context.Context) GetZIAURLFilteringRulesLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAURLFilteringRulesLocationArrayOutput)
}

type GetZIAURLFilteringRulesLocationOutput struct{ *pulumi.OutputState }

func (GetZIAURLFilteringRulesLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAURLFilteringRulesLocation)(nil)).Elem()
}

func (o GetZIAURLFilteringRulesLocationOutput) ToGetZIAURLFilteringRulesLocationOutput() GetZIAURLFilteringRulesLocationOutput {
	return o
}

func (o GetZIAURLFilteringRulesLocationOutput) ToGetZIAURLFilteringRulesLocationOutputWithContext(ctx context.Context) GetZIAURLFilteringRulesLocationOutput {
	return o
}

// (Map of String)
func (o GetZIAURLFilteringRulesLocationOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZIAURLFilteringRulesLocation) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// URL Filtering Rule ID
func (o GetZIAURLFilteringRulesLocationOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIAURLFilteringRulesLocation) int { return v.Id }).(pulumi.IntOutput)
}

// Name of the URL Filtering policy rule
func (o GetZIAURLFilteringRulesLocationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIAURLFilteringRulesLocation) string { return v.Name }).(pulumi.StringOutput)
}

type GetZIAURLFilteringRulesLocationArrayOutput struct{ *pulumi.OutputState }

func (GetZIAURLFilteringRulesLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAURLFilteringRulesLocation)(nil)).Elem()
}

func (o GetZIAURLFilteringRulesLocationArrayOutput) ToGetZIAURLFilteringRulesLocationArrayOutput() GetZIAURLFilteringRulesLocationArrayOutput {
	return o
}

func (o GetZIAURLFilteringRulesLocationArrayOutput) ToGetZIAURLFilteringRulesLocationArrayOutputWithContext(ctx context.Context) GetZIAURLFilteringRulesLocationArrayOutput {
	return o
}

func (o GetZIAURLFilteringRulesLocationArrayOutput) Index(i pulumi.IntInput) GetZIAURLFilteringRulesLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIAURLFilteringRulesLocation {
		return vs[0].([]GetZIAURLFilteringRulesLocation)[vs[1].(int)]
	}).(GetZIAURLFilteringRulesLocationOutput)
}

type GetZIAURLFilteringRulesLocationGroup struct {
	// (Map of String)
	Extensions map[string]string `pulumi:"extensions"`
	// URL Filtering Rule ID
	Id int `pulumi:"id"`
	// Name of the URL Filtering policy rule
	Name string `pulumi:"name"`
}

// GetZIAURLFilteringRulesLocationGroupInput is an input type that accepts GetZIAURLFilteringRulesLocationGroupArgs and GetZIAURLFilteringRulesLocationGroupOutput values.
// You can construct a concrete instance of `GetZIAURLFilteringRulesLocationGroupInput` via:
//
//	GetZIAURLFilteringRulesLocationGroupArgs{...}
type GetZIAURLFilteringRulesLocationGroupInput interface {
	pulumi.Input

	ToGetZIAURLFilteringRulesLocationGroupOutput() GetZIAURLFilteringRulesLocationGroupOutput
	ToGetZIAURLFilteringRulesLocationGroupOutputWithContext(context.Context) GetZIAURLFilteringRulesLocationGroupOutput
}

type GetZIAURLFilteringRulesLocationGroupArgs struct {
	// (Map of String)
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// URL Filtering Rule ID
	Id pulumi.IntInput `pulumi:"id"`
	// Name of the URL Filtering policy rule
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZIAURLFilteringRulesLocationGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAURLFilteringRulesLocationGroup)(nil)).Elem()
}

func (i GetZIAURLFilteringRulesLocationGroupArgs) ToGetZIAURLFilteringRulesLocationGroupOutput() GetZIAURLFilteringRulesLocationGroupOutput {
	return i.ToGetZIAURLFilteringRulesLocationGroupOutputWithContext(context.Background())
}

func (i GetZIAURLFilteringRulesLocationGroupArgs) ToGetZIAURLFilteringRulesLocationGroupOutputWithContext(ctx context.Context) GetZIAURLFilteringRulesLocationGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAURLFilteringRulesLocationGroupOutput)
}

// GetZIAURLFilteringRulesLocationGroupArrayInput is an input type that accepts GetZIAURLFilteringRulesLocationGroupArray and GetZIAURLFilteringRulesLocationGroupArrayOutput values.
// You can construct a concrete instance of `GetZIAURLFilteringRulesLocationGroupArrayInput` via:
//
//	GetZIAURLFilteringRulesLocationGroupArray{ GetZIAURLFilteringRulesLocationGroupArgs{...} }
type GetZIAURLFilteringRulesLocationGroupArrayInput interface {
	pulumi.Input

	ToGetZIAURLFilteringRulesLocationGroupArrayOutput() GetZIAURLFilteringRulesLocationGroupArrayOutput
	ToGetZIAURLFilteringRulesLocationGroupArrayOutputWithContext(context.Context) GetZIAURLFilteringRulesLocationGroupArrayOutput
}

type GetZIAURLFilteringRulesLocationGroupArray []GetZIAURLFilteringRulesLocationGroupInput

func (GetZIAURLFilteringRulesLocationGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAURLFilteringRulesLocationGroup)(nil)).Elem()
}

func (i GetZIAURLFilteringRulesLocationGroupArray) ToGetZIAURLFilteringRulesLocationGroupArrayOutput() GetZIAURLFilteringRulesLocationGroupArrayOutput {
	return i.ToGetZIAURLFilteringRulesLocationGroupArrayOutputWithContext(context.Background())
}

func (i GetZIAURLFilteringRulesLocationGroupArray) ToGetZIAURLFilteringRulesLocationGroupArrayOutputWithContext(ctx context.Context) GetZIAURLFilteringRulesLocationGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAURLFilteringRulesLocationGroupArrayOutput)
}

type GetZIAURLFilteringRulesLocationGroupOutput struct{ *pulumi.OutputState }

func (GetZIAURLFilteringRulesLocationGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAURLFilteringRulesLocationGroup)(nil)).Elem()
}

func (o GetZIAURLFilteringRulesLocationGroupOutput) ToGetZIAURLFilteringRulesLocationGroupOutput() GetZIAURLFilteringRulesLocationGroupOutput {
	return o
}

func (o GetZIAURLFilteringRulesLocationGroupOutput) ToGetZIAURLFilteringRulesLocationGroupOutputWithContext(ctx context.Context) GetZIAURLFilteringRulesLocationGroupOutput {
	return o
}

// (Map of String)
func (o GetZIAURLFilteringRulesLocationGroupOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZIAURLFilteringRulesLocationGroup) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// URL Filtering Rule ID
func (o GetZIAURLFilteringRulesLocationGroupOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIAURLFilteringRulesLocationGroup) int { return v.Id }).(pulumi.IntOutput)
}

// Name of the URL Filtering policy rule
func (o GetZIAURLFilteringRulesLocationGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIAURLFilteringRulesLocationGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetZIAURLFilteringRulesLocationGroupArrayOutput struct{ *pulumi.OutputState }

func (GetZIAURLFilteringRulesLocationGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAURLFilteringRulesLocationGroup)(nil)).Elem()
}

func (o GetZIAURLFilteringRulesLocationGroupArrayOutput) ToGetZIAURLFilteringRulesLocationGroupArrayOutput() GetZIAURLFilteringRulesLocationGroupArrayOutput {
	return o
}

func (o GetZIAURLFilteringRulesLocationGroupArrayOutput) ToGetZIAURLFilteringRulesLocationGroupArrayOutputWithContext(ctx context.Context) GetZIAURLFilteringRulesLocationGroupArrayOutput {
	return o
}

func (o GetZIAURLFilteringRulesLocationGroupArrayOutput) Index(i pulumi.IntInput) GetZIAURLFilteringRulesLocationGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIAURLFilteringRulesLocationGroup {
		return vs[0].([]GetZIAURLFilteringRulesLocationGroup)[vs[1].(int)]
	}).(GetZIAURLFilteringRulesLocationGroupOutput)
}

type GetZIAURLFilteringRulesOverrideGroup struct {
	// (Map of String)
	Extensions map[string]string `pulumi:"extensions"`
	// URL Filtering Rule ID
	Id int `pulumi:"id"`
	// Name of the URL Filtering policy rule
	Name string `pulumi:"name"`
}

// GetZIAURLFilteringRulesOverrideGroupInput is an input type that accepts GetZIAURLFilteringRulesOverrideGroupArgs and GetZIAURLFilteringRulesOverrideGroupOutput values.
// You can construct a concrete instance of `GetZIAURLFilteringRulesOverrideGroupInput` via:
//
//	GetZIAURLFilteringRulesOverrideGroupArgs{...}
type GetZIAURLFilteringRulesOverrideGroupInput interface {
	pulumi.Input

	ToGetZIAURLFilteringRulesOverrideGroupOutput() GetZIAURLFilteringRulesOverrideGroupOutput
	ToGetZIAURLFilteringRulesOverrideGroupOutputWithContext(context.Context) GetZIAURLFilteringRulesOverrideGroupOutput
}

type GetZIAURLFilteringRulesOverrideGroupArgs struct {
	// (Map of String)
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// URL Filtering Rule ID
	Id pulumi.IntInput `pulumi:"id"`
	// Name of the URL Filtering policy rule
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZIAURLFilteringRulesOverrideGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAURLFilteringRulesOverrideGroup)(nil)).Elem()
}

func (i GetZIAURLFilteringRulesOverrideGroupArgs) ToGetZIAURLFilteringRulesOverrideGroupOutput() GetZIAURLFilteringRulesOverrideGroupOutput {
	return i.ToGetZIAURLFilteringRulesOverrideGroupOutputWithContext(context.Background())
}

func (i GetZIAURLFilteringRulesOverrideGroupArgs) ToGetZIAURLFilteringRulesOverrideGroupOutputWithContext(ctx context.Context) GetZIAURLFilteringRulesOverrideGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAURLFilteringRulesOverrideGroupOutput)
}

// GetZIAURLFilteringRulesOverrideGroupArrayInput is an input type that accepts GetZIAURLFilteringRulesOverrideGroupArray and GetZIAURLFilteringRulesOverrideGroupArrayOutput values.
// You can construct a concrete instance of `GetZIAURLFilteringRulesOverrideGroupArrayInput` via:
//
//	GetZIAURLFilteringRulesOverrideGroupArray{ GetZIAURLFilteringRulesOverrideGroupArgs{...} }
type GetZIAURLFilteringRulesOverrideGroupArrayInput interface {
	pulumi.Input

	ToGetZIAURLFilteringRulesOverrideGroupArrayOutput() GetZIAURLFilteringRulesOverrideGroupArrayOutput
	ToGetZIAURLFilteringRulesOverrideGroupArrayOutputWithContext(context.Context) GetZIAURLFilteringRulesOverrideGroupArrayOutput
}

type GetZIAURLFilteringRulesOverrideGroupArray []GetZIAURLFilteringRulesOverrideGroupInput

func (GetZIAURLFilteringRulesOverrideGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAURLFilteringRulesOverrideGroup)(nil)).Elem()
}

func (i GetZIAURLFilteringRulesOverrideGroupArray) ToGetZIAURLFilteringRulesOverrideGroupArrayOutput() GetZIAURLFilteringRulesOverrideGroupArrayOutput {
	return i.ToGetZIAURLFilteringRulesOverrideGroupArrayOutputWithContext(context.Background())
}

func (i GetZIAURLFilteringRulesOverrideGroupArray) ToGetZIAURLFilteringRulesOverrideGroupArrayOutputWithContext(ctx context.Context) GetZIAURLFilteringRulesOverrideGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAURLFilteringRulesOverrideGroupArrayOutput)
}

type GetZIAURLFilteringRulesOverrideGroupOutput struct{ *pulumi.OutputState }

func (GetZIAURLFilteringRulesOverrideGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAURLFilteringRulesOverrideGroup)(nil)).Elem()
}

func (o GetZIAURLFilteringRulesOverrideGroupOutput) ToGetZIAURLFilteringRulesOverrideGroupOutput() GetZIAURLFilteringRulesOverrideGroupOutput {
	return o
}

func (o GetZIAURLFilteringRulesOverrideGroupOutput) ToGetZIAURLFilteringRulesOverrideGroupOutputWithContext(ctx context.Context) GetZIAURLFilteringRulesOverrideGroupOutput {
	return o
}

// (Map of String)
func (o GetZIAURLFilteringRulesOverrideGroupOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZIAURLFilteringRulesOverrideGroup) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// URL Filtering Rule ID
func (o GetZIAURLFilteringRulesOverrideGroupOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIAURLFilteringRulesOverrideGroup) int { return v.Id }).(pulumi.IntOutput)
}

// Name of the URL Filtering policy rule
func (o GetZIAURLFilteringRulesOverrideGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIAURLFilteringRulesOverrideGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetZIAURLFilteringRulesOverrideGroupArrayOutput struct{ *pulumi.OutputState }

func (GetZIAURLFilteringRulesOverrideGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAURLFilteringRulesOverrideGroup)(nil)).Elem()
}

func (o GetZIAURLFilteringRulesOverrideGroupArrayOutput) ToGetZIAURLFilteringRulesOverrideGroupArrayOutput() GetZIAURLFilteringRulesOverrideGroupArrayOutput {
	return o
}

func (o GetZIAURLFilteringRulesOverrideGroupArrayOutput) ToGetZIAURLFilteringRulesOverrideGroupArrayOutputWithContext(ctx context.Context) GetZIAURLFilteringRulesOverrideGroupArrayOutput {
	return o
}

func (o GetZIAURLFilteringRulesOverrideGroupArrayOutput) Index(i pulumi.IntInput) GetZIAURLFilteringRulesOverrideGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIAURLFilteringRulesOverrideGroup {
		return vs[0].([]GetZIAURLFilteringRulesOverrideGroup)[vs[1].(int)]
	}).(GetZIAURLFilteringRulesOverrideGroupOutput)
}

type GetZIAURLFilteringRulesOverrideUser struct {
	// (Map of String)
	Extensions map[string]string `pulumi:"extensions"`
	// URL Filtering Rule ID
	Id int `pulumi:"id"`
	// Name of the URL Filtering policy rule
	Name string `pulumi:"name"`
}

// GetZIAURLFilteringRulesOverrideUserInput is an input type that accepts GetZIAURLFilteringRulesOverrideUserArgs and GetZIAURLFilteringRulesOverrideUserOutput values.
// You can construct a concrete instance of `GetZIAURLFilteringRulesOverrideUserInput` via:
//
//	GetZIAURLFilteringRulesOverrideUserArgs{...}
type GetZIAURLFilteringRulesOverrideUserInput interface {
	pulumi.Input

	ToGetZIAURLFilteringRulesOverrideUserOutput() GetZIAURLFilteringRulesOverrideUserOutput
	ToGetZIAURLFilteringRulesOverrideUserOutputWithContext(context.Context) GetZIAURLFilteringRulesOverrideUserOutput
}

type GetZIAURLFilteringRulesOverrideUserArgs struct {
	// (Map of String)
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// URL Filtering Rule ID
	Id pulumi.IntInput `pulumi:"id"`
	// Name of the URL Filtering policy rule
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZIAURLFilteringRulesOverrideUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAURLFilteringRulesOverrideUser)(nil)).Elem()
}

func (i GetZIAURLFilteringRulesOverrideUserArgs) ToGetZIAURLFilteringRulesOverrideUserOutput() GetZIAURLFilteringRulesOverrideUserOutput {
	return i.ToGetZIAURLFilteringRulesOverrideUserOutputWithContext(context.Background())
}

func (i GetZIAURLFilteringRulesOverrideUserArgs) ToGetZIAURLFilteringRulesOverrideUserOutputWithContext(ctx context.Context) GetZIAURLFilteringRulesOverrideUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAURLFilteringRulesOverrideUserOutput)
}

// GetZIAURLFilteringRulesOverrideUserArrayInput is an input type that accepts GetZIAURLFilteringRulesOverrideUserArray and GetZIAURLFilteringRulesOverrideUserArrayOutput values.
// You can construct a concrete instance of `GetZIAURLFilteringRulesOverrideUserArrayInput` via:
//
//	GetZIAURLFilteringRulesOverrideUserArray{ GetZIAURLFilteringRulesOverrideUserArgs{...} }
type GetZIAURLFilteringRulesOverrideUserArrayInput interface {
	pulumi.Input

	ToGetZIAURLFilteringRulesOverrideUserArrayOutput() GetZIAURLFilteringRulesOverrideUserArrayOutput
	ToGetZIAURLFilteringRulesOverrideUserArrayOutputWithContext(context.Context) GetZIAURLFilteringRulesOverrideUserArrayOutput
}

type GetZIAURLFilteringRulesOverrideUserArray []GetZIAURLFilteringRulesOverrideUserInput

func (GetZIAURLFilteringRulesOverrideUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAURLFilteringRulesOverrideUser)(nil)).Elem()
}

func (i GetZIAURLFilteringRulesOverrideUserArray) ToGetZIAURLFilteringRulesOverrideUserArrayOutput() GetZIAURLFilteringRulesOverrideUserArrayOutput {
	return i.ToGetZIAURLFilteringRulesOverrideUserArrayOutputWithContext(context.Background())
}

func (i GetZIAURLFilteringRulesOverrideUserArray) ToGetZIAURLFilteringRulesOverrideUserArrayOutputWithContext(ctx context.Context) GetZIAURLFilteringRulesOverrideUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAURLFilteringRulesOverrideUserArrayOutput)
}

type GetZIAURLFilteringRulesOverrideUserOutput struct{ *pulumi.OutputState }

func (GetZIAURLFilteringRulesOverrideUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAURLFilteringRulesOverrideUser)(nil)).Elem()
}

func (o GetZIAURLFilteringRulesOverrideUserOutput) ToGetZIAURLFilteringRulesOverrideUserOutput() GetZIAURLFilteringRulesOverrideUserOutput {
	return o
}

func (o GetZIAURLFilteringRulesOverrideUserOutput) ToGetZIAURLFilteringRulesOverrideUserOutputWithContext(ctx context.Context) GetZIAURLFilteringRulesOverrideUserOutput {
	return o
}

// (Map of String)
func (o GetZIAURLFilteringRulesOverrideUserOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZIAURLFilteringRulesOverrideUser) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// URL Filtering Rule ID
func (o GetZIAURLFilteringRulesOverrideUserOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIAURLFilteringRulesOverrideUser) int { return v.Id }).(pulumi.IntOutput)
}

// Name of the URL Filtering policy rule
func (o GetZIAURLFilteringRulesOverrideUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIAURLFilteringRulesOverrideUser) string { return v.Name }).(pulumi.StringOutput)
}

type GetZIAURLFilteringRulesOverrideUserArrayOutput struct{ *pulumi.OutputState }

func (GetZIAURLFilteringRulesOverrideUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAURLFilteringRulesOverrideUser)(nil)).Elem()
}

func (o GetZIAURLFilteringRulesOverrideUserArrayOutput) ToGetZIAURLFilteringRulesOverrideUserArrayOutput() GetZIAURLFilteringRulesOverrideUserArrayOutput {
	return o
}

func (o GetZIAURLFilteringRulesOverrideUserArrayOutput) ToGetZIAURLFilteringRulesOverrideUserArrayOutputWithContext(ctx context.Context) GetZIAURLFilteringRulesOverrideUserArrayOutput {
	return o
}

func (o GetZIAURLFilteringRulesOverrideUserArrayOutput) Index(i pulumi.IntInput) GetZIAURLFilteringRulesOverrideUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIAURLFilteringRulesOverrideUser {
		return vs[0].([]GetZIAURLFilteringRulesOverrideUser)[vs[1].(int)]
	}).(GetZIAURLFilteringRulesOverrideUserOutput)
}

type GetZIAURLFilteringRulesTimeWindow struct {
	// (Map of String)
	Extensions map[string]string `pulumi:"extensions"`
	// URL Filtering Rule ID
	Id int `pulumi:"id"`
	// Name of the URL Filtering policy rule
	Name string `pulumi:"name"`
}

// GetZIAURLFilteringRulesTimeWindowInput is an input type that accepts GetZIAURLFilteringRulesTimeWindowArgs and GetZIAURLFilteringRulesTimeWindowOutput values.
// You can construct a concrete instance of `GetZIAURLFilteringRulesTimeWindowInput` via:
//
//	GetZIAURLFilteringRulesTimeWindowArgs{...}
type GetZIAURLFilteringRulesTimeWindowInput interface {
	pulumi.Input

	ToGetZIAURLFilteringRulesTimeWindowOutput() GetZIAURLFilteringRulesTimeWindowOutput
	ToGetZIAURLFilteringRulesTimeWindowOutputWithContext(context.Context) GetZIAURLFilteringRulesTimeWindowOutput
}

type GetZIAURLFilteringRulesTimeWindowArgs struct {
	// (Map of String)
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// URL Filtering Rule ID
	Id pulumi.IntInput `pulumi:"id"`
	// Name of the URL Filtering policy rule
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZIAURLFilteringRulesTimeWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAURLFilteringRulesTimeWindow)(nil)).Elem()
}

func (i GetZIAURLFilteringRulesTimeWindowArgs) ToGetZIAURLFilteringRulesTimeWindowOutput() GetZIAURLFilteringRulesTimeWindowOutput {
	return i.ToGetZIAURLFilteringRulesTimeWindowOutputWithContext(context.Background())
}

func (i GetZIAURLFilteringRulesTimeWindowArgs) ToGetZIAURLFilteringRulesTimeWindowOutputWithContext(ctx context.Context) GetZIAURLFilteringRulesTimeWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAURLFilteringRulesTimeWindowOutput)
}

// GetZIAURLFilteringRulesTimeWindowArrayInput is an input type that accepts GetZIAURLFilteringRulesTimeWindowArray and GetZIAURLFilteringRulesTimeWindowArrayOutput values.
// You can construct a concrete instance of `GetZIAURLFilteringRulesTimeWindowArrayInput` via:
//
//	GetZIAURLFilteringRulesTimeWindowArray{ GetZIAURLFilteringRulesTimeWindowArgs{...} }
type GetZIAURLFilteringRulesTimeWindowArrayInput interface {
	pulumi.Input

	ToGetZIAURLFilteringRulesTimeWindowArrayOutput() GetZIAURLFilteringRulesTimeWindowArrayOutput
	ToGetZIAURLFilteringRulesTimeWindowArrayOutputWithContext(context.Context) GetZIAURLFilteringRulesTimeWindowArrayOutput
}

type GetZIAURLFilteringRulesTimeWindowArray []GetZIAURLFilteringRulesTimeWindowInput

func (GetZIAURLFilteringRulesTimeWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAURLFilteringRulesTimeWindow)(nil)).Elem()
}

func (i GetZIAURLFilteringRulesTimeWindowArray) ToGetZIAURLFilteringRulesTimeWindowArrayOutput() GetZIAURLFilteringRulesTimeWindowArrayOutput {
	return i.ToGetZIAURLFilteringRulesTimeWindowArrayOutputWithContext(context.Background())
}

func (i GetZIAURLFilteringRulesTimeWindowArray) ToGetZIAURLFilteringRulesTimeWindowArrayOutputWithContext(ctx context.Context) GetZIAURLFilteringRulesTimeWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAURLFilteringRulesTimeWindowArrayOutput)
}

type GetZIAURLFilteringRulesTimeWindowOutput struct{ *pulumi.OutputState }

func (GetZIAURLFilteringRulesTimeWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAURLFilteringRulesTimeWindow)(nil)).Elem()
}

func (o GetZIAURLFilteringRulesTimeWindowOutput) ToGetZIAURLFilteringRulesTimeWindowOutput() GetZIAURLFilteringRulesTimeWindowOutput {
	return o
}

func (o GetZIAURLFilteringRulesTimeWindowOutput) ToGetZIAURLFilteringRulesTimeWindowOutputWithContext(ctx context.Context) GetZIAURLFilteringRulesTimeWindowOutput {
	return o
}

// (Map of String)
func (o GetZIAURLFilteringRulesTimeWindowOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZIAURLFilteringRulesTimeWindow) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// URL Filtering Rule ID
func (o GetZIAURLFilteringRulesTimeWindowOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIAURLFilteringRulesTimeWindow) int { return v.Id }).(pulumi.IntOutput)
}

// Name of the URL Filtering policy rule
func (o GetZIAURLFilteringRulesTimeWindowOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIAURLFilteringRulesTimeWindow) string { return v.Name }).(pulumi.StringOutput)
}

type GetZIAURLFilteringRulesTimeWindowArrayOutput struct{ *pulumi.OutputState }

func (GetZIAURLFilteringRulesTimeWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAURLFilteringRulesTimeWindow)(nil)).Elem()
}

func (o GetZIAURLFilteringRulesTimeWindowArrayOutput) ToGetZIAURLFilteringRulesTimeWindowArrayOutput() GetZIAURLFilteringRulesTimeWindowArrayOutput {
	return o
}

func (o GetZIAURLFilteringRulesTimeWindowArrayOutput) ToGetZIAURLFilteringRulesTimeWindowArrayOutputWithContext(ctx context.Context) GetZIAURLFilteringRulesTimeWindowArrayOutput {
	return o
}

func (o GetZIAURLFilteringRulesTimeWindowArrayOutput) Index(i pulumi.IntInput) GetZIAURLFilteringRulesTimeWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIAURLFilteringRulesTimeWindow {
		return vs[0].([]GetZIAURLFilteringRulesTimeWindow)[vs[1].(int)]
	}).(GetZIAURLFilteringRulesTimeWindowOutput)
}

type GetZIAURLFilteringRulesUser struct {
	// (Map of String)
	Extensions map[string]string `pulumi:"extensions"`
	// URL Filtering Rule ID
	Id int `pulumi:"id"`
	// Name of the URL Filtering policy rule
	Name string `pulumi:"name"`
}

// GetZIAURLFilteringRulesUserInput is an input type that accepts GetZIAURLFilteringRulesUserArgs and GetZIAURLFilteringRulesUserOutput values.
// You can construct a concrete instance of `GetZIAURLFilteringRulesUserInput` via:
//
//	GetZIAURLFilteringRulesUserArgs{...}
type GetZIAURLFilteringRulesUserInput interface {
	pulumi.Input

	ToGetZIAURLFilteringRulesUserOutput() GetZIAURLFilteringRulesUserOutput
	ToGetZIAURLFilteringRulesUserOutputWithContext(context.Context) GetZIAURLFilteringRulesUserOutput
}

type GetZIAURLFilteringRulesUserArgs struct {
	// (Map of String)
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// URL Filtering Rule ID
	Id pulumi.IntInput `pulumi:"id"`
	// Name of the URL Filtering policy rule
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZIAURLFilteringRulesUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAURLFilteringRulesUser)(nil)).Elem()
}

func (i GetZIAURLFilteringRulesUserArgs) ToGetZIAURLFilteringRulesUserOutput() GetZIAURLFilteringRulesUserOutput {
	return i.ToGetZIAURLFilteringRulesUserOutputWithContext(context.Background())
}

func (i GetZIAURLFilteringRulesUserArgs) ToGetZIAURLFilteringRulesUserOutputWithContext(ctx context.Context) GetZIAURLFilteringRulesUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAURLFilteringRulesUserOutput)
}

// GetZIAURLFilteringRulesUserArrayInput is an input type that accepts GetZIAURLFilteringRulesUserArray and GetZIAURLFilteringRulesUserArrayOutput values.
// You can construct a concrete instance of `GetZIAURLFilteringRulesUserArrayInput` via:
//
//	GetZIAURLFilteringRulesUserArray{ GetZIAURLFilteringRulesUserArgs{...} }
type GetZIAURLFilteringRulesUserArrayInput interface {
	pulumi.Input

	ToGetZIAURLFilteringRulesUserArrayOutput() GetZIAURLFilteringRulesUserArrayOutput
	ToGetZIAURLFilteringRulesUserArrayOutputWithContext(context.Context) GetZIAURLFilteringRulesUserArrayOutput
}

type GetZIAURLFilteringRulesUserArray []GetZIAURLFilteringRulesUserInput

func (GetZIAURLFilteringRulesUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAURLFilteringRulesUser)(nil)).Elem()
}

func (i GetZIAURLFilteringRulesUserArray) ToGetZIAURLFilteringRulesUserArrayOutput() GetZIAURLFilteringRulesUserArrayOutput {
	return i.ToGetZIAURLFilteringRulesUserArrayOutputWithContext(context.Background())
}

func (i GetZIAURLFilteringRulesUserArray) ToGetZIAURLFilteringRulesUserArrayOutputWithContext(ctx context.Context) GetZIAURLFilteringRulesUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAURLFilteringRulesUserArrayOutput)
}

type GetZIAURLFilteringRulesUserOutput struct{ *pulumi.OutputState }

func (GetZIAURLFilteringRulesUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAURLFilteringRulesUser)(nil)).Elem()
}

func (o GetZIAURLFilteringRulesUserOutput) ToGetZIAURLFilteringRulesUserOutput() GetZIAURLFilteringRulesUserOutput {
	return o
}

func (o GetZIAURLFilteringRulesUserOutput) ToGetZIAURLFilteringRulesUserOutputWithContext(ctx context.Context) GetZIAURLFilteringRulesUserOutput {
	return o
}

// (Map of String)
func (o GetZIAURLFilteringRulesUserOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZIAURLFilteringRulesUser) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// URL Filtering Rule ID
func (o GetZIAURLFilteringRulesUserOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIAURLFilteringRulesUser) int { return v.Id }).(pulumi.IntOutput)
}

// Name of the URL Filtering policy rule
func (o GetZIAURLFilteringRulesUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIAURLFilteringRulesUser) string { return v.Name }).(pulumi.StringOutput)
}

type GetZIAURLFilteringRulesUserArrayOutput struct{ *pulumi.OutputState }

func (GetZIAURLFilteringRulesUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAURLFilteringRulesUser)(nil)).Elem()
}

func (o GetZIAURLFilteringRulesUserArrayOutput) ToGetZIAURLFilteringRulesUserArrayOutput() GetZIAURLFilteringRulesUserArrayOutput {
	return o
}

func (o GetZIAURLFilteringRulesUserArrayOutput) ToGetZIAURLFilteringRulesUserArrayOutputWithContext(ctx context.Context) GetZIAURLFilteringRulesUserArrayOutput {
	return o
}

func (o GetZIAURLFilteringRulesUserArrayOutput) Index(i pulumi.IntInput) GetZIAURLFilteringRulesUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIAURLFilteringRulesUser {
		return vs[0].([]GetZIAURLFilteringRulesUser)[vs[1].(int)]
	}).(GetZIAURLFilteringRulesUserOutput)
}

type GetZIAUserManagementDepartment struct {
	// (String) Additional information about the group
	Comments string `pulumi:"comments"`
	// (Boolean) default: `false`
	Deleted bool `pulumi:"deleted"`
	// The ID of the time window resource.
	Id int `pulumi:"id"`
	// (Number) Unique identfier for the identity provider (IdP)
	IdpId int `pulumi:"idpId"`
	// User name. This appears when choosing users for policies.
	Name string `pulumi:"name"`
}

// GetZIAUserManagementDepartmentInput is an input type that accepts GetZIAUserManagementDepartmentArgs and GetZIAUserManagementDepartmentOutput values.
// You can construct a concrete instance of `GetZIAUserManagementDepartmentInput` via:
//
//	GetZIAUserManagementDepartmentArgs{...}
type GetZIAUserManagementDepartmentInput interface {
	pulumi.Input

	ToGetZIAUserManagementDepartmentOutput() GetZIAUserManagementDepartmentOutput
	ToGetZIAUserManagementDepartmentOutputWithContext(context.Context) GetZIAUserManagementDepartmentOutput
}

type GetZIAUserManagementDepartmentArgs struct {
	// (String) Additional information about the group
	Comments pulumi.StringInput `pulumi:"comments"`
	// (Boolean) default: `false`
	Deleted pulumi.BoolInput `pulumi:"deleted"`
	// The ID of the time window resource.
	Id pulumi.IntInput `pulumi:"id"`
	// (Number) Unique identfier for the identity provider (IdP)
	IdpId pulumi.IntInput `pulumi:"idpId"`
	// User name. This appears when choosing users for policies.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZIAUserManagementDepartmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAUserManagementDepartment)(nil)).Elem()
}

func (i GetZIAUserManagementDepartmentArgs) ToGetZIAUserManagementDepartmentOutput() GetZIAUserManagementDepartmentOutput {
	return i.ToGetZIAUserManagementDepartmentOutputWithContext(context.Background())
}

func (i GetZIAUserManagementDepartmentArgs) ToGetZIAUserManagementDepartmentOutputWithContext(ctx context.Context) GetZIAUserManagementDepartmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAUserManagementDepartmentOutput)
}

// GetZIAUserManagementDepartmentArrayInput is an input type that accepts GetZIAUserManagementDepartmentArray and GetZIAUserManagementDepartmentArrayOutput values.
// You can construct a concrete instance of `GetZIAUserManagementDepartmentArrayInput` via:
//
//	GetZIAUserManagementDepartmentArray{ GetZIAUserManagementDepartmentArgs{...} }
type GetZIAUserManagementDepartmentArrayInput interface {
	pulumi.Input

	ToGetZIAUserManagementDepartmentArrayOutput() GetZIAUserManagementDepartmentArrayOutput
	ToGetZIAUserManagementDepartmentArrayOutputWithContext(context.Context) GetZIAUserManagementDepartmentArrayOutput
}

type GetZIAUserManagementDepartmentArray []GetZIAUserManagementDepartmentInput

func (GetZIAUserManagementDepartmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAUserManagementDepartment)(nil)).Elem()
}

func (i GetZIAUserManagementDepartmentArray) ToGetZIAUserManagementDepartmentArrayOutput() GetZIAUserManagementDepartmentArrayOutput {
	return i.ToGetZIAUserManagementDepartmentArrayOutputWithContext(context.Background())
}

func (i GetZIAUserManagementDepartmentArray) ToGetZIAUserManagementDepartmentArrayOutputWithContext(ctx context.Context) GetZIAUserManagementDepartmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAUserManagementDepartmentArrayOutput)
}

type GetZIAUserManagementDepartmentOutput struct{ *pulumi.OutputState }

func (GetZIAUserManagementDepartmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAUserManagementDepartment)(nil)).Elem()
}

func (o GetZIAUserManagementDepartmentOutput) ToGetZIAUserManagementDepartmentOutput() GetZIAUserManagementDepartmentOutput {
	return o
}

func (o GetZIAUserManagementDepartmentOutput) ToGetZIAUserManagementDepartmentOutputWithContext(ctx context.Context) GetZIAUserManagementDepartmentOutput {
	return o
}

// (String) Additional information about the group
func (o GetZIAUserManagementDepartmentOutput) Comments() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIAUserManagementDepartment) string { return v.Comments }).(pulumi.StringOutput)
}

// (Boolean) default: `false`
func (o GetZIAUserManagementDepartmentOutput) Deleted() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZIAUserManagementDepartment) bool { return v.Deleted }).(pulumi.BoolOutput)
}

// The ID of the time window resource.
func (o GetZIAUserManagementDepartmentOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIAUserManagementDepartment) int { return v.Id }).(pulumi.IntOutput)
}

// (Number) Unique identfier for the identity provider (IdP)
func (o GetZIAUserManagementDepartmentOutput) IdpId() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIAUserManagementDepartment) int { return v.IdpId }).(pulumi.IntOutput)
}

// User name. This appears when choosing users for policies.
func (o GetZIAUserManagementDepartmentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIAUserManagementDepartment) string { return v.Name }).(pulumi.StringOutput)
}

type GetZIAUserManagementDepartmentArrayOutput struct{ *pulumi.OutputState }

func (GetZIAUserManagementDepartmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAUserManagementDepartment)(nil)).Elem()
}

func (o GetZIAUserManagementDepartmentArrayOutput) ToGetZIAUserManagementDepartmentArrayOutput() GetZIAUserManagementDepartmentArrayOutput {
	return o
}

func (o GetZIAUserManagementDepartmentArrayOutput) ToGetZIAUserManagementDepartmentArrayOutputWithContext(ctx context.Context) GetZIAUserManagementDepartmentArrayOutput {
	return o
}

func (o GetZIAUserManagementDepartmentArrayOutput) Index(i pulumi.IntInput) GetZIAUserManagementDepartmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIAUserManagementDepartment {
		return vs[0].([]GetZIAUserManagementDepartment)[vs[1].(int)]
	}).(GetZIAUserManagementDepartmentOutput)
}

type GetZIAUserManagementGroup struct {
	// (String) Additional information about the group
	Comments string `pulumi:"comments"`
	// The ID of the time window resource.
	Id int `pulumi:"id"`
	// (Number) Unique identfier for the identity provider (IdP)
	IdpId int `pulumi:"idpId"`
	// User name. This appears when choosing users for policies.
	Name string `pulumi:"name"`
}

// GetZIAUserManagementGroupInput is an input type that accepts GetZIAUserManagementGroupArgs and GetZIAUserManagementGroupOutput values.
// You can construct a concrete instance of `GetZIAUserManagementGroupInput` via:
//
//	GetZIAUserManagementGroupArgs{...}
type GetZIAUserManagementGroupInput interface {
	pulumi.Input

	ToGetZIAUserManagementGroupOutput() GetZIAUserManagementGroupOutput
	ToGetZIAUserManagementGroupOutputWithContext(context.Context) GetZIAUserManagementGroupOutput
}

type GetZIAUserManagementGroupArgs struct {
	// (String) Additional information about the group
	Comments pulumi.StringInput `pulumi:"comments"`
	// The ID of the time window resource.
	Id pulumi.IntInput `pulumi:"id"`
	// (Number) Unique identfier for the identity provider (IdP)
	IdpId pulumi.IntInput `pulumi:"idpId"`
	// User name. This appears when choosing users for policies.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetZIAUserManagementGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAUserManagementGroup)(nil)).Elem()
}

func (i GetZIAUserManagementGroupArgs) ToGetZIAUserManagementGroupOutput() GetZIAUserManagementGroupOutput {
	return i.ToGetZIAUserManagementGroupOutputWithContext(context.Background())
}

func (i GetZIAUserManagementGroupArgs) ToGetZIAUserManagementGroupOutputWithContext(ctx context.Context) GetZIAUserManagementGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAUserManagementGroupOutput)
}

// GetZIAUserManagementGroupArrayInput is an input type that accepts GetZIAUserManagementGroupArray and GetZIAUserManagementGroupArrayOutput values.
// You can construct a concrete instance of `GetZIAUserManagementGroupArrayInput` via:
//
//	GetZIAUserManagementGroupArray{ GetZIAUserManagementGroupArgs{...} }
type GetZIAUserManagementGroupArrayInput interface {
	pulumi.Input

	ToGetZIAUserManagementGroupArrayOutput() GetZIAUserManagementGroupArrayOutput
	ToGetZIAUserManagementGroupArrayOutputWithContext(context.Context) GetZIAUserManagementGroupArrayOutput
}

type GetZIAUserManagementGroupArray []GetZIAUserManagementGroupInput

func (GetZIAUserManagementGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAUserManagementGroup)(nil)).Elem()
}

func (i GetZIAUserManagementGroupArray) ToGetZIAUserManagementGroupArrayOutput() GetZIAUserManagementGroupArrayOutput {
	return i.ToGetZIAUserManagementGroupArrayOutputWithContext(context.Background())
}

func (i GetZIAUserManagementGroupArray) ToGetZIAUserManagementGroupArrayOutputWithContext(ctx context.Context) GetZIAUserManagementGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZIAUserManagementGroupArrayOutput)
}

type GetZIAUserManagementGroupOutput struct{ *pulumi.OutputState }

func (GetZIAUserManagementGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAUserManagementGroup)(nil)).Elem()
}

func (o GetZIAUserManagementGroupOutput) ToGetZIAUserManagementGroupOutput() GetZIAUserManagementGroupOutput {
	return o
}

func (o GetZIAUserManagementGroupOutput) ToGetZIAUserManagementGroupOutputWithContext(ctx context.Context) GetZIAUserManagementGroupOutput {
	return o
}

// (String) Additional information about the group
func (o GetZIAUserManagementGroupOutput) Comments() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIAUserManagementGroup) string { return v.Comments }).(pulumi.StringOutput)
}

// The ID of the time window resource.
func (o GetZIAUserManagementGroupOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIAUserManagementGroup) int { return v.Id }).(pulumi.IntOutput)
}

// (Number) Unique identfier for the identity provider (IdP)
func (o GetZIAUserManagementGroupOutput) IdpId() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIAUserManagementGroup) int { return v.IdpId }).(pulumi.IntOutput)
}

// User name. This appears when choosing users for policies.
func (o GetZIAUserManagementGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIAUserManagementGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetZIAUserManagementGroupArrayOutput struct{ *pulumi.OutputState }

func (GetZIAUserManagementGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZIAUserManagementGroup)(nil)).Elem()
}

func (o GetZIAUserManagementGroupArrayOutput) ToGetZIAUserManagementGroupArrayOutput() GetZIAUserManagementGroupArrayOutput {
	return o
}

func (o GetZIAUserManagementGroupArrayOutput) ToGetZIAUserManagementGroupArrayOutputWithContext(ctx context.Context) GetZIAUserManagementGroupArrayOutput {
	return o
}

func (o GetZIAUserManagementGroupArrayOutput) Index(i pulumi.IntInput) GetZIAUserManagementGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZIAUserManagementGroup {
		return vs[0].([]GetZIAUserManagementGroup)[vs[1].(int)]
	}).(GetZIAUserManagementGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAAdminUsersAdminScopeInput)(nil)).Elem(), ZIAAdminUsersAdminScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAAdminUsersAdminScopeArrayInput)(nil)).Elem(), ZIAAdminUsersAdminScopeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAAdminUsersAdminScopeScopeEntitiesInput)(nil)).Elem(), ZIAAdminUsersAdminScopeScopeEntitiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAAdminUsersAdminScopeScopeEntitiesPtrInput)(nil)).Elem(), ZIAAdminUsersAdminScopeScopeEntitiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesInput)(nil)).Elem(), ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesPtrInput)(nil)).Elem(), ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAAdminUsersRoleInput)(nil)).Elem(), ZIAAdminUsersRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAAdminUsersRoleArrayInput)(nil)).Elem(), ZIAAdminUsersRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIADLPDictionariesExactDataMatchDetailInput)(nil)).Elem(), ZIADLPDictionariesExactDataMatchDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIADLPDictionariesExactDataMatchDetailArrayInput)(nil)).Elem(), ZIADLPDictionariesExactDataMatchDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIADLPDictionariesIdmProfileMatchAccuracyInput)(nil)).Elem(), ZIADLPDictionariesIdmProfileMatchAccuracyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIADLPDictionariesIdmProfileMatchAccuracyArrayInput)(nil)).Elem(), ZIADLPDictionariesIdmProfileMatchAccuracyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileInput)(nil)).Elem(), ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfilePtrInput)(nil)).Elem(), ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIADLPDictionariesPatternInput)(nil)).Elem(), ZIADLPDictionariesPatternArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIADLPDictionariesPatternArrayInput)(nil)).Elem(), ZIADLPDictionariesPatternArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIADLPDictionariesPhraseInput)(nil)).Elem(), ZIADLPDictionariesPhraseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIADLPDictionariesPhraseArrayInput)(nil)).Elem(), ZIADLPDictionariesPhraseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIADLPWebRulesAuditorInput)(nil)).Elem(), ZIADLPWebRulesAuditorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIADLPWebRulesAuditorPtrInput)(nil)).Elem(), ZIADLPWebRulesAuditorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIADLPWebRulesDepartmentsInput)(nil)).Elem(), ZIADLPWebRulesDepartmentsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIADLPWebRulesDepartmentsPtrInput)(nil)).Elem(), ZIADLPWebRulesDepartmentsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIADLPWebRulesDlpEnginesInput)(nil)).Elem(), ZIADLPWebRulesDlpEnginesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIADLPWebRulesDlpEnginesPtrInput)(nil)).Elem(), ZIADLPWebRulesDlpEnginesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIADLPWebRulesExcludedDepartmentsInput)(nil)).Elem(), ZIADLPWebRulesExcludedDepartmentsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIADLPWebRulesExcludedDepartmentsPtrInput)(nil)).Elem(), ZIADLPWebRulesExcludedDepartmentsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIADLPWebRulesExcludedGroupsInput)(nil)).Elem(), ZIADLPWebRulesExcludedGroupsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIADLPWebRulesExcludedGroupsPtrInput)(nil)).Elem(), ZIADLPWebRulesExcludedGroupsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIADLPWebRulesExcludedUsersInput)(nil)).Elem(), ZIADLPWebRulesExcludedUsersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIADLPWebRulesExcludedUsersPtrInput)(nil)).Elem(), ZIADLPWebRulesExcludedUsersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIADLPWebRulesGroupsInput)(nil)).Elem(), ZIADLPWebRulesGroupsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIADLPWebRulesGroupsPtrInput)(nil)).Elem(), ZIADLPWebRulesGroupsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIADLPWebRulesIcapServerInput)(nil)).Elem(), ZIADLPWebRulesIcapServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIADLPWebRulesIcapServerPtrInput)(nil)).Elem(), ZIADLPWebRulesIcapServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIADLPWebRulesLabelsInput)(nil)).Elem(), ZIADLPWebRulesLabelsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIADLPWebRulesLabelsPtrInput)(nil)).Elem(), ZIADLPWebRulesLabelsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIADLPWebRulesLocationGroupsInput)(nil)).Elem(), ZIADLPWebRulesLocationGroupsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIADLPWebRulesLocationGroupsPtrInput)(nil)).Elem(), ZIADLPWebRulesLocationGroupsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIADLPWebRulesLocationsInput)(nil)).Elem(), ZIADLPWebRulesLocationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIADLPWebRulesLocationsPtrInput)(nil)).Elem(), ZIADLPWebRulesLocationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIADLPWebRulesNotificationTemplateInput)(nil)).Elem(), ZIADLPWebRulesNotificationTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIADLPWebRulesNotificationTemplatePtrInput)(nil)).Elem(), ZIADLPWebRulesNotificationTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIADLPWebRulesTimeWindowsInput)(nil)).Elem(), ZIADLPWebRulesTimeWindowsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIADLPWebRulesTimeWindowsPtrInput)(nil)).Elem(), ZIADLPWebRulesTimeWindowsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIADLPWebRulesUrlCategoriesInput)(nil)).Elem(), ZIADLPWebRulesUrlCategoriesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIADLPWebRulesUrlCategoriesPtrInput)(nil)).Elem(), ZIADLPWebRulesUrlCategoriesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIADLPWebRulesUsersInput)(nil)).Elem(), ZIADLPWebRulesUsersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIADLPWebRulesUsersPtrInput)(nil)).Elem(), ZIADLPWebRulesUsersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAFirewallFilteringNetworkServicesDestTcpPortInput)(nil)).Elem(), ZIAFirewallFilteringNetworkServicesDestTcpPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAFirewallFilteringNetworkServicesDestTcpPortArrayInput)(nil)).Elem(), ZIAFirewallFilteringNetworkServicesDestTcpPortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAFirewallFilteringNetworkServicesDestUdpPortInput)(nil)).Elem(), ZIAFirewallFilteringNetworkServicesDestUdpPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAFirewallFilteringNetworkServicesDestUdpPortArrayInput)(nil)).Elem(), ZIAFirewallFilteringNetworkServicesDestUdpPortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAFirewallFilteringNetworkServicesSrcTcpPortInput)(nil)).Elem(), ZIAFirewallFilteringNetworkServicesSrcTcpPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAFirewallFilteringNetworkServicesSrcTcpPortArrayInput)(nil)).Elem(), ZIAFirewallFilteringNetworkServicesSrcTcpPortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAFirewallFilteringNetworkServicesSrcUdpPortInput)(nil)).Elem(), ZIAFirewallFilteringNetworkServicesSrcUdpPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAFirewallFilteringNetworkServicesSrcUdpPortArrayInput)(nil)).Elem(), ZIAFirewallFilteringNetworkServicesSrcUdpPortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAFirewallFilteringRuleAppServiceGroupsInput)(nil)).Elem(), ZIAFirewallFilteringRuleAppServiceGroupsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAFirewallFilteringRuleAppServiceGroupsPtrInput)(nil)).Elem(), ZIAFirewallFilteringRuleAppServiceGroupsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAFirewallFilteringRuleAppServicesInput)(nil)).Elem(), ZIAFirewallFilteringRuleAppServicesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAFirewallFilteringRuleAppServicesPtrInput)(nil)).Elem(), ZIAFirewallFilteringRuleAppServicesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAFirewallFilteringRuleDepartmentsInput)(nil)).Elem(), ZIAFirewallFilteringRuleDepartmentsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAFirewallFilteringRuleDepartmentsPtrInput)(nil)).Elem(), ZIAFirewallFilteringRuleDepartmentsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAFirewallFilteringRuleDestIpGroupsInput)(nil)).Elem(), ZIAFirewallFilteringRuleDestIpGroupsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAFirewallFilteringRuleDestIpGroupsPtrInput)(nil)).Elem(), ZIAFirewallFilteringRuleDestIpGroupsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAFirewallFilteringRuleGroupsInput)(nil)).Elem(), ZIAFirewallFilteringRuleGroupsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAFirewallFilteringRuleGroupsPtrInput)(nil)).Elem(), ZIAFirewallFilteringRuleGroupsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAFirewallFilteringRuleLabelsInput)(nil)).Elem(), ZIAFirewallFilteringRuleLabelsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAFirewallFilteringRuleLabelsPtrInput)(nil)).Elem(), ZIAFirewallFilteringRuleLabelsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAFirewallFilteringRuleLastModifiedByInput)(nil)).Elem(), ZIAFirewallFilteringRuleLastModifiedByArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAFirewallFilteringRuleLastModifiedByArrayInput)(nil)).Elem(), ZIAFirewallFilteringRuleLastModifiedByArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAFirewallFilteringRuleLocationGroupsInput)(nil)).Elem(), ZIAFirewallFilteringRuleLocationGroupsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAFirewallFilteringRuleLocationGroupsPtrInput)(nil)).Elem(), ZIAFirewallFilteringRuleLocationGroupsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAFirewallFilteringRuleLocationsInput)(nil)).Elem(), ZIAFirewallFilteringRuleLocationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAFirewallFilteringRuleLocationsPtrInput)(nil)).Elem(), ZIAFirewallFilteringRuleLocationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAFirewallFilteringRuleNwApplicationGroupsInput)(nil)).Elem(), ZIAFirewallFilteringRuleNwApplicationGroupsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAFirewallFilteringRuleNwApplicationGroupsPtrInput)(nil)).Elem(), ZIAFirewallFilteringRuleNwApplicationGroupsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAFirewallFilteringRuleNwServiceGroupsInput)(nil)).Elem(), ZIAFirewallFilteringRuleNwServiceGroupsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAFirewallFilteringRuleNwServiceGroupsPtrInput)(nil)).Elem(), ZIAFirewallFilteringRuleNwServiceGroupsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAFirewallFilteringRuleNwServicesInput)(nil)).Elem(), ZIAFirewallFilteringRuleNwServicesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAFirewallFilteringRuleNwServicesPtrInput)(nil)).Elem(), ZIAFirewallFilteringRuleNwServicesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAFirewallFilteringRuleSrcIpGroupsInput)(nil)).Elem(), ZIAFirewallFilteringRuleSrcIpGroupsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAFirewallFilteringRuleSrcIpGroupsPtrInput)(nil)).Elem(), ZIAFirewallFilteringRuleSrcIpGroupsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAFirewallFilteringRuleTimeWindowsInput)(nil)).Elem(), ZIAFirewallFilteringRuleTimeWindowsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAFirewallFilteringRuleTimeWindowsPtrInput)(nil)).Elem(), ZIAFirewallFilteringRuleTimeWindowsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAFirewallFilteringRuleUsersInput)(nil)).Elem(), ZIAFirewallFilteringRuleUsersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAFirewallFilteringRuleUsersPtrInput)(nil)).Elem(), ZIAFirewallFilteringRuleUsersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAFirewallFilteringServiceGroupsServiceInput)(nil)).Elem(), ZIAFirewallFilteringServiceGroupsServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAFirewallFilteringServiceGroupsServiceArrayInput)(nil)).Elem(), ZIAFirewallFilteringServiceGroupsServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIALocationManagementVpnCredentialInput)(nil)).Elem(), ZIALocationManagementVpnCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIALocationManagementVpnCredentialArrayInput)(nil)).Elem(), ZIALocationManagementVpnCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIARuleLabelsCreatedByInput)(nil)).Elem(), ZIARuleLabelsCreatedByArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIARuleLabelsCreatedByArrayInput)(nil)).Elem(), ZIARuleLabelsCreatedByArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIARuleLabelsLastModifiedByInput)(nil)).Elem(), ZIARuleLabelsLastModifiedByArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIARuleLabelsLastModifiedByArrayInput)(nil)).Elem(), ZIARuleLabelsLastModifiedByArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIATrafficForwardingGRETunnelLastModifiedByInput)(nil)).Elem(), ZIATrafficForwardingGRETunnelLastModifiedByArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIATrafficForwardingGRETunnelLastModifiedByArrayInput)(nil)).Elem(), ZIATrafficForwardingGRETunnelLastModifiedByArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIATrafficForwardingGRETunnelPrimaryDestVipInput)(nil)).Elem(), ZIATrafficForwardingGRETunnelPrimaryDestVipArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIATrafficForwardingGRETunnelPrimaryDestVipArrayInput)(nil)).Elem(), ZIATrafficForwardingGRETunnelPrimaryDestVipArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIATrafficForwardingGRETunnelSecondaryDestVipInput)(nil)).Elem(), ZIATrafficForwardingGRETunnelSecondaryDestVipArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIATrafficForwardingGRETunnelSecondaryDestVipArrayInput)(nil)).Elem(), ZIATrafficForwardingGRETunnelSecondaryDestVipArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIATrafficForwardingStaticIPLastModifiedByInput)(nil)).Elem(), ZIATrafficForwardingStaticIPLastModifiedByArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIATrafficForwardingStaticIPLastModifiedByArrayInput)(nil)).Elem(), ZIATrafficForwardingStaticIPLastModifiedByArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIATrafficForwardingStaticIPManagedByInput)(nil)).Elem(), ZIATrafficForwardingStaticIPManagedByArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIATrafficForwardingStaticIPManagedByArrayInput)(nil)).Elem(), ZIATrafficForwardingStaticIPManagedByArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAURLCategoriesScopeInput)(nil)).Elem(), ZIAURLCategoriesScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAURLCategoriesScopeArrayInput)(nil)).Elem(), ZIAURLCategoriesScopeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAURLCategoriesScopeScopeEntitiesInput)(nil)).Elem(), ZIAURLCategoriesScopeScopeEntitiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAURLCategoriesScopeScopeEntitiesPtrInput)(nil)).Elem(), ZIAURLCategoriesScopeScopeEntitiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAURLCategoriesScopeScopeGroupMemberEntitiesInput)(nil)).Elem(), ZIAURLCategoriesScopeScopeGroupMemberEntitiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAURLCategoriesScopeScopeGroupMemberEntitiesPtrInput)(nil)).Elem(), ZIAURLCategoriesScopeScopeGroupMemberEntitiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAURLCategoriesUrlKeywordCountsInput)(nil)).Elem(), ZIAURLCategoriesUrlKeywordCountsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAURLCategoriesUrlKeywordCountsPtrInput)(nil)).Elem(), ZIAURLCategoriesUrlKeywordCountsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAURLFilteringRulesDepartmentsInput)(nil)).Elem(), ZIAURLFilteringRulesDepartmentsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAURLFilteringRulesDepartmentsPtrInput)(nil)).Elem(), ZIAURLFilteringRulesDepartmentsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAURLFilteringRulesDeviceGroupsInput)(nil)).Elem(), ZIAURLFilteringRulesDeviceGroupsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAURLFilteringRulesDeviceGroupsPtrInput)(nil)).Elem(), ZIAURLFilteringRulesDeviceGroupsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAURLFilteringRulesDevicesInput)(nil)).Elem(), ZIAURLFilteringRulesDevicesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAURLFilteringRulesDevicesPtrInput)(nil)).Elem(), ZIAURLFilteringRulesDevicesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAURLFilteringRulesGroupsInput)(nil)).Elem(), ZIAURLFilteringRulesGroupsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAURLFilteringRulesGroupsPtrInput)(nil)).Elem(), ZIAURLFilteringRulesGroupsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAURLFilteringRulesLabelsInput)(nil)).Elem(), ZIAURLFilteringRulesLabelsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAURLFilteringRulesLabelsPtrInput)(nil)).Elem(), ZIAURLFilteringRulesLabelsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAURLFilteringRulesLastModifiedByInput)(nil)).Elem(), ZIAURLFilteringRulesLastModifiedByArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAURLFilteringRulesLastModifiedByArrayInput)(nil)).Elem(), ZIAURLFilteringRulesLastModifiedByArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAURLFilteringRulesLocationGroupsInput)(nil)).Elem(), ZIAURLFilteringRulesLocationGroupsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAURLFilteringRulesLocationGroupsPtrInput)(nil)).Elem(), ZIAURLFilteringRulesLocationGroupsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAURLFilteringRulesLocationsInput)(nil)).Elem(), ZIAURLFilteringRulesLocationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAURLFilteringRulesLocationsPtrInput)(nil)).Elem(), ZIAURLFilteringRulesLocationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAURLFilteringRulesOverrideGroupsInput)(nil)).Elem(), ZIAURLFilteringRulesOverrideGroupsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAURLFilteringRulesOverrideGroupsPtrInput)(nil)).Elem(), ZIAURLFilteringRulesOverrideGroupsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAURLFilteringRulesOverrideUsersInput)(nil)).Elem(), ZIAURLFilteringRulesOverrideUsersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAURLFilteringRulesOverrideUsersPtrInput)(nil)).Elem(), ZIAURLFilteringRulesOverrideUsersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAURLFilteringRulesTimeWindowsInput)(nil)).Elem(), ZIAURLFilteringRulesTimeWindowsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAURLFilteringRulesTimeWindowsPtrInput)(nil)).Elem(), ZIAURLFilteringRulesTimeWindowsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAURLFilteringRulesUsersInput)(nil)).Elem(), ZIAURLFilteringRulesUsersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAURLFilteringRulesUsersPtrInput)(nil)).Elem(), ZIAURLFilteringRulesUsersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAUserManagementDepartmentInput)(nil)).Elem(), ZIAUserManagementDepartmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAUserManagementDepartmentPtrInput)(nil)).Elem(), ZIAUserManagementDepartmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAUserManagementGroupsInput)(nil)).Elem(), ZIAUserManagementGroupsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAUserManagementGroupsPtrInput)(nil)).Elem(), ZIAUserManagementGroupsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAAdminUsersAdminScopeInput)(nil)).Elem(), GetZIAAdminUsersAdminScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAAdminUsersAdminScopeArrayInput)(nil)).Elem(), GetZIAAdminUsersAdminScopeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAAdminUsersAdminScopeScopeEntityInput)(nil)).Elem(), GetZIAAdminUsersAdminScopeScopeEntityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAAdminUsersAdminScopeScopeEntityArrayInput)(nil)).Elem(), GetZIAAdminUsersAdminScopeScopeEntityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAAdminUsersAdminScopeScopeGroupMemberEntityInput)(nil)).Elem(), GetZIAAdminUsersAdminScopeScopeGroupMemberEntityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAAdminUsersAdminScopeScopeGroupMemberEntityArrayInput)(nil)).Elem(), GetZIAAdminUsersAdminScopeScopeGroupMemberEntityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAAdminUsersExecMobileAppTokenInput)(nil)).Elem(), GetZIAAdminUsersExecMobileAppTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAAdminUsersExecMobileAppTokenArrayInput)(nil)).Elem(), GetZIAAdminUsersExecMobileAppTokenArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAAdminUsersRoleInput)(nil)).Elem(), GetZIAAdminUsersRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAAdminUsersRoleArrayInput)(nil)).Elem(), GetZIAAdminUsersRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIADLPDictionariesExactDataMatchDetailInput)(nil)).Elem(), GetZIADLPDictionariesExactDataMatchDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIADLPDictionariesExactDataMatchDetailArrayInput)(nil)).Elem(), GetZIADLPDictionariesExactDataMatchDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIADLPDictionariesIdmProfileMatchAccuracyInput)(nil)).Elem(), GetZIADLPDictionariesIdmProfileMatchAccuracyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIADLPDictionariesIdmProfileMatchAccuracyArrayInput)(nil)).Elem(), GetZIADLPDictionariesIdmProfileMatchAccuracyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileInput)(nil)).Elem(), GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileArrayInput)(nil)).Elem(), GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIADLPDictionariesPatternInput)(nil)).Elem(), GetZIADLPDictionariesPatternArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIADLPDictionariesPatternArrayInput)(nil)).Elem(), GetZIADLPDictionariesPatternArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIADLPDictionariesPhraseInput)(nil)).Elem(), GetZIADLPDictionariesPhraseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIADLPDictionariesPhraseArrayInput)(nil)).Elem(), GetZIADLPDictionariesPhraseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIADLPWebRulesAuditorInput)(nil)).Elem(), GetZIADLPWebRulesAuditorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIADLPWebRulesAuditorArrayInput)(nil)).Elem(), GetZIADLPWebRulesAuditorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIADLPWebRulesDepartmentInput)(nil)).Elem(), GetZIADLPWebRulesDepartmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIADLPWebRulesDepartmentArrayInput)(nil)).Elem(), GetZIADLPWebRulesDepartmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIADLPWebRulesDlpEngineInput)(nil)).Elem(), GetZIADLPWebRulesDlpEngineArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIADLPWebRulesDlpEngineArrayInput)(nil)).Elem(), GetZIADLPWebRulesDlpEngineArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIADLPWebRulesExcludedDepartmentInput)(nil)).Elem(), GetZIADLPWebRulesExcludedDepartmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIADLPWebRulesExcludedDepartmentArrayInput)(nil)).Elem(), GetZIADLPWebRulesExcludedDepartmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIADLPWebRulesExcludedGroupInput)(nil)).Elem(), GetZIADLPWebRulesExcludedGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIADLPWebRulesExcludedGroupArrayInput)(nil)).Elem(), GetZIADLPWebRulesExcludedGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIADLPWebRulesExcludedUserInput)(nil)).Elem(), GetZIADLPWebRulesExcludedUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIADLPWebRulesExcludedUserArrayInput)(nil)).Elem(), GetZIADLPWebRulesExcludedUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIADLPWebRulesGroupInput)(nil)).Elem(), GetZIADLPWebRulesGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIADLPWebRulesGroupArrayInput)(nil)).Elem(), GetZIADLPWebRulesGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIADLPWebRulesIcapServerInput)(nil)).Elem(), GetZIADLPWebRulesIcapServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIADLPWebRulesIcapServerArrayInput)(nil)).Elem(), GetZIADLPWebRulesIcapServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIADLPWebRulesLabelInput)(nil)).Elem(), GetZIADLPWebRulesLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIADLPWebRulesLabelArrayInput)(nil)).Elem(), GetZIADLPWebRulesLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIADLPWebRulesLastModifiedByInput)(nil)).Elem(), GetZIADLPWebRulesLastModifiedByArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIADLPWebRulesLastModifiedByArrayInput)(nil)).Elem(), GetZIADLPWebRulesLastModifiedByArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIADLPWebRulesLocationInput)(nil)).Elem(), GetZIADLPWebRulesLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIADLPWebRulesLocationArrayInput)(nil)).Elem(), GetZIADLPWebRulesLocationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIADLPWebRulesLocationGroupInput)(nil)).Elem(), GetZIADLPWebRulesLocationGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIADLPWebRulesLocationGroupArrayInput)(nil)).Elem(), GetZIADLPWebRulesLocationGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIADLPWebRulesNotificationTemplateInput)(nil)).Elem(), GetZIADLPWebRulesNotificationTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIADLPWebRulesNotificationTemplateArrayInput)(nil)).Elem(), GetZIADLPWebRulesNotificationTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIADLPWebRulesTimeWindowInput)(nil)).Elem(), GetZIADLPWebRulesTimeWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIADLPWebRulesTimeWindowArrayInput)(nil)).Elem(), GetZIADLPWebRulesTimeWindowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIADLPWebRulesUrlCategoryInput)(nil)).Elem(), GetZIADLPWebRulesUrlCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIADLPWebRulesUrlCategoryArrayInput)(nil)).Elem(), GetZIADLPWebRulesUrlCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIADLPWebRulesUserInput)(nil)).Elem(), GetZIADLPWebRulesUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIADLPWebRulesUserArrayInput)(nil)).Elem(), GetZIADLPWebRulesUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAFirewallFilteringNetworkServiceGroupsServiceInput)(nil)).Elem(), GetZIAFirewallFilteringNetworkServiceGroupsServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAFirewallFilteringNetworkServiceGroupsServiceArrayInput)(nil)).Elem(), GetZIAFirewallFilteringNetworkServiceGroupsServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAFirewallFilteringNetworkServicesDestTcpPortInput)(nil)).Elem(), GetZIAFirewallFilteringNetworkServicesDestTcpPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAFirewallFilteringNetworkServicesDestTcpPortArrayInput)(nil)).Elem(), GetZIAFirewallFilteringNetworkServicesDestTcpPortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAFirewallFilteringNetworkServicesDestUdpPortInput)(nil)).Elem(), GetZIAFirewallFilteringNetworkServicesDestUdpPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAFirewallFilteringNetworkServicesDestUdpPortArrayInput)(nil)).Elem(), GetZIAFirewallFilteringNetworkServicesDestUdpPortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAFirewallFilteringNetworkServicesSrcTcpPortInput)(nil)).Elem(), GetZIAFirewallFilteringNetworkServicesSrcTcpPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAFirewallFilteringNetworkServicesSrcTcpPortArrayInput)(nil)).Elem(), GetZIAFirewallFilteringNetworkServicesSrcTcpPortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAFirewallFilteringNetworkServicesSrcUdpPortInput)(nil)).Elem(), GetZIAFirewallFilteringNetworkServicesSrcUdpPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAFirewallFilteringNetworkServicesSrcUdpPortArrayInput)(nil)).Elem(), GetZIAFirewallFilteringNetworkServicesSrcUdpPortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAFirewallFilteringRuleAppServiceInput)(nil)).Elem(), GetZIAFirewallFilteringRuleAppServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAFirewallFilteringRuleAppServiceArrayInput)(nil)).Elem(), GetZIAFirewallFilteringRuleAppServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAFirewallFilteringRuleAppServiceGroupInput)(nil)).Elem(), GetZIAFirewallFilteringRuleAppServiceGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAFirewallFilteringRuleAppServiceGroupArrayInput)(nil)).Elem(), GetZIAFirewallFilteringRuleAppServiceGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAFirewallFilteringRuleDepartmentInput)(nil)).Elem(), GetZIAFirewallFilteringRuleDepartmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAFirewallFilteringRuleDepartmentArrayInput)(nil)).Elem(), GetZIAFirewallFilteringRuleDepartmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAFirewallFilteringRuleGroupInput)(nil)).Elem(), GetZIAFirewallFilteringRuleGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAFirewallFilteringRuleGroupArrayInput)(nil)).Elem(), GetZIAFirewallFilteringRuleGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAFirewallFilteringRuleLabelInput)(nil)).Elem(), GetZIAFirewallFilteringRuleLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAFirewallFilteringRuleLabelArrayInput)(nil)).Elem(), GetZIAFirewallFilteringRuleLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAFirewallFilteringRuleLastModifiedByInput)(nil)).Elem(), GetZIAFirewallFilteringRuleLastModifiedByArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAFirewallFilteringRuleLastModifiedByArrayInput)(nil)).Elem(), GetZIAFirewallFilteringRuleLastModifiedByArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAFirewallFilteringRuleLocationInput)(nil)).Elem(), GetZIAFirewallFilteringRuleLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAFirewallFilteringRuleLocationArrayInput)(nil)).Elem(), GetZIAFirewallFilteringRuleLocationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAFirewallFilteringRuleLocationGroupInput)(nil)).Elem(), GetZIAFirewallFilteringRuleLocationGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAFirewallFilteringRuleLocationGroupArrayInput)(nil)).Elem(), GetZIAFirewallFilteringRuleLocationGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAFirewallFilteringRuleNwApplicationGroupInput)(nil)).Elem(), GetZIAFirewallFilteringRuleNwApplicationGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAFirewallFilteringRuleNwApplicationGroupArrayInput)(nil)).Elem(), GetZIAFirewallFilteringRuleNwApplicationGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAFirewallFilteringRuleNwServiceInput)(nil)).Elem(), GetZIAFirewallFilteringRuleNwServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAFirewallFilteringRuleNwServiceArrayInput)(nil)).Elem(), GetZIAFirewallFilteringRuleNwServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAFirewallFilteringRuleNwServiceGroupInput)(nil)).Elem(), GetZIAFirewallFilteringRuleNwServiceGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAFirewallFilteringRuleNwServiceGroupArrayInput)(nil)).Elem(), GetZIAFirewallFilteringRuleNwServiceGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAFirewallFilteringRuleTimeWindowInput)(nil)).Elem(), GetZIAFirewallFilteringRuleTimeWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAFirewallFilteringRuleTimeWindowArrayInput)(nil)).Elem(), GetZIAFirewallFilteringRuleTimeWindowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAFirewallFilteringRuleUserInput)(nil)).Elem(), GetZIAFirewallFilteringRuleUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAFirewallFilteringRuleUserArrayInput)(nil)).Elem(), GetZIAFirewallFilteringRuleUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIALocationGroupsDynamicLocationGroupCriteriaInput)(nil)).Elem(), GetZIALocationGroupsDynamicLocationGroupCriteriaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIALocationGroupsDynamicLocationGroupCriteriaArrayInput)(nil)).Elem(), GetZIALocationGroupsDynamicLocationGroupCriteriaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIALocationGroupsDynamicLocationGroupCriteriaCityInput)(nil)).Elem(), GetZIALocationGroupsDynamicLocationGroupCriteriaCityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIALocationGroupsDynamicLocationGroupCriteriaCityArrayInput)(nil)).Elem(), GetZIALocationGroupsDynamicLocationGroupCriteriaCityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIALocationGroupsDynamicLocationGroupCriteriaManagedByInput)(nil)).Elem(), GetZIALocationGroupsDynamicLocationGroupCriteriaManagedByArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIALocationGroupsDynamicLocationGroupCriteriaManagedByArrayInput)(nil)).Elem(), GetZIALocationGroupsDynamicLocationGroupCriteriaManagedByArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIALocationGroupsDynamicLocationGroupCriteriaNameInput)(nil)).Elem(), GetZIALocationGroupsDynamicLocationGroupCriteriaNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIALocationGroupsDynamicLocationGroupCriteriaNameArrayInput)(nil)).Elem(), GetZIALocationGroupsDynamicLocationGroupCriteriaNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIALocationGroupsLastModUserInput)(nil)).Elem(), GetZIALocationGroupsLastModUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIALocationGroupsLastModUserArrayInput)(nil)).Elem(), GetZIALocationGroupsLastModUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIALocationGroupsLocationInput)(nil)).Elem(), GetZIALocationGroupsLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIALocationGroupsLocationArrayInput)(nil)).Elem(), GetZIALocationGroupsLocationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIALocationManagementVpnCredentialInput)(nil)).Elem(), GetZIALocationManagementVpnCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIALocationManagementVpnCredentialArrayInput)(nil)).Elem(), GetZIALocationManagementVpnCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIALocationManagementVpnCredentialLocationInput)(nil)).Elem(), GetZIALocationManagementVpnCredentialLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIALocationManagementVpnCredentialLocationArrayInput)(nil)).Elem(), GetZIALocationManagementVpnCredentialLocationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIALocationManagementVpnCredentialManagedByInput)(nil)).Elem(), GetZIALocationManagementVpnCredentialManagedByArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIALocationManagementVpnCredentialManagedByArrayInput)(nil)).Elem(), GetZIALocationManagementVpnCredentialManagedByArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIARuleLabelsCreatedByInput)(nil)).Elem(), GetZIARuleLabelsCreatedByArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIARuleLabelsCreatedByArrayInput)(nil)).Elem(), GetZIARuleLabelsCreatedByArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIARuleLabelsLastModifiedByInput)(nil)).Elem(), GetZIARuleLabelsLastModifiedByArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIARuleLabelsLastModifiedByArrayInput)(nil)).Elem(), GetZIARuleLabelsLastModifiedByArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIATrafficForwardingGREInternalIPRangeListInput)(nil)).Elem(), GetZIATrafficForwardingGREInternalIPRangeListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIATrafficForwardingGREInternalIPRangeListArrayInput)(nil)).Elem(), GetZIATrafficForwardingGREInternalIPRangeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIATrafficForwardingGRETunnelLastModifiedByInput)(nil)).Elem(), GetZIATrafficForwardingGRETunnelLastModifiedByArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIATrafficForwardingGRETunnelLastModifiedByArrayInput)(nil)).Elem(), GetZIATrafficForwardingGRETunnelLastModifiedByArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIATrafficForwardingGRETunnelManagedByInput)(nil)).Elem(), GetZIATrafficForwardingGRETunnelManagedByArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIATrafficForwardingGRETunnelManagedByArrayInput)(nil)).Elem(), GetZIATrafficForwardingGRETunnelManagedByArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIATrafficForwardingGRETunnelPrimaryDestVipInput)(nil)).Elem(), GetZIATrafficForwardingGRETunnelPrimaryDestVipArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIATrafficForwardingGRETunnelPrimaryDestVipArrayInput)(nil)).Elem(), GetZIATrafficForwardingGRETunnelPrimaryDestVipArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIATrafficForwardingGRETunnelSecondaryDestVipInput)(nil)).Elem(), GetZIATrafficForwardingGRETunnelSecondaryDestVipArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIATrafficForwardingGRETunnelSecondaryDestVipArrayInput)(nil)).Elem(), GetZIATrafficForwardingGRETunnelSecondaryDestVipArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIATrafficForwardingStaticIPLastModifiedByInput)(nil)).Elem(), GetZIATrafficForwardingStaticIPLastModifiedByArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIATrafficForwardingStaticIPLastModifiedByArrayInput)(nil)).Elem(), GetZIATrafficForwardingStaticIPLastModifiedByArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIATrafficForwardingStaticIPManagedByInput)(nil)).Elem(), GetZIATrafficForwardingStaticIPManagedByArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIATrafficForwardingStaticIPManagedByArrayInput)(nil)).Elem(), GetZIATrafficForwardingStaticIPManagedByArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIATrafficForwardingVIPRecommendedListListInput)(nil)).Elem(), GetZIATrafficForwardingVIPRecommendedListListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIATrafficForwardingVIPRecommendedListListArrayInput)(nil)).Elem(), GetZIATrafficForwardingVIPRecommendedListListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIATrafficForwardingVPNCredentialsLocationInput)(nil)).Elem(), GetZIATrafficForwardingVPNCredentialsLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIATrafficForwardingVPNCredentialsLocationArrayInput)(nil)).Elem(), GetZIATrafficForwardingVPNCredentialsLocationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIATrafficForwardingVPNCredentialsManagedByInput)(nil)).Elem(), GetZIATrafficForwardingVPNCredentialsManagedByArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIATrafficForwardingVPNCredentialsManagedByArrayInput)(nil)).Elem(), GetZIATrafficForwardingVPNCredentialsManagedByArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAURLCategoriesScopeInput)(nil)).Elem(), GetZIAURLCategoriesScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAURLCategoriesScopeArrayInput)(nil)).Elem(), GetZIAURLCategoriesScopeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAURLCategoriesScopeScopeEntityInput)(nil)).Elem(), GetZIAURLCategoriesScopeScopeEntityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAURLCategoriesScopeScopeEntityArrayInput)(nil)).Elem(), GetZIAURLCategoriesScopeScopeEntityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAURLCategoriesScopeScopeGroupMemberEntityInput)(nil)).Elem(), GetZIAURLCategoriesScopeScopeGroupMemberEntityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAURLCategoriesScopeScopeGroupMemberEntityArrayInput)(nil)).Elem(), GetZIAURLCategoriesScopeScopeGroupMemberEntityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAURLCategoriesUrlKeywordCountInput)(nil)).Elem(), GetZIAURLCategoriesUrlKeywordCountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAURLCategoriesUrlKeywordCountArrayInput)(nil)).Elem(), GetZIAURLCategoriesUrlKeywordCountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAURLFilteringRulesDepartmentInput)(nil)).Elem(), GetZIAURLFilteringRulesDepartmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAURLFilteringRulesDepartmentArrayInput)(nil)).Elem(), GetZIAURLFilteringRulesDepartmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAURLFilteringRulesDeviceInput)(nil)).Elem(), GetZIAURLFilteringRulesDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAURLFilteringRulesDeviceArrayInput)(nil)).Elem(), GetZIAURLFilteringRulesDeviceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAURLFilteringRulesDeviceGroupInput)(nil)).Elem(), GetZIAURLFilteringRulesDeviceGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAURLFilteringRulesDeviceGroupArrayInput)(nil)).Elem(), GetZIAURLFilteringRulesDeviceGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAURLFilteringRulesGroupInput)(nil)).Elem(), GetZIAURLFilteringRulesGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAURLFilteringRulesGroupArrayInput)(nil)).Elem(), GetZIAURLFilteringRulesGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAURLFilteringRulesLabelInput)(nil)).Elem(), GetZIAURLFilteringRulesLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAURLFilteringRulesLabelArrayInput)(nil)).Elem(), GetZIAURLFilteringRulesLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAURLFilteringRulesLastModifiedByInput)(nil)).Elem(), GetZIAURLFilteringRulesLastModifiedByArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAURLFilteringRulesLastModifiedByArrayInput)(nil)).Elem(), GetZIAURLFilteringRulesLastModifiedByArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAURLFilteringRulesLocationInput)(nil)).Elem(), GetZIAURLFilteringRulesLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAURLFilteringRulesLocationArrayInput)(nil)).Elem(), GetZIAURLFilteringRulesLocationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAURLFilteringRulesLocationGroupInput)(nil)).Elem(), GetZIAURLFilteringRulesLocationGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAURLFilteringRulesLocationGroupArrayInput)(nil)).Elem(), GetZIAURLFilteringRulesLocationGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAURLFilteringRulesOverrideGroupInput)(nil)).Elem(), GetZIAURLFilteringRulesOverrideGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAURLFilteringRulesOverrideGroupArrayInput)(nil)).Elem(), GetZIAURLFilteringRulesOverrideGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAURLFilteringRulesOverrideUserInput)(nil)).Elem(), GetZIAURLFilteringRulesOverrideUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAURLFilteringRulesOverrideUserArrayInput)(nil)).Elem(), GetZIAURLFilteringRulesOverrideUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAURLFilteringRulesTimeWindowInput)(nil)).Elem(), GetZIAURLFilteringRulesTimeWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAURLFilteringRulesTimeWindowArrayInput)(nil)).Elem(), GetZIAURLFilteringRulesTimeWindowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAURLFilteringRulesUserInput)(nil)).Elem(), GetZIAURLFilteringRulesUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAURLFilteringRulesUserArrayInput)(nil)).Elem(), GetZIAURLFilteringRulesUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAUserManagementDepartmentInput)(nil)).Elem(), GetZIAUserManagementDepartmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAUserManagementDepartmentArrayInput)(nil)).Elem(), GetZIAUserManagementDepartmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAUserManagementGroupInput)(nil)).Elem(), GetZIAUserManagementGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZIAUserManagementGroupArrayInput)(nil)).Elem(), GetZIAUserManagementGroupArray{})
	pulumi.RegisterOutputType(ZIAAdminUsersAdminScopeOutput{})
	pulumi.RegisterOutputType(ZIAAdminUsersAdminScopeArrayOutput{})
	pulumi.RegisterOutputType(ZIAAdminUsersAdminScopeScopeEntitiesOutput{})
	pulumi.RegisterOutputType(ZIAAdminUsersAdminScopeScopeEntitiesPtrOutput{})
	pulumi.RegisterOutputType(ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesOutput{})
	pulumi.RegisterOutputType(ZIAAdminUsersAdminScopeScopeGroupMemberEntitiesPtrOutput{})
	pulumi.RegisterOutputType(ZIAAdminUsersRoleOutput{})
	pulumi.RegisterOutputType(ZIAAdminUsersRoleArrayOutput{})
	pulumi.RegisterOutputType(ZIADLPDictionariesExactDataMatchDetailOutput{})
	pulumi.RegisterOutputType(ZIADLPDictionariesExactDataMatchDetailArrayOutput{})
	pulumi.RegisterOutputType(ZIADLPDictionariesIdmProfileMatchAccuracyOutput{})
	pulumi.RegisterOutputType(ZIADLPDictionariesIdmProfileMatchAccuracyArrayOutput{})
	pulumi.RegisterOutputType(ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileOutput{})
	pulumi.RegisterOutputType(ZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfilePtrOutput{})
	pulumi.RegisterOutputType(ZIADLPDictionariesPatternOutput{})
	pulumi.RegisterOutputType(ZIADLPDictionariesPatternArrayOutput{})
	pulumi.RegisterOutputType(ZIADLPDictionariesPhraseOutput{})
	pulumi.RegisterOutputType(ZIADLPDictionariesPhraseArrayOutput{})
	pulumi.RegisterOutputType(ZIADLPWebRulesAuditorOutput{})
	pulumi.RegisterOutputType(ZIADLPWebRulesAuditorPtrOutput{})
	pulumi.RegisterOutputType(ZIADLPWebRulesDepartmentsOutput{})
	pulumi.RegisterOutputType(ZIADLPWebRulesDepartmentsPtrOutput{})
	pulumi.RegisterOutputType(ZIADLPWebRulesDlpEnginesOutput{})
	pulumi.RegisterOutputType(ZIADLPWebRulesDlpEnginesPtrOutput{})
	pulumi.RegisterOutputType(ZIADLPWebRulesExcludedDepartmentsOutput{})
	pulumi.RegisterOutputType(ZIADLPWebRulesExcludedDepartmentsPtrOutput{})
	pulumi.RegisterOutputType(ZIADLPWebRulesExcludedGroupsOutput{})
	pulumi.RegisterOutputType(ZIADLPWebRulesExcludedGroupsPtrOutput{})
	pulumi.RegisterOutputType(ZIADLPWebRulesExcludedUsersOutput{})
	pulumi.RegisterOutputType(ZIADLPWebRulesExcludedUsersPtrOutput{})
	pulumi.RegisterOutputType(ZIADLPWebRulesGroupsOutput{})
	pulumi.RegisterOutputType(ZIADLPWebRulesGroupsPtrOutput{})
	pulumi.RegisterOutputType(ZIADLPWebRulesIcapServerOutput{})
	pulumi.RegisterOutputType(ZIADLPWebRulesIcapServerPtrOutput{})
	pulumi.RegisterOutputType(ZIADLPWebRulesLabelsOutput{})
	pulumi.RegisterOutputType(ZIADLPWebRulesLabelsPtrOutput{})
	pulumi.RegisterOutputType(ZIADLPWebRulesLocationGroupsOutput{})
	pulumi.RegisterOutputType(ZIADLPWebRulesLocationGroupsPtrOutput{})
	pulumi.RegisterOutputType(ZIADLPWebRulesLocationsOutput{})
	pulumi.RegisterOutputType(ZIADLPWebRulesLocationsPtrOutput{})
	pulumi.RegisterOutputType(ZIADLPWebRulesNotificationTemplateOutput{})
	pulumi.RegisterOutputType(ZIADLPWebRulesNotificationTemplatePtrOutput{})
	pulumi.RegisterOutputType(ZIADLPWebRulesTimeWindowsOutput{})
	pulumi.RegisterOutputType(ZIADLPWebRulesTimeWindowsPtrOutput{})
	pulumi.RegisterOutputType(ZIADLPWebRulesUrlCategoriesOutput{})
	pulumi.RegisterOutputType(ZIADLPWebRulesUrlCategoriesPtrOutput{})
	pulumi.RegisterOutputType(ZIADLPWebRulesUsersOutput{})
	pulumi.RegisterOutputType(ZIADLPWebRulesUsersPtrOutput{})
	pulumi.RegisterOutputType(ZIAFirewallFilteringNetworkServicesDestTcpPortOutput{})
	pulumi.RegisterOutputType(ZIAFirewallFilteringNetworkServicesDestTcpPortArrayOutput{})
	pulumi.RegisterOutputType(ZIAFirewallFilteringNetworkServicesDestUdpPortOutput{})
	pulumi.RegisterOutputType(ZIAFirewallFilteringNetworkServicesDestUdpPortArrayOutput{})
	pulumi.RegisterOutputType(ZIAFirewallFilteringNetworkServicesSrcTcpPortOutput{})
	pulumi.RegisterOutputType(ZIAFirewallFilteringNetworkServicesSrcTcpPortArrayOutput{})
	pulumi.RegisterOutputType(ZIAFirewallFilteringNetworkServicesSrcUdpPortOutput{})
	pulumi.RegisterOutputType(ZIAFirewallFilteringNetworkServicesSrcUdpPortArrayOutput{})
	pulumi.RegisterOutputType(ZIAFirewallFilteringRuleAppServiceGroupsOutput{})
	pulumi.RegisterOutputType(ZIAFirewallFilteringRuleAppServiceGroupsPtrOutput{})
	pulumi.RegisterOutputType(ZIAFirewallFilteringRuleAppServicesOutput{})
	pulumi.RegisterOutputType(ZIAFirewallFilteringRuleAppServicesPtrOutput{})
	pulumi.RegisterOutputType(ZIAFirewallFilteringRuleDepartmentsOutput{})
	pulumi.RegisterOutputType(ZIAFirewallFilteringRuleDepartmentsPtrOutput{})
	pulumi.RegisterOutputType(ZIAFirewallFilteringRuleDestIpGroupsOutput{})
	pulumi.RegisterOutputType(ZIAFirewallFilteringRuleDestIpGroupsPtrOutput{})
	pulumi.RegisterOutputType(ZIAFirewallFilteringRuleGroupsOutput{})
	pulumi.RegisterOutputType(ZIAFirewallFilteringRuleGroupsPtrOutput{})
	pulumi.RegisterOutputType(ZIAFirewallFilteringRuleLabelsOutput{})
	pulumi.RegisterOutputType(ZIAFirewallFilteringRuleLabelsPtrOutput{})
	pulumi.RegisterOutputType(ZIAFirewallFilteringRuleLastModifiedByOutput{})
	pulumi.RegisterOutputType(ZIAFirewallFilteringRuleLastModifiedByArrayOutput{})
	pulumi.RegisterOutputType(ZIAFirewallFilteringRuleLocationGroupsOutput{})
	pulumi.RegisterOutputType(ZIAFirewallFilteringRuleLocationGroupsPtrOutput{})
	pulumi.RegisterOutputType(ZIAFirewallFilteringRuleLocationsOutput{})
	pulumi.RegisterOutputType(ZIAFirewallFilteringRuleLocationsPtrOutput{})
	pulumi.RegisterOutputType(ZIAFirewallFilteringRuleNwApplicationGroupsOutput{})
	pulumi.RegisterOutputType(ZIAFirewallFilteringRuleNwApplicationGroupsPtrOutput{})
	pulumi.RegisterOutputType(ZIAFirewallFilteringRuleNwServiceGroupsOutput{})
	pulumi.RegisterOutputType(ZIAFirewallFilteringRuleNwServiceGroupsPtrOutput{})
	pulumi.RegisterOutputType(ZIAFirewallFilteringRuleNwServicesOutput{})
	pulumi.RegisterOutputType(ZIAFirewallFilteringRuleNwServicesPtrOutput{})
	pulumi.RegisterOutputType(ZIAFirewallFilteringRuleSrcIpGroupsOutput{})
	pulumi.RegisterOutputType(ZIAFirewallFilteringRuleSrcIpGroupsPtrOutput{})
	pulumi.RegisterOutputType(ZIAFirewallFilteringRuleTimeWindowsOutput{})
	pulumi.RegisterOutputType(ZIAFirewallFilteringRuleTimeWindowsPtrOutput{})
	pulumi.RegisterOutputType(ZIAFirewallFilteringRuleUsersOutput{})
	pulumi.RegisterOutputType(ZIAFirewallFilteringRuleUsersPtrOutput{})
	pulumi.RegisterOutputType(ZIAFirewallFilteringServiceGroupsServiceOutput{})
	pulumi.RegisterOutputType(ZIAFirewallFilteringServiceGroupsServiceArrayOutput{})
	pulumi.RegisterOutputType(ZIALocationManagementVpnCredentialOutput{})
	pulumi.RegisterOutputType(ZIALocationManagementVpnCredentialArrayOutput{})
	pulumi.RegisterOutputType(ZIARuleLabelsCreatedByOutput{})
	pulumi.RegisterOutputType(ZIARuleLabelsCreatedByArrayOutput{})
	pulumi.RegisterOutputType(ZIARuleLabelsLastModifiedByOutput{})
	pulumi.RegisterOutputType(ZIARuleLabelsLastModifiedByArrayOutput{})
	pulumi.RegisterOutputType(ZIATrafficForwardingGRETunnelLastModifiedByOutput{})
	pulumi.RegisterOutputType(ZIATrafficForwardingGRETunnelLastModifiedByArrayOutput{})
	pulumi.RegisterOutputType(ZIATrafficForwardingGRETunnelPrimaryDestVipOutput{})
	pulumi.RegisterOutputType(ZIATrafficForwardingGRETunnelPrimaryDestVipArrayOutput{})
	pulumi.RegisterOutputType(ZIATrafficForwardingGRETunnelSecondaryDestVipOutput{})
	pulumi.RegisterOutputType(ZIATrafficForwardingGRETunnelSecondaryDestVipArrayOutput{})
	pulumi.RegisterOutputType(ZIATrafficForwardingStaticIPLastModifiedByOutput{})
	pulumi.RegisterOutputType(ZIATrafficForwardingStaticIPLastModifiedByArrayOutput{})
	pulumi.RegisterOutputType(ZIATrafficForwardingStaticIPManagedByOutput{})
	pulumi.RegisterOutputType(ZIATrafficForwardingStaticIPManagedByArrayOutput{})
	pulumi.RegisterOutputType(ZIAURLCategoriesScopeOutput{})
	pulumi.RegisterOutputType(ZIAURLCategoriesScopeArrayOutput{})
	pulumi.RegisterOutputType(ZIAURLCategoriesScopeScopeEntitiesOutput{})
	pulumi.RegisterOutputType(ZIAURLCategoriesScopeScopeEntitiesPtrOutput{})
	pulumi.RegisterOutputType(ZIAURLCategoriesScopeScopeGroupMemberEntitiesOutput{})
	pulumi.RegisterOutputType(ZIAURLCategoriesScopeScopeGroupMemberEntitiesPtrOutput{})
	pulumi.RegisterOutputType(ZIAURLCategoriesUrlKeywordCountsOutput{})
	pulumi.RegisterOutputType(ZIAURLCategoriesUrlKeywordCountsPtrOutput{})
	pulumi.RegisterOutputType(ZIAURLFilteringRulesDepartmentsOutput{})
	pulumi.RegisterOutputType(ZIAURLFilteringRulesDepartmentsPtrOutput{})
	pulumi.RegisterOutputType(ZIAURLFilteringRulesDeviceGroupsOutput{})
	pulumi.RegisterOutputType(ZIAURLFilteringRulesDeviceGroupsPtrOutput{})
	pulumi.RegisterOutputType(ZIAURLFilteringRulesDevicesOutput{})
	pulumi.RegisterOutputType(ZIAURLFilteringRulesDevicesPtrOutput{})
	pulumi.RegisterOutputType(ZIAURLFilteringRulesGroupsOutput{})
	pulumi.RegisterOutputType(ZIAURLFilteringRulesGroupsPtrOutput{})
	pulumi.RegisterOutputType(ZIAURLFilteringRulesLabelsOutput{})
	pulumi.RegisterOutputType(ZIAURLFilteringRulesLabelsPtrOutput{})
	pulumi.RegisterOutputType(ZIAURLFilteringRulesLastModifiedByOutput{})
	pulumi.RegisterOutputType(ZIAURLFilteringRulesLastModifiedByArrayOutput{})
	pulumi.RegisterOutputType(ZIAURLFilteringRulesLocationGroupsOutput{})
	pulumi.RegisterOutputType(ZIAURLFilteringRulesLocationGroupsPtrOutput{})
	pulumi.RegisterOutputType(ZIAURLFilteringRulesLocationsOutput{})
	pulumi.RegisterOutputType(ZIAURLFilteringRulesLocationsPtrOutput{})
	pulumi.RegisterOutputType(ZIAURLFilteringRulesOverrideGroupsOutput{})
	pulumi.RegisterOutputType(ZIAURLFilteringRulesOverrideGroupsPtrOutput{})
	pulumi.RegisterOutputType(ZIAURLFilteringRulesOverrideUsersOutput{})
	pulumi.RegisterOutputType(ZIAURLFilteringRulesOverrideUsersPtrOutput{})
	pulumi.RegisterOutputType(ZIAURLFilteringRulesTimeWindowsOutput{})
	pulumi.RegisterOutputType(ZIAURLFilteringRulesTimeWindowsPtrOutput{})
	pulumi.RegisterOutputType(ZIAURLFilteringRulesUsersOutput{})
	pulumi.RegisterOutputType(ZIAURLFilteringRulesUsersPtrOutput{})
	pulumi.RegisterOutputType(ZIAUserManagementDepartmentOutput{})
	pulumi.RegisterOutputType(ZIAUserManagementDepartmentPtrOutput{})
	pulumi.RegisterOutputType(ZIAUserManagementGroupsOutput{})
	pulumi.RegisterOutputType(ZIAUserManagementGroupsPtrOutput{})
	pulumi.RegisterOutputType(GetZIAAdminUsersAdminScopeOutput{})
	pulumi.RegisterOutputType(GetZIAAdminUsersAdminScopeArrayOutput{})
	pulumi.RegisterOutputType(GetZIAAdminUsersAdminScopeScopeEntityOutput{})
	pulumi.RegisterOutputType(GetZIAAdminUsersAdminScopeScopeEntityArrayOutput{})
	pulumi.RegisterOutputType(GetZIAAdminUsersAdminScopeScopeGroupMemberEntityOutput{})
	pulumi.RegisterOutputType(GetZIAAdminUsersAdminScopeScopeGroupMemberEntityArrayOutput{})
	pulumi.RegisterOutputType(GetZIAAdminUsersExecMobileAppTokenOutput{})
	pulumi.RegisterOutputType(GetZIAAdminUsersExecMobileAppTokenArrayOutput{})
	pulumi.RegisterOutputType(GetZIAAdminUsersRoleOutput{})
	pulumi.RegisterOutputType(GetZIAAdminUsersRoleArrayOutput{})
	pulumi.RegisterOutputType(GetZIADLPDictionariesExactDataMatchDetailOutput{})
	pulumi.RegisterOutputType(GetZIADLPDictionariesExactDataMatchDetailArrayOutput{})
	pulumi.RegisterOutputType(GetZIADLPDictionariesIdmProfileMatchAccuracyOutput{})
	pulumi.RegisterOutputType(GetZIADLPDictionariesIdmProfileMatchAccuracyArrayOutput{})
	pulumi.RegisterOutputType(GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileOutput{})
	pulumi.RegisterOutputType(GetZIADLPDictionariesIdmProfileMatchAccuracyAdpIdmProfileArrayOutput{})
	pulumi.RegisterOutputType(GetZIADLPDictionariesPatternOutput{})
	pulumi.RegisterOutputType(GetZIADLPDictionariesPatternArrayOutput{})
	pulumi.RegisterOutputType(GetZIADLPDictionariesPhraseOutput{})
	pulumi.RegisterOutputType(GetZIADLPDictionariesPhraseArrayOutput{})
	pulumi.RegisterOutputType(GetZIADLPWebRulesAuditorOutput{})
	pulumi.RegisterOutputType(GetZIADLPWebRulesAuditorArrayOutput{})
	pulumi.RegisterOutputType(GetZIADLPWebRulesDepartmentOutput{})
	pulumi.RegisterOutputType(GetZIADLPWebRulesDepartmentArrayOutput{})
	pulumi.RegisterOutputType(GetZIADLPWebRulesDlpEngineOutput{})
	pulumi.RegisterOutputType(GetZIADLPWebRulesDlpEngineArrayOutput{})
	pulumi.RegisterOutputType(GetZIADLPWebRulesExcludedDepartmentOutput{})
	pulumi.RegisterOutputType(GetZIADLPWebRulesExcludedDepartmentArrayOutput{})
	pulumi.RegisterOutputType(GetZIADLPWebRulesExcludedGroupOutput{})
	pulumi.RegisterOutputType(GetZIADLPWebRulesExcludedGroupArrayOutput{})
	pulumi.RegisterOutputType(GetZIADLPWebRulesExcludedUserOutput{})
	pulumi.RegisterOutputType(GetZIADLPWebRulesExcludedUserArrayOutput{})
	pulumi.RegisterOutputType(GetZIADLPWebRulesGroupOutput{})
	pulumi.RegisterOutputType(GetZIADLPWebRulesGroupArrayOutput{})
	pulumi.RegisterOutputType(GetZIADLPWebRulesIcapServerOutput{})
	pulumi.RegisterOutputType(GetZIADLPWebRulesIcapServerArrayOutput{})
	pulumi.RegisterOutputType(GetZIADLPWebRulesLabelOutput{})
	pulumi.RegisterOutputType(GetZIADLPWebRulesLabelArrayOutput{})
	pulumi.RegisterOutputType(GetZIADLPWebRulesLastModifiedByOutput{})
	pulumi.RegisterOutputType(GetZIADLPWebRulesLastModifiedByArrayOutput{})
	pulumi.RegisterOutputType(GetZIADLPWebRulesLocationOutput{})
	pulumi.RegisterOutputType(GetZIADLPWebRulesLocationArrayOutput{})
	pulumi.RegisterOutputType(GetZIADLPWebRulesLocationGroupOutput{})
	pulumi.RegisterOutputType(GetZIADLPWebRulesLocationGroupArrayOutput{})
	pulumi.RegisterOutputType(GetZIADLPWebRulesNotificationTemplateOutput{})
	pulumi.RegisterOutputType(GetZIADLPWebRulesNotificationTemplateArrayOutput{})
	pulumi.RegisterOutputType(GetZIADLPWebRulesTimeWindowOutput{})
	pulumi.RegisterOutputType(GetZIADLPWebRulesTimeWindowArrayOutput{})
	pulumi.RegisterOutputType(GetZIADLPWebRulesUrlCategoryOutput{})
	pulumi.RegisterOutputType(GetZIADLPWebRulesUrlCategoryArrayOutput{})
	pulumi.RegisterOutputType(GetZIADLPWebRulesUserOutput{})
	pulumi.RegisterOutputType(GetZIADLPWebRulesUserArrayOutput{})
	pulumi.RegisterOutputType(GetZIAFirewallFilteringNetworkServiceGroupsServiceOutput{})
	pulumi.RegisterOutputType(GetZIAFirewallFilteringNetworkServiceGroupsServiceArrayOutput{})
	pulumi.RegisterOutputType(GetZIAFirewallFilteringNetworkServicesDestTcpPortOutput{})
	pulumi.RegisterOutputType(GetZIAFirewallFilteringNetworkServicesDestTcpPortArrayOutput{})
	pulumi.RegisterOutputType(GetZIAFirewallFilteringNetworkServicesDestUdpPortOutput{})
	pulumi.RegisterOutputType(GetZIAFirewallFilteringNetworkServicesDestUdpPortArrayOutput{})
	pulumi.RegisterOutputType(GetZIAFirewallFilteringNetworkServicesSrcTcpPortOutput{})
	pulumi.RegisterOutputType(GetZIAFirewallFilteringNetworkServicesSrcTcpPortArrayOutput{})
	pulumi.RegisterOutputType(GetZIAFirewallFilteringNetworkServicesSrcUdpPortOutput{})
	pulumi.RegisterOutputType(GetZIAFirewallFilteringNetworkServicesSrcUdpPortArrayOutput{})
	pulumi.RegisterOutputType(GetZIAFirewallFilteringRuleAppServiceOutput{})
	pulumi.RegisterOutputType(GetZIAFirewallFilteringRuleAppServiceArrayOutput{})
	pulumi.RegisterOutputType(GetZIAFirewallFilteringRuleAppServiceGroupOutput{})
	pulumi.RegisterOutputType(GetZIAFirewallFilteringRuleAppServiceGroupArrayOutput{})
	pulumi.RegisterOutputType(GetZIAFirewallFilteringRuleDepartmentOutput{})
	pulumi.RegisterOutputType(GetZIAFirewallFilteringRuleDepartmentArrayOutput{})
	pulumi.RegisterOutputType(GetZIAFirewallFilteringRuleGroupOutput{})
	pulumi.RegisterOutputType(GetZIAFirewallFilteringRuleGroupArrayOutput{})
	pulumi.RegisterOutputType(GetZIAFirewallFilteringRuleLabelOutput{})
	pulumi.RegisterOutputType(GetZIAFirewallFilteringRuleLabelArrayOutput{})
	pulumi.RegisterOutputType(GetZIAFirewallFilteringRuleLastModifiedByOutput{})
	pulumi.RegisterOutputType(GetZIAFirewallFilteringRuleLastModifiedByArrayOutput{})
	pulumi.RegisterOutputType(GetZIAFirewallFilteringRuleLocationOutput{})
	pulumi.RegisterOutputType(GetZIAFirewallFilteringRuleLocationArrayOutput{})
	pulumi.RegisterOutputType(GetZIAFirewallFilteringRuleLocationGroupOutput{})
	pulumi.RegisterOutputType(GetZIAFirewallFilteringRuleLocationGroupArrayOutput{})
	pulumi.RegisterOutputType(GetZIAFirewallFilteringRuleNwApplicationGroupOutput{})
	pulumi.RegisterOutputType(GetZIAFirewallFilteringRuleNwApplicationGroupArrayOutput{})
	pulumi.RegisterOutputType(GetZIAFirewallFilteringRuleNwServiceOutput{})
	pulumi.RegisterOutputType(GetZIAFirewallFilteringRuleNwServiceArrayOutput{})
	pulumi.RegisterOutputType(GetZIAFirewallFilteringRuleNwServiceGroupOutput{})
	pulumi.RegisterOutputType(GetZIAFirewallFilteringRuleNwServiceGroupArrayOutput{})
	pulumi.RegisterOutputType(GetZIAFirewallFilteringRuleTimeWindowOutput{})
	pulumi.RegisterOutputType(GetZIAFirewallFilteringRuleTimeWindowArrayOutput{})
	pulumi.RegisterOutputType(GetZIAFirewallFilteringRuleUserOutput{})
	pulumi.RegisterOutputType(GetZIAFirewallFilteringRuleUserArrayOutput{})
	pulumi.RegisterOutputType(GetZIALocationGroupsDynamicLocationGroupCriteriaOutput{})
	pulumi.RegisterOutputType(GetZIALocationGroupsDynamicLocationGroupCriteriaArrayOutput{})
	pulumi.RegisterOutputType(GetZIALocationGroupsDynamicLocationGroupCriteriaCityOutput{})
	pulumi.RegisterOutputType(GetZIALocationGroupsDynamicLocationGroupCriteriaCityArrayOutput{})
	pulumi.RegisterOutputType(GetZIALocationGroupsDynamicLocationGroupCriteriaManagedByOutput{})
	pulumi.RegisterOutputType(GetZIALocationGroupsDynamicLocationGroupCriteriaManagedByArrayOutput{})
	pulumi.RegisterOutputType(GetZIALocationGroupsDynamicLocationGroupCriteriaNameOutput{})
	pulumi.RegisterOutputType(GetZIALocationGroupsDynamicLocationGroupCriteriaNameArrayOutput{})
	pulumi.RegisterOutputType(GetZIALocationGroupsLastModUserOutput{})
	pulumi.RegisterOutputType(GetZIALocationGroupsLastModUserArrayOutput{})
	pulumi.RegisterOutputType(GetZIALocationGroupsLocationOutput{})
	pulumi.RegisterOutputType(GetZIALocationGroupsLocationArrayOutput{})
	pulumi.RegisterOutputType(GetZIALocationManagementVpnCredentialOutput{})
	pulumi.RegisterOutputType(GetZIALocationManagementVpnCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetZIALocationManagementVpnCredentialLocationOutput{})
	pulumi.RegisterOutputType(GetZIALocationManagementVpnCredentialLocationArrayOutput{})
	pulumi.RegisterOutputType(GetZIALocationManagementVpnCredentialManagedByOutput{})
	pulumi.RegisterOutputType(GetZIALocationManagementVpnCredentialManagedByArrayOutput{})
	pulumi.RegisterOutputType(GetZIARuleLabelsCreatedByOutput{})
	pulumi.RegisterOutputType(GetZIARuleLabelsCreatedByArrayOutput{})
	pulumi.RegisterOutputType(GetZIARuleLabelsLastModifiedByOutput{})
	pulumi.RegisterOutputType(GetZIARuleLabelsLastModifiedByArrayOutput{})
	pulumi.RegisterOutputType(GetZIATrafficForwardingGREInternalIPRangeListOutput{})
	pulumi.RegisterOutputType(GetZIATrafficForwardingGREInternalIPRangeListArrayOutput{})
	pulumi.RegisterOutputType(GetZIATrafficForwardingGRETunnelLastModifiedByOutput{})
	pulumi.RegisterOutputType(GetZIATrafficForwardingGRETunnelLastModifiedByArrayOutput{})
	pulumi.RegisterOutputType(GetZIATrafficForwardingGRETunnelManagedByOutput{})
	pulumi.RegisterOutputType(GetZIATrafficForwardingGRETunnelManagedByArrayOutput{})
	pulumi.RegisterOutputType(GetZIATrafficForwardingGRETunnelPrimaryDestVipOutput{})
	pulumi.RegisterOutputType(GetZIATrafficForwardingGRETunnelPrimaryDestVipArrayOutput{})
	pulumi.RegisterOutputType(GetZIATrafficForwardingGRETunnelSecondaryDestVipOutput{})
	pulumi.RegisterOutputType(GetZIATrafficForwardingGRETunnelSecondaryDestVipArrayOutput{})
	pulumi.RegisterOutputType(GetZIATrafficForwardingStaticIPLastModifiedByOutput{})
	pulumi.RegisterOutputType(GetZIATrafficForwardingStaticIPLastModifiedByArrayOutput{})
	pulumi.RegisterOutputType(GetZIATrafficForwardingStaticIPManagedByOutput{})
	pulumi.RegisterOutputType(GetZIATrafficForwardingStaticIPManagedByArrayOutput{})
	pulumi.RegisterOutputType(GetZIATrafficForwardingVIPRecommendedListListOutput{})
	pulumi.RegisterOutputType(GetZIATrafficForwardingVIPRecommendedListListArrayOutput{})
	pulumi.RegisterOutputType(GetZIATrafficForwardingVPNCredentialsLocationOutput{})
	pulumi.RegisterOutputType(GetZIATrafficForwardingVPNCredentialsLocationArrayOutput{})
	pulumi.RegisterOutputType(GetZIATrafficForwardingVPNCredentialsManagedByOutput{})
	pulumi.RegisterOutputType(GetZIATrafficForwardingVPNCredentialsManagedByArrayOutput{})
	pulumi.RegisterOutputType(GetZIAURLCategoriesScopeOutput{})
	pulumi.RegisterOutputType(GetZIAURLCategoriesScopeArrayOutput{})
	pulumi.RegisterOutputType(GetZIAURLCategoriesScopeScopeEntityOutput{})
	pulumi.RegisterOutputType(GetZIAURLCategoriesScopeScopeEntityArrayOutput{})
	pulumi.RegisterOutputType(GetZIAURLCategoriesScopeScopeGroupMemberEntityOutput{})
	pulumi.RegisterOutputType(GetZIAURLCategoriesScopeScopeGroupMemberEntityArrayOutput{})
	pulumi.RegisterOutputType(GetZIAURLCategoriesUrlKeywordCountOutput{})
	pulumi.RegisterOutputType(GetZIAURLCategoriesUrlKeywordCountArrayOutput{})
	pulumi.RegisterOutputType(GetZIAURLFilteringRulesDepartmentOutput{})
	pulumi.RegisterOutputType(GetZIAURLFilteringRulesDepartmentArrayOutput{})
	pulumi.RegisterOutputType(GetZIAURLFilteringRulesDeviceOutput{})
	pulumi.RegisterOutputType(GetZIAURLFilteringRulesDeviceArrayOutput{})
	pulumi.RegisterOutputType(GetZIAURLFilteringRulesDeviceGroupOutput{})
	pulumi.RegisterOutputType(GetZIAURLFilteringRulesDeviceGroupArrayOutput{})
	pulumi.RegisterOutputType(GetZIAURLFilteringRulesGroupOutput{})
	pulumi.RegisterOutputType(GetZIAURLFilteringRulesGroupArrayOutput{})
	pulumi.RegisterOutputType(GetZIAURLFilteringRulesLabelOutput{})
	pulumi.RegisterOutputType(GetZIAURLFilteringRulesLabelArrayOutput{})
	pulumi.RegisterOutputType(GetZIAURLFilteringRulesLastModifiedByOutput{})
	pulumi.RegisterOutputType(GetZIAURLFilteringRulesLastModifiedByArrayOutput{})
	pulumi.RegisterOutputType(GetZIAURLFilteringRulesLocationOutput{})
	pulumi.RegisterOutputType(GetZIAURLFilteringRulesLocationArrayOutput{})
	pulumi.RegisterOutputType(GetZIAURLFilteringRulesLocationGroupOutput{})
	pulumi.RegisterOutputType(GetZIAURLFilteringRulesLocationGroupArrayOutput{})
	pulumi.RegisterOutputType(GetZIAURLFilteringRulesOverrideGroupOutput{})
	pulumi.RegisterOutputType(GetZIAURLFilteringRulesOverrideGroupArrayOutput{})
	pulumi.RegisterOutputType(GetZIAURLFilteringRulesOverrideUserOutput{})
	pulumi.RegisterOutputType(GetZIAURLFilteringRulesOverrideUserArrayOutput{})
	pulumi.RegisterOutputType(GetZIAURLFilteringRulesTimeWindowOutput{})
	pulumi.RegisterOutputType(GetZIAURLFilteringRulesTimeWindowArrayOutput{})
	pulumi.RegisterOutputType(GetZIAURLFilteringRulesUserOutput{})
	pulumi.RegisterOutputType(GetZIAURLFilteringRulesUserArrayOutput{})
	pulumi.RegisterOutputType(GetZIAUserManagementDepartmentOutput{})
	pulumi.RegisterOutputType(GetZIAUserManagementDepartmentArrayOutput{})
	pulumi.RegisterOutputType(GetZIAUserManagementGroupOutput{})
	pulumi.RegisterOutputType(GetZIAUserManagementGroupArrayOutput{})
}
