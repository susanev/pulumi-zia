// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zia

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The **zia_firewall_filtering_network_service_groups** resource allows the creation and management of ZIA Cloud Firewall IP network service groups in the Zscaler Internet Access. This resource can then be associated with a ZIA cloud firewall filtering rule.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-zia/sdk/go/zia"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example1, err := zia.LookupZIAFirewallFilteringNetworkServices(ctx, &zia.LookupZIAFirewallFilteringNetworkServicesArgs{
//				Name: pulumi.StringRef("FTP"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			example2, err := zia.LookupZIAFirewallFilteringNetworkServices(ctx, &zia.LookupZIAFirewallFilteringNetworkServicesArgs{
//				Name: pulumi.StringRef("NETBIOS"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			example3, err := zia.LookupZIAFirewallFilteringNetworkServices(ctx, &zia.LookupZIAFirewallFilteringNetworkServicesArgs{
//				Name: pulumi.StringRef("DNS"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = zia.NewZIAFirewallFilteringServiceGroups(ctx, "example", &zia.ZIAFirewallFilteringServiceGroupsArgs{
//				Description: pulumi.String("example"),
//				Services: zia.ZIAFirewallFilteringServiceGroupsServiceArray{
//					&zia.ZIAFirewallFilteringServiceGroupsServiceArgs{
//						Ids: pulumi.IntArray{
//							*pulumi.Int(example1.Id),
//							*pulumi.Int(example2.Id),
//							*pulumi.Int(example3.Id),
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type ZIAFirewallFilteringServiceGroups struct {
	pulumi.CustomResourceState

	// Description of the network services group
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Name of the network service group
	Name                  pulumi.StringOutput `pulumi:"name"`
	NetworkServiceGroupId pulumi.IntOutput    `pulumi:"networkServiceGroupId"`
	// Any number of network services ID to be added to the group
	Services ZIAFirewallFilteringServiceGroupsServiceArrayOutput `pulumi:"services"`
}

// NewZIAFirewallFilteringServiceGroups registers a new resource with the given unique name, arguments, and options.
func NewZIAFirewallFilteringServiceGroups(ctx *pulumi.Context,
	name string, args *ZIAFirewallFilteringServiceGroupsArgs, opts ...pulumi.ResourceOption) (*ZIAFirewallFilteringServiceGroups, error) {
	if args == nil {
		args = &ZIAFirewallFilteringServiceGroupsArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource ZIAFirewallFilteringServiceGroups
	err := ctx.RegisterResource("zia:index/zIAFirewallFilteringServiceGroups:ZIAFirewallFilteringServiceGroups", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetZIAFirewallFilteringServiceGroups gets an existing ZIAFirewallFilteringServiceGroups resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetZIAFirewallFilteringServiceGroups(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ZIAFirewallFilteringServiceGroupsState, opts ...pulumi.ResourceOption) (*ZIAFirewallFilteringServiceGroups, error) {
	var resource ZIAFirewallFilteringServiceGroups
	err := ctx.ReadResource("zia:index/zIAFirewallFilteringServiceGroups:ZIAFirewallFilteringServiceGroups", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ZIAFirewallFilteringServiceGroups resources.
type ziafirewallFilteringServiceGroupsState struct {
	// Description of the network services group
	Description *string `pulumi:"description"`
	// Name of the network service group
	Name                  *string `pulumi:"name"`
	NetworkServiceGroupId *int    `pulumi:"networkServiceGroupId"`
	// Any number of network services ID to be added to the group
	Services []ZIAFirewallFilteringServiceGroupsService `pulumi:"services"`
}

type ZIAFirewallFilteringServiceGroupsState struct {
	// Description of the network services group
	Description pulumi.StringPtrInput
	// Name of the network service group
	Name                  pulumi.StringPtrInput
	NetworkServiceGroupId pulumi.IntPtrInput
	// Any number of network services ID to be added to the group
	Services ZIAFirewallFilteringServiceGroupsServiceArrayInput
}

func (ZIAFirewallFilteringServiceGroupsState) ElementType() reflect.Type {
	return reflect.TypeOf((*ziafirewallFilteringServiceGroupsState)(nil)).Elem()
}

type ziafirewallFilteringServiceGroupsArgs struct {
	// Description of the network services group
	Description *string `pulumi:"description"`
	// Name of the network service group
	Name *string `pulumi:"name"`
	// Any number of network services ID to be added to the group
	Services []ZIAFirewallFilteringServiceGroupsService `pulumi:"services"`
}

// The set of arguments for constructing a ZIAFirewallFilteringServiceGroups resource.
type ZIAFirewallFilteringServiceGroupsArgs struct {
	// Description of the network services group
	Description pulumi.StringPtrInput
	// Name of the network service group
	Name pulumi.StringPtrInput
	// Any number of network services ID to be added to the group
	Services ZIAFirewallFilteringServiceGroupsServiceArrayInput
}

func (ZIAFirewallFilteringServiceGroupsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ziafirewallFilteringServiceGroupsArgs)(nil)).Elem()
}

type ZIAFirewallFilteringServiceGroupsInput interface {
	pulumi.Input

	ToZIAFirewallFilteringServiceGroupsOutput() ZIAFirewallFilteringServiceGroupsOutput
	ToZIAFirewallFilteringServiceGroupsOutputWithContext(ctx context.Context) ZIAFirewallFilteringServiceGroupsOutput
}

func (*ZIAFirewallFilteringServiceGroups) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAFirewallFilteringServiceGroups)(nil)).Elem()
}

func (i *ZIAFirewallFilteringServiceGroups) ToZIAFirewallFilteringServiceGroupsOutput() ZIAFirewallFilteringServiceGroupsOutput {
	return i.ToZIAFirewallFilteringServiceGroupsOutputWithContext(context.Background())
}

func (i *ZIAFirewallFilteringServiceGroups) ToZIAFirewallFilteringServiceGroupsOutputWithContext(ctx context.Context) ZIAFirewallFilteringServiceGroupsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringServiceGroupsOutput)
}

// ZIAFirewallFilteringServiceGroupsArrayInput is an input type that accepts ZIAFirewallFilteringServiceGroupsArray and ZIAFirewallFilteringServiceGroupsArrayOutput values.
// You can construct a concrete instance of `ZIAFirewallFilteringServiceGroupsArrayInput` via:
//
//	ZIAFirewallFilteringServiceGroupsArray{ ZIAFirewallFilteringServiceGroupsArgs{...} }
type ZIAFirewallFilteringServiceGroupsArrayInput interface {
	pulumi.Input

	ToZIAFirewallFilteringServiceGroupsArrayOutput() ZIAFirewallFilteringServiceGroupsArrayOutput
	ToZIAFirewallFilteringServiceGroupsArrayOutputWithContext(context.Context) ZIAFirewallFilteringServiceGroupsArrayOutput
}

type ZIAFirewallFilteringServiceGroupsArray []ZIAFirewallFilteringServiceGroupsInput

func (ZIAFirewallFilteringServiceGroupsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZIAFirewallFilteringServiceGroups)(nil)).Elem()
}

func (i ZIAFirewallFilteringServiceGroupsArray) ToZIAFirewallFilteringServiceGroupsArrayOutput() ZIAFirewallFilteringServiceGroupsArrayOutput {
	return i.ToZIAFirewallFilteringServiceGroupsArrayOutputWithContext(context.Background())
}

func (i ZIAFirewallFilteringServiceGroupsArray) ToZIAFirewallFilteringServiceGroupsArrayOutputWithContext(ctx context.Context) ZIAFirewallFilteringServiceGroupsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringServiceGroupsArrayOutput)
}

// ZIAFirewallFilteringServiceGroupsMapInput is an input type that accepts ZIAFirewallFilteringServiceGroupsMap and ZIAFirewallFilteringServiceGroupsMapOutput values.
// You can construct a concrete instance of `ZIAFirewallFilteringServiceGroupsMapInput` via:
//
//	ZIAFirewallFilteringServiceGroupsMap{ "key": ZIAFirewallFilteringServiceGroupsArgs{...} }
type ZIAFirewallFilteringServiceGroupsMapInput interface {
	pulumi.Input

	ToZIAFirewallFilteringServiceGroupsMapOutput() ZIAFirewallFilteringServiceGroupsMapOutput
	ToZIAFirewallFilteringServiceGroupsMapOutputWithContext(context.Context) ZIAFirewallFilteringServiceGroupsMapOutput
}

type ZIAFirewallFilteringServiceGroupsMap map[string]ZIAFirewallFilteringServiceGroupsInput

func (ZIAFirewallFilteringServiceGroupsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZIAFirewallFilteringServiceGroups)(nil)).Elem()
}

func (i ZIAFirewallFilteringServiceGroupsMap) ToZIAFirewallFilteringServiceGroupsMapOutput() ZIAFirewallFilteringServiceGroupsMapOutput {
	return i.ToZIAFirewallFilteringServiceGroupsMapOutputWithContext(context.Background())
}

func (i ZIAFirewallFilteringServiceGroupsMap) ToZIAFirewallFilteringServiceGroupsMapOutputWithContext(ctx context.Context) ZIAFirewallFilteringServiceGroupsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAFirewallFilteringServiceGroupsMapOutput)
}

type ZIAFirewallFilteringServiceGroupsOutput struct{ *pulumi.OutputState }

func (ZIAFirewallFilteringServiceGroupsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAFirewallFilteringServiceGroups)(nil)).Elem()
}

func (o ZIAFirewallFilteringServiceGroupsOutput) ToZIAFirewallFilteringServiceGroupsOutput() ZIAFirewallFilteringServiceGroupsOutput {
	return o
}

func (o ZIAFirewallFilteringServiceGroupsOutput) ToZIAFirewallFilteringServiceGroupsOutputWithContext(ctx context.Context) ZIAFirewallFilteringServiceGroupsOutput {
	return o
}

// Description of the network services group
func (o ZIAFirewallFilteringServiceGroupsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZIAFirewallFilteringServiceGroups) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Name of the network service group
func (o ZIAFirewallFilteringServiceGroupsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ZIAFirewallFilteringServiceGroups) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ZIAFirewallFilteringServiceGroupsOutput) NetworkServiceGroupId() pulumi.IntOutput {
	return o.ApplyT(func(v *ZIAFirewallFilteringServiceGroups) pulumi.IntOutput { return v.NetworkServiceGroupId }).(pulumi.IntOutput)
}

// Any number of network services ID to be added to the group
func (o ZIAFirewallFilteringServiceGroupsOutput) Services() ZIAFirewallFilteringServiceGroupsServiceArrayOutput {
	return o.ApplyT(func(v *ZIAFirewallFilteringServiceGroups) ZIAFirewallFilteringServiceGroupsServiceArrayOutput {
		return v.Services
	}).(ZIAFirewallFilteringServiceGroupsServiceArrayOutput)
}

type ZIAFirewallFilteringServiceGroupsArrayOutput struct{ *pulumi.OutputState }

func (ZIAFirewallFilteringServiceGroupsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZIAFirewallFilteringServiceGroups)(nil)).Elem()
}

func (o ZIAFirewallFilteringServiceGroupsArrayOutput) ToZIAFirewallFilteringServiceGroupsArrayOutput() ZIAFirewallFilteringServiceGroupsArrayOutput {
	return o
}

func (o ZIAFirewallFilteringServiceGroupsArrayOutput) ToZIAFirewallFilteringServiceGroupsArrayOutputWithContext(ctx context.Context) ZIAFirewallFilteringServiceGroupsArrayOutput {
	return o
}

func (o ZIAFirewallFilteringServiceGroupsArrayOutput) Index(i pulumi.IntInput) ZIAFirewallFilteringServiceGroupsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ZIAFirewallFilteringServiceGroups {
		return vs[0].([]*ZIAFirewallFilteringServiceGroups)[vs[1].(int)]
	}).(ZIAFirewallFilteringServiceGroupsOutput)
}

type ZIAFirewallFilteringServiceGroupsMapOutput struct{ *pulumi.OutputState }

func (ZIAFirewallFilteringServiceGroupsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZIAFirewallFilteringServiceGroups)(nil)).Elem()
}

func (o ZIAFirewallFilteringServiceGroupsMapOutput) ToZIAFirewallFilteringServiceGroupsMapOutput() ZIAFirewallFilteringServiceGroupsMapOutput {
	return o
}

func (o ZIAFirewallFilteringServiceGroupsMapOutput) ToZIAFirewallFilteringServiceGroupsMapOutputWithContext(ctx context.Context) ZIAFirewallFilteringServiceGroupsMapOutput {
	return o
}

func (o ZIAFirewallFilteringServiceGroupsMapOutput) MapIndex(k pulumi.StringInput) ZIAFirewallFilteringServiceGroupsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ZIAFirewallFilteringServiceGroups {
		return vs[0].(map[string]*ZIAFirewallFilteringServiceGroups)[vs[1].(string)]
	}).(ZIAFirewallFilteringServiceGroupsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAFirewallFilteringServiceGroupsInput)(nil)).Elem(), &ZIAFirewallFilteringServiceGroups{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAFirewallFilteringServiceGroupsArrayInput)(nil)).Elem(), ZIAFirewallFilteringServiceGroupsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAFirewallFilteringServiceGroupsMapInput)(nil)).Elem(), ZIAFirewallFilteringServiceGroupsMap{})
	pulumi.RegisterOutputType(ZIAFirewallFilteringServiceGroupsOutput{})
	pulumi.RegisterOutputType(ZIAFirewallFilteringServiceGroupsArrayOutput{})
	pulumi.RegisterOutputType(ZIAFirewallFilteringServiceGroupsMapOutput{})
}
