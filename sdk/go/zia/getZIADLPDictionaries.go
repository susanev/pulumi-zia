// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zia

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use the **zia_dlp_dictionaries** data source to get information about a DLP dictionary option available in the Zscaler Internet Access.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-zia/sdk/go/zia"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := zia.LookupZIADLPDictionaries(ctx, &zia.LookupZIADLPDictionariesArgs{
//				Name: pulumi.StringRef("SALESFORCE_REPORT_LEAKAGE"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupZIADLPDictionaries(ctx *pulumi.Context, args *LookupZIADLPDictionariesArgs, opts ...pulumi.InvokeOption) (*LookupZIADLPDictionariesResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupZIADLPDictionariesResult
	err := ctx.Invoke("zia:index/getZIADLPDictionaries:getZIADLPDictionaries", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getZIADLPDictionaries.
type LookupZIADLPDictionariesArgs struct {
	// Unique identifier for the DLP dictionary
	Id *int `pulumi:"id"`
	// DLP dictionary name
	Name *string `pulumi:"name"`
}

// A collection of values returned by getZIADLPDictionaries.
type LookupZIADLPDictionariesResult struct {
	// (String) he DLP confidence threshold. [`CONFIDENCE_LEVEL_LOW`, `CONFIDENCE_LEVEL_MEDIUM` `CONFIDENCE_LEVEL_HIGH` ]
	ConfidenceThreshold string `pulumi:"confidenceThreshold"`
	// (String) The DLP custom phrase match type. [ `MATCH_ALL_CUSTOM_PHRASE_PATTERN_DICTIONARY`, `MATCH_ANY_CUSTOM_PHRASE_PATTERN_DICTIONARY` ]
	CustomPhraseMatchType string `pulumi:"customPhraseMatchType"`
	Description           string `pulumi:"description"`
	// (String) The DLP dictionary type. The cloud service API only supports custom DLP dictionaries that are using the `PATTERNS_AND_PHRASES` type.
	DictionaryType            string                                         `pulumi:"dictionaryType"`
	ExactDataMatchDetails     []GetZIADLPDictionariesExactDataMatchDetail    `pulumi:"exactDataMatchDetails"`
	Id                        int                                            `pulumi:"id"`
	IdmProfileMatchAccuracies []GetZIADLPDictionariesIdmProfileMatchAccuracy `pulumi:"idmProfileMatchAccuracies"`
	Name                      string                                         `pulumi:"name"`
	// (Boolean) Indicates whether the name is localized or not. This is always set to True for predefined DLP dictionaries.
	NameL10nTag   bool                           `pulumi:"nameL10nTag"`
	Patterns      []GetZIADLPDictionariesPattern `pulumi:"patterns"`
	Phrases       []GetZIADLPDictionariesPhrase  `pulumi:"phrases"`
	Proximity     int                            `pulumi:"proximity"`
	ThresholdType string                         `pulumi:"thresholdType"`
}

func LookupZIADLPDictionariesOutput(ctx *pulumi.Context, args LookupZIADLPDictionariesOutputArgs, opts ...pulumi.InvokeOption) LookupZIADLPDictionariesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupZIADLPDictionariesResult, error) {
			args := v.(LookupZIADLPDictionariesArgs)
			r, err := LookupZIADLPDictionaries(ctx, &args, opts...)
			var s LookupZIADLPDictionariesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupZIADLPDictionariesResultOutput)
}

// A collection of arguments for invoking getZIADLPDictionaries.
type LookupZIADLPDictionariesOutputArgs struct {
	// Unique identifier for the DLP dictionary
	Id pulumi.IntPtrInput `pulumi:"id"`
	// DLP dictionary name
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupZIADLPDictionariesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupZIADLPDictionariesArgs)(nil)).Elem()
}

// A collection of values returned by getZIADLPDictionaries.
type LookupZIADLPDictionariesResultOutput struct{ *pulumi.OutputState }

func (LookupZIADLPDictionariesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupZIADLPDictionariesResult)(nil)).Elem()
}

func (o LookupZIADLPDictionariesResultOutput) ToLookupZIADLPDictionariesResultOutput() LookupZIADLPDictionariesResultOutput {
	return o
}

func (o LookupZIADLPDictionariesResultOutput) ToLookupZIADLPDictionariesResultOutputWithContext(ctx context.Context) LookupZIADLPDictionariesResultOutput {
	return o
}

// (String) he DLP confidence threshold. [`CONFIDENCE_LEVEL_LOW`, `CONFIDENCE_LEVEL_MEDIUM` `CONFIDENCE_LEVEL_HIGH` ]
func (o LookupZIADLPDictionariesResultOutput) ConfidenceThreshold() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZIADLPDictionariesResult) string { return v.ConfidenceThreshold }).(pulumi.StringOutput)
}

// (String) The DLP custom phrase match type. [ `MATCH_ALL_CUSTOM_PHRASE_PATTERN_DICTIONARY`, `MATCH_ANY_CUSTOM_PHRASE_PATTERN_DICTIONARY` ]
func (o LookupZIADLPDictionariesResultOutput) CustomPhraseMatchType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZIADLPDictionariesResult) string { return v.CustomPhraseMatchType }).(pulumi.StringOutput)
}

func (o LookupZIADLPDictionariesResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZIADLPDictionariesResult) string { return v.Description }).(pulumi.StringOutput)
}

// (String) The DLP dictionary type. The cloud service API only supports custom DLP dictionaries that are using the `PATTERNS_AND_PHRASES` type.
func (o LookupZIADLPDictionariesResultOutput) DictionaryType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZIADLPDictionariesResult) string { return v.DictionaryType }).(pulumi.StringOutput)
}

func (o LookupZIADLPDictionariesResultOutput) ExactDataMatchDetails() GetZIADLPDictionariesExactDataMatchDetailArrayOutput {
	return o.ApplyT(func(v LookupZIADLPDictionariesResult) []GetZIADLPDictionariesExactDataMatchDetail {
		return v.ExactDataMatchDetails
	}).(GetZIADLPDictionariesExactDataMatchDetailArrayOutput)
}

func (o LookupZIADLPDictionariesResultOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v LookupZIADLPDictionariesResult) int { return v.Id }).(pulumi.IntOutput)
}

func (o LookupZIADLPDictionariesResultOutput) IdmProfileMatchAccuracies() GetZIADLPDictionariesIdmProfileMatchAccuracyArrayOutput {
	return o.ApplyT(func(v LookupZIADLPDictionariesResult) []GetZIADLPDictionariesIdmProfileMatchAccuracy {
		return v.IdmProfileMatchAccuracies
	}).(GetZIADLPDictionariesIdmProfileMatchAccuracyArrayOutput)
}

func (o LookupZIADLPDictionariesResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZIADLPDictionariesResult) string { return v.Name }).(pulumi.StringOutput)
}

// (Boolean) Indicates whether the name is localized or not. This is always set to True for predefined DLP dictionaries.
func (o LookupZIADLPDictionariesResultOutput) NameL10nTag() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupZIADLPDictionariesResult) bool { return v.NameL10nTag }).(pulumi.BoolOutput)
}

func (o LookupZIADLPDictionariesResultOutput) Patterns() GetZIADLPDictionariesPatternArrayOutput {
	return o.ApplyT(func(v LookupZIADLPDictionariesResult) []GetZIADLPDictionariesPattern { return v.Patterns }).(GetZIADLPDictionariesPatternArrayOutput)
}

func (o LookupZIADLPDictionariesResultOutput) Phrases() GetZIADLPDictionariesPhraseArrayOutput {
	return o.ApplyT(func(v LookupZIADLPDictionariesResult) []GetZIADLPDictionariesPhrase { return v.Phrases }).(GetZIADLPDictionariesPhraseArrayOutput)
}

func (o LookupZIADLPDictionariesResultOutput) Proximity() pulumi.IntOutput {
	return o.ApplyT(func(v LookupZIADLPDictionariesResult) int { return v.Proximity }).(pulumi.IntOutput)
}

func (o LookupZIADLPDictionariesResultOutput) ThresholdType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZIADLPDictionariesResult) string { return v.ThresholdType }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupZIADLPDictionariesResultOutput{})
}
