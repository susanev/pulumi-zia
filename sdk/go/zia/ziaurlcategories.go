// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zia

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The **zia_url_categories** resource creates and manages a new custom URL category. If keywords are included within the request, they will be added to the new category.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-zia/sdk/go/zia"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := zia.NewZIAURLCategories(ctx, "example", &zia.ZIAURLCategoriesArgs{
//				SuperCategory:  pulumi.String("USER_DEFINED"),
//				ConfiguredName: pulumi.String("MCAS Unsanctioned Apps"),
//				Description:    pulumi.String("MCAS Unsanctioned Apps"),
//				Keywords: pulumi.StringArray{
//					pulumi.String("microsoft"),
//				},
//				CustomCategory: pulumi.Bool(true),
//				Type:           pulumi.String("URL_CATEGORY"),
//				Scopes: zia.ZIAURLCategoriesScopeArray{
//					&zia.ZIAURLCategoriesScopeArgs{
//						Type: pulumi.String("LOCATION"),
//						ScopeEntities: &zia.ZIAURLCategoriesScopeScopeEntitiesArgs{
//							Ids: pulumi.IntArray{
//								data.Zpa_location_management.Nyc_site.Id,
//							},
//						},
//						ScopeGroupMemberEntities: &zia.ZIAURLCategoriesScopeScopeGroupMemberEntitiesArgs{
//							Ids: pulumi.IntArray{
//								data.Zia_group_management.Engineering.Id,
//							},
//						},
//					},
//				},
//				Urls: pulumi.StringArray{
//					pulumi.String(".coupons.com"),
//					pulumi.String(".resource.alaskaair.net"),
//					pulumi.String(".techrepublic.com"),
//					pulumi.String(".dailymotion.com"),
//					pulumi.String(".osiriscomm.com"),
//					pulumi.String(".uefa.com"),
//					pulumi.String(".Logz.io"),
//					pulumi.String(".alexa.com"),
//					pulumi.String(".baidu.com"),
//					pulumi.String(".cnn.com"),
//					pulumi.String(".level3.com"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type ZIAURLCategories struct {
	pulumi.CustomResourceState

	// Name of the URL category. This is only required for custom URL categories.
	ConfiguredName pulumi.StringPtrOutput `pulumi:"configuredName"`
	// Set to true for custom URL category. Up to 48 custom URL categories can be added per organization.
	CustomCategory pulumi.BoolPtrOutput `pulumi:"customCategory"`
	// The number of custom IP address ranges associated to the URL category.
	CustomIpRangesCount pulumi.IntOutput `pulumi:"customIpRangesCount"`
	// The number of custom URLs associated to the URL category.
	CustomUrlsCount pulumi.IntOutput `pulumi:"customUrlsCount"`
	// URLs added to a custom URL category are also retained under the original parent URL category (i.e., the predefined category the URL previously belonged to).
	DbCategorizedUrls pulumi.StringArrayOutput `pulumi:"dbCategorizedUrls"`
	// Description of the category.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Value is set to false for custom URL category when due to scope user does not have edit permission
	Editable pulumi.BoolPtrOutput `pulumi:"editable"`
	// Custom IP address ranges associated to a URL category. Up to 2000 custom IP address ranges and retaining parent custom IP address ranges can be added, per organization, across all categories.
	IpRanges pulumi.StringArrayOutput `pulumi:"ipRanges"`
	// The retaining parent custom IP address ranges associated to a URL category. Up to 2000 custom IP ranges and retaining parent custom IP address ranges can be added, per organization, across all categories.
	IpRangesRetainingParentCategories pulumi.StringArrayOutput `pulumi:"ipRangesRetainingParentCategories"`
	// The number of custom IP address ranges associated to the URL category, that also need to be retained under the original parent category.
	IpRangesRetainingParentCategoryCount pulumi.IntOutput `pulumi:"ipRangesRetainingParentCategoryCount"`
	// Custom keywords associated to a URL category. Up to 2048 custom keywords can be added per organization across all categories (including bandwidth classes).
	Keywords                          pulumi.StringArrayOutput `pulumi:"keywords"`
	KeywordsRetainingParentCategories pulumi.StringArrayOutput `pulumi:"keywordsRetainingParentCategories"`
	// Scope of the custom categories.
	Scopes ZIAURLCategoriesScopeArrayOutput `pulumi:"scopes"`
	// Super Category of the URL category. This field is required when creating custom URL categories.
	SuperCategory pulumi.StringPtrOutput `pulumi:"superCategory"`
	// Type of the custom categories. `URL_CATEGORY`, `TLD_CATEGORY`, `ALL`
	Type          pulumi.StringPtrOutput `pulumi:"type"`
	UrlCategoryId pulumi.StringOutput    `pulumi:"urlCategoryId"`
	// URL and keyword counts for the category.
	UrlKeywordCounts ZIAURLCategoriesUrlKeywordCountsOutput `pulumi:"urlKeywordCounts"`
	// Custom URLs to add to a URL category. Up to 25,000 custom URLs can be added per organization across all categories (including bandwidth classes).
	Urls pulumi.StringArrayOutput `pulumi:"urls"`
	// The number of custom IP address ranges associated to the URL category, that also need to be retained under the original parent category.
	UrlsRetainingParentCategoryCount pulumi.IntOutput `pulumi:"urlsRetainingParentCategoryCount"`
}

// NewZIAURLCategories registers a new resource with the given unique name, arguments, and options.
func NewZIAURLCategories(ctx *pulumi.Context,
	name string, args *ZIAURLCategoriesArgs, opts ...pulumi.ResourceOption) (*ZIAURLCategories, error) {
	if args == nil {
		args = &ZIAURLCategoriesArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource ZIAURLCategories
	err := ctx.RegisterResource("zia:index/zIAURLCategories:ZIAURLCategories", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetZIAURLCategories gets an existing ZIAURLCategories resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetZIAURLCategories(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ZIAURLCategoriesState, opts ...pulumi.ResourceOption) (*ZIAURLCategories, error) {
	var resource ZIAURLCategories
	err := ctx.ReadResource("zia:index/zIAURLCategories:ZIAURLCategories", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ZIAURLCategories resources.
type ziaurlcategoriesState struct {
	// Name of the URL category. This is only required for custom URL categories.
	ConfiguredName *string `pulumi:"configuredName"`
	// Set to true for custom URL category. Up to 48 custom URL categories can be added per organization.
	CustomCategory *bool `pulumi:"customCategory"`
	// The number of custom IP address ranges associated to the URL category.
	CustomIpRangesCount *int `pulumi:"customIpRangesCount"`
	// The number of custom URLs associated to the URL category.
	CustomUrlsCount *int `pulumi:"customUrlsCount"`
	// URLs added to a custom URL category are also retained under the original parent URL category (i.e., the predefined category the URL previously belonged to).
	DbCategorizedUrls []string `pulumi:"dbCategorizedUrls"`
	// Description of the category.
	Description *string `pulumi:"description"`
	// Value is set to false for custom URL category when due to scope user does not have edit permission
	Editable *bool `pulumi:"editable"`
	// Custom IP address ranges associated to a URL category. Up to 2000 custom IP address ranges and retaining parent custom IP address ranges can be added, per organization, across all categories.
	IpRanges []string `pulumi:"ipRanges"`
	// The retaining parent custom IP address ranges associated to a URL category. Up to 2000 custom IP ranges and retaining parent custom IP address ranges can be added, per organization, across all categories.
	IpRangesRetainingParentCategories []string `pulumi:"ipRangesRetainingParentCategories"`
	// The number of custom IP address ranges associated to the URL category, that also need to be retained under the original parent category.
	IpRangesRetainingParentCategoryCount *int `pulumi:"ipRangesRetainingParentCategoryCount"`
	// Custom keywords associated to a URL category. Up to 2048 custom keywords can be added per organization across all categories (including bandwidth classes).
	Keywords                          []string `pulumi:"keywords"`
	KeywordsRetainingParentCategories []string `pulumi:"keywordsRetainingParentCategories"`
	// Scope of the custom categories.
	Scopes []ZIAURLCategoriesScope `pulumi:"scopes"`
	// Super Category of the URL category. This field is required when creating custom URL categories.
	SuperCategory *string `pulumi:"superCategory"`
	// Type of the custom categories. `URL_CATEGORY`, `TLD_CATEGORY`, `ALL`
	Type          *string `pulumi:"type"`
	UrlCategoryId *string `pulumi:"urlCategoryId"`
	// URL and keyword counts for the category.
	UrlKeywordCounts *ZIAURLCategoriesUrlKeywordCounts `pulumi:"urlKeywordCounts"`
	// Custom URLs to add to a URL category. Up to 25,000 custom URLs can be added per organization across all categories (including bandwidth classes).
	Urls []string `pulumi:"urls"`
	// The number of custom IP address ranges associated to the URL category, that also need to be retained under the original parent category.
	UrlsRetainingParentCategoryCount *int `pulumi:"urlsRetainingParentCategoryCount"`
}

type ZIAURLCategoriesState struct {
	// Name of the URL category. This is only required for custom URL categories.
	ConfiguredName pulumi.StringPtrInput
	// Set to true for custom URL category. Up to 48 custom URL categories can be added per organization.
	CustomCategory pulumi.BoolPtrInput
	// The number of custom IP address ranges associated to the URL category.
	CustomIpRangesCount pulumi.IntPtrInput
	// The number of custom URLs associated to the URL category.
	CustomUrlsCount pulumi.IntPtrInput
	// URLs added to a custom URL category are also retained under the original parent URL category (i.e., the predefined category the URL previously belonged to).
	DbCategorizedUrls pulumi.StringArrayInput
	// Description of the category.
	Description pulumi.StringPtrInput
	// Value is set to false for custom URL category when due to scope user does not have edit permission
	Editable pulumi.BoolPtrInput
	// Custom IP address ranges associated to a URL category. Up to 2000 custom IP address ranges and retaining parent custom IP address ranges can be added, per organization, across all categories.
	IpRanges pulumi.StringArrayInput
	// The retaining parent custom IP address ranges associated to a URL category. Up to 2000 custom IP ranges and retaining parent custom IP address ranges can be added, per organization, across all categories.
	IpRangesRetainingParentCategories pulumi.StringArrayInput
	// The number of custom IP address ranges associated to the URL category, that also need to be retained under the original parent category.
	IpRangesRetainingParentCategoryCount pulumi.IntPtrInput
	// Custom keywords associated to a URL category. Up to 2048 custom keywords can be added per organization across all categories (including bandwidth classes).
	Keywords                          pulumi.StringArrayInput
	KeywordsRetainingParentCategories pulumi.StringArrayInput
	// Scope of the custom categories.
	Scopes ZIAURLCategoriesScopeArrayInput
	// Super Category of the URL category. This field is required when creating custom URL categories.
	SuperCategory pulumi.StringPtrInput
	// Type of the custom categories. `URL_CATEGORY`, `TLD_CATEGORY`, `ALL`
	Type          pulumi.StringPtrInput
	UrlCategoryId pulumi.StringPtrInput
	// URL and keyword counts for the category.
	UrlKeywordCounts ZIAURLCategoriesUrlKeywordCountsPtrInput
	// Custom URLs to add to a URL category. Up to 25,000 custom URLs can be added per organization across all categories (including bandwidth classes).
	Urls pulumi.StringArrayInput
	// The number of custom IP address ranges associated to the URL category, that also need to be retained under the original parent category.
	UrlsRetainingParentCategoryCount pulumi.IntPtrInput
}

func (ZIAURLCategoriesState) ElementType() reflect.Type {
	return reflect.TypeOf((*ziaurlcategoriesState)(nil)).Elem()
}

type ziaurlcategoriesArgs struct {
	// Name of the URL category. This is only required for custom URL categories.
	ConfiguredName *string `pulumi:"configuredName"`
	// Set to true for custom URL category. Up to 48 custom URL categories can be added per organization.
	CustomCategory *bool `pulumi:"customCategory"`
	// The number of custom IP address ranges associated to the URL category.
	CustomIpRangesCount *int `pulumi:"customIpRangesCount"`
	// The number of custom URLs associated to the URL category.
	CustomUrlsCount *int `pulumi:"customUrlsCount"`
	// URLs added to a custom URL category are also retained under the original parent URL category (i.e., the predefined category the URL previously belonged to).
	DbCategorizedUrls []string `pulumi:"dbCategorizedUrls"`
	// Description of the category.
	Description *string `pulumi:"description"`
	// Value is set to false for custom URL category when due to scope user does not have edit permission
	Editable *bool `pulumi:"editable"`
	// Custom IP address ranges associated to a URL category. Up to 2000 custom IP address ranges and retaining parent custom IP address ranges can be added, per organization, across all categories.
	IpRanges []string `pulumi:"ipRanges"`
	// The retaining parent custom IP address ranges associated to a URL category. Up to 2000 custom IP ranges and retaining parent custom IP address ranges can be added, per organization, across all categories.
	IpRangesRetainingParentCategories []string `pulumi:"ipRangesRetainingParentCategories"`
	// The number of custom IP address ranges associated to the URL category, that also need to be retained under the original parent category.
	IpRangesRetainingParentCategoryCount *int `pulumi:"ipRangesRetainingParentCategoryCount"`
	// Custom keywords associated to a URL category. Up to 2048 custom keywords can be added per organization across all categories (including bandwidth classes).
	Keywords                          []string `pulumi:"keywords"`
	KeywordsRetainingParentCategories []string `pulumi:"keywordsRetainingParentCategories"`
	// Scope of the custom categories.
	Scopes []ZIAURLCategoriesScope `pulumi:"scopes"`
	// Super Category of the URL category. This field is required when creating custom URL categories.
	SuperCategory *string `pulumi:"superCategory"`
	// Type of the custom categories. `URL_CATEGORY`, `TLD_CATEGORY`, `ALL`
	Type *string `pulumi:"type"`
	// URL and keyword counts for the category.
	UrlKeywordCounts *ZIAURLCategoriesUrlKeywordCounts `pulumi:"urlKeywordCounts"`
	// Custom URLs to add to a URL category. Up to 25,000 custom URLs can be added per organization across all categories (including bandwidth classes).
	Urls []string `pulumi:"urls"`
	// The number of custom IP address ranges associated to the URL category, that also need to be retained under the original parent category.
	UrlsRetainingParentCategoryCount *int `pulumi:"urlsRetainingParentCategoryCount"`
}

// The set of arguments for constructing a ZIAURLCategories resource.
type ZIAURLCategoriesArgs struct {
	// Name of the URL category. This is only required for custom URL categories.
	ConfiguredName pulumi.StringPtrInput
	// Set to true for custom URL category. Up to 48 custom URL categories can be added per organization.
	CustomCategory pulumi.BoolPtrInput
	// The number of custom IP address ranges associated to the URL category.
	CustomIpRangesCount pulumi.IntPtrInput
	// The number of custom URLs associated to the URL category.
	CustomUrlsCount pulumi.IntPtrInput
	// URLs added to a custom URL category are also retained under the original parent URL category (i.e., the predefined category the URL previously belonged to).
	DbCategorizedUrls pulumi.StringArrayInput
	// Description of the category.
	Description pulumi.StringPtrInput
	// Value is set to false for custom URL category when due to scope user does not have edit permission
	Editable pulumi.BoolPtrInput
	// Custom IP address ranges associated to a URL category. Up to 2000 custom IP address ranges and retaining parent custom IP address ranges can be added, per organization, across all categories.
	IpRanges pulumi.StringArrayInput
	// The retaining parent custom IP address ranges associated to a URL category. Up to 2000 custom IP ranges and retaining parent custom IP address ranges can be added, per organization, across all categories.
	IpRangesRetainingParentCategories pulumi.StringArrayInput
	// The number of custom IP address ranges associated to the URL category, that also need to be retained under the original parent category.
	IpRangesRetainingParentCategoryCount pulumi.IntPtrInput
	// Custom keywords associated to a URL category. Up to 2048 custom keywords can be added per organization across all categories (including bandwidth classes).
	Keywords                          pulumi.StringArrayInput
	KeywordsRetainingParentCategories pulumi.StringArrayInput
	// Scope of the custom categories.
	Scopes ZIAURLCategoriesScopeArrayInput
	// Super Category of the URL category. This field is required when creating custom URL categories.
	SuperCategory pulumi.StringPtrInput
	// Type of the custom categories. `URL_CATEGORY`, `TLD_CATEGORY`, `ALL`
	Type pulumi.StringPtrInput
	// URL and keyword counts for the category.
	UrlKeywordCounts ZIAURLCategoriesUrlKeywordCountsPtrInput
	// Custom URLs to add to a URL category. Up to 25,000 custom URLs can be added per organization across all categories (including bandwidth classes).
	Urls pulumi.StringArrayInput
	// The number of custom IP address ranges associated to the URL category, that also need to be retained under the original parent category.
	UrlsRetainingParentCategoryCount pulumi.IntPtrInput
}

func (ZIAURLCategoriesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ziaurlcategoriesArgs)(nil)).Elem()
}

type ZIAURLCategoriesInput interface {
	pulumi.Input

	ToZIAURLCategoriesOutput() ZIAURLCategoriesOutput
	ToZIAURLCategoriesOutputWithContext(ctx context.Context) ZIAURLCategoriesOutput
}

func (*ZIAURLCategories) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAURLCategories)(nil)).Elem()
}

func (i *ZIAURLCategories) ToZIAURLCategoriesOutput() ZIAURLCategoriesOutput {
	return i.ToZIAURLCategoriesOutputWithContext(context.Background())
}

func (i *ZIAURLCategories) ToZIAURLCategoriesOutputWithContext(ctx context.Context) ZIAURLCategoriesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAURLCategoriesOutput)
}

// ZIAURLCategoriesArrayInput is an input type that accepts ZIAURLCategoriesArray and ZIAURLCategoriesArrayOutput values.
// You can construct a concrete instance of `ZIAURLCategoriesArrayInput` via:
//
//	ZIAURLCategoriesArray{ ZIAURLCategoriesArgs{...} }
type ZIAURLCategoriesArrayInput interface {
	pulumi.Input

	ToZIAURLCategoriesArrayOutput() ZIAURLCategoriesArrayOutput
	ToZIAURLCategoriesArrayOutputWithContext(context.Context) ZIAURLCategoriesArrayOutput
}

type ZIAURLCategoriesArray []ZIAURLCategoriesInput

func (ZIAURLCategoriesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZIAURLCategories)(nil)).Elem()
}

func (i ZIAURLCategoriesArray) ToZIAURLCategoriesArrayOutput() ZIAURLCategoriesArrayOutput {
	return i.ToZIAURLCategoriesArrayOutputWithContext(context.Background())
}

func (i ZIAURLCategoriesArray) ToZIAURLCategoriesArrayOutputWithContext(ctx context.Context) ZIAURLCategoriesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAURLCategoriesArrayOutput)
}

// ZIAURLCategoriesMapInput is an input type that accepts ZIAURLCategoriesMap and ZIAURLCategoriesMapOutput values.
// You can construct a concrete instance of `ZIAURLCategoriesMapInput` via:
//
//	ZIAURLCategoriesMap{ "key": ZIAURLCategoriesArgs{...} }
type ZIAURLCategoriesMapInput interface {
	pulumi.Input

	ToZIAURLCategoriesMapOutput() ZIAURLCategoriesMapOutput
	ToZIAURLCategoriesMapOutputWithContext(context.Context) ZIAURLCategoriesMapOutput
}

type ZIAURLCategoriesMap map[string]ZIAURLCategoriesInput

func (ZIAURLCategoriesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZIAURLCategories)(nil)).Elem()
}

func (i ZIAURLCategoriesMap) ToZIAURLCategoriesMapOutput() ZIAURLCategoriesMapOutput {
	return i.ToZIAURLCategoriesMapOutputWithContext(context.Background())
}

func (i ZIAURLCategoriesMap) ToZIAURLCategoriesMapOutputWithContext(ctx context.Context) ZIAURLCategoriesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAURLCategoriesMapOutput)
}

type ZIAURLCategoriesOutput struct{ *pulumi.OutputState }

func (ZIAURLCategoriesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAURLCategories)(nil)).Elem()
}

func (o ZIAURLCategoriesOutput) ToZIAURLCategoriesOutput() ZIAURLCategoriesOutput {
	return o
}

func (o ZIAURLCategoriesOutput) ToZIAURLCategoriesOutputWithContext(ctx context.Context) ZIAURLCategoriesOutput {
	return o
}

// Name of the URL category. This is only required for custom URL categories.
func (o ZIAURLCategoriesOutput) ConfiguredName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZIAURLCategories) pulumi.StringPtrOutput { return v.ConfiguredName }).(pulumi.StringPtrOutput)
}

// Set to true for custom URL category. Up to 48 custom URL categories can be added per organization.
func (o ZIAURLCategoriesOutput) CustomCategory() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ZIAURLCategories) pulumi.BoolPtrOutput { return v.CustomCategory }).(pulumi.BoolPtrOutput)
}

// The number of custom IP address ranges associated to the URL category.
func (o ZIAURLCategoriesOutput) CustomIpRangesCount() pulumi.IntOutput {
	return o.ApplyT(func(v *ZIAURLCategories) pulumi.IntOutput { return v.CustomIpRangesCount }).(pulumi.IntOutput)
}

// The number of custom URLs associated to the URL category.
func (o ZIAURLCategoriesOutput) CustomUrlsCount() pulumi.IntOutput {
	return o.ApplyT(func(v *ZIAURLCategories) pulumi.IntOutput { return v.CustomUrlsCount }).(pulumi.IntOutput)
}

// URLs added to a custom URL category are also retained under the original parent URL category (i.e., the predefined category the URL previously belonged to).
func (o ZIAURLCategoriesOutput) DbCategorizedUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ZIAURLCategories) pulumi.StringArrayOutput { return v.DbCategorizedUrls }).(pulumi.StringArrayOutput)
}

// Description of the category.
func (o ZIAURLCategoriesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZIAURLCategories) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Value is set to false for custom URL category when due to scope user does not have edit permission
func (o ZIAURLCategoriesOutput) Editable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ZIAURLCategories) pulumi.BoolPtrOutput { return v.Editable }).(pulumi.BoolPtrOutput)
}

// Custom IP address ranges associated to a URL category. Up to 2000 custom IP address ranges and retaining parent custom IP address ranges can be added, per organization, across all categories.
func (o ZIAURLCategoriesOutput) IpRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ZIAURLCategories) pulumi.StringArrayOutput { return v.IpRanges }).(pulumi.StringArrayOutput)
}

// The retaining parent custom IP address ranges associated to a URL category. Up to 2000 custom IP ranges and retaining parent custom IP address ranges can be added, per organization, across all categories.
func (o ZIAURLCategoriesOutput) IpRangesRetainingParentCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ZIAURLCategories) pulumi.StringArrayOutput { return v.IpRangesRetainingParentCategories }).(pulumi.StringArrayOutput)
}

// The number of custom IP address ranges associated to the URL category, that also need to be retained under the original parent category.
func (o ZIAURLCategoriesOutput) IpRangesRetainingParentCategoryCount() pulumi.IntOutput {
	return o.ApplyT(func(v *ZIAURLCategories) pulumi.IntOutput { return v.IpRangesRetainingParentCategoryCount }).(pulumi.IntOutput)
}

// Custom keywords associated to a URL category. Up to 2048 custom keywords can be added per organization across all categories (including bandwidth classes).
func (o ZIAURLCategoriesOutput) Keywords() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ZIAURLCategories) pulumi.StringArrayOutput { return v.Keywords }).(pulumi.StringArrayOutput)
}

func (o ZIAURLCategoriesOutput) KeywordsRetainingParentCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ZIAURLCategories) pulumi.StringArrayOutput { return v.KeywordsRetainingParentCategories }).(pulumi.StringArrayOutput)
}

// Scope of the custom categories.
func (o ZIAURLCategoriesOutput) Scopes() ZIAURLCategoriesScopeArrayOutput {
	return o.ApplyT(func(v *ZIAURLCategories) ZIAURLCategoriesScopeArrayOutput { return v.Scopes }).(ZIAURLCategoriesScopeArrayOutput)
}

// Super Category of the URL category. This field is required when creating custom URL categories.
func (o ZIAURLCategoriesOutput) SuperCategory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZIAURLCategories) pulumi.StringPtrOutput { return v.SuperCategory }).(pulumi.StringPtrOutput)
}

// Type of the custom categories. `URL_CATEGORY`, `TLD_CATEGORY`, `ALL`
func (o ZIAURLCategoriesOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZIAURLCategories) pulumi.StringPtrOutput { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ZIAURLCategoriesOutput) UrlCategoryId() pulumi.StringOutput {
	return o.ApplyT(func(v *ZIAURLCategories) pulumi.StringOutput { return v.UrlCategoryId }).(pulumi.StringOutput)
}

// URL and keyword counts for the category.
func (o ZIAURLCategoriesOutput) UrlKeywordCounts() ZIAURLCategoriesUrlKeywordCountsOutput {
	return o.ApplyT(func(v *ZIAURLCategories) ZIAURLCategoriesUrlKeywordCountsOutput { return v.UrlKeywordCounts }).(ZIAURLCategoriesUrlKeywordCountsOutput)
}

// Custom URLs to add to a URL category. Up to 25,000 custom URLs can be added per organization across all categories (including bandwidth classes).
func (o ZIAURLCategoriesOutput) Urls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ZIAURLCategories) pulumi.StringArrayOutput { return v.Urls }).(pulumi.StringArrayOutput)
}

// The number of custom IP address ranges associated to the URL category, that also need to be retained under the original parent category.
func (o ZIAURLCategoriesOutput) UrlsRetainingParentCategoryCount() pulumi.IntOutput {
	return o.ApplyT(func(v *ZIAURLCategories) pulumi.IntOutput { return v.UrlsRetainingParentCategoryCount }).(pulumi.IntOutput)
}

type ZIAURLCategoriesArrayOutput struct{ *pulumi.OutputState }

func (ZIAURLCategoriesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZIAURLCategories)(nil)).Elem()
}

func (o ZIAURLCategoriesArrayOutput) ToZIAURLCategoriesArrayOutput() ZIAURLCategoriesArrayOutput {
	return o
}

func (o ZIAURLCategoriesArrayOutput) ToZIAURLCategoriesArrayOutputWithContext(ctx context.Context) ZIAURLCategoriesArrayOutput {
	return o
}

func (o ZIAURLCategoriesArrayOutput) Index(i pulumi.IntInput) ZIAURLCategoriesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ZIAURLCategories {
		return vs[0].([]*ZIAURLCategories)[vs[1].(int)]
	}).(ZIAURLCategoriesOutput)
}

type ZIAURLCategoriesMapOutput struct{ *pulumi.OutputState }

func (ZIAURLCategoriesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZIAURLCategories)(nil)).Elem()
}

func (o ZIAURLCategoriesMapOutput) ToZIAURLCategoriesMapOutput() ZIAURLCategoriesMapOutput {
	return o
}

func (o ZIAURLCategoriesMapOutput) ToZIAURLCategoriesMapOutputWithContext(ctx context.Context) ZIAURLCategoriesMapOutput {
	return o
}

func (o ZIAURLCategoriesMapOutput) MapIndex(k pulumi.StringInput) ZIAURLCategoriesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ZIAURLCategories {
		return vs[0].(map[string]*ZIAURLCategories)[vs[1].(string)]
	}).(ZIAURLCategoriesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAURLCategoriesInput)(nil)).Elem(), &ZIAURLCategories{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAURLCategoriesArrayInput)(nil)).Elem(), ZIAURLCategoriesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAURLCategoriesMapInput)(nil)).Elem(), ZIAURLCategoriesMap{})
	pulumi.RegisterOutputType(ZIAURLCategoriesOutput{})
	pulumi.RegisterOutputType(ZIAURLCategoriesArrayOutput{})
	pulumi.RegisterOutputType(ZIAURLCategoriesMapOutput{})
}
