// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zia

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The **zia_traffic_forwarding_gre_tunnel_info** data source to get information about provisioned GRE tunnel information created in the Zscaler Internet Access portal.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-zia/sdk/go/zia"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := zia.GetZIATrafficForwardingGRETunnelInfo(ctx, &zia.GetZIATrafficForwardingGRETunnelInfoArgs{
//				IpAddress: pulumi.StringRef("1.1.1.1"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetZIATrafficForwardingGRETunnelInfo(ctx *pulumi.Context, args *GetZIATrafficForwardingGRETunnelInfoArgs, opts ...pulumi.InvokeOption) (*GetZIATrafficForwardingGRETunnelInfoResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetZIATrafficForwardingGRETunnelInfoResult
	err := ctx.Invoke("zia:index/getZIATrafficForwardingGRETunnelInfo:getZIATrafficForwardingGRETunnelInfo", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getZIATrafficForwardingGRETunnelInfo.
type GetZIATrafficForwardingGRETunnelInfoArgs struct {
	// Displays only ip addresses with GRE tunnel enabled
	GreEnabled *bool `pulumi:"greEnabled"`
	// Filter based on an IP address range.
	IpAddress *string `pulumi:"ipAddress"`
}

// A collection of values returned by getZIATrafficForwardingGRETunnelInfo.
type GetZIATrafficForwardingGRETunnelInfoResult struct {
	GreEnabled *bool `pulumi:"greEnabled"`
	// (String)
	GreRangePrimary string `pulumi:"greRangePrimary"`
	// (String)
	GreRangeSecondary string `pulumi:"greRangeSecondary"`
	// (String) The start of the internal IP address in /29 CIDR range
	GreTunnelIp string `pulumi:"greTunnelIp"`
	// The provider-assigned unique ID for this managed resource.
	Id        string  `pulumi:"id"`
	IpAddress *string `pulumi:"ipAddress"`
	// (String)
	PrimaryGw string `pulumi:"primaryGw"`
	// (String)
	SecondaryGw string `pulumi:"secondaryGw"`
	// (Number)
	TunId int `pulumi:"tunId"`
}

func GetZIATrafficForwardingGRETunnelInfoOutput(ctx *pulumi.Context, args GetZIATrafficForwardingGRETunnelInfoOutputArgs, opts ...pulumi.InvokeOption) GetZIATrafficForwardingGRETunnelInfoResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetZIATrafficForwardingGRETunnelInfoResult, error) {
			args := v.(GetZIATrafficForwardingGRETunnelInfoArgs)
			r, err := GetZIATrafficForwardingGRETunnelInfo(ctx, &args, opts...)
			var s GetZIATrafficForwardingGRETunnelInfoResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetZIATrafficForwardingGRETunnelInfoResultOutput)
}

// A collection of arguments for invoking getZIATrafficForwardingGRETunnelInfo.
type GetZIATrafficForwardingGRETunnelInfoOutputArgs struct {
	// Displays only ip addresses with GRE tunnel enabled
	GreEnabled pulumi.BoolPtrInput `pulumi:"greEnabled"`
	// Filter based on an IP address range.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
}

func (GetZIATrafficForwardingGRETunnelInfoOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIATrafficForwardingGRETunnelInfoArgs)(nil)).Elem()
}

// A collection of values returned by getZIATrafficForwardingGRETunnelInfo.
type GetZIATrafficForwardingGRETunnelInfoResultOutput struct{ *pulumi.OutputState }

func (GetZIATrafficForwardingGRETunnelInfoResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIATrafficForwardingGRETunnelInfoResult)(nil)).Elem()
}

func (o GetZIATrafficForwardingGRETunnelInfoResultOutput) ToGetZIATrafficForwardingGRETunnelInfoResultOutput() GetZIATrafficForwardingGRETunnelInfoResultOutput {
	return o
}

func (o GetZIATrafficForwardingGRETunnelInfoResultOutput) ToGetZIATrafficForwardingGRETunnelInfoResultOutputWithContext(ctx context.Context) GetZIATrafficForwardingGRETunnelInfoResultOutput {
	return o
}

func (o GetZIATrafficForwardingGRETunnelInfoResultOutput) GreEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingGRETunnelInfoResult) *bool { return v.GreEnabled }).(pulumi.BoolPtrOutput)
}

// (String)
func (o GetZIATrafficForwardingGRETunnelInfoResultOutput) GreRangePrimary() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingGRETunnelInfoResult) string { return v.GreRangePrimary }).(pulumi.StringOutput)
}

// (String)
func (o GetZIATrafficForwardingGRETunnelInfoResultOutput) GreRangeSecondary() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingGRETunnelInfoResult) string { return v.GreRangeSecondary }).(pulumi.StringOutput)
}

// (String) The start of the internal IP address in /29 CIDR range
func (o GetZIATrafficForwardingGRETunnelInfoResultOutput) GreTunnelIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingGRETunnelInfoResult) string { return v.GreTunnelIp }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetZIATrafficForwardingGRETunnelInfoResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingGRETunnelInfoResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetZIATrafficForwardingGRETunnelInfoResultOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingGRETunnelInfoResult) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// (String)
func (o GetZIATrafficForwardingGRETunnelInfoResultOutput) PrimaryGw() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingGRETunnelInfoResult) string { return v.PrimaryGw }).(pulumi.StringOutput)
}

// (String)
func (o GetZIATrafficForwardingGRETunnelInfoResultOutput) SecondaryGw() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingGRETunnelInfoResult) string { return v.SecondaryGw }).(pulumi.StringOutput)
}

// (Number)
func (o GetZIATrafficForwardingGRETunnelInfoResultOutput) TunId() pulumi.IntOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingGRETunnelInfoResult) int { return v.TunId }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetZIATrafficForwardingGRETunnelInfoResultOutput{})
}
