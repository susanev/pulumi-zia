// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package firewall

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The **zia_firewall_filtering_network_service_groups** resource allows the creation and management of ZIA Cloud Firewall IP network service groups in the Zscaler Internet Access. This resource can then be associated with a ZIA cloud firewall filtering rule.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/zscaler/pulumi-zia/sdk/go/zia/Firewall"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example1, err := Firewall.GetFirewallFilteringNetworkServices(ctx, &firewall.GetFirewallFilteringNetworkServicesArgs{
//				Name: pulumi.StringRef("FTP"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			example2, err := Firewall.GetFirewallFilteringNetworkServices(ctx, &firewall.GetFirewallFilteringNetworkServicesArgs{
//				Name: pulumi.StringRef("NETBIOS"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			example3, err := Firewall.GetFirewallFilteringNetworkServices(ctx, &firewall.GetFirewallFilteringNetworkServicesArgs{
//				Name: pulumi.StringRef("DNS"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = Firewall.NewFirewallFilteringServiceGroups(ctx, "example", &Firewall.FirewallFilteringServiceGroupsArgs{
//				Description: pulumi.String("example"),
//				Services: firewall.FirewallFilteringServiceGroupsServiceArray{
//					&firewall.FirewallFilteringServiceGroupsServiceArgs{
//						Ids: pulumi.IntArray{
//							*pulumi.Int(example1.Id),
//							*pulumi.Int(example2.Id),
//							*pulumi.Int(example3.Id),
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type FirewallFilteringServiceGroups struct {
	pulumi.CustomResourceState

	// Description of the network services group
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Name of the network service group
	Name                  pulumi.StringOutput `pulumi:"name"`
	NetworkServiceGroupId pulumi.IntOutput    `pulumi:"networkServiceGroupId"`
	// Any number of network services ID to be added to the group
	Services FirewallFilteringServiceGroupsServiceArrayOutput `pulumi:"services"`
}

// NewFirewallFilteringServiceGroups registers a new resource with the given unique name, arguments, and options.
func NewFirewallFilteringServiceGroups(ctx *pulumi.Context,
	name string, args *FirewallFilteringServiceGroupsArgs, opts ...pulumi.ResourceOption) (*FirewallFilteringServiceGroups, error) {
	if args == nil {
		args = &FirewallFilteringServiceGroupsArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource FirewallFilteringServiceGroups
	err := ctx.RegisterResource("zia:Firewall/firewallFilteringServiceGroups:FirewallFilteringServiceGroups", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallFilteringServiceGroups gets an existing FirewallFilteringServiceGroups resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallFilteringServiceGroups(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallFilteringServiceGroupsState, opts ...pulumi.ResourceOption) (*FirewallFilteringServiceGroups, error) {
	var resource FirewallFilteringServiceGroups
	err := ctx.ReadResource("zia:Firewall/firewallFilteringServiceGroups:FirewallFilteringServiceGroups", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallFilteringServiceGroups resources.
type firewallFilteringServiceGroupsState struct {
	// Description of the network services group
	Description *string `pulumi:"description"`
	// Name of the network service group
	Name                  *string `pulumi:"name"`
	NetworkServiceGroupId *int    `pulumi:"networkServiceGroupId"`
	// Any number of network services ID to be added to the group
	Services []FirewallFilteringServiceGroupsService `pulumi:"services"`
}

type FirewallFilteringServiceGroupsState struct {
	// Description of the network services group
	Description pulumi.StringPtrInput
	// Name of the network service group
	Name                  pulumi.StringPtrInput
	NetworkServiceGroupId pulumi.IntPtrInput
	// Any number of network services ID to be added to the group
	Services FirewallFilteringServiceGroupsServiceArrayInput
}

func (FirewallFilteringServiceGroupsState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallFilteringServiceGroupsState)(nil)).Elem()
}

type firewallFilteringServiceGroupsArgs struct {
	// Description of the network services group
	Description *string `pulumi:"description"`
	// Name of the network service group
	Name *string `pulumi:"name"`
	// Any number of network services ID to be added to the group
	Services []FirewallFilteringServiceGroupsService `pulumi:"services"`
}

// The set of arguments for constructing a FirewallFilteringServiceGroups resource.
type FirewallFilteringServiceGroupsArgs struct {
	// Description of the network services group
	Description pulumi.StringPtrInput
	// Name of the network service group
	Name pulumi.StringPtrInput
	// Any number of network services ID to be added to the group
	Services FirewallFilteringServiceGroupsServiceArrayInput
}

func (FirewallFilteringServiceGroupsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallFilteringServiceGroupsArgs)(nil)).Elem()
}

type FirewallFilteringServiceGroupsInput interface {
	pulumi.Input

	ToFirewallFilteringServiceGroupsOutput() FirewallFilteringServiceGroupsOutput
	ToFirewallFilteringServiceGroupsOutputWithContext(ctx context.Context) FirewallFilteringServiceGroupsOutput
}

func (*FirewallFilteringServiceGroups) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallFilteringServiceGroups)(nil)).Elem()
}

func (i *FirewallFilteringServiceGroups) ToFirewallFilteringServiceGroupsOutput() FirewallFilteringServiceGroupsOutput {
	return i.ToFirewallFilteringServiceGroupsOutputWithContext(context.Background())
}

func (i *FirewallFilteringServiceGroups) ToFirewallFilteringServiceGroupsOutputWithContext(ctx context.Context) FirewallFilteringServiceGroupsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallFilteringServiceGroupsOutput)
}

// FirewallFilteringServiceGroupsArrayInput is an input type that accepts FirewallFilteringServiceGroupsArray and FirewallFilteringServiceGroupsArrayOutput values.
// You can construct a concrete instance of `FirewallFilteringServiceGroupsArrayInput` via:
//
//	FirewallFilteringServiceGroupsArray{ FirewallFilteringServiceGroupsArgs{...} }
type FirewallFilteringServiceGroupsArrayInput interface {
	pulumi.Input

	ToFirewallFilteringServiceGroupsArrayOutput() FirewallFilteringServiceGroupsArrayOutput
	ToFirewallFilteringServiceGroupsArrayOutputWithContext(context.Context) FirewallFilteringServiceGroupsArrayOutput
}

type FirewallFilteringServiceGroupsArray []FirewallFilteringServiceGroupsInput

func (FirewallFilteringServiceGroupsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallFilteringServiceGroups)(nil)).Elem()
}

func (i FirewallFilteringServiceGroupsArray) ToFirewallFilteringServiceGroupsArrayOutput() FirewallFilteringServiceGroupsArrayOutput {
	return i.ToFirewallFilteringServiceGroupsArrayOutputWithContext(context.Background())
}

func (i FirewallFilteringServiceGroupsArray) ToFirewallFilteringServiceGroupsArrayOutputWithContext(ctx context.Context) FirewallFilteringServiceGroupsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallFilteringServiceGroupsArrayOutput)
}

// FirewallFilteringServiceGroupsMapInput is an input type that accepts FirewallFilteringServiceGroupsMap and FirewallFilteringServiceGroupsMapOutput values.
// You can construct a concrete instance of `FirewallFilteringServiceGroupsMapInput` via:
//
//	FirewallFilteringServiceGroupsMap{ "key": FirewallFilteringServiceGroupsArgs{...} }
type FirewallFilteringServiceGroupsMapInput interface {
	pulumi.Input

	ToFirewallFilteringServiceGroupsMapOutput() FirewallFilteringServiceGroupsMapOutput
	ToFirewallFilteringServiceGroupsMapOutputWithContext(context.Context) FirewallFilteringServiceGroupsMapOutput
}

type FirewallFilteringServiceGroupsMap map[string]FirewallFilteringServiceGroupsInput

func (FirewallFilteringServiceGroupsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallFilteringServiceGroups)(nil)).Elem()
}

func (i FirewallFilteringServiceGroupsMap) ToFirewallFilteringServiceGroupsMapOutput() FirewallFilteringServiceGroupsMapOutput {
	return i.ToFirewallFilteringServiceGroupsMapOutputWithContext(context.Background())
}

func (i FirewallFilteringServiceGroupsMap) ToFirewallFilteringServiceGroupsMapOutputWithContext(ctx context.Context) FirewallFilteringServiceGroupsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallFilteringServiceGroupsMapOutput)
}

type FirewallFilteringServiceGroupsOutput struct{ *pulumi.OutputState }

func (FirewallFilteringServiceGroupsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallFilteringServiceGroups)(nil)).Elem()
}

func (o FirewallFilteringServiceGroupsOutput) ToFirewallFilteringServiceGroupsOutput() FirewallFilteringServiceGroupsOutput {
	return o
}

func (o FirewallFilteringServiceGroupsOutput) ToFirewallFilteringServiceGroupsOutputWithContext(ctx context.Context) FirewallFilteringServiceGroupsOutput {
	return o
}

// Description of the network services group
func (o FirewallFilteringServiceGroupsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallFilteringServiceGroups) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Name of the network service group
func (o FirewallFilteringServiceGroupsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallFilteringServiceGroups) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o FirewallFilteringServiceGroupsOutput) NetworkServiceGroupId() pulumi.IntOutput {
	return o.ApplyT(func(v *FirewallFilteringServiceGroups) pulumi.IntOutput { return v.NetworkServiceGroupId }).(pulumi.IntOutput)
}

// Any number of network services ID to be added to the group
func (o FirewallFilteringServiceGroupsOutput) Services() FirewallFilteringServiceGroupsServiceArrayOutput {
	return o.ApplyT(func(v *FirewallFilteringServiceGroups) FirewallFilteringServiceGroupsServiceArrayOutput {
		return v.Services
	}).(FirewallFilteringServiceGroupsServiceArrayOutput)
}

type FirewallFilteringServiceGroupsArrayOutput struct{ *pulumi.OutputState }

func (FirewallFilteringServiceGroupsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallFilteringServiceGroups)(nil)).Elem()
}

func (o FirewallFilteringServiceGroupsArrayOutput) ToFirewallFilteringServiceGroupsArrayOutput() FirewallFilteringServiceGroupsArrayOutput {
	return o
}

func (o FirewallFilteringServiceGroupsArrayOutput) ToFirewallFilteringServiceGroupsArrayOutputWithContext(ctx context.Context) FirewallFilteringServiceGroupsArrayOutput {
	return o
}

func (o FirewallFilteringServiceGroupsArrayOutput) Index(i pulumi.IntInput) FirewallFilteringServiceGroupsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirewallFilteringServiceGroups {
		return vs[0].([]*FirewallFilteringServiceGroups)[vs[1].(int)]
	}).(FirewallFilteringServiceGroupsOutput)
}

type FirewallFilteringServiceGroupsMapOutput struct{ *pulumi.OutputState }

func (FirewallFilteringServiceGroupsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallFilteringServiceGroups)(nil)).Elem()
}

func (o FirewallFilteringServiceGroupsMapOutput) ToFirewallFilteringServiceGroupsMapOutput() FirewallFilteringServiceGroupsMapOutput {
	return o
}

func (o FirewallFilteringServiceGroupsMapOutput) ToFirewallFilteringServiceGroupsMapOutputWithContext(ctx context.Context) FirewallFilteringServiceGroupsMapOutput {
	return o
}

func (o FirewallFilteringServiceGroupsMapOutput) MapIndex(k pulumi.StringInput) FirewallFilteringServiceGroupsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirewallFilteringServiceGroups {
		return vs[0].(map[string]*FirewallFilteringServiceGroups)[vs[1].(string)]
	}).(FirewallFilteringServiceGroupsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallFilteringServiceGroupsInput)(nil)).Elem(), &FirewallFilteringServiceGroups{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallFilteringServiceGroupsArrayInput)(nil)).Elem(), FirewallFilteringServiceGroupsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallFilteringServiceGroupsMapInput)(nil)).Elem(), FirewallFilteringServiceGroupsMap{})
	pulumi.RegisterOutputType(FirewallFilteringServiceGroupsOutput{})
	pulumi.RegisterOutputType(FirewallFilteringServiceGroupsArrayOutput{})
	pulumi.RegisterOutputType(FirewallFilteringServiceGroupsMapOutput{})
}
