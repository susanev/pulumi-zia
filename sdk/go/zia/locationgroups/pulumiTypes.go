// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package locationgroups

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GetLocationGroupsDynamicLocationGroupCriteria struct {
	// (Block List)
	Cities []GetLocationGroupsDynamicLocationGroupCriteriaCity `pulumi:"cities"`
	// (List of String) One or more countries from a predefined set
	Countries []string `pulumi:"countries"`
	// (Boolean) Enable Bandwidth Control. When set to true, Bandwidth Control is enabled for the location.
	EnableBandwidthControl bool `pulumi:"enableBandwidthControl"`
	// (Boolean) Enable Caution. When set to true, a caution notifcation is enabled for the location.
	EnableCaution bool `pulumi:"enableCaution"`
	// (Boolean) Enable `XFF` Forwarding. When set to true, traffic is passed to Zscaler Cloud via the X-Forwarded-For (XFF) header.
	EnableXffForwarding bool `pulumi:"enableXffForwarding"`
	// (Boolean) Enable AUP. When set to true, AUP is enabled for the location.
	EnforceAup bool `pulumi:"enforceAup"`
	// (Boolean) Enforce Authentication. Required when ports are enabled, IP Surrogate is enabled, or Kerberos Authentication is enabled.
	EnforceAuthentication bool `pulumi:"enforceAuthentication"`
	// (Boolean) Enable Firewall. When set to true, Firewall is enabled for the location.
	EnforceFirewallControl bool `pulumi:"enforceFirewallControl"`
	// (Block List)
	ManagedBies []GetLocationGroupsDynamicLocationGroupCriteriaManagedBy `pulumi:"managedBies"`
	// Location group name
	Names []GetLocationGroupsDynamicLocationGroupCriteriaName `pulumi:"names"`
	// (List of String) One or more location profiles from a predefined set
	Profiles []string `pulumi:"profiles"`
}

// GetLocationGroupsDynamicLocationGroupCriteriaInput is an input type that accepts GetLocationGroupsDynamicLocationGroupCriteriaArgs and GetLocationGroupsDynamicLocationGroupCriteriaOutput values.
// You can construct a concrete instance of `GetLocationGroupsDynamicLocationGroupCriteriaInput` via:
//
//	GetLocationGroupsDynamicLocationGroupCriteriaArgs{...}
type GetLocationGroupsDynamicLocationGroupCriteriaInput interface {
	pulumi.Input

	ToGetLocationGroupsDynamicLocationGroupCriteriaOutput() GetLocationGroupsDynamicLocationGroupCriteriaOutput
	ToGetLocationGroupsDynamicLocationGroupCriteriaOutputWithContext(context.Context) GetLocationGroupsDynamicLocationGroupCriteriaOutput
}

type GetLocationGroupsDynamicLocationGroupCriteriaArgs struct {
	// (Block List)
	Cities GetLocationGroupsDynamicLocationGroupCriteriaCityArrayInput `pulumi:"cities"`
	// (List of String) One or more countries from a predefined set
	Countries pulumi.StringArrayInput `pulumi:"countries"`
	// (Boolean) Enable Bandwidth Control. When set to true, Bandwidth Control is enabled for the location.
	EnableBandwidthControl pulumi.BoolInput `pulumi:"enableBandwidthControl"`
	// (Boolean) Enable Caution. When set to true, a caution notifcation is enabled for the location.
	EnableCaution pulumi.BoolInput `pulumi:"enableCaution"`
	// (Boolean) Enable `XFF` Forwarding. When set to true, traffic is passed to Zscaler Cloud via the X-Forwarded-For (XFF) header.
	EnableXffForwarding pulumi.BoolInput `pulumi:"enableXffForwarding"`
	// (Boolean) Enable AUP. When set to true, AUP is enabled for the location.
	EnforceAup pulumi.BoolInput `pulumi:"enforceAup"`
	// (Boolean) Enforce Authentication. Required when ports are enabled, IP Surrogate is enabled, or Kerberos Authentication is enabled.
	EnforceAuthentication pulumi.BoolInput `pulumi:"enforceAuthentication"`
	// (Boolean) Enable Firewall. When set to true, Firewall is enabled for the location.
	EnforceFirewallControl pulumi.BoolInput `pulumi:"enforceFirewallControl"`
	// (Block List)
	ManagedBies GetLocationGroupsDynamicLocationGroupCriteriaManagedByArrayInput `pulumi:"managedBies"`
	// Location group name
	Names GetLocationGroupsDynamicLocationGroupCriteriaNameArrayInput `pulumi:"names"`
	// (List of String) One or more location profiles from a predefined set
	Profiles pulumi.StringArrayInput `pulumi:"profiles"`
}

func (GetLocationGroupsDynamicLocationGroupCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocationGroupsDynamicLocationGroupCriteria)(nil)).Elem()
}

func (i GetLocationGroupsDynamicLocationGroupCriteriaArgs) ToGetLocationGroupsDynamicLocationGroupCriteriaOutput() GetLocationGroupsDynamicLocationGroupCriteriaOutput {
	return i.ToGetLocationGroupsDynamicLocationGroupCriteriaOutputWithContext(context.Background())
}

func (i GetLocationGroupsDynamicLocationGroupCriteriaArgs) ToGetLocationGroupsDynamicLocationGroupCriteriaOutputWithContext(ctx context.Context) GetLocationGroupsDynamicLocationGroupCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocationGroupsDynamicLocationGroupCriteriaOutput)
}

// GetLocationGroupsDynamicLocationGroupCriteriaArrayInput is an input type that accepts GetLocationGroupsDynamicLocationGroupCriteriaArray and GetLocationGroupsDynamicLocationGroupCriteriaArrayOutput values.
// You can construct a concrete instance of `GetLocationGroupsDynamicLocationGroupCriteriaArrayInput` via:
//
//	GetLocationGroupsDynamicLocationGroupCriteriaArray{ GetLocationGroupsDynamicLocationGroupCriteriaArgs{...} }
type GetLocationGroupsDynamicLocationGroupCriteriaArrayInput interface {
	pulumi.Input

	ToGetLocationGroupsDynamicLocationGroupCriteriaArrayOutput() GetLocationGroupsDynamicLocationGroupCriteriaArrayOutput
	ToGetLocationGroupsDynamicLocationGroupCriteriaArrayOutputWithContext(context.Context) GetLocationGroupsDynamicLocationGroupCriteriaArrayOutput
}

type GetLocationGroupsDynamicLocationGroupCriteriaArray []GetLocationGroupsDynamicLocationGroupCriteriaInput

func (GetLocationGroupsDynamicLocationGroupCriteriaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLocationGroupsDynamicLocationGroupCriteria)(nil)).Elem()
}

func (i GetLocationGroupsDynamicLocationGroupCriteriaArray) ToGetLocationGroupsDynamicLocationGroupCriteriaArrayOutput() GetLocationGroupsDynamicLocationGroupCriteriaArrayOutput {
	return i.ToGetLocationGroupsDynamicLocationGroupCriteriaArrayOutputWithContext(context.Background())
}

func (i GetLocationGroupsDynamicLocationGroupCriteriaArray) ToGetLocationGroupsDynamicLocationGroupCriteriaArrayOutputWithContext(ctx context.Context) GetLocationGroupsDynamicLocationGroupCriteriaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocationGroupsDynamicLocationGroupCriteriaArrayOutput)
}

type GetLocationGroupsDynamicLocationGroupCriteriaOutput struct{ *pulumi.OutputState }

func (GetLocationGroupsDynamicLocationGroupCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocationGroupsDynamicLocationGroupCriteria)(nil)).Elem()
}

func (o GetLocationGroupsDynamicLocationGroupCriteriaOutput) ToGetLocationGroupsDynamicLocationGroupCriteriaOutput() GetLocationGroupsDynamicLocationGroupCriteriaOutput {
	return o
}

func (o GetLocationGroupsDynamicLocationGroupCriteriaOutput) ToGetLocationGroupsDynamicLocationGroupCriteriaOutputWithContext(ctx context.Context) GetLocationGroupsDynamicLocationGroupCriteriaOutput {
	return o
}

// (Block List)
func (o GetLocationGroupsDynamicLocationGroupCriteriaOutput) Cities() GetLocationGroupsDynamicLocationGroupCriteriaCityArrayOutput {
	return o.ApplyT(func(v GetLocationGroupsDynamicLocationGroupCriteria) []GetLocationGroupsDynamicLocationGroupCriteriaCity {
		return v.Cities
	}).(GetLocationGroupsDynamicLocationGroupCriteriaCityArrayOutput)
}

// (List of String) One or more countries from a predefined set
func (o GetLocationGroupsDynamicLocationGroupCriteriaOutput) Countries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLocationGroupsDynamicLocationGroupCriteria) []string { return v.Countries }).(pulumi.StringArrayOutput)
}

// (Boolean) Enable Bandwidth Control. When set to true, Bandwidth Control is enabled for the location.
func (o GetLocationGroupsDynamicLocationGroupCriteriaOutput) EnableBandwidthControl() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLocationGroupsDynamicLocationGroupCriteria) bool { return v.EnableBandwidthControl }).(pulumi.BoolOutput)
}

// (Boolean) Enable Caution. When set to true, a caution notifcation is enabled for the location.
func (o GetLocationGroupsDynamicLocationGroupCriteriaOutput) EnableCaution() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLocationGroupsDynamicLocationGroupCriteria) bool { return v.EnableCaution }).(pulumi.BoolOutput)
}

// (Boolean) Enable `XFF` Forwarding. When set to true, traffic is passed to Zscaler Cloud via the X-Forwarded-For (XFF) header.
func (o GetLocationGroupsDynamicLocationGroupCriteriaOutput) EnableXffForwarding() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLocationGroupsDynamicLocationGroupCriteria) bool { return v.EnableXffForwarding }).(pulumi.BoolOutput)
}

// (Boolean) Enable AUP. When set to true, AUP is enabled for the location.
func (o GetLocationGroupsDynamicLocationGroupCriteriaOutput) EnforceAup() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLocationGroupsDynamicLocationGroupCriteria) bool { return v.EnforceAup }).(pulumi.BoolOutput)
}

// (Boolean) Enforce Authentication. Required when ports are enabled, IP Surrogate is enabled, or Kerberos Authentication is enabled.
func (o GetLocationGroupsDynamicLocationGroupCriteriaOutput) EnforceAuthentication() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLocationGroupsDynamicLocationGroupCriteria) bool { return v.EnforceAuthentication }).(pulumi.BoolOutput)
}

// (Boolean) Enable Firewall. When set to true, Firewall is enabled for the location.
func (o GetLocationGroupsDynamicLocationGroupCriteriaOutput) EnforceFirewallControl() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLocationGroupsDynamicLocationGroupCriteria) bool { return v.EnforceFirewallControl }).(pulumi.BoolOutput)
}

// (Block List)
func (o GetLocationGroupsDynamicLocationGroupCriteriaOutput) ManagedBies() GetLocationGroupsDynamicLocationGroupCriteriaManagedByArrayOutput {
	return o.ApplyT(func(v GetLocationGroupsDynamicLocationGroupCriteria) []GetLocationGroupsDynamicLocationGroupCriteriaManagedBy {
		return v.ManagedBies
	}).(GetLocationGroupsDynamicLocationGroupCriteriaManagedByArrayOutput)
}

// Location group name
func (o GetLocationGroupsDynamicLocationGroupCriteriaOutput) Names() GetLocationGroupsDynamicLocationGroupCriteriaNameArrayOutput {
	return o.ApplyT(func(v GetLocationGroupsDynamicLocationGroupCriteria) []GetLocationGroupsDynamicLocationGroupCriteriaName {
		return v.Names
	}).(GetLocationGroupsDynamicLocationGroupCriteriaNameArrayOutput)
}

// (List of String) One or more location profiles from a predefined set
func (o GetLocationGroupsDynamicLocationGroupCriteriaOutput) Profiles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLocationGroupsDynamicLocationGroupCriteria) []string { return v.Profiles }).(pulumi.StringArrayOutput)
}

type GetLocationGroupsDynamicLocationGroupCriteriaArrayOutput struct{ *pulumi.OutputState }

func (GetLocationGroupsDynamicLocationGroupCriteriaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLocationGroupsDynamicLocationGroupCriteria)(nil)).Elem()
}

func (o GetLocationGroupsDynamicLocationGroupCriteriaArrayOutput) ToGetLocationGroupsDynamicLocationGroupCriteriaArrayOutput() GetLocationGroupsDynamicLocationGroupCriteriaArrayOutput {
	return o
}

func (o GetLocationGroupsDynamicLocationGroupCriteriaArrayOutput) ToGetLocationGroupsDynamicLocationGroupCriteriaArrayOutputWithContext(ctx context.Context) GetLocationGroupsDynamicLocationGroupCriteriaArrayOutput {
	return o
}

func (o GetLocationGroupsDynamicLocationGroupCriteriaArrayOutput) Index(i pulumi.IntInput) GetLocationGroupsDynamicLocationGroupCriteriaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLocationGroupsDynamicLocationGroupCriteria {
		return vs[0].([]GetLocationGroupsDynamicLocationGroupCriteria)[vs[1].(int)]
	}).(GetLocationGroupsDynamicLocationGroupCriteriaOutput)
}

type GetLocationGroupsDynamicLocationGroupCriteriaCity struct {
	// (String) String value to be matched or partially matched
	MatchString *string `pulumi:"matchString"`
	// (String) Operator that performs match action
	MatchType *string `pulumi:"matchType"`
}

// GetLocationGroupsDynamicLocationGroupCriteriaCityInput is an input type that accepts GetLocationGroupsDynamicLocationGroupCriteriaCityArgs and GetLocationGroupsDynamicLocationGroupCriteriaCityOutput values.
// You can construct a concrete instance of `GetLocationGroupsDynamicLocationGroupCriteriaCityInput` via:
//
//	GetLocationGroupsDynamicLocationGroupCriteriaCityArgs{...}
type GetLocationGroupsDynamicLocationGroupCriteriaCityInput interface {
	pulumi.Input

	ToGetLocationGroupsDynamicLocationGroupCriteriaCityOutput() GetLocationGroupsDynamicLocationGroupCriteriaCityOutput
	ToGetLocationGroupsDynamicLocationGroupCriteriaCityOutputWithContext(context.Context) GetLocationGroupsDynamicLocationGroupCriteriaCityOutput
}

type GetLocationGroupsDynamicLocationGroupCriteriaCityArgs struct {
	// (String) String value to be matched or partially matched
	MatchString pulumi.StringPtrInput `pulumi:"matchString"`
	// (String) Operator that performs match action
	MatchType pulumi.StringPtrInput `pulumi:"matchType"`
}

func (GetLocationGroupsDynamicLocationGroupCriteriaCityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocationGroupsDynamicLocationGroupCriteriaCity)(nil)).Elem()
}

func (i GetLocationGroupsDynamicLocationGroupCriteriaCityArgs) ToGetLocationGroupsDynamicLocationGroupCriteriaCityOutput() GetLocationGroupsDynamicLocationGroupCriteriaCityOutput {
	return i.ToGetLocationGroupsDynamicLocationGroupCriteriaCityOutputWithContext(context.Background())
}

func (i GetLocationGroupsDynamicLocationGroupCriteriaCityArgs) ToGetLocationGroupsDynamicLocationGroupCriteriaCityOutputWithContext(ctx context.Context) GetLocationGroupsDynamicLocationGroupCriteriaCityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocationGroupsDynamicLocationGroupCriteriaCityOutput)
}

// GetLocationGroupsDynamicLocationGroupCriteriaCityArrayInput is an input type that accepts GetLocationGroupsDynamicLocationGroupCriteriaCityArray and GetLocationGroupsDynamicLocationGroupCriteriaCityArrayOutput values.
// You can construct a concrete instance of `GetLocationGroupsDynamicLocationGroupCriteriaCityArrayInput` via:
//
//	GetLocationGroupsDynamicLocationGroupCriteriaCityArray{ GetLocationGroupsDynamicLocationGroupCriteriaCityArgs{...} }
type GetLocationGroupsDynamicLocationGroupCriteriaCityArrayInput interface {
	pulumi.Input

	ToGetLocationGroupsDynamicLocationGroupCriteriaCityArrayOutput() GetLocationGroupsDynamicLocationGroupCriteriaCityArrayOutput
	ToGetLocationGroupsDynamicLocationGroupCriteriaCityArrayOutputWithContext(context.Context) GetLocationGroupsDynamicLocationGroupCriteriaCityArrayOutput
}

type GetLocationGroupsDynamicLocationGroupCriteriaCityArray []GetLocationGroupsDynamicLocationGroupCriteriaCityInput

func (GetLocationGroupsDynamicLocationGroupCriteriaCityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLocationGroupsDynamicLocationGroupCriteriaCity)(nil)).Elem()
}

func (i GetLocationGroupsDynamicLocationGroupCriteriaCityArray) ToGetLocationGroupsDynamicLocationGroupCriteriaCityArrayOutput() GetLocationGroupsDynamicLocationGroupCriteriaCityArrayOutput {
	return i.ToGetLocationGroupsDynamicLocationGroupCriteriaCityArrayOutputWithContext(context.Background())
}

func (i GetLocationGroupsDynamicLocationGroupCriteriaCityArray) ToGetLocationGroupsDynamicLocationGroupCriteriaCityArrayOutputWithContext(ctx context.Context) GetLocationGroupsDynamicLocationGroupCriteriaCityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocationGroupsDynamicLocationGroupCriteriaCityArrayOutput)
}

type GetLocationGroupsDynamicLocationGroupCriteriaCityOutput struct{ *pulumi.OutputState }

func (GetLocationGroupsDynamicLocationGroupCriteriaCityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocationGroupsDynamicLocationGroupCriteriaCity)(nil)).Elem()
}

func (o GetLocationGroupsDynamicLocationGroupCriteriaCityOutput) ToGetLocationGroupsDynamicLocationGroupCriteriaCityOutput() GetLocationGroupsDynamicLocationGroupCriteriaCityOutput {
	return o
}

func (o GetLocationGroupsDynamicLocationGroupCriteriaCityOutput) ToGetLocationGroupsDynamicLocationGroupCriteriaCityOutputWithContext(ctx context.Context) GetLocationGroupsDynamicLocationGroupCriteriaCityOutput {
	return o
}

// (String) String value to be matched or partially matched
func (o GetLocationGroupsDynamicLocationGroupCriteriaCityOutput) MatchString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLocationGroupsDynamicLocationGroupCriteriaCity) *string { return v.MatchString }).(pulumi.StringPtrOutput)
}

// (String) Operator that performs match action
func (o GetLocationGroupsDynamicLocationGroupCriteriaCityOutput) MatchType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLocationGroupsDynamicLocationGroupCriteriaCity) *string { return v.MatchType }).(pulumi.StringPtrOutput)
}

type GetLocationGroupsDynamicLocationGroupCriteriaCityArrayOutput struct{ *pulumi.OutputState }

func (GetLocationGroupsDynamicLocationGroupCriteriaCityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLocationGroupsDynamicLocationGroupCriteriaCity)(nil)).Elem()
}

func (o GetLocationGroupsDynamicLocationGroupCriteriaCityArrayOutput) ToGetLocationGroupsDynamicLocationGroupCriteriaCityArrayOutput() GetLocationGroupsDynamicLocationGroupCriteriaCityArrayOutput {
	return o
}

func (o GetLocationGroupsDynamicLocationGroupCriteriaCityArrayOutput) ToGetLocationGroupsDynamicLocationGroupCriteriaCityArrayOutputWithContext(ctx context.Context) GetLocationGroupsDynamicLocationGroupCriteriaCityArrayOutput {
	return o
}

func (o GetLocationGroupsDynamicLocationGroupCriteriaCityArrayOutput) Index(i pulumi.IntInput) GetLocationGroupsDynamicLocationGroupCriteriaCityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLocationGroupsDynamicLocationGroupCriteriaCity {
		return vs[0].([]GetLocationGroupsDynamicLocationGroupCriteriaCity)[vs[1].(int)]
	}).(GetLocationGroupsDynamicLocationGroupCriteriaCityOutput)
}

type GetLocationGroupsDynamicLocationGroupCriteriaManagedBy struct {
	// (Map of String)
	Extensions map[string]string `pulumi:"extensions"`
	// Unique identifier for the location group
	Id int `pulumi:"id"`
	// Location group name
	Name string `pulumi:"name"`
}

// GetLocationGroupsDynamicLocationGroupCriteriaManagedByInput is an input type that accepts GetLocationGroupsDynamicLocationGroupCriteriaManagedByArgs and GetLocationGroupsDynamicLocationGroupCriteriaManagedByOutput values.
// You can construct a concrete instance of `GetLocationGroupsDynamicLocationGroupCriteriaManagedByInput` via:
//
//	GetLocationGroupsDynamicLocationGroupCriteriaManagedByArgs{...}
type GetLocationGroupsDynamicLocationGroupCriteriaManagedByInput interface {
	pulumi.Input

	ToGetLocationGroupsDynamicLocationGroupCriteriaManagedByOutput() GetLocationGroupsDynamicLocationGroupCriteriaManagedByOutput
	ToGetLocationGroupsDynamicLocationGroupCriteriaManagedByOutputWithContext(context.Context) GetLocationGroupsDynamicLocationGroupCriteriaManagedByOutput
}

type GetLocationGroupsDynamicLocationGroupCriteriaManagedByArgs struct {
	// (Map of String)
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// Unique identifier for the location group
	Id pulumi.IntInput `pulumi:"id"`
	// Location group name
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetLocationGroupsDynamicLocationGroupCriteriaManagedByArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocationGroupsDynamicLocationGroupCriteriaManagedBy)(nil)).Elem()
}

func (i GetLocationGroupsDynamicLocationGroupCriteriaManagedByArgs) ToGetLocationGroupsDynamicLocationGroupCriteriaManagedByOutput() GetLocationGroupsDynamicLocationGroupCriteriaManagedByOutput {
	return i.ToGetLocationGroupsDynamicLocationGroupCriteriaManagedByOutputWithContext(context.Background())
}

func (i GetLocationGroupsDynamicLocationGroupCriteriaManagedByArgs) ToGetLocationGroupsDynamicLocationGroupCriteriaManagedByOutputWithContext(ctx context.Context) GetLocationGroupsDynamicLocationGroupCriteriaManagedByOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocationGroupsDynamicLocationGroupCriteriaManagedByOutput)
}

// GetLocationGroupsDynamicLocationGroupCriteriaManagedByArrayInput is an input type that accepts GetLocationGroupsDynamicLocationGroupCriteriaManagedByArray and GetLocationGroupsDynamicLocationGroupCriteriaManagedByArrayOutput values.
// You can construct a concrete instance of `GetLocationGroupsDynamicLocationGroupCriteriaManagedByArrayInput` via:
//
//	GetLocationGroupsDynamicLocationGroupCriteriaManagedByArray{ GetLocationGroupsDynamicLocationGroupCriteriaManagedByArgs{...} }
type GetLocationGroupsDynamicLocationGroupCriteriaManagedByArrayInput interface {
	pulumi.Input

	ToGetLocationGroupsDynamicLocationGroupCriteriaManagedByArrayOutput() GetLocationGroupsDynamicLocationGroupCriteriaManagedByArrayOutput
	ToGetLocationGroupsDynamicLocationGroupCriteriaManagedByArrayOutputWithContext(context.Context) GetLocationGroupsDynamicLocationGroupCriteriaManagedByArrayOutput
}

type GetLocationGroupsDynamicLocationGroupCriteriaManagedByArray []GetLocationGroupsDynamicLocationGroupCriteriaManagedByInput

func (GetLocationGroupsDynamicLocationGroupCriteriaManagedByArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLocationGroupsDynamicLocationGroupCriteriaManagedBy)(nil)).Elem()
}

func (i GetLocationGroupsDynamicLocationGroupCriteriaManagedByArray) ToGetLocationGroupsDynamicLocationGroupCriteriaManagedByArrayOutput() GetLocationGroupsDynamicLocationGroupCriteriaManagedByArrayOutput {
	return i.ToGetLocationGroupsDynamicLocationGroupCriteriaManagedByArrayOutputWithContext(context.Background())
}

func (i GetLocationGroupsDynamicLocationGroupCriteriaManagedByArray) ToGetLocationGroupsDynamicLocationGroupCriteriaManagedByArrayOutputWithContext(ctx context.Context) GetLocationGroupsDynamicLocationGroupCriteriaManagedByArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocationGroupsDynamicLocationGroupCriteriaManagedByArrayOutput)
}

type GetLocationGroupsDynamicLocationGroupCriteriaManagedByOutput struct{ *pulumi.OutputState }

func (GetLocationGroupsDynamicLocationGroupCriteriaManagedByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocationGroupsDynamicLocationGroupCriteriaManagedBy)(nil)).Elem()
}

func (o GetLocationGroupsDynamicLocationGroupCriteriaManagedByOutput) ToGetLocationGroupsDynamicLocationGroupCriteriaManagedByOutput() GetLocationGroupsDynamicLocationGroupCriteriaManagedByOutput {
	return o
}

func (o GetLocationGroupsDynamicLocationGroupCriteriaManagedByOutput) ToGetLocationGroupsDynamicLocationGroupCriteriaManagedByOutputWithContext(ctx context.Context) GetLocationGroupsDynamicLocationGroupCriteriaManagedByOutput {
	return o
}

// (Map of String)
func (o GetLocationGroupsDynamicLocationGroupCriteriaManagedByOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetLocationGroupsDynamicLocationGroupCriteriaManagedBy) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// Unique identifier for the location group
func (o GetLocationGroupsDynamicLocationGroupCriteriaManagedByOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetLocationGroupsDynamicLocationGroupCriteriaManagedBy) int { return v.Id }).(pulumi.IntOutput)
}

// Location group name
func (o GetLocationGroupsDynamicLocationGroupCriteriaManagedByOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLocationGroupsDynamicLocationGroupCriteriaManagedBy) string { return v.Name }).(pulumi.StringOutput)
}

type GetLocationGroupsDynamicLocationGroupCriteriaManagedByArrayOutput struct{ *pulumi.OutputState }

func (GetLocationGroupsDynamicLocationGroupCriteriaManagedByArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLocationGroupsDynamicLocationGroupCriteriaManagedBy)(nil)).Elem()
}

func (o GetLocationGroupsDynamicLocationGroupCriteriaManagedByArrayOutput) ToGetLocationGroupsDynamicLocationGroupCriteriaManagedByArrayOutput() GetLocationGroupsDynamicLocationGroupCriteriaManagedByArrayOutput {
	return o
}

func (o GetLocationGroupsDynamicLocationGroupCriteriaManagedByArrayOutput) ToGetLocationGroupsDynamicLocationGroupCriteriaManagedByArrayOutputWithContext(ctx context.Context) GetLocationGroupsDynamicLocationGroupCriteriaManagedByArrayOutput {
	return o
}

func (o GetLocationGroupsDynamicLocationGroupCriteriaManagedByArrayOutput) Index(i pulumi.IntInput) GetLocationGroupsDynamicLocationGroupCriteriaManagedByOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLocationGroupsDynamicLocationGroupCriteriaManagedBy {
		return vs[0].([]GetLocationGroupsDynamicLocationGroupCriteriaManagedBy)[vs[1].(int)]
	}).(GetLocationGroupsDynamicLocationGroupCriteriaManagedByOutput)
}

type GetLocationGroupsDynamicLocationGroupCriteriaName struct {
	// (String) String value to be matched or partially matched
	MatchString *string `pulumi:"matchString"`
	// (String) Operator that performs match action
	MatchType *string `pulumi:"matchType"`
}

// GetLocationGroupsDynamicLocationGroupCriteriaNameInput is an input type that accepts GetLocationGroupsDynamicLocationGroupCriteriaNameArgs and GetLocationGroupsDynamicLocationGroupCriteriaNameOutput values.
// You can construct a concrete instance of `GetLocationGroupsDynamicLocationGroupCriteriaNameInput` via:
//
//	GetLocationGroupsDynamicLocationGroupCriteriaNameArgs{...}
type GetLocationGroupsDynamicLocationGroupCriteriaNameInput interface {
	pulumi.Input

	ToGetLocationGroupsDynamicLocationGroupCriteriaNameOutput() GetLocationGroupsDynamicLocationGroupCriteriaNameOutput
	ToGetLocationGroupsDynamicLocationGroupCriteriaNameOutputWithContext(context.Context) GetLocationGroupsDynamicLocationGroupCriteriaNameOutput
}

type GetLocationGroupsDynamicLocationGroupCriteriaNameArgs struct {
	// (String) String value to be matched or partially matched
	MatchString pulumi.StringPtrInput `pulumi:"matchString"`
	// (String) Operator that performs match action
	MatchType pulumi.StringPtrInput `pulumi:"matchType"`
}

func (GetLocationGroupsDynamicLocationGroupCriteriaNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocationGroupsDynamicLocationGroupCriteriaName)(nil)).Elem()
}

func (i GetLocationGroupsDynamicLocationGroupCriteriaNameArgs) ToGetLocationGroupsDynamicLocationGroupCriteriaNameOutput() GetLocationGroupsDynamicLocationGroupCriteriaNameOutput {
	return i.ToGetLocationGroupsDynamicLocationGroupCriteriaNameOutputWithContext(context.Background())
}

func (i GetLocationGroupsDynamicLocationGroupCriteriaNameArgs) ToGetLocationGroupsDynamicLocationGroupCriteriaNameOutputWithContext(ctx context.Context) GetLocationGroupsDynamicLocationGroupCriteriaNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocationGroupsDynamicLocationGroupCriteriaNameOutput)
}

// GetLocationGroupsDynamicLocationGroupCriteriaNameArrayInput is an input type that accepts GetLocationGroupsDynamicLocationGroupCriteriaNameArray and GetLocationGroupsDynamicLocationGroupCriteriaNameArrayOutput values.
// You can construct a concrete instance of `GetLocationGroupsDynamicLocationGroupCriteriaNameArrayInput` via:
//
//	GetLocationGroupsDynamicLocationGroupCriteriaNameArray{ GetLocationGroupsDynamicLocationGroupCriteriaNameArgs{...} }
type GetLocationGroupsDynamicLocationGroupCriteriaNameArrayInput interface {
	pulumi.Input

	ToGetLocationGroupsDynamicLocationGroupCriteriaNameArrayOutput() GetLocationGroupsDynamicLocationGroupCriteriaNameArrayOutput
	ToGetLocationGroupsDynamicLocationGroupCriteriaNameArrayOutputWithContext(context.Context) GetLocationGroupsDynamicLocationGroupCriteriaNameArrayOutput
}

type GetLocationGroupsDynamicLocationGroupCriteriaNameArray []GetLocationGroupsDynamicLocationGroupCriteriaNameInput

func (GetLocationGroupsDynamicLocationGroupCriteriaNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLocationGroupsDynamicLocationGroupCriteriaName)(nil)).Elem()
}

func (i GetLocationGroupsDynamicLocationGroupCriteriaNameArray) ToGetLocationGroupsDynamicLocationGroupCriteriaNameArrayOutput() GetLocationGroupsDynamicLocationGroupCriteriaNameArrayOutput {
	return i.ToGetLocationGroupsDynamicLocationGroupCriteriaNameArrayOutputWithContext(context.Background())
}

func (i GetLocationGroupsDynamicLocationGroupCriteriaNameArray) ToGetLocationGroupsDynamicLocationGroupCriteriaNameArrayOutputWithContext(ctx context.Context) GetLocationGroupsDynamicLocationGroupCriteriaNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocationGroupsDynamicLocationGroupCriteriaNameArrayOutput)
}

type GetLocationGroupsDynamicLocationGroupCriteriaNameOutput struct{ *pulumi.OutputState }

func (GetLocationGroupsDynamicLocationGroupCriteriaNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocationGroupsDynamicLocationGroupCriteriaName)(nil)).Elem()
}

func (o GetLocationGroupsDynamicLocationGroupCriteriaNameOutput) ToGetLocationGroupsDynamicLocationGroupCriteriaNameOutput() GetLocationGroupsDynamicLocationGroupCriteriaNameOutput {
	return o
}

func (o GetLocationGroupsDynamicLocationGroupCriteriaNameOutput) ToGetLocationGroupsDynamicLocationGroupCriteriaNameOutputWithContext(ctx context.Context) GetLocationGroupsDynamicLocationGroupCriteriaNameOutput {
	return o
}

// (String) String value to be matched or partially matched
func (o GetLocationGroupsDynamicLocationGroupCriteriaNameOutput) MatchString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLocationGroupsDynamicLocationGroupCriteriaName) *string { return v.MatchString }).(pulumi.StringPtrOutput)
}

// (String) Operator that performs match action
func (o GetLocationGroupsDynamicLocationGroupCriteriaNameOutput) MatchType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLocationGroupsDynamicLocationGroupCriteriaName) *string { return v.MatchType }).(pulumi.StringPtrOutput)
}

type GetLocationGroupsDynamicLocationGroupCriteriaNameArrayOutput struct{ *pulumi.OutputState }

func (GetLocationGroupsDynamicLocationGroupCriteriaNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLocationGroupsDynamicLocationGroupCriteriaName)(nil)).Elem()
}

func (o GetLocationGroupsDynamicLocationGroupCriteriaNameArrayOutput) ToGetLocationGroupsDynamicLocationGroupCriteriaNameArrayOutput() GetLocationGroupsDynamicLocationGroupCriteriaNameArrayOutput {
	return o
}

func (o GetLocationGroupsDynamicLocationGroupCriteriaNameArrayOutput) ToGetLocationGroupsDynamicLocationGroupCriteriaNameArrayOutputWithContext(ctx context.Context) GetLocationGroupsDynamicLocationGroupCriteriaNameArrayOutput {
	return o
}

func (o GetLocationGroupsDynamicLocationGroupCriteriaNameArrayOutput) Index(i pulumi.IntInput) GetLocationGroupsDynamicLocationGroupCriteriaNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLocationGroupsDynamicLocationGroupCriteriaName {
		return vs[0].([]GetLocationGroupsDynamicLocationGroupCriteriaName)[vs[1].(int)]
	}).(GetLocationGroupsDynamicLocationGroupCriteriaNameOutput)
}

type GetLocationGroupsLastModUser struct {
	// (Map of String)
	Extensions map[string]string `pulumi:"extensions"`
	// Unique identifier for the location group
	Id int `pulumi:"id"`
	// Location group name
	Name string `pulumi:"name"`
}

// GetLocationGroupsLastModUserInput is an input type that accepts GetLocationGroupsLastModUserArgs and GetLocationGroupsLastModUserOutput values.
// You can construct a concrete instance of `GetLocationGroupsLastModUserInput` via:
//
//	GetLocationGroupsLastModUserArgs{...}
type GetLocationGroupsLastModUserInput interface {
	pulumi.Input

	ToGetLocationGroupsLastModUserOutput() GetLocationGroupsLastModUserOutput
	ToGetLocationGroupsLastModUserOutputWithContext(context.Context) GetLocationGroupsLastModUserOutput
}

type GetLocationGroupsLastModUserArgs struct {
	// (Map of String)
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// Unique identifier for the location group
	Id pulumi.IntInput `pulumi:"id"`
	// Location group name
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetLocationGroupsLastModUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocationGroupsLastModUser)(nil)).Elem()
}

func (i GetLocationGroupsLastModUserArgs) ToGetLocationGroupsLastModUserOutput() GetLocationGroupsLastModUserOutput {
	return i.ToGetLocationGroupsLastModUserOutputWithContext(context.Background())
}

func (i GetLocationGroupsLastModUserArgs) ToGetLocationGroupsLastModUserOutputWithContext(ctx context.Context) GetLocationGroupsLastModUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocationGroupsLastModUserOutput)
}

// GetLocationGroupsLastModUserArrayInput is an input type that accepts GetLocationGroupsLastModUserArray and GetLocationGroupsLastModUserArrayOutput values.
// You can construct a concrete instance of `GetLocationGroupsLastModUserArrayInput` via:
//
//	GetLocationGroupsLastModUserArray{ GetLocationGroupsLastModUserArgs{...} }
type GetLocationGroupsLastModUserArrayInput interface {
	pulumi.Input

	ToGetLocationGroupsLastModUserArrayOutput() GetLocationGroupsLastModUserArrayOutput
	ToGetLocationGroupsLastModUserArrayOutputWithContext(context.Context) GetLocationGroupsLastModUserArrayOutput
}

type GetLocationGroupsLastModUserArray []GetLocationGroupsLastModUserInput

func (GetLocationGroupsLastModUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLocationGroupsLastModUser)(nil)).Elem()
}

func (i GetLocationGroupsLastModUserArray) ToGetLocationGroupsLastModUserArrayOutput() GetLocationGroupsLastModUserArrayOutput {
	return i.ToGetLocationGroupsLastModUserArrayOutputWithContext(context.Background())
}

func (i GetLocationGroupsLastModUserArray) ToGetLocationGroupsLastModUserArrayOutputWithContext(ctx context.Context) GetLocationGroupsLastModUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocationGroupsLastModUserArrayOutput)
}

type GetLocationGroupsLastModUserOutput struct{ *pulumi.OutputState }

func (GetLocationGroupsLastModUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocationGroupsLastModUser)(nil)).Elem()
}

func (o GetLocationGroupsLastModUserOutput) ToGetLocationGroupsLastModUserOutput() GetLocationGroupsLastModUserOutput {
	return o
}

func (o GetLocationGroupsLastModUserOutput) ToGetLocationGroupsLastModUserOutputWithContext(ctx context.Context) GetLocationGroupsLastModUserOutput {
	return o
}

// (Map of String)
func (o GetLocationGroupsLastModUserOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetLocationGroupsLastModUser) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// Unique identifier for the location group
func (o GetLocationGroupsLastModUserOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetLocationGroupsLastModUser) int { return v.Id }).(pulumi.IntOutput)
}

// Location group name
func (o GetLocationGroupsLastModUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLocationGroupsLastModUser) string { return v.Name }).(pulumi.StringOutput)
}

type GetLocationGroupsLastModUserArrayOutput struct{ *pulumi.OutputState }

func (GetLocationGroupsLastModUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLocationGroupsLastModUser)(nil)).Elem()
}

func (o GetLocationGroupsLastModUserArrayOutput) ToGetLocationGroupsLastModUserArrayOutput() GetLocationGroupsLastModUserArrayOutput {
	return o
}

func (o GetLocationGroupsLastModUserArrayOutput) ToGetLocationGroupsLastModUserArrayOutputWithContext(ctx context.Context) GetLocationGroupsLastModUserArrayOutput {
	return o
}

func (o GetLocationGroupsLastModUserArrayOutput) Index(i pulumi.IntInput) GetLocationGroupsLastModUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLocationGroupsLastModUser {
		return vs[0].([]GetLocationGroupsLastModUser)[vs[1].(int)]
	}).(GetLocationGroupsLastModUserOutput)
}

type GetLocationGroupsLocation struct {
	// (Map of String)
	Extensions map[string]string `pulumi:"extensions"`
	// Unique identifier for the location group
	Id int `pulumi:"id"`
	// Location group name
	Name string `pulumi:"name"`
}

// GetLocationGroupsLocationInput is an input type that accepts GetLocationGroupsLocationArgs and GetLocationGroupsLocationOutput values.
// You can construct a concrete instance of `GetLocationGroupsLocationInput` via:
//
//	GetLocationGroupsLocationArgs{...}
type GetLocationGroupsLocationInput interface {
	pulumi.Input

	ToGetLocationGroupsLocationOutput() GetLocationGroupsLocationOutput
	ToGetLocationGroupsLocationOutputWithContext(context.Context) GetLocationGroupsLocationOutput
}

type GetLocationGroupsLocationArgs struct {
	// (Map of String)
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// Unique identifier for the location group
	Id pulumi.IntInput `pulumi:"id"`
	// Location group name
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetLocationGroupsLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocationGroupsLocation)(nil)).Elem()
}

func (i GetLocationGroupsLocationArgs) ToGetLocationGroupsLocationOutput() GetLocationGroupsLocationOutput {
	return i.ToGetLocationGroupsLocationOutputWithContext(context.Background())
}

func (i GetLocationGroupsLocationArgs) ToGetLocationGroupsLocationOutputWithContext(ctx context.Context) GetLocationGroupsLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocationGroupsLocationOutput)
}

// GetLocationGroupsLocationArrayInput is an input type that accepts GetLocationGroupsLocationArray and GetLocationGroupsLocationArrayOutput values.
// You can construct a concrete instance of `GetLocationGroupsLocationArrayInput` via:
//
//	GetLocationGroupsLocationArray{ GetLocationGroupsLocationArgs{...} }
type GetLocationGroupsLocationArrayInput interface {
	pulumi.Input

	ToGetLocationGroupsLocationArrayOutput() GetLocationGroupsLocationArrayOutput
	ToGetLocationGroupsLocationArrayOutputWithContext(context.Context) GetLocationGroupsLocationArrayOutput
}

type GetLocationGroupsLocationArray []GetLocationGroupsLocationInput

func (GetLocationGroupsLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLocationGroupsLocation)(nil)).Elem()
}

func (i GetLocationGroupsLocationArray) ToGetLocationGroupsLocationArrayOutput() GetLocationGroupsLocationArrayOutput {
	return i.ToGetLocationGroupsLocationArrayOutputWithContext(context.Background())
}

func (i GetLocationGroupsLocationArray) ToGetLocationGroupsLocationArrayOutputWithContext(ctx context.Context) GetLocationGroupsLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocationGroupsLocationArrayOutput)
}

type GetLocationGroupsLocationOutput struct{ *pulumi.OutputState }

func (GetLocationGroupsLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocationGroupsLocation)(nil)).Elem()
}

func (o GetLocationGroupsLocationOutput) ToGetLocationGroupsLocationOutput() GetLocationGroupsLocationOutput {
	return o
}

func (o GetLocationGroupsLocationOutput) ToGetLocationGroupsLocationOutputWithContext(ctx context.Context) GetLocationGroupsLocationOutput {
	return o
}

// (Map of String)
func (o GetLocationGroupsLocationOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetLocationGroupsLocation) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// Unique identifier for the location group
func (o GetLocationGroupsLocationOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetLocationGroupsLocation) int { return v.Id }).(pulumi.IntOutput)
}

// Location group name
func (o GetLocationGroupsLocationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLocationGroupsLocation) string { return v.Name }).(pulumi.StringOutput)
}

type GetLocationGroupsLocationArrayOutput struct{ *pulumi.OutputState }

func (GetLocationGroupsLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLocationGroupsLocation)(nil)).Elem()
}

func (o GetLocationGroupsLocationArrayOutput) ToGetLocationGroupsLocationArrayOutput() GetLocationGroupsLocationArrayOutput {
	return o
}

func (o GetLocationGroupsLocationArrayOutput) ToGetLocationGroupsLocationArrayOutputWithContext(ctx context.Context) GetLocationGroupsLocationArrayOutput {
	return o
}

func (o GetLocationGroupsLocationArrayOutput) Index(i pulumi.IntInput) GetLocationGroupsLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLocationGroupsLocation {
		return vs[0].([]GetLocationGroupsLocation)[vs[1].(int)]
	}).(GetLocationGroupsLocationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetLocationGroupsDynamicLocationGroupCriteriaInput)(nil)).Elem(), GetLocationGroupsDynamicLocationGroupCriteriaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLocationGroupsDynamicLocationGroupCriteriaArrayInput)(nil)).Elem(), GetLocationGroupsDynamicLocationGroupCriteriaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLocationGroupsDynamicLocationGroupCriteriaCityInput)(nil)).Elem(), GetLocationGroupsDynamicLocationGroupCriteriaCityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLocationGroupsDynamicLocationGroupCriteriaCityArrayInput)(nil)).Elem(), GetLocationGroupsDynamicLocationGroupCriteriaCityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLocationGroupsDynamicLocationGroupCriteriaManagedByInput)(nil)).Elem(), GetLocationGroupsDynamicLocationGroupCriteriaManagedByArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLocationGroupsDynamicLocationGroupCriteriaManagedByArrayInput)(nil)).Elem(), GetLocationGroupsDynamicLocationGroupCriteriaManagedByArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLocationGroupsDynamicLocationGroupCriteriaNameInput)(nil)).Elem(), GetLocationGroupsDynamicLocationGroupCriteriaNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLocationGroupsDynamicLocationGroupCriteriaNameArrayInput)(nil)).Elem(), GetLocationGroupsDynamicLocationGroupCriteriaNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLocationGroupsLastModUserInput)(nil)).Elem(), GetLocationGroupsLastModUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLocationGroupsLastModUserArrayInput)(nil)).Elem(), GetLocationGroupsLastModUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLocationGroupsLocationInput)(nil)).Elem(), GetLocationGroupsLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLocationGroupsLocationArrayInput)(nil)).Elem(), GetLocationGroupsLocationArray{})
	pulumi.RegisterOutputType(GetLocationGroupsDynamicLocationGroupCriteriaOutput{})
	pulumi.RegisterOutputType(GetLocationGroupsDynamicLocationGroupCriteriaArrayOutput{})
	pulumi.RegisterOutputType(GetLocationGroupsDynamicLocationGroupCriteriaCityOutput{})
	pulumi.RegisterOutputType(GetLocationGroupsDynamicLocationGroupCriteriaCityArrayOutput{})
	pulumi.RegisterOutputType(GetLocationGroupsDynamicLocationGroupCriteriaManagedByOutput{})
	pulumi.RegisterOutputType(GetLocationGroupsDynamicLocationGroupCriteriaManagedByArrayOutput{})
	pulumi.RegisterOutputType(GetLocationGroupsDynamicLocationGroupCriteriaNameOutput{})
	pulumi.RegisterOutputType(GetLocationGroupsDynamicLocationGroupCriteriaNameArrayOutput{})
	pulumi.RegisterOutputType(GetLocationGroupsLastModUserOutput{})
	pulumi.RegisterOutputType(GetLocationGroupsLastModUserArrayOutput{})
	pulumi.RegisterOutputType(GetLocationGroupsLocationOutput{})
	pulumi.RegisterOutputType(GetLocationGroupsLocationArrayOutput{})
}
