// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zia

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use the **zia_gre_vip_recommended_list** data source to get information about a list of recommended GRE tunnel virtual IP addresses (VIPs), based on source IP address or latitude/longitude coordinates.
func GetZIATrafficForwardingVIPRecommendedList(ctx *pulumi.Context, args *GetZIATrafficForwardingVIPRecommendedListArgs, opts ...pulumi.InvokeOption) (*GetZIATrafficForwardingVIPRecommendedListResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetZIATrafficForwardingVIPRecommendedListResult
	err := ctx.Invoke("zia:index/getZIATrafficForwardingVIPRecommendedList:getZIATrafficForwardingVIPRecommendedList", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getZIATrafficForwardingVIPRecommendedList.
type GetZIATrafficForwardingVIPRecommendedListArgs struct {
	GeoOverride   *bool `pulumi:"geoOverride"`
	RequiredCount *int  `pulumi:"requiredCount"`
	RoutableIp    *bool `pulumi:"routableIp"`
	// (String) The public source IP address.
	SourceIp *string `pulumi:"sourceIp"`
}

// A collection of values returned by getZIATrafficForwardingVIPRecommendedList.
type GetZIATrafficForwardingVIPRecommendedListResult struct {
	GeoOverride *bool `pulumi:"geoOverride"`
	// The provider-assigned unique ID for this managed resource.
	Id            string                                          `pulumi:"id"`
	Lists         []GetZIATrafficForwardingVIPRecommendedListList `pulumi:"lists"`
	RequiredCount *int                                            `pulumi:"requiredCount"`
	RoutableIp    *bool                                           `pulumi:"routableIp"`
	// (String) The public source IP address.
	SourceIp *string `pulumi:"sourceIp"`
}

func GetZIATrafficForwardingVIPRecommendedListOutput(ctx *pulumi.Context, args GetZIATrafficForwardingVIPRecommendedListOutputArgs, opts ...pulumi.InvokeOption) GetZIATrafficForwardingVIPRecommendedListResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetZIATrafficForwardingVIPRecommendedListResult, error) {
			args := v.(GetZIATrafficForwardingVIPRecommendedListArgs)
			r, err := GetZIATrafficForwardingVIPRecommendedList(ctx, &args, opts...)
			var s GetZIATrafficForwardingVIPRecommendedListResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetZIATrafficForwardingVIPRecommendedListResultOutput)
}

// A collection of arguments for invoking getZIATrafficForwardingVIPRecommendedList.
type GetZIATrafficForwardingVIPRecommendedListOutputArgs struct {
	GeoOverride   pulumi.BoolPtrInput `pulumi:"geoOverride"`
	RequiredCount pulumi.IntPtrInput  `pulumi:"requiredCount"`
	RoutableIp    pulumi.BoolPtrInput `pulumi:"routableIp"`
	// (String) The public source IP address.
	SourceIp pulumi.StringPtrInput `pulumi:"sourceIp"`
}

func (GetZIATrafficForwardingVIPRecommendedListOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIATrafficForwardingVIPRecommendedListArgs)(nil)).Elem()
}

// A collection of values returned by getZIATrafficForwardingVIPRecommendedList.
type GetZIATrafficForwardingVIPRecommendedListResultOutput struct{ *pulumi.OutputState }

func (GetZIATrafficForwardingVIPRecommendedListResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIATrafficForwardingVIPRecommendedListResult)(nil)).Elem()
}

func (o GetZIATrafficForwardingVIPRecommendedListResultOutput) ToGetZIATrafficForwardingVIPRecommendedListResultOutput() GetZIATrafficForwardingVIPRecommendedListResultOutput {
	return o
}

func (o GetZIATrafficForwardingVIPRecommendedListResultOutput) ToGetZIATrafficForwardingVIPRecommendedListResultOutputWithContext(ctx context.Context) GetZIATrafficForwardingVIPRecommendedListResultOutput {
	return o
}

func (o GetZIATrafficForwardingVIPRecommendedListResultOutput) GeoOverride() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingVIPRecommendedListResult) *bool { return v.GeoOverride }).(pulumi.BoolPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetZIATrafficForwardingVIPRecommendedListResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingVIPRecommendedListResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetZIATrafficForwardingVIPRecommendedListResultOutput) Lists() GetZIATrafficForwardingVIPRecommendedListListArrayOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingVIPRecommendedListResult) []GetZIATrafficForwardingVIPRecommendedListList {
		return v.Lists
	}).(GetZIATrafficForwardingVIPRecommendedListListArrayOutput)
}

func (o GetZIATrafficForwardingVIPRecommendedListResultOutput) RequiredCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingVIPRecommendedListResult) *int { return v.RequiredCount }).(pulumi.IntPtrOutput)
}

func (o GetZIATrafficForwardingVIPRecommendedListResultOutput) RoutableIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingVIPRecommendedListResult) *bool { return v.RoutableIp }).(pulumi.BoolPtrOutput)
}

// (String) The public source IP address.
func (o GetZIATrafficForwardingVIPRecommendedListResultOutput) SourceIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZIATrafficForwardingVIPRecommendedListResult) *string { return v.SourceIp }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetZIATrafficForwardingVIPRecommendedListResultOutput{})
}
