// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zia

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use the **zia_firewall_filtering_network_application** data source to get information about a network application available in the Zscaler Internet Access cloud firewall. This data source can then be associated with a ZIA firewall filtering network application rule.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-zia/sdk/go/zia"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := zia.GetZIAFirewallFilteringApplication(ctx, &zia.GetZIAFirewallFilteringApplicationArgs{
//				Id:     pulumi.StringRef("APNS"),
//				Locale: pulumi.StringRef("en-US"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-zia/sdk/go/zia"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := zia.GetZIAFirewallFilteringApplication(ctx, &zia.GetZIAFirewallFilteringApplicationArgs{
//				Id: pulumi.StringRef("DICT"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetZIAFirewallFilteringApplication(ctx *pulumi.Context, args *GetZIAFirewallFilteringApplicationArgs, opts ...pulumi.InvokeOption) (*GetZIAFirewallFilteringApplicationResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetZIAFirewallFilteringApplicationResult
	err := ctx.Invoke("zia:index/getZIAFirewallFilteringApplication:getZIAFirewallFilteringApplication", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getZIAFirewallFilteringApplication.
type GetZIAFirewallFilteringApplicationArgs struct {
	// The name of the ip source group to be exported.
	Id     *string `pulumi:"id"`
	Locale *string `pulumi:"locale"`
}

// A collection of values returned by getZIAFirewallFilteringApplication.
type GetZIAFirewallFilteringApplicationResult struct {
	// (Boolean)
	Deprecated bool `pulumi:"deprecated"`
	// (String)
	Description string  `pulumi:"description"`
	Id          *string `pulumi:"id"`
	Locale      *string `pulumi:"locale"`
	// (String)
	ParentCategory string `pulumi:"parentCategory"`
}

func GetZIAFirewallFilteringApplicationOutput(ctx *pulumi.Context, args GetZIAFirewallFilteringApplicationOutputArgs, opts ...pulumi.InvokeOption) GetZIAFirewallFilteringApplicationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetZIAFirewallFilteringApplicationResult, error) {
			args := v.(GetZIAFirewallFilteringApplicationArgs)
			r, err := GetZIAFirewallFilteringApplication(ctx, &args, opts...)
			var s GetZIAFirewallFilteringApplicationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetZIAFirewallFilteringApplicationResultOutput)
}

// A collection of arguments for invoking getZIAFirewallFilteringApplication.
type GetZIAFirewallFilteringApplicationOutputArgs struct {
	// The name of the ip source group to be exported.
	Id     pulumi.StringPtrInput `pulumi:"id"`
	Locale pulumi.StringPtrInput `pulumi:"locale"`
}

func (GetZIAFirewallFilteringApplicationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAFirewallFilteringApplicationArgs)(nil)).Elem()
}

// A collection of values returned by getZIAFirewallFilteringApplication.
type GetZIAFirewallFilteringApplicationResultOutput struct{ *pulumi.OutputState }

func (GetZIAFirewallFilteringApplicationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZIAFirewallFilteringApplicationResult)(nil)).Elem()
}

func (o GetZIAFirewallFilteringApplicationResultOutput) ToGetZIAFirewallFilteringApplicationResultOutput() GetZIAFirewallFilteringApplicationResultOutput {
	return o
}

func (o GetZIAFirewallFilteringApplicationResultOutput) ToGetZIAFirewallFilteringApplicationResultOutputWithContext(ctx context.Context) GetZIAFirewallFilteringApplicationResultOutput {
	return o
}

// (Boolean)
func (o GetZIAFirewallFilteringApplicationResultOutput) Deprecated() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZIAFirewallFilteringApplicationResult) bool { return v.Deprecated }).(pulumi.BoolOutput)
}

// (String)
func (o GetZIAFirewallFilteringApplicationResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIAFirewallFilteringApplicationResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetZIAFirewallFilteringApplicationResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZIAFirewallFilteringApplicationResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o GetZIAFirewallFilteringApplicationResultOutput) Locale() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZIAFirewallFilteringApplicationResult) *string { return v.Locale }).(pulumi.StringPtrOutput)
}

// (String)
func (o GetZIAFirewallFilteringApplicationResultOutput) ParentCategory() pulumi.StringOutput {
	return o.ApplyT(func(v GetZIAFirewallFilteringApplicationResult) string { return v.ParentCategory }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetZIAFirewallFilteringApplicationResultOutput{})
}
