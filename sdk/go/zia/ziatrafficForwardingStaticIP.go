// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zia

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The **zia_traffic_forwarding_static_ip** resource allows the creation and management of static ip addresses in the Zscaler Internet Access cloud. The resource, can then be associated with other resources such as:
//
// * VPN Credentials of type `IP`
// * Location Management
// * GRE Tunnel
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-zia/sdk/go/zia"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := zia.NewZIATrafficForwardingStaticIP(ctx, "example", &zia.ZIATrafficForwardingStaticIPArgs{
//				Comment:     pulumi.String("Example"),
//				GeoOverride: pulumi.Bool(true),
//				IpAddress:   pulumi.String("1.1.1.1"),
//				Latitude:    -36.848461,
//				Longitude:   pulumi.Float64(174.763336),
//				RoutableIp:  pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Static IP resources can be imported by using `<STATIC IP ID>` or `<IP ADDRESS>`as the import ID.
//
// ```sh
//
//	$ pulumi import zia:index/zIATrafficForwardingStaticIP:ZIATrafficForwardingStaticIP example <static_ip_id>
//
// ```
//
//	or
//
// ```sh
//
//	$ pulumi import zia:index/zIATrafficForwardingStaticIP:ZIATrafficForwardingStaticIP example <ip_address>
//
// ```
type ZIATrafficForwardingStaticIP struct {
	pulumi.CustomResourceState

	// Additional information about this static IP address
	Comment pulumi.StringPtrOutput `pulumi:"comment"`
	// If not set, geographic coordinates and city are automatically determined from the IP address. Otherwise, the latitude and longitude coordinates must be provided.
	GeoOverride pulumi.BoolOutput `pulumi:"geoOverride"`
	// The static IP address
	IpAddress pulumi.StringOutput `pulumi:"ipAddress"`
	// This is an immutable reference to an entity. which mainly consists of id and name
	LastModifiedBies ZIATrafficForwardingStaticIPLastModifiedByArrayOutput `pulumi:"lastModifiedBies"`
	// Required only if the geoOverride attribute is set. Latitude with 7 digit precision after decimal point, ranges between -90 and 90 degrees.
	Latitude pulumi.Float64Output `pulumi:"latitude"`
	// Required only if the geoOverride attribute is set. Longitude with 7 digit precision after decimal point, ranges between -180 and 180 degrees.
	Longitude pulumi.Float64Output `pulumi:"longitude"`
	// This is an immutable reference to an entity. which mainly consists of id and name
	ManagedBies ZIATrafficForwardingStaticIPManagedByArrayOutput `pulumi:"managedBies"`
	// Indicates whether a non-RFC 1918 IP address is publicly routable. This attribute is ignored if there is no ZIA Private Service Edge associated to the organization.
	RoutableIp pulumi.BoolOutput `pulumi:"routableIp"`
	// The ID of the Static IP.
	StaticIpId pulumi.IntOutput `pulumi:"staticIpId"`
}

// NewZIATrafficForwardingStaticIP registers a new resource with the given unique name, arguments, and options.
func NewZIATrafficForwardingStaticIP(ctx *pulumi.Context,
	name string, args *ZIATrafficForwardingStaticIPArgs, opts ...pulumi.ResourceOption) (*ZIATrafficForwardingStaticIP, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IpAddress == nil {
		return nil, errors.New("invalid value for required argument 'IpAddress'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource ZIATrafficForwardingStaticIP
	err := ctx.RegisterResource("zia:index/zIATrafficForwardingStaticIP:ZIATrafficForwardingStaticIP", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetZIATrafficForwardingStaticIP gets an existing ZIATrafficForwardingStaticIP resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetZIATrafficForwardingStaticIP(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ZIATrafficForwardingStaticIPState, opts ...pulumi.ResourceOption) (*ZIATrafficForwardingStaticIP, error) {
	var resource ZIATrafficForwardingStaticIP
	err := ctx.ReadResource("zia:index/zIATrafficForwardingStaticIP:ZIATrafficForwardingStaticIP", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ZIATrafficForwardingStaticIP resources.
type ziatrafficForwardingStaticIPState struct {
	// Additional information about this static IP address
	Comment *string `pulumi:"comment"`
	// If not set, geographic coordinates and city are automatically determined from the IP address. Otherwise, the latitude and longitude coordinates must be provided.
	GeoOverride *bool `pulumi:"geoOverride"`
	// The static IP address
	IpAddress *string `pulumi:"ipAddress"`
	// This is an immutable reference to an entity. which mainly consists of id and name
	LastModifiedBies []ZIATrafficForwardingStaticIPLastModifiedBy `pulumi:"lastModifiedBies"`
	// Required only if the geoOverride attribute is set. Latitude with 7 digit precision after decimal point, ranges between -90 and 90 degrees.
	Latitude *float64 `pulumi:"latitude"`
	// Required only if the geoOverride attribute is set. Longitude with 7 digit precision after decimal point, ranges between -180 and 180 degrees.
	Longitude *float64 `pulumi:"longitude"`
	// This is an immutable reference to an entity. which mainly consists of id and name
	ManagedBies []ZIATrafficForwardingStaticIPManagedBy `pulumi:"managedBies"`
	// Indicates whether a non-RFC 1918 IP address is publicly routable. This attribute is ignored if there is no ZIA Private Service Edge associated to the organization.
	RoutableIp *bool `pulumi:"routableIp"`
	// The ID of the Static IP.
	StaticIpId *int `pulumi:"staticIpId"`
}

type ZIATrafficForwardingStaticIPState struct {
	// Additional information about this static IP address
	Comment pulumi.StringPtrInput
	// If not set, geographic coordinates and city are automatically determined from the IP address. Otherwise, the latitude and longitude coordinates must be provided.
	GeoOverride pulumi.BoolPtrInput
	// The static IP address
	IpAddress pulumi.StringPtrInput
	// This is an immutable reference to an entity. which mainly consists of id and name
	LastModifiedBies ZIATrafficForwardingStaticIPLastModifiedByArrayInput
	// Required only if the geoOverride attribute is set. Latitude with 7 digit precision after decimal point, ranges between -90 and 90 degrees.
	Latitude pulumi.Float64PtrInput
	// Required only if the geoOverride attribute is set. Longitude with 7 digit precision after decimal point, ranges between -180 and 180 degrees.
	Longitude pulumi.Float64PtrInput
	// This is an immutable reference to an entity. which mainly consists of id and name
	ManagedBies ZIATrafficForwardingStaticIPManagedByArrayInput
	// Indicates whether a non-RFC 1918 IP address is publicly routable. This attribute is ignored if there is no ZIA Private Service Edge associated to the organization.
	RoutableIp pulumi.BoolPtrInput
	// The ID of the Static IP.
	StaticIpId pulumi.IntPtrInput
}

func (ZIATrafficForwardingStaticIPState) ElementType() reflect.Type {
	return reflect.TypeOf((*ziatrafficForwardingStaticIPState)(nil)).Elem()
}

type ziatrafficForwardingStaticIPArgs struct {
	// Additional information about this static IP address
	Comment *string `pulumi:"comment"`
	// If not set, geographic coordinates and city are automatically determined from the IP address. Otherwise, the latitude and longitude coordinates must be provided.
	GeoOverride *bool `pulumi:"geoOverride"`
	// The static IP address
	IpAddress string `pulumi:"ipAddress"`
	// This is an immutable reference to an entity. which mainly consists of id and name
	LastModifiedBies []ZIATrafficForwardingStaticIPLastModifiedBy `pulumi:"lastModifiedBies"`
	// Required only if the geoOverride attribute is set. Latitude with 7 digit precision after decimal point, ranges between -90 and 90 degrees.
	Latitude *float64 `pulumi:"latitude"`
	// Required only if the geoOverride attribute is set. Longitude with 7 digit precision after decimal point, ranges between -180 and 180 degrees.
	Longitude *float64 `pulumi:"longitude"`
	// This is an immutable reference to an entity. which mainly consists of id and name
	ManagedBies []ZIATrafficForwardingStaticIPManagedBy `pulumi:"managedBies"`
	// Indicates whether a non-RFC 1918 IP address is publicly routable. This attribute is ignored if there is no ZIA Private Service Edge associated to the organization.
	RoutableIp *bool `pulumi:"routableIp"`
}

// The set of arguments for constructing a ZIATrafficForwardingStaticIP resource.
type ZIATrafficForwardingStaticIPArgs struct {
	// Additional information about this static IP address
	Comment pulumi.StringPtrInput
	// If not set, geographic coordinates and city are automatically determined from the IP address. Otherwise, the latitude and longitude coordinates must be provided.
	GeoOverride pulumi.BoolPtrInput
	// The static IP address
	IpAddress pulumi.StringInput
	// This is an immutable reference to an entity. which mainly consists of id and name
	LastModifiedBies ZIATrafficForwardingStaticIPLastModifiedByArrayInput
	// Required only if the geoOverride attribute is set. Latitude with 7 digit precision after decimal point, ranges between -90 and 90 degrees.
	Latitude pulumi.Float64PtrInput
	// Required only if the geoOverride attribute is set. Longitude with 7 digit precision after decimal point, ranges between -180 and 180 degrees.
	Longitude pulumi.Float64PtrInput
	// This is an immutable reference to an entity. which mainly consists of id and name
	ManagedBies ZIATrafficForwardingStaticIPManagedByArrayInput
	// Indicates whether a non-RFC 1918 IP address is publicly routable. This attribute is ignored if there is no ZIA Private Service Edge associated to the organization.
	RoutableIp pulumi.BoolPtrInput
}

func (ZIATrafficForwardingStaticIPArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ziatrafficForwardingStaticIPArgs)(nil)).Elem()
}

type ZIATrafficForwardingStaticIPInput interface {
	pulumi.Input

	ToZIATrafficForwardingStaticIPOutput() ZIATrafficForwardingStaticIPOutput
	ToZIATrafficForwardingStaticIPOutputWithContext(ctx context.Context) ZIATrafficForwardingStaticIPOutput
}

func (*ZIATrafficForwardingStaticIP) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIATrafficForwardingStaticIP)(nil)).Elem()
}

func (i *ZIATrafficForwardingStaticIP) ToZIATrafficForwardingStaticIPOutput() ZIATrafficForwardingStaticIPOutput {
	return i.ToZIATrafficForwardingStaticIPOutputWithContext(context.Background())
}

func (i *ZIATrafficForwardingStaticIP) ToZIATrafficForwardingStaticIPOutputWithContext(ctx context.Context) ZIATrafficForwardingStaticIPOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIATrafficForwardingStaticIPOutput)
}

// ZIATrafficForwardingStaticIPArrayInput is an input type that accepts ZIATrafficForwardingStaticIPArray and ZIATrafficForwardingStaticIPArrayOutput values.
// You can construct a concrete instance of `ZIATrafficForwardingStaticIPArrayInput` via:
//
//	ZIATrafficForwardingStaticIPArray{ ZIATrafficForwardingStaticIPArgs{...} }
type ZIATrafficForwardingStaticIPArrayInput interface {
	pulumi.Input

	ToZIATrafficForwardingStaticIPArrayOutput() ZIATrafficForwardingStaticIPArrayOutput
	ToZIATrafficForwardingStaticIPArrayOutputWithContext(context.Context) ZIATrafficForwardingStaticIPArrayOutput
}

type ZIATrafficForwardingStaticIPArray []ZIATrafficForwardingStaticIPInput

func (ZIATrafficForwardingStaticIPArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZIATrafficForwardingStaticIP)(nil)).Elem()
}

func (i ZIATrafficForwardingStaticIPArray) ToZIATrafficForwardingStaticIPArrayOutput() ZIATrafficForwardingStaticIPArrayOutput {
	return i.ToZIATrafficForwardingStaticIPArrayOutputWithContext(context.Background())
}

func (i ZIATrafficForwardingStaticIPArray) ToZIATrafficForwardingStaticIPArrayOutputWithContext(ctx context.Context) ZIATrafficForwardingStaticIPArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIATrafficForwardingStaticIPArrayOutput)
}

// ZIATrafficForwardingStaticIPMapInput is an input type that accepts ZIATrafficForwardingStaticIPMap and ZIATrafficForwardingStaticIPMapOutput values.
// You can construct a concrete instance of `ZIATrafficForwardingStaticIPMapInput` via:
//
//	ZIATrafficForwardingStaticIPMap{ "key": ZIATrafficForwardingStaticIPArgs{...} }
type ZIATrafficForwardingStaticIPMapInput interface {
	pulumi.Input

	ToZIATrafficForwardingStaticIPMapOutput() ZIATrafficForwardingStaticIPMapOutput
	ToZIATrafficForwardingStaticIPMapOutputWithContext(context.Context) ZIATrafficForwardingStaticIPMapOutput
}

type ZIATrafficForwardingStaticIPMap map[string]ZIATrafficForwardingStaticIPInput

func (ZIATrafficForwardingStaticIPMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZIATrafficForwardingStaticIP)(nil)).Elem()
}

func (i ZIATrafficForwardingStaticIPMap) ToZIATrafficForwardingStaticIPMapOutput() ZIATrafficForwardingStaticIPMapOutput {
	return i.ToZIATrafficForwardingStaticIPMapOutputWithContext(context.Background())
}

func (i ZIATrafficForwardingStaticIPMap) ToZIATrafficForwardingStaticIPMapOutputWithContext(ctx context.Context) ZIATrafficForwardingStaticIPMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIATrafficForwardingStaticIPMapOutput)
}

type ZIATrafficForwardingStaticIPOutput struct{ *pulumi.OutputState }

func (ZIATrafficForwardingStaticIPOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIATrafficForwardingStaticIP)(nil)).Elem()
}

func (o ZIATrafficForwardingStaticIPOutput) ToZIATrafficForwardingStaticIPOutput() ZIATrafficForwardingStaticIPOutput {
	return o
}

func (o ZIATrafficForwardingStaticIPOutput) ToZIATrafficForwardingStaticIPOutputWithContext(ctx context.Context) ZIATrafficForwardingStaticIPOutput {
	return o
}

// Additional information about this static IP address
func (o ZIATrafficForwardingStaticIPOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZIATrafficForwardingStaticIP) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

// If not set, geographic coordinates and city are automatically determined from the IP address. Otherwise, the latitude and longitude coordinates must be provided.
func (o ZIATrafficForwardingStaticIPOutput) GeoOverride() pulumi.BoolOutput {
	return o.ApplyT(func(v *ZIATrafficForwardingStaticIP) pulumi.BoolOutput { return v.GeoOverride }).(pulumi.BoolOutput)
}

// The static IP address
func (o ZIATrafficForwardingStaticIPOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *ZIATrafficForwardingStaticIP) pulumi.StringOutput { return v.IpAddress }).(pulumi.StringOutput)
}

// This is an immutable reference to an entity. which mainly consists of id and name
func (o ZIATrafficForwardingStaticIPOutput) LastModifiedBies() ZIATrafficForwardingStaticIPLastModifiedByArrayOutput {
	return o.ApplyT(func(v *ZIATrafficForwardingStaticIP) ZIATrafficForwardingStaticIPLastModifiedByArrayOutput {
		return v.LastModifiedBies
	}).(ZIATrafficForwardingStaticIPLastModifiedByArrayOutput)
}

// Required only if the geoOverride attribute is set. Latitude with 7 digit precision after decimal point, ranges between -90 and 90 degrees.
func (o ZIATrafficForwardingStaticIPOutput) Latitude() pulumi.Float64Output {
	return o.ApplyT(func(v *ZIATrafficForwardingStaticIP) pulumi.Float64Output { return v.Latitude }).(pulumi.Float64Output)
}

// Required only if the geoOverride attribute is set. Longitude with 7 digit precision after decimal point, ranges between -180 and 180 degrees.
func (o ZIATrafficForwardingStaticIPOutput) Longitude() pulumi.Float64Output {
	return o.ApplyT(func(v *ZIATrafficForwardingStaticIP) pulumi.Float64Output { return v.Longitude }).(pulumi.Float64Output)
}

// This is an immutable reference to an entity. which mainly consists of id and name
func (o ZIATrafficForwardingStaticIPOutput) ManagedBies() ZIATrafficForwardingStaticIPManagedByArrayOutput {
	return o.ApplyT(func(v *ZIATrafficForwardingStaticIP) ZIATrafficForwardingStaticIPManagedByArrayOutput {
		return v.ManagedBies
	}).(ZIATrafficForwardingStaticIPManagedByArrayOutput)
}

// Indicates whether a non-RFC 1918 IP address is publicly routable. This attribute is ignored if there is no ZIA Private Service Edge associated to the organization.
func (o ZIATrafficForwardingStaticIPOutput) RoutableIp() pulumi.BoolOutput {
	return o.ApplyT(func(v *ZIATrafficForwardingStaticIP) pulumi.BoolOutput { return v.RoutableIp }).(pulumi.BoolOutput)
}

// The ID of the Static IP.
func (o ZIATrafficForwardingStaticIPOutput) StaticIpId() pulumi.IntOutput {
	return o.ApplyT(func(v *ZIATrafficForwardingStaticIP) pulumi.IntOutput { return v.StaticIpId }).(pulumi.IntOutput)
}

type ZIATrafficForwardingStaticIPArrayOutput struct{ *pulumi.OutputState }

func (ZIATrafficForwardingStaticIPArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZIATrafficForwardingStaticIP)(nil)).Elem()
}

func (o ZIATrafficForwardingStaticIPArrayOutput) ToZIATrafficForwardingStaticIPArrayOutput() ZIATrafficForwardingStaticIPArrayOutput {
	return o
}

func (o ZIATrafficForwardingStaticIPArrayOutput) ToZIATrafficForwardingStaticIPArrayOutputWithContext(ctx context.Context) ZIATrafficForwardingStaticIPArrayOutput {
	return o
}

func (o ZIATrafficForwardingStaticIPArrayOutput) Index(i pulumi.IntInput) ZIATrafficForwardingStaticIPOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ZIATrafficForwardingStaticIP {
		return vs[0].([]*ZIATrafficForwardingStaticIP)[vs[1].(int)]
	}).(ZIATrafficForwardingStaticIPOutput)
}

type ZIATrafficForwardingStaticIPMapOutput struct{ *pulumi.OutputState }

func (ZIATrafficForwardingStaticIPMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZIATrafficForwardingStaticIP)(nil)).Elem()
}

func (o ZIATrafficForwardingStaticIPMapOutput) ToZIATrafficForwardingStaticIPMapOutput() ZIATrafficForwardingStaticIPMapOutput {
	return o
}

func (o ZIATrafficForwardingStaticIPMapOutput) ToZIATrafficForwardingStaticIPMapOutputWithContext(ctx context.Context) ZIATrafficForwardingStaticIPMapOutput {
	return o
}

func (o ZIATrafficForwardingStaticIPMapOutput) MapIndex(k pulumi.StringInput) ZIATrafficForwardingStaticIPOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ZIATrafficForwardingStaticIP {
		return vs[0].(map[string]*ZIATrafficForwardingStaticIP)[vs[1].(string)]
	}).(ZIATrafficForwardingStaticIPOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ZIATrafficForwardingStaticIPInput)(nil)).Elem(), &ZIATrafficForwardingStaticIP{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIATrafficForwardingStaticIPArrayInput)(nil)).Elem(), ZIATrafficForwardingStaticIPArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIATrafficForwardingStaticIPMapInput)(nil)).Elem(), ZIATrafficForwardingStaticIPMap{})
	pulumi.RegisterOutputType(ZIATrafficForwardingStaticIPOutput{})
	pulumi.RegisterOutputType(ZIATrafficForwardingStaticIPArrayOutput{})
	pulumi.RegisterOutputType(ZIATrafficForwardingStaticIPMapOutput{})
}
