// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zia

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use the **zia_auth_settings_urls** data source to get a list of URLs that were exempted from cookie authentiation and SSL Inspection in the Zscaler Internet Access cloud or via the API. To learn more see [URL Format Guidelines](https://help.zscaler.com/zia/url-format-guidelines)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-zia/sdk/go/zia"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := zia.LookupZIAAuthSettingsURLs(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupZIAAuthSettingsURLs(ctx *pulumi.Context, opts ...pulumi.InvokeOption) (*LookupZIAAuthSettingsURLsResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupZIAAuthSettingsURLsResult
	err := ctx.Invoke("zia:index/getZIAAuthSettingsURLs:getZIAAuthSettingsURLs", nil, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of values returned by getZIAAuthSettingsURLs.
type LookupZIAAuthSettingsURLsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id   string   `pulumi:"id"`
	Urls []string `pulumi:"urls"`
}
