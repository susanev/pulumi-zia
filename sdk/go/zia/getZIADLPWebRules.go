// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zia

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use the **zia_dlp_web_rules** data source to get information about a ZIA DLP Web Rules in the Zscaler Internet Access cloud or via the API.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-zia/sdk/go/zia"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := zia.LookupZIADLPWebRules(ctx, &zia.LookupZIADLPWebRulesArgs{
//				Name: pulumi.StringRef("Example"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupZIADLPWebRules(ctx *pulumi.Context, args *LookupZIADLPWebRulesArgs, opts ...pulumi.InvokeOption) (*LookupZIADLPWebRulesResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupZIADLPWebRulesResult
	err := ctx.Invoke("zia:index/getZIADLPWebRules:getZIADLPWebRules", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getZIADLPWebRules.
type LookupZIADLPWebRulesArgs struct {
	// Identifier that uniquely identifies an entity
	Id *int `pulumi:"id"`
	// The DLP policy rule name.
	// rules.
	Name *string `pulumi:"name"`
}

// A collection of values returned by getZIADLPWebRules.
type LookupZIADLPWebRulesResult struct {
	AccessControl            string                                  `pulumi:"accessControl"`
	Action                   string                                  `pulumi:"action"`
	Auditors                 []GetZIADLPWebRulesAuditor              `pulumi:"auditors"`
	CloudApplications        []string                                `pulumi:"cloudApplications"`
	Departments              []GetZIADLPWebRulesDepartment           `pulumi:"departments"`
	Description              string                                  `pulumi:"description"`
	DlpEngines               []GetZIADLPWebRulesDlpEngine            `pulumi:"dlpEngines"`
	ExcludedDepartments      []GetZIADLPWebRulesExcludedDepartment   `pulumi:"excludedDepartments"`
	ExcludedGroups           []GetZIADLPWebRulesExcludedGroup        `pulumi:"excludedGroups"`
	ExcludedUsers            []GetZIADLPWebRulesExcludedUser         `pulumi:"excludedUsers"`
	ExternalAuditorEmail     string                                  `pulumi:"externalAuditorEmail"`
	FileTypes                []string                                `pulumi:"fileTypes"`
	Groups                   []GetZIADLPWebRulesGroup                `pulumi:"groups"`
	IcapServers              []GetZIADLPWebRulesIcapServer           `pulumi:"icapServers"`
	Id                       int                                     `pulumi:"id"`
	Labels                   []GetZIADLPWebRulesLabel                `pulumi:"labels"`
	LastModifiedBies         []GetZIADLPWebRulesLastModifiedBy       `pulumi:"lastModifiedBies"`
	LastModifiedTime         int                                     `pulumi:"lastModifiedTime"`
	LocationGroups           []GetZIADLPWebRulesLocationGroup        `pulumi:"locationGroups"`
	Locations                []GetZIADLPWebRulesLocation             `pulumi:"locations"`
	MatchOnly                bool                                    `pulumi:"matchOnly"`
	MinSize                  int                                     `pulumi:"minSize"`
	Name                     string                                  `pulumi:"name"`
	NotificationTemplates    []GetZIADLPWebRulesNotificationTemplate `pulumi:"notificationTemplates"`
	OcrEnabled               bool                                    `pulumi:"ocrEnabled"`
	Order                    int                                     `pulumi:"order"`
	Protocols                []string                                `pulumi:"protocols"`
	Rank                     int                                     `pulumi:"rank"`
	State                    string                                  `pulumi:"state"`
	TimeWindows              []GetZIADLPWebRulesTimeWindow           `pulumi:"timeWindows"`
	UrlCategories            []GetZIADLPWebRulesUrlCategory          `pulumi:"urlCategories"`
	Users                    []GetZIADLPWebRulesUser                 `pulumi:"users"`
	WithoutContentInspection bool                                    `pulumi:"withoutContentInspection"`
	ZscalerIncidentReciever  bool                                    `pulumi:"zscalerIncidentReciever"`
}

func LookupZIADLPWebRulesOutput(ctx *pulumi.Context, args LookupZIADLPWebRulesOutputArgs, opts ...pulumi.InvokeOption) LookupZIADLPWebRulesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupZIADLPWebRulesResult, error) {
			args := v.(LookupZIADLPWebRulesArgs)
			r, err := LookupZIADLPWebRules(ctx, &args, opts...)
			var s LookupZIADLPWebRulesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupZIADLPWebRulesResultOutput)
}

// A collection of arguments for invoking getZIADLPWebRules.
type LookupZIADLPWebRulesOutputArgs struct {
	// Identifier that uniquely identifies an entity
	Id pulumi.IntPtrInput `pulumi:"id"`
	// The DLP policy rule name.
	// rules.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupZIADLPWebRulesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupZIADLPWebRulesArgs)(nil)).Elem()
}

// A collection of values returned by getZIADLPWebRules.
type LookupZIADLPWebRulesResultOutput struct{ *pulumi.OutputState }

func (LookupZIADLPWebRulesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupZIADLPWebRulesResult)(nil)).Elem()
}

func (o LookupZIADLPWebRulesResultOutput) ToLookupZIADLPWebRulesResultOutput() LookupZIADLPWebRulesResultOutput {
	return o
}

func (o LookupZIADLPWebRulesResultOutput) ToLookupZIADLPWebRulesResultOutputWithContext(ctx context.Context) LookupZIADLPWebRulesResultOutput {
	return o
}

func (o LookupZIADLPWebRulesResultOutput) AccessControl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZIADLPWebRulesResult) string { return v.AccessControl }).(pulumi.StringOutput)
}

func (o LookupZIADLPWebRulesResultOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZIADLPWebRulesResult) string { return v.Action }).(pulumi.StringOutput)
}

func (o LookupZIADLPWebRulesResultOutput) Auditors() GetZIADLPWebRulesAuditorArrayOutput {
	return o.ApplyT(func(v LookupZIADLPWebRulesResult) []GetZIADLPWebRulesAuditor { return v.Auditors }).(GetZIADLPWebRulesAuditorArrayOutput)
}

func (o LookupZIADLPWebRulesResultOutput) CloudApplications() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupZIADLPWebRulesResult) []string { return v.CloudApplications }).(pulumi.StringArrayOutput)
}

func (o LookupZIADLPWebRulesResultOutput) Departments() GetZIADLPWebRulesDepartmentArrayOutput {
	return o.ApplyT(func(v LookupZIADLPWebRulesResult) []GetZIADLPWebRulesDepartment { return v.Departments }).(GetZIADLPWebRulesDepartmentArrayOutput)
}

func (o LookupZIADLPWebRulesResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZIADLPWebRulesResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupZIADLPWebRulesResultOutput) DlpEngines() GetZIADLPWebRulesDlpEngineArrayOutput {
	return o.ApplyT(func(v LookupZIADLPWebRulesResult) []GetZIADLPWebRulesDlpEngine { return v.DlpEngines }).(GetZIADLPWebRulesDlpEngineArrayOutput)
}

func (o LookupZIADLPWebRulesResultOutput) ExcludedDepartments() GetZIADLPWebRulesExcludedDepartmentArrayOutput {
	return o.ApplyT(func(v LookupZIADLPWebRulesResult) []GetZIADLPWebRulesExcludedDepartment { return v.ExcludedDepartments }).(GetZIADLPWebRulesExcludedDepartmentArrayOutput)
}

func (o LookupZIADLPWebRulesResultOutput) ExcludedGroups() GetZIADLPWebRulesExcludedGroupArrayOutput {
	return o.ApplyT(func(v LookupZIADLPWebRulesResult) []GetZIADLPWebRulesExcludedGroup { return v.ExcludedGroups }).(GetZIADLPWebRulesExcludedGroupArrayOutput)
}

func (o LookupZIADLPWebRulesResultOutput) ExcludedUsers() GetZIADLPWebRulesExcludedUserArrayOutput {
	return o.ApplyT(func(v LookupZIADLPWebRulesResult) []GetZIADLPWebRulesExcludedUser { return v.ExcludedUsers }).(GetZIADLPWebRulesExcludedUserArrayOutput)
}

func (o LookupZIADLPWebRulesResultOutput) ExternalAuditorEmail() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZIADLPWebRulesResult) string { return v.ExternalAuditorEmail }).(pulumi.StringOutput)
}

func (o LookupZIADLPWebRulesResultOutput) FileTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupZIADLPWebRulesResult) []string { return v.FileTypes }).(pulumi.StringArrayOutput)
}

func (o LookupZIADLPWebRulesResultOutput) Groups() GetZIADLPWebRulesGroupArrayOutput {
	return o.ApplyT(func(v LookupZIADLPWebRulesResult) []GetZIADLPWebRulesGroup { return v.Groups }).(GetZIADLPWebRulesGroupArrayOutput)
}

func (o LookupZIADLPWebRulesResultOutput) IcapServers() GetZIADLPWebRulesIcapServerArrayOutput {
	return o.ApplyT(func(v LookupZIADLPWebRulesResult) []GetZIADLPWebRulesIcapServer { return v.IcapServers }).(GetZIADLPWebRulesIcapServerArrayOutput)
}

func (o LookupZIADLPWebRulesResultOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v LookupZIADLPWebRulesResult) int { return v.Id }).(pulumi.IntOutput)
}

func (o LookupZIADLPWebRulesResultOutput) Labels() GetZIADLPWebRulesLabelArrayOutput {
	return o.ApplyT(func(v LookupZIADLPWebRulesResult) []GetZIADLPWebRulesLabel { return v.Labels }).(GetZIADLPWebRulesLabelArrayOutput)
}

func (o LookupZIADLPWebRulesResultOutput) LastModifiedBies() GetZIADLPWebRulesLastModifiedByArrayOutput {
	return o.ApplyT(func(v LookupZIADLPWebRulesResult) []GetZIADLPWebRulesLastModifiedBy { return v.LastModifiedBies }).(GetZIADLPWebRulesLastModifiedByArrayOutput)
}

func (o LookupZIADLPWebRulesResultOutput) LastModifiedTime() pulumi.IntOutput {
	return o.ApplyT(func(v LookupZIADLPWebRulesResult) int { return v.LastModifiedTime }).(pulumi.IntOutput)
}

func (o LookupZIADLPWebRulesResultOutput) LocationGroups() GetZIADLPWebRulesLocationGroupArrayOutput {
	return o.ApplyT(func(v LookupZIADLPWebRulesResult) []GetZIADLPWebRulesLocationGroup { return v.LocationGroups }).(GetZIADLPWebRulesLocationGroupArrayOutput)
}

func (o LookupZIADLPWebRulesResultOutput) Locations() GetZIADLPWebRulesLocationArrayOutput {
	return o.ApplyT(func(v LookupZIADLPWebRulesResult) []GetZIADLPWebRulesLocation { return v.Locations }).(GetZIADLPWebRulesLocationArrayOutput)
}

func (o LookupZIADLPWebRulesResultOutput) MatchOnly() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupZIADLPWebRulesResult) bool { return v.MatchOnly }).(pulumi.BoolOutput)
}

func (o LookupZIADLPWebRulesResultOutput) MinSize() pulumi.IntOutput {
	return o.ApplyT(func(v LookupZIADLPWebRulesResult) int { return v.MinSize }).(pulumi.IntOutput)
}

func (o LookupZIADLPWebRulesResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZIADLPWebRulesResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupZIADLPWebRulesResultOutput) NotificationTemplates() GetZIADLPWebRulesNotificationTemplateArrayOutput {
	return o.ApplyT(func(v LookupZIADLPWebRulesResult) []GetZIADLPWebRulesNotificationTemplate {
		return v.NotificationTemplates
	}).(GetZIADLPWebRulesNotificationTemplateArrayOutput)
}

func (o LookupZIADLPWebRulesResultOutput) OcrEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupZIADLPWebRulesResult) bool { return v.OcrEnabled }).(pulumi.BoolOutput)
}

func (o LookupZIADLPWebRulesResultOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v LookupZIADLPWebRulesResult) int { return v.Order }).(pulumi.IntOutput)
}

func (o LookupZIADLPWebRulesResultOutput) Protocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupZIADLPWebRulesResult) []string { return v.Protocols }).(pulumi.StringArrayOutput)
}

func (o LookupZIADLPWebRulesResultOutput) Rank() pulumi.IntOutput {
	return o.ApplyT(func(v LookupZIADLPWebRulesResult) int { return v.Rank }).(pulumi.IntOutput)
}

func (o LookupZIADLPWebRulesResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZIADLPWebRulesResult) string { return v.State }).(pulumi.StringOutput)
}

func (o LookupZIADLPWebRulesResultOutput) TimeWindows() GetZIADLPWebRulesTimeWindowArrayOutput {
	return o.ApplyT(func(v LookupZIADLPWebRulesResult) []GetZIADLPWebRulesTimeWindow { return v.TimeWindows }).(GetZIADLPWebRulesTimeWindowArrayOutput)
}

func (o LookupZIADLPWebRulesResultOutput) UrlCategories() GetZIADLPWebRulesUrlCategoryArrayOutput {
	return o.ApplyT(func(v LookupZIADLPWebRulesResult) []GetZIADLPWebRulesUrlCategory { return v.UrlCategories }).(GetZIADLPWebRulesUrlCategoryArrayOutput)
}

func (o LookupZIADLPWebRulesResultOutput) Users() GetZIADLPWebRulesUserArrayOutput {
	return o.ApplyT(func(v LookupZIADLPWebRulesResult) []GetZIADLPWebRulesUser { return v.Users }).(GetZIADLPWebRulesUserArrayOutput)
}

func (o LookupZIADLPWebRulesResultOutput) WithoutContentInspection() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupZIADLPWebRulesResult) bool { return v.WithoutContentInspection }).(pulumi.BoolOutput)
}

func (o LookupZIADLPWebRulesResultOutput) ZscalerIncidentReciever() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupZIADLPWebRulesResult) bool { return v.ZscalerIncidentReciever }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupZIADLPWebRulesResultOutput{})
}
