// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zia

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "zia:index/zIAActivationStatus:ZIAActivationStatus":
		r = &ZIAActivationStatus{}
	case "zia:index/zIAAdminUsers:ZIAAdminUsers":
		r = &ZIAAdminUsers{}
	case "zia:index/zIAAuthSettingsURLs:ZIAAuthSettingsURLs":
		r = &ZIAAuthSettingsURLs{}
	case "zia:index/zIADLPDictionaries:ZIADLPDictionaries":
		r = &ZIADLPDictionaries{}
	case "zia:index/zIADLPNotificationTemplates:ZIADLPNotificationTemplates":
		r = &ZIADLPNotificationTemplates{}
	case "zia:index/zIADLPWebRules:ZIADLPWebRules":
		r = &ZIADLPWebRules{}
	case "zia:index/zIAFirewallFilteringApplicationGroups:ZIAFirewallFilteringApplicationGroups":
		r = &ZIAFirewallFilteringApplicationGroups{}
	case "zia:index/zIAFirewallFilteringDestinationGroups:ZIAFirewallFilteringDestinationGroups":
		r = &ZIAFirewallFilteringDestinationGroups{}
	case "zia:index/zIAFirewallFilteringNetworkServices:ZIAFirewallFilteringNetworkServices":
		r = &ZIAFirewallFilteringNetworkServices{}
	case "zia:index/zIAFirewallFilteringRule:ZIAFirewallFilteringRule":
		r = &ZIAFirewallFilteringRule{}
	case "zia:index/zIAFirewallFilteringServiceGroups:ZIAFirewallFilteringServiceGroups":
		r = &ZIAFirewallFilteringServiceGroups{}
	case "zia:index/zIAFirewallFilteringSourceGroups:ZIAFirewallFilteringSourceGroups":
		r = &ZIAFirewallFilteringSourceGroups{}
	case "zia:index/zIALocationManagement:ZIALocationManagement":
		r = &ZIALocationManagement{}
	case "zia:index/zIARuleLabels:ZIARuleLabels":
		r = &ZIARuleLabels{}
	case "zia:index/zIASecuritySettings:ZIASecuritySettings":
		r = &ZIASecuritySettings{}
	case "zia:index/zIATrafficForwardingGRETunnel:ZIATrafficForwardingGRETunnel":
		r = &ZIATrafficForwardingGRETunnel{}
	case "zia:index/zIATrafficForwardingStaticIP:ZIATrafficForwardingStaticIP":
		r = &ZIATrafficForwardingStaticIP{}
	case "zia:index/zIATrafficForwardingVPNCredentials:ZIATrafficForwardingVPNCredentials":
		r = &ZIATrafficForwardingVPNCredentials{}
	case "zia:index/zIAURLCategories:ZIAURLCategories":
		r = &ZIAURLCategories{}
	case "zia:index/zIAURLFilteringRules:ZIAURLFilteringRules":
		r = &ZIAURLFilteringRules{}
	case "zia:index/zIAUserManagement:ZIAUserManagement":
		r = &ZIAUserManagement{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

type pkg struct {
	version semver.Version
}

func (p *pkg) Version() semver.Version {
	return p.version
}

func (p *pkg) ConstructProvider(ctx *pulumi.Context, name, typ, urn string) (pulumi.ProviderResource, error) {
	if typ != "pulumi:providers:zia" {
		return nil, fmt.Errorf("unknown provider type: %s", typ)
	}

	r := &Provider{}
	err := ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return r, err
}

func init() {
	version, _ := PkgVersion()
	pulumi.RegisterResourceModule(
		"zia",
		"index/zIAActivationStatus",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zia",
		"index/zIAAdminUsers",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zia",
		"index/zIAAuthSettingsURLs",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zia",
		"index/zIADLPDictionaries",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zia",
		"index/zIADLPNotificationTemplates",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zia",
		"index/zIADLPWebRules",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zia",
		"index/zIAFirewallFilteringApplicationGroups",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zia",
		"index/zIAFirewallFilteringDestinationGroups",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zia",
		"index/zIAFirewallFilteringNetworkServices",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zia",
		"index/zIAFirewallFilteringRule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zia",
		"index/zIAFirewallFilteringServiceGroups",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zia",
		"index/zIAFirewallFilteringSourceGroups",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zia",
		"index/zIALocationManagement",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zia",
		"index/zIARuleLabels",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zia",
		"index/zIASecuritySettings",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zia",
		"index/zIATrafficForwardingGRETunnel",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zia",
		"index/zIATrafficForwardingStaticIP",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zia",
		"index/zIATrafficForwardingVPNCredentials",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zia",
		"index/zIAURLCategories",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zia",
		"index/zIAURLFilteringRules",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"zia",
		"index/zIAUserManagement",
		&module{version},
	)
	pulumi.RegisterResourcePackage(
		"zia",
		&pkg{version},
	)
}
