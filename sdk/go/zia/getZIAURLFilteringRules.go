// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zia

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use the **zia_url_filtering_rules** data source to get information about a URL filtering rule information for the specified `Name`.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-zia/sdk/go/zia"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := zia.LookupZIAURLFilteringRules(ctx, &zia.LookupZIAURLFilteringRulesArgs{
//				Name: pulumi.StringRef("Example"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupZIAURLFilteringRules(ctx *pulumi.Context, args *LookupZIAURLFilteringRulesArgs, opts ...pulumi.InvokeOption) (*LookupZIAURLFilteringRulesResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupZIAURLFilteringRulesResult
	err := ctx.Invoke("zia:index/getZIAURLFilteringRules:getZIAURLFilteringRules", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getZIAURLFilteringRules.
type LookupZIAURLFilteringRulesArgs struct {
	DeviceTrustLevels []string `pulumi:"deviceTrustLevels"`
	// URL Filtering Rule ID
	Id *int `pulumi:"id"`
	// Name of the URL Filtering policy rule
	Name *string `pulumi:"name"`
	// (Number) Order of execution of rule with respect to other URL Filtering rules
	Order          *int     `pulumi:"order"`
	UserAgentTypes []string `pulumi:"userAgentTypes"`
}

// A collection of values returned by getZIAURLFilteringRules.
type LookupZIAURLFilteringRulesResult struct {
	// (String) Action taken when traffic matches rule criteria. Supported values: `ANY`, `NONE`, `BLOCK`, `CAUTION`, `ALLOW`, `ICAP_RESPONSE`
	Action string `pulumi:"action"`
	// (String) When set to true, a `BLOCK` action triggered by the rule could be overridden. If true and both overrideGroup and overrideUsers are not set, the `BLOCK` triggered by this rule could be overridden for any users. If block)Override is not set, `BLOCK` action cannot be overridden.
	BlockOverride bool `pulumi:"blockOverride"`
	CbiProfileId  int  `pulumi:"cbiProfileId"`
	Ciparule      bool `pulumi:"ciparule"`
	// (List of Object) The departments to which the Firewall Filtering policy rule applies
	Departments []GetZIAURLFilteringRulesDepartment `pulumi:"departments"`
	// (String) Additional information about the rule
	Description       string                               `pulumi:"description"`
	DeviceGroups      []GetZIAURLFilteringRulesDeviceGroup `pulumi:"deviceGroups"`
	DeviceTrustLevels []string                             `pulumi:"deviceTrustLevels"`
	Devices           []GetZIAURLFilteringRulesDevice      `pulumi:"devices"`
	// (String) URL of end user notification page to be displayed when the rule is matched. Not applicable if either 'overrideUsers' or 'overrideGroups' is specified.
	EndUserNotificationUrl string `pulumi:"endUserNotificationUrl"`
	// (String) Enforce a set a validity time period for the URL Filtering rule.
	EnforceTimeValidity bool `pulumi:"enforceTimeValidity"`
	// (List of Object) The groups to which the Firewall Filtering policy rule applies
	Groups []GetZIAURLFilteringRulesGroup `pulumi:"groups"`
	// (Number) Identifier that uniquely identifies an entity
	Id               int                                     `pulumi:"id"`
	Labels           []GetZIAURLFilteringRulesLabel          `pulumi:"labels"`
	LastModifiedBies []GetZIAURLFilteringRulesLastModifiedBy `pulumi:"lastModifiedBies"`
	// (Number) When the rule was last modified
	LastModifiedTime int `pulumi:"lastModifiedTime"`
	// (List of Object) The location groups to which the Firewall Filtering policy rule applies
	LocationGroups []GetZIAURLFilteringRulesLocationGroup `pulumi:"locationGroups"`
	// (List of Object) The locations to which the Firewall Filtering policy rule applies
	Locations []GetZIAURLFilteringRulesLocation `pulumi:"locations"`
	// (String) The configured name of the entity
	Name string `pulumi:"name"`
	// (Number) Order of execution of rule with respect to other URL Filtering rules
	Order int `pulumi:"order"`
	// (List of Object) Name-ID pairs of users for which this rule can be overridden. Applicable only if blockOverride is set to `true`, action is `BLOCK` and overrideGroups is not set.If this overrideUsers is not set, `BLOCK` action can be overridden for any group.
	OverrideGroups []GetZIAURLFilteringRulesOverrideGroup `pulumi:"overrideGroups"`
	// (List of Object) Name-ID pairs of users for which this rule can be overridden. Applicable only if blockOverride is set to `true`, action is `BLOCK` and overrideGroups is not set.If this overrideUsers is not set, `BLOCK` action can be overridden for any user.
	OverrideUsers []GetZIAURLFilteringRulesOverrideUser `pulumi:"overrideUsers"`
	// (List of Object) Protocol criteria. Supported values: `SMRULEF_ZPA_BROKERS_RULE`, `ANY_RULE`, `TCP_RULE`, `UDP_RULE`, `DOHTTPS_RULE`, `TUNNELSSL_RULE`, `HTTP_PROXY`, `FOHTTP_RULE`, `FTP_RULE`, `HTTPS_RULE`, `HTTP_RULE`, `SSL_RULE`, `TUNNEL_RULE`.
	Protocols []string `pulumi:"protocols"`
	// (String) Admin rank of the admin who creates this rule
	Rank int `pulumi:"rank"`
	// (String) Request method for which the rule must be applied. If not set, rule will be applied to all methods
	RequestMethods []string `pulumi:"requestMethods"`
	// (String) Size quota in KB beyond which the URL Filtering rule is applied. If not set, no quota is enforced. If a policy rule action is set to `BLOCK`, this field is not applicable.
	SizeQuota int `pulumi:"sizeQuota"`
	// (String) Rule State
	State string `pulumi:"state"`
	// (String) Time quota in minutes, after which the URL Filtering rule is applied. If not set, no quota is enforced. If a policy rule action is set to `BLOCK`, this field is not applicable.
	TimeQuota int `pulumi:"timeQuota"`
	// (List of Object) The time interval in which the Firewall Filtering policy rule applies
	TimeWindows []GetZIAURLFilteringRulesTimeWindow `pulumi:"timeWindows"`
	// (String) List of URL categories for which rule must be applied
	UrlCategories  []string `pulumi:"urlCategories"`
	UserAgentTypes []string `pulumi:"userAgentTypes"`
	// (List of Object) The users to which the Firewall Filtering policy rule applies
	Users []GetZIAURLFilteringRulesUser `pulumi:"users"`
	// (Number) If enforceTimeValidity is set to true, the URL Filtering rule will cease to be valid on this end date and time.
	ValidityEndTime int `pulumi:"validityEndTime"`
	// (Number) If enforceTimeValidity is set to true, the URL Filtering rule will be valid starting on this date and time.
	ValidityStartTime int `pulumi:"validityStartTime"`
	// (Number) If enforceTimeValidity is set to true, the URL Filtering rule date and time will be valid based on this time zone ID.
	ValidityTimeZoneId string `pulumi:"validityTimeZoneId"`
}

func LookupZIAURLFilteringRulesOutput(ctx *pulumi.Context, args LookupZIAURLFilteringRulesOutputArgs, opts ...pulumi.InvokeOption) LookupZIAURLFilteringRulesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupZIAURLFilteringRulesResult, error) {
			args := v.(LookupZIAURLFilteringRulesArgs)
			r, err := LookupZIAURLFilteringRules(ctx, &args, opts...)
			var s LookupZIAURLFilteringRulesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupZIAURLFilteringRulesResultOutput)
}

// A collection of arguments for invoking getZIAURLFilteringRules.
type LookupZIAURLFilteringRulesOutputArgs struct {
	DeviceTrustLevels pulumi.StringArrayInput `pulumi:"deviceTrustLevels"`
	// URL Filtering Rule ID
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Name of the URL Filtering policy rule
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Number) Order of execution of rule with respect to other URL Filtering rules
	Order          pulumi.IntPtrInput      `pulumi:"order"`
	UserAgentTypes pulumi.StringArrayInput `pulumi:"userAgentTypes"`
}

func (LookupZIAURLFilteringRulesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupZIAURLFilteringRulesArgs)(nil)).Elem()
}

// A collection of values returned by getZIAURLFilteringRules.
type LookupZIAURLFilteringRulesResultOutput struct{ *pulumi.OutputState }

func (LookupZIAURLFilteringRulesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupZIAURLFilteringRulesResult)(nil)).Elem()
}

func (o LookupZIAURLFilteringRulesResultOutput) ToLookupZIAURLFilteringRulesResultOutput() LookupZIAURLFilteringRulesResultOutput {
	return o
}

func (o LookupZIAURLFilteringRulesResultOutput) ToLookupZIAURLFilteringRulesResultOutputWithContext(ctx context.Context) LookupZIAURLFilteringRulesResultOutput {
	return o
}

// (String) Action taken when traffic matches rule criteria. Supported values: `ANY`, `NONE`, `BLOCK`, `CAUTION`, `ALLOW`, `ICAP_RESPONSE`
func (o LookupZIAURLFilteringRulesResultOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZIAURLFilteringRulesResult) string { return v.Action }).(pulumi.StringOutput)
}

// (String) When set to true, a `BLOCK` action triggered by the rule could be overridden. If true and both overrideGroup and overrideUsers are not set, the `BLOCK` triggered by this rule could be overridden for any users. If block)Override is not set, `BLOCK` action cannot be overridden.
func (o LookupZIAURLFilteringRulesResultOutput) BlockOverride() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupZIAURLFilteringRulesResult) bool { return v.BlockOverride }).(pulumi.BoolOutput)
}

func (o LookupZIAURLFilteringRulesResultOutput) CbiProfileId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupZIAURLFilteringRulesResult) int { return v.CbiProfileId }).(pulumi.IntOutput)
}

func (o LookupZIAURLFilteringRulesResultOutput) Ciparule() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupZIAURLFilteringRulesResult) bool { return v.Ciparule }).(pulumi.BoolOutput)
}

// (List of Object) The departments to which the Firewall Filtering policy rule applies
func (o LookupZIAURLFilteringRulesResultOutput) Departments() GetZIAURLFilteringRulesDepartmentArrayOutput {
	return o.ApplyT(func(v LookupZIAURLFilteringRulesResult) []GetZIAURLFilteringRulesDepartment { return v.Departments }).(GetZIAURLFilteringRulesDepartmentArrayOutput)
}

// (String) Additional information about the rule
func (o LookupZIAURLFilteringRulesResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZIAURLFilteringRulesResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupZIAURLFilteringRulesResultOutput) DeviceGroups() GetZIAURLFilteringRulesDeviceGroupArrayOutput {
	return o.ApplyT(func(v LookupZIAURLFilteringRulesResult) []GetZIAURLFilteringRulesDeviceGroup { return v.DeviceGroups }).(GetZIAURLFilteringRulesDeviceGroupArrayOutput)
}

func (o LookupZIAURLFilteringRulesResultOutput) DeviceTrustLevels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupZIAURLFilteringRulesResult) []string { return v.DeviceTrustLevels }).(pulumi.StringArrayOutput)
}

func (o LookupZIAURLFilteringRulesResultOutput) Devices() GetZIAURLFilteringRulesDeviceArrayOutput {
	return o.ApplyT(func(v LookupZIAURLFilteringRulesResult) []GetZIAURLFilteringRulesDevice { return v.Devices }).(GetZIAURLFilteringRulesDeviceArrayOutput)
}

// (String) URL of end user notification page to be displayed when the rule is matched. Not applicable if either 'overrideUsers' or 'overrideGroups' is specified.
func (o LookupZIAURLFilteringRulesResultOutput) EndUserNotificationUrl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZIAURLFilteringRulesResult) string { return v.EndUserNotificationUrl }).(pulumi.StringOutput)
}

// (String) Enforce a set a validity time period for the URL Filtering rule.
func (o LookupZIAURLFilteringRulesResultOutput) EnforceTimeValidity() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupZIAURLFilteringRulesResult) bool { return v.EnforceTimeValidity }).(pulumi.BoolOutput)
}

// (List of Object) The groups to which the Firewall Filtering policy rule applies
func (o LookupZIAURLFilteringRulesResultOutput) Groups() GetZIAURLFilteringRulesGroupArrayOutput {
	return o.ApplyT(func(v LookupZIAURLFilteringRulesResult) []GetZIAURLFilteringRulesGroup { return v.Groups }).(GetZIAURLFilteringRulesGroupArrayOutput)
}

// (Number) Identifier that uniquely identifies an entity
func (o LookupZIAURLFilteringRulesResultOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v LookupZIAURLFilteringRulesResult) int { return v.Id }).(pulumi.IntOutput)
}

func (o LookupZIAURLFilteringRulesResultOutput) Labels() GetZIAURLFilteringRulesLabelArrayOutput {
	return o.ApplyT(func(v LookupZIAURLFilteringRulesResult) []GetZIAURLFilteringRulesLabel { return v.Labels }).(GetZIAURLFilteringRulesLabelArrayOutput)
}

func (o LookupZIAURLFilteringRulesResultOutput) LastModifiedBies() GetZIAURLFilteringRulesLastModifiedByArrayOutput {
	return o.ApplyT(func(v LookupZIAURLFilteringRulesResult) []GetZIAURLFilteringRulesLastModifiedBy {
		return v.LastModifiedBies
	}).(GetZIAURLFilteringRulesLastModifiedByArrayOutput)
}

// (Number) When the rule was last modified
func (o LookupZIAURLFilteringRulesResultOutput) LastModifiedTime() pulumi.IntOutput {
	return o.ApplyT(func(v LookupZIAURLFilteringRulesResult) int { return v.LastModifiedTime }).(pulumi.IntOutput)
}

// (List of Object) The location groups to which the Firewall Filtering policy rule applies
func (o LookupZIAURLFilteringRulesResultOutput) LocationGroups() GetZIAURLFilteringRulesLocationGroupArrayOutput {
	return o.ApplyT(func(v LookupZIAURLFilteringRulesResult) []GetZIAURLFilteringRulesLocationGroup {
		return v.LocationGroups
	}).(GetZIAURLFilteringRulesLocationGroupArrayOutput)
}

// (List of Object) The locations to which the Firewall Filtering policy rule applies
func (o LookupZIAURLFilteringRulesResultOutput) Locations() GetZIAURLFilteringRulesLocationArrayOutput {
	return o.ApplyT(func(v LookupZIAURLFilteringRulesResult) []GetZIAURLFilteringRulesLocation { return v.Locations }).(GetZIAURLFilteringRulesLocationArrayOutput)
}

// (String) The configured name of the entity
func (o LookupZIAURLFilteringRulesResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZIAURLFilteringRulesResult) string { return v.Name }).(pulumi.StringOutput)
}

// (Number) Order of execution of rule with respect to other URL Filtering rules
func (o LookupZIAURLFilteringRulesResultOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v LookupZIAURLFilteringRulesResult) int { return v.Order }).(pulumi.IntOutput)
}

// (List of Object) Name-ID pairs of users for which this rule can be overridden. Applicable only if blockOverride is set to `true`, action is `BLOCK` and overrideGroups is not set.If this overrideUsers is not set, `BLOCK` action can be overridden for any group.
func (o LookupZIAURLFilteringRulesResultOutput) OverrideGroups() GetZIAURLFilteringRulesOverrideGroupArrayOutput {
	return o.ApplyT(func(v LookupZIAURLFilteringRulesResult) []GetZIAURLFilteringRulesOverrideGroup {
		return v.OverrideGroups
	}).(GetZIAURLFilteringRulesOverrideGroupArrayOutput)
}

// (List of Object) Name-ID pairs of users for which this rule can be overridden. Applicable only if blockOverride is set to `true`, action is `BLOCK` and overrideGroups is not set.If this overrideUsers is not set, `BLOCK` action can be overridden for any user.
func (o LookupZIAURLFilteringRulesResultOutput) OverrideUsers() GetZIAURLFilteringRulesOverrideUserArrayOutput {
	return o.ApplyT(func(v LookupZIAURLFilteringRulesResult) []GetZIAURLFilteringRulesOverrideUser { return v.OverrideUsers }).(GetZIAURLFilteringRulesOverrideUserArrayOutput)
}

// (List of Object) Protocol criteria. Supported values: `SMRULEF_ZPA_BROKERS_RULE`, `ANY_RULE`, `TCP_RULE`, `UDP_RULE`, `DOHTTPS_RULE`, `TUNNELSSL_RULE`, `HTTP_PROXY`, `FOHTTP_RULE`, `FTP_RULE`, `HTTPS_RULE`, `HTTP_RULE`, `SSL_RULE`, `TUNNEL_RULE`.
func (o LookupZIAURLFilteringRulesResultOutput) Protocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupZIAURLFilteringRulesResult) []string { return v.Protocols }).(pulumi.StringArrayOutput)
}

// (String) Admin rank of the admin who creates this rule
func (o LookupZIAURLFilteringRulesResultOutput) Rank() pulumi.IntOutput {
	return o.ApplyT(func(v LookupZIAURLFilteringRulesResult) int { return v.Rank }).(pulumi.IntOutput)
}

// (String) Request method for which the rule must be applied. If not set, rule will be applied to all methods
func (o LookupZIAURLFilteringRulesResultOutput) RequestMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupZIAURLFilteringRulesResult) []string { return v.RequestMethods }).(pulumi.StringArrayOutput)
}

// (String) Size quota in KB beyond which the URL Filtering rule is applied. If not set, no quota is enforced. If a policy rule action is set to `BLOCK`, this field is not applicable.
func (o LookupZIAURLFilteringRulesResultOutput) SizeQuota() pulumi.IntOutput {
	return o.ApplyT(func(v LookupZIAURLFilteringRulesResult) int { return v.SizeQuota }).(pulumi.IntOutput)
}

// (String) Rule State
func (o LookupZIAURLFilteringRulesResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZIAURLFilteringRulesResult) string { return v.State }).(pulumi.StringOutput)
}

// (String) Time quota in minutes, after which the URL Filtering rule is applied. If not set, no quota is enforced. If a policy rule action is set to `BLOCK`, this field is not applicable.
func (o LookupZIAURLFilteringRulesResultOutput) TimeQuota() pulumi.IntOutput {
	return o.ApplyT(func(v LookupZIAURLFilteringRulesResult) int { return v.TimeQuota }).(pulumi.IntOutput)
}

// (List of Object) The time interval in which the Firewall Filtering policy rule applies
func (o LookupZIAURLFilteringRulesResultOutput) TimeWindows() GetZIAURLFilteringRulesTimeWindowArrayOutput {
	return o.ApplyT(func(v LookupZIAURLFilteringRulesResult) []GetZIAURLFilteringRulesTimeWindow { return v.TimeWindows }).(GetZIAURLFilteringRulesTimeWindowArrayOutput)
}

// (String) List of URL categories for which rule must be applied
func (o LookupZIAURLFilteringRulesResultOutput) UrlCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupZIAURLFilteringRulesResult) []string { return v.UrlCategories }).(pulumi.StringArrayOutput)
}

func (o LookupZIAURLFilteringRulesResultOutput) UserAgentTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupZIAURLFilteringRulesResult) []string { return v.UserAgentTypes }).(pulumi.StringArrayOutput)
}

// (List of Object) The users to which the Firewall Filtering policy rule applies
func (o LookupZIAURLFilteringRulesResultOutput) Users() GetZIAURLFilteringRulesUserArrayOutput {
	return o.ApplyT(func(v LookupZIAURLFilteringRulesResult) []GetZIAURLFilteringRulesUser { return v.Users }).(GetZIAURLFilteringRulesUserArrayOutput)
}

// (Number) If enforceTimeValidity is set to true, the URL Filtering rule will cease to be valid on this end date and time.
func (o LookupZIAURLFilteringRulesResultOutput) ValidityEndTime() pulumi.IntOutput {
	return o.ApplyT(func(v LookupZIAURLFilteringRulesResult) int { return v.ValidityEndTime }).(pulumi.IntOutput)
}

// (Number) If enforceTimeValidity is set to true, the URL Filtering rule will be valid starting on this date and time.
func (o LookupZIAURLFilteringRulesResultOutput) ValidityStartTime() pulumi.IntOutput {
	return o.ApplyT(func(v LookupZIAURLFilteringRulesResult) int { return v.ValidityStartTime }).(pulumi.IntOutput)
}

// (Number) If enforceTimeValidity is set to true, the URL Filtering rule date and time will be valid based on this time zone ID.
func (o LookupZIAURLFilteringRulesResultOutput) ValidityTimeZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZIAURLFilteringRulesResult) string { return v.ValidityTimeZoneId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupZIAURLFilteringRulesResultOutput{})
}
