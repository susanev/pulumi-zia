// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zia

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The **zia_auth_settings_urls** resource alows you to add or remove a URL from the cookie authentication exempt list in the Zscaler Internet Access cloud or via the API. To learn more see [URL Format Guidelines](https://help.zscaler.com/zia/url-format-guidelines)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-zia/sdk/go/zia"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := zia.NewZIAAuthSettingsURLs(ctx, "example", &zia.ZIAAuthSettingsURLsArgs{
//				Urls: pulumi.StringArray{
//					pulumi.String(".okta.com"),
//					pulumi.String(".oktacdn.com"),
//					pulumi.String(".mtls.oktapreview.com"),
//					pulumi.String(".mtls.okta.com"),
//					pulumi.String("d3l44rcogcb7iv.cloudfront.net"),
//					pulumi.String("pac.zdxcloud.net"),
//					pulumi.String(".windowsazure.com"),
//					pulumi.String(".fedoraproject.org"),
//					pulumi.String("login.windows.net"),
//					pulumi.String("d32a6ru7mhaq0c.cloudfront.net"),
//					pulumi.String(".kerberos.oktapreview.com"),
//					pulumi.String(".oktapreview.com"),
//					pulumi.String("login.zdxcloud.net"),
//					pulumi.String("login.microsoftonline.com"),
//					pulumi.String("smres.zdxcloud.net"),
//					pulumi.String(".kerberos.okta.com"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type ZIAAuthSettingsURLs struct {
	pulumi.CustomResourceState

	// The email address of the admin user to be exported.
	Urls pulumi.StringArrayOutput `pulumi:"urls"`
}

// NewZIAAuthSettingsURLs registers a new resource with the given unique name, arguments, and options.
func NewZIAAuthSettingsURLs(ctx *pulumi.Context,
	name string, args *ZIAAuthSettingsURLsArgs, opts ...pulumi.ResourceOption) (*ZIAAuthSettingsURLs, error) {
	if args == nil {
		args = &ZIAAuthSettingsURLsArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource ZIAAuthSettingsURLs
	err := ctx.RegisterResource("zia:index/zIAAuthSettingsURLs:ZIAAuthSettingsURLs", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetZIAAuthSettingsURLs gets an existing ZIAAuthSettingsURLs resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetZIAAuthSettingsURLs(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ZIAAuthSettingsURLsState, opts ...pulumi.ResourceOption) (*ZIAAuthSettingsURLs, error) {
	var resource ZIAAuthSettingsURLs
	err := ctx.ReadResource("zia:index/zIAAuthSettingsURLs:ZIAAuthSettingsURLs", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ZIAAuthSettingsURLs resources.
type ziaauthSettingsURLsState struct {
	// The email address of the admin user to be exported.
	Urls []string `pulumi:"urls"`
}

type ZIAAuthSettingsURLsState struct {
	// The email address of the admin user to be exported.
	Urls pulumi.StringArrayInput
}

func (ZIAAuthSettingsURLsState) ElementType() reflect.Type {
	return reflect.TypeOf((*ziaauthSettingsURLsState)(nil)).Elem()
}

type ziaauthSettingsURLsArgs struct {
	// The email address of the admin user to be exported.
	Urls []string `pulumi:"urls"`
}

// The set of arguments for constructing a ZIAAuthSettingsURLs resource.
type ZIAAuthSettingsURLsArgs struct {
	// The email address of the admin user to be exported.
	Urls pulumi.StringArrayInput
}

func (ZIAAuthSettingsURLsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ziaauthSettingsURLsArgs)(nil)).Elem()
}

type ZIAAuthSettingsURLsInput interface {
	pulumi.Input

	ToZIAAuthSettingsURLsOutput() ZIAAuthSettingsURLsOutput
	ToZIAAuthSettingsURLsOutputWithContext(ctx context.Context) ZIAAuthSettingsURLsOutput
}

func (*ZIAAuthSettingsURLs) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAAuthSettingsURLs)(nil)).Elem()
}

func (i *ZIAAuthSettingsURLs) ToZIAAuthSettingsURLsOutput() ZIAAuthSettingsURLsOutput {
	return i.ToZIAAuthSettingsURLsOutputWithContext(context.Background())
}

func (i *ZIAAuthSettingsURLs) ToZIAAuthSettingsURLsOutputWithContext(ctx context.Context) ZIAAuthSettingsURLsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAAuthSettingsURLsOutput)
}

// ZIAAuthSettingsURLsArrayInput is an input type that accepts ZIAAuthSettingsURLsArray and ZIAAuthSettingsURLsArrayOutput values.
// You can construct a concrete instance of `ZIAAuthSettingsURLsArrayInput` via:
//
//	ZIAAuthSettingsURLsArray{ ZIAAuthSettingsURLsArgs{...} }
type ZIAAuthSettingsURLsArrayInput interface {
	pulumi.Input

	ToZIAAuthSettingsURLsArrayOutput() ZIAAuthSettingsURLsArrayOutput
	ToZIAAuthSettingsURLsArrayOutputWithContext(context.Context) ZIAAuthSettingsURLsArrayOutput
}

type ZIAAuthSettingsURLsArray []ZIAAuthSettingsURLsInput

func (ZIAAuthSettingsURLsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZIAAuthSettingsURLs)(nil)).Elem()
}

func (i ZIAAuthSettingsURLsArray) ToZIAAuthSettingsURLsArrayOutput() ZIAAuthSettingsURLsArrayOutput {
	return i.ToZIAAuthSettingsURLsArrayOutputWithContext(context.Background())
}

func (i ZIAAuthSettingsURLsArray) ToZIAAuthSettingsURLsArrayOutputWithContext(ctx context.Context) ZIAAuthSettingsURLsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAAuthSettingsURLsArrayOutput)
}

// ZIAAuthSettingsURLsMapInput is an input type that accepts ZIAAuthSettingsURLsMap and ZIAAuthSettingsURLsMapOutput values.
// You can construct a concrete instance of `ZIAAuthSettingsURLsMapInput` via:
//
//	ZIAAuthSettingsURLsMap{ "key": ZIAAuthSettingsURLsArgs{...} }
type ZIAAuthSettingsURLsMapInput interface {
	pulumi.Input

	ToZIAAuthSettingsURLsMapOutput() ZIAAuthSettingsURLsMapOutput
	ToZIAAuthSettingsURLsMapOutputWithContext(context.Context) ZIAAuthSettingsURLsMapOutput
}

type ZIAAuthSettingsURLsMap map[string]ZIAAuthSettingsURLsInput

func (ZIAAuthSettingsURLsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZIAAuthSettingsURLs)(nil)).Elem()
}

func (i ZIAAuthSettingsURLsMap) ToZIAAuthSettingsURLsMapOutput() ZIAAuthSettingsURLsMapOutput {
	return i.ToZIAAuthSettingsURLsMapOutputWithContext(context.Background())
}

func (i ZIAAuthSettingsURLsMap) ToZIAAuthSettingsURLsMapOutputWithContext(ctx context.Context) ZIAAuthSettingsURLsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZIAAuthSettingsURLsMapOutput)
}

type ZIAAuthSettingsURLsOutput struct{ *pulumi.OutputState }

func (ZIAAuthSettingsURLsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZIAAuthSettingsURLs)(nil)).Elem()
}

func (o ZIAAuthSettingsURLsOutput) ToZIAAuthSettingsURLsOutput() ZIAAuthSettingsURLsOutput {
	return o
}

func (o ZIAAuthSettingsURLsOutput) ToZIAAuthSettingsURLsOutputWithContext(ctx context.Context) ZIAAuthSettingsURLsOutput {
	return o
}

// The email address of the admin user to be exported.
func (o ZIAAuthSettingsURLsOutput) Urls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ZIAAuthSettingsURLs) pulumi.StringArrayOutput { return v.Urls }).(pulumi.StringArrayOutput)
}

type ZIAAuthSettingsURLsArrayOutput struct{ *pulumi.OutputState }

func (ZIAAuthSettingsURLsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZIAAuthSettingsURLs)(nil)).Elem()
}

func (o ZIAAuthSettingsURLsArrayOutput) ToZIAAuthSettingsURLsArrayOutput() ZIAAuthSettingsURLsArrayOutput {
	return o
}

func (o ZIAAuthSettingsURLsArrayOutput) ToZIAAuthSettingsURLsArrayOutputWithContext(ctx context.Context) ZIAAuthSettingsURLsArrayOutput {
	return o
}

func (o ZIAAuthSettingsURLsArrayOutput) Index(i pulumi.IntInput) ZIAAuthSettingsURLsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ZIAAuthSettingsURLs {
		return vs[0].([]*ZIAAuthSettingsURLs)[vs[1].(int)]
	}).(ZIAAuthSettingsURLsOutput)
}

type ZIAAuthSettingsURLsMapOutput struct{ *pulumi.OutputState }

func (ZIAAuthSettingsURLsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZIAAuthSettingsURLs)(nil)).Elem()
}

func (o ZIAAuthSettingsURLsMapOutput) ToZIAAuthSettingsURLsMapOutput() ZIAAuthSettingsURLsMapOutput {
	return o
}

func (o ZIAAuthSettingsURLsMapOutput) ToZIAAuthSettingsURLsMapOutputWithContext(ctx context.Context) ZIAAuthSettingsURLsMapOutput {
	return o
}

func (o ZIAAuthSettingsURLsMapOutput) MapIndex(k pulumi.StringInput) ZIAAuthSettingsURLsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ZIAAuthSettingsURLs {
		return vs[0].(map[string]*ZIAAuthSettingsURLs)[vs[1].(string)]
	}).(ZIAAuthSettingsURLsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAAuthSettingsURLsInput)(nil)).Elem(), &ZIAAuthSettingsURLs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAAuthSettingsURLsArrayInput)(nil)).Elem(), ZIAAuthSettingsURLsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZIAAuthSettingsURLsMapInput)(nil)).Elem(), ZIAAuthSettingsURLsMap{})
	pulumi.RegisterOutputType(ZIAAuthSettingsURLsOutput{})
	pulumi.RegisterOutputType(ZIAAuthSettingsURLsArrayOutput{})
	pulumi.RegisterOutputType(ZIAAuthSettingsURLsMapOutput{})
}
