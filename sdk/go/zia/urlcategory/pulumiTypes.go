// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package urlcategory

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type URLCategoriesScope struct {
	ScopeEntities *URLCategoriesScopeScopeEntities `pulumi:"scopeEntities"`
	// Only applicable for the LOCATION_GROUP admin scope type, in which case this attribute gives the list of ID/name pairs of locations within the location group. The attribute name is subject to change.
	ScopeGroupMemberEntities *URLCategoriesScopeScopeGroupMemberEntities `pulumi:"scopeGroupMemberEntities"`
	// Type of the custom categories. `URL_CATEGORY`, `TLD_CATEGORY`, `ALL`
	Type *string `pulumi:"type"`
}

// URLCategoriesScopeInput is an input type that accepts URLCategoriesScopeArgs and URLCategoriesScopeOutput values.
// You can construct a concrete instance of `URLCategoriesScopeInput` via:
//
//	URLCategoriesScopeArgs{...}
type URLCategoriesScopeInput interface {
	pulumi.Input

	ToURLCategoriesScopeOutput() URLCategoriesScopeOutput
	ToURLCategoriesScopeOutputWithContext(context.Context) URLCategoriesScopeOutput
}

type URLCategoriesScopeArgs struct {
	ScopeEntities URLCategoriesScopeScopeEntitiesPtrInput `pulumi:"scopeEntities"`
	// Only applicable for the LOCATION_GROUP admin scope type, in which case this attribute gives the list of ID/name pairs of locations within the location group. The attribute name is subject to change.
	ScopeGroupMemberEntities URLCategoriesScopeScopeGroupMemberEntitiesPtrInput `pulumi:"scopeGroupMemberEntities"`
	// Type of the custom categories. `URL_CATEGORY`, `TLD_CATEGORY`, `ALL`
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (URLCategoriesScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*URLCategoriesScope)(nil)).Elem()
}

func (i URLCategoriesScopeArgs) ToURLCategoriesScopeOutput() URLCategoriesScopeOutput {
	return i.ToURLCategoriesScopeOutputWithContext(context.Background())
}

func (i URLCategoriesScopeArgs) ToURLCategoriesScopeOutputWithContext(ctx context.Context) URLCategoriesScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(URLCategoriesScopeOutput)
}

// URLCategoriesScopeArrayInput is an input type that accepts URLCategoriesScopeArray and URLCategoriesScopeArrayOutput values.
// You can construct a concrete instance of `URLCategoriesScopeArrayInput` via:
//
//	URLCategoriesScopeArray{ URLCategoriesScopeArgs{...} }
type URLCategoriesScopeArrayInput interface {
	pulumi.Input

	ToURLCategoriesScopeArrayOutput() URLCategoriesScopeArrayOutput
	ToURLCategoriesScopeArrayOutputWithContext(context.Context) URLCategoriesScopeArrayOutput
}

type URLCategoriesScopeArray []URLCategoriesScopeInput

func (URLCategoriesScopeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]URLCategoriesScope)(nil)).Elem()
}

func (i URLCategoriesScopeArray) ToURLCategoriesScopeArrayOutput() URLCategoriesScopeArrayOutput {
	return i.ToURLCategoriesScopeArrayOutputWithContext(context.Background())
}

func (i URLCategoriesScopeArray) ToURLCategoriesScopeArrayOutputWithContext(ctx context.Context) URLCategoriesScopeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(URLCategoriesScopeArrayOutput)
}

type URLCategoriesScopeOutput struct{ *pulumi.OutputState }

func (URLCategoriesScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*URLCategoriesScope)(nil)).Elem()
}

func (o URLCategoriesScopeOutput) ToURLCategoriesScopeOutput() URLCategoriesScopeOutput {
	return o
}

func (o URLCategoriesScopeOutput) ToURLCategoriesScopeOutputWithContext(ctx context.Context) URLCategoriesScopeOutput {
	return o
}

func (o URLCategoriesScopeOutput) ScopeEntities() URLCategoriesScopeScopeEntitiesPtrOutput {
	return o.ApplyT(func(v URLCategoriesScope) *URLCategoriesScopeScopeEntities { return v.ScopeEntities }).(URLCategoriesScopeScopeEntitiesPtrOutput)
}

// Only applicable for the LOCATION_GROUP admin scope type, in which case this attribute gives the list of ID/name pairs of locations within the location group. The attribute name is subject to change.
func (o URLCategoriesScopeOutput) ScopeGroupMemberEntities() URLCategoriesScopeScopeGroupMemberEntitiesPtrOutput {
	return o.ApplyT(func(v URLCategoriesScope) *URLCategoriesScopeScopeGroupMemberEntities {
		return v.ScopeGroupMemberEntities
	}).(URLCategoriesScopeScopeGroupMemberEntitiesPtrOutput)
}

// Type of the custom categories. `URL_CATEGORY`, `TLD_CATEGORY`, `ALL`
func (o URLCategoriesScopeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v URLCategoriesScope) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type URLCategoriesScopeArrayOutput struct{ *pulumi.OutputState }

func (URLCategoriesScopeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]URLCategoriesScope)(nil)).Elem()
}

func (o URLCategoriesScopeArrayOutput) ToURLCategoriesScopeArrayOutput() URLCategoriesScopeArrayOutput {
	return o
}

func (o URLCategoriesScopeArrayOutput) ToURLCategoriesScopeArrayOutputWithContext(ctx context.Context) URLCategoriesScopeArrayOutput {
	return o
}

func (o URLCategoriesScopeArrayOutput) Index(i pulumi.IntInput) URLCategoriesScopeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) URLCategoriesScope {
		return vs[0].([]URLCategoriesScope)[vs[1].(int)]
	}).(URLCategoriesScopeOutput)
}

type URLCategoriesScopeScopeEntities struct {
	Ids []int `pulumi:"ids"`
}

// URLCategoriesScopeScopeEntitiesInput is an input type that accepts URLCategoriesScopeScopeEntitiesArgs and URLCategoriesScopeScopeEntitiesOutput values.
// You can construct a concrete instance of `URLCategoriesScopeScopeEntitiesInput` via:
//
//	URLCategoriesScopeScopeEntitiesArgs{...}
type URLCategoriesScopeScopeEntitiesInput interface {
	pulumi.Input

	ToURLCategoriesScopeScopeEntitiesOutput() URLCategoriesScopeScopeEntitiesOutput
	ToURLCategoriesScopeScopeEntitiesOutputWithContext(context.Context) URLCategoriesScopeScopeEntitiesOutput
}

type URLCategoriesScopeScopeEntitiesArgs struct {
	Ids pulumi.IntArrayInput `pulumi:"ids"`
}

func (URLCategoriesScopeScopeEntitiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*URLCategoriesScopeScopeEntities)(nil)).Elem()
}

func (i URLCategoriesScopeScopeEntitiesArgs) ToURLCategoriesScopeScopeEntitiesOutput() URLCategoriesScopeScopeEntitiesOutput {
	return i.ToURLCategoriesScopeScopeEntitiesOutputWithContext(context.Background())
}

func (i URLCategoriesScopeScopeEntitiesArgs) ToURLCategoriesScopeScopeEntitiesOutputWithContext(ctx context.Context) URLCategoriesScopeScopeEntitiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(URLCategoriesScopeScopeEntitiesOutput)
}

func (i URLCategoriesScopeScopeEntitiesArgs) ToURLCategoriesScopeScopeEntitiesPtrOutput() URLCategoriesScopeScopeEntitiesPtrOutput {
	return i.ToURLCategoriesScopeScopeEntitiesPtrOutputWithContext(context.Background())
}

func (i URLCategoriesScopeScopeEntitiesArgs) ToURLCategoriesScopeScopeEntitiesPtrOutputWithContext(ctx context.Context) URLCategoriesScopeScopeEntitiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(URLCategoriesScopeScopeEntitiesOutput).ToURLCategoriesScopeScopeEntitiesPtrOutputWithContext(ctx)
}

// URLCategoriesScopeScopeEntitiesPtrInput is an input type that accepts URLCategoriesScopeScopeEntitiesArgs, URLCategoriesScopeScopeEntitiesPtr and URLCategoriesScopeScopeEntitiesPtrOutput values.
// You can construct a concrete instance of `URLCategoriesScopeScopeEntitiesPtrInput` via:
//
//	        URLCategoriesScopeScopeEntitiesArgs{...}
//
//	or:
//
//	        nil
type URLCategoriesScopeScopeEntitiesPtrInput interface {
	pulumi.Input

	ToURLCategoriesScopeScopeEntitiesPtrOutput() URLCategoriesScopeScopeEntitiesPtrOutput
	ToURLCategoriesScopeScopeEntitiesPtrOutputWithContext(context.Context) URLCategoriesScopeScopeEntitiesPtrOutput
}

type urlcategoriesScopeScopeEntitiesPtrType URLCategoriesScopeScopeEntitiesArgs

func URLCategoriesScopeScopeEntitiesPtr(v *URLCategoriesScopeScopeEntitiesArgs) URLCategoriesScopeScopeEntitiesPtrInput {
	return (*urlcategoriesScopeScopeEntitiesPtrType)(v)
}

func (*urlcategoriesScopeScopeEntitiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**URLCategoriesScopeScopeEntities)(nil)).Elem()
}

func (i *urlcategoriesScopeScopeEntitiesPtrType) ToURLCategoriesScopeScopeEntitiesPtrOutput() URLCategoriesScopeScopeEntitiesPtrOutput {
	return i.ToURLCategoriesScopeScopeEntitiesPtrOutputWithContext(context.Background())
}

func (i *urlcategoriesScopeScopeEntitiesPtrType) ToURLCategoriesScopeScopeEntitiesPtrOutputWithContext(ctx context.Context) URLCategoriesScopeScopeEntitiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(URLCategoriesScopeScopeEntitiesPtrOutput)
}

type URLCategoriesScopeScopeEntitiesOutput struct{ *pulumi.OutputState }

func (URLCategoriesScopeScopeEntitiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*URLCategoriesScopeScopeEntities)(nil)).Elem()
}

func (o URLCategoriesScopeScopeEntitiesOutput) ToURLCategoriesScopeScopeEntitiesOutput() URLCategoriesScopeScopeEntitiesOutput {
	return o
}

func (o URLCategoriesScopeScopeEntitiesOutput) ToURLCategoriesScopeScopeEntitiesOutputWithContext(ctx context.Context) URLCategoriesScopeScopeEntitiesOutput {
	return o
}

func (o URLCategoriesScopeScopeEntitiesOutput) ToURLCategoriesScopeScopeEntitiesPtrOutput() URLCategoriesScopeScopeEntitiesPtrOutput {
	return o.ToURLCategoriesScopeScopeEntitiesPtrOutputWithContext(context.Background())
}

func (o URLCategoriesScopeScopeEntitiesOutput) ToURLCategoriesScopeScopeEntitiesPtrOutputWithContext(ctx context.Context) URLCategoriesScopeScopeEntitiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v URLCategoriesScopeScopeEntities) *URLCategoriesScopeScopeEntities {
		return &v
	}).(URLCategoriesScopeScopeEntitiesPtrOutput)
}

func (o URLCategoriesScopeScopeEntitiesOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v URLCategoriesScopeScopeEntities) []int { return v.Ids }).(pulumi.IntArrayOutput)
}

type URLCategoriesScopeScopeEntitiesPtrOutput struct{ *pulumi.OutputState }

func (URLCategoriesScopeScopeEntitiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**URLCategoriesScopeScopeEntities)(nil)).Elem()
}

func (o URLCategoriesScopeScopeEntitiesPtrOutput) ToURLCategoriesScopeScopeEntitiesPtrOutput() URLCategoriesScopeScopeEntitiesPtrOutput {
	return o
}

func (o URLCategoriesScopeScopeEntitiesPtrOutput) ToURLCategoriesScopeScopeEntitiesPtrOutputWithContext(ctx context.Context) URLCategoriesScopeScopeEntitiesPtrOutput {
	return o
}

func (o URLCategoriesScopeScopeEntitiesPtrOutput) Elem() URLCategoriesScopeScopeEntitiesOutput {
	return o.ApplyT(func(v *URLCategoriesScopeScopeEntities) URLCategoriesScopeScopeEntities {
		if v != nil {
			return *v
		}
		var ret URLCategoriesScopeScopeEntities
		return ret
	}).(URLCategoriesScopeScopeEntitiesOutput)
}

func (o URLCategoriesScopeScopeEntitiesPtrOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *URLCategoriesScopeScopeEntities) []int {
		if v == nil {
			return nil
		}
		return v.Ids
	}).(pulumi.IntArrayOutput)
}

type URLCategoriesScopeScopeGroupMemberEntities struct {
	Ids []int `pulumi:"ids"`
}

// URLCategoriesScopeScopeGroupMemberEntitiesInput is an input type that accepts URLCategoriesScopeScopeGroupMemberEntitiesArgs and URLCategoriesScopeScopeGroupMemberEntitiesOutput values.
// You can construct a concrete instance of `URLCategoriesScopeScopeGroupMemberEntitiesInput` via:
//
//	URLCategoriesScopeScopeGroupMemberEntitiesArgs{...}
type URLCategoriesScopeScopeGroupMemberEntitiesInput interface {
	pulumi.Input

	ToURLCategoriesScopeScopeGroupMemberEntitiesOutput() URLCategoriesScopeScopeGroupMemberEntitiesOutput
	ToURLCategoriesScopeScopeGroupMemberEntitiesOutputWithContext(context.Context) URLCategoriesScopeScopeGroupMemberEntitiesOutput
}

type URLCategoriesScopeScopeGroupMemberEntitiesArgs struct {
	Ids pulumi.IntArrayInput `pulumi:"ids"`
}

func (URLCategoriesScopeScopeGroupMemberEntitiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*URLCategoriesScopeScopeGroupMemberEntities)(nil)).Elem()
}

func (i URLCategoriesScopeScopeGroupMemberEntitiesArgs) ToURLCategoriesScopeScopeGroupMemberEntitiesOutput() URLCategoriesScopeScopeGroupMemberEntitiesOutput {
	return i.ToURLCategoriesScopeScopeGroupMemberEntitiesOutputWithContext(context.Background())
}

func (i URLCategoriesScopeScopeGroupMemberEntitiesArgs) ToURLCategoriesScopeScopeGroupMemberEntitiesOutputWithContext(ctx context.Context) URLCategoriesScopeScopeGroupMemberEntitiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(URLCategoriesScopeScopeGroupMemberEntitiesOutput)
}

func (i URLCategoriesScopeScopeGroupMemberEntitiesArgs) ToURLCategoriesScopeScopeGroupMemberEntitiesPtrOutput() URLCategoriesScopeScopeGroupMemberEntitiesPtrOutput {
	return i.ToURLCategoriesScopeScopeGroupMemberEntitiesPtrOutputWithContext(context.Background())
}

func (i URLCategoriesScopeScopeGroupMemberEntitiesArgs) ToURLCategoriesScopeScopeGroupMemberEntitiesPtrOutputWithContext(ctx context.Context) URLCategoriesScopeScopeGroupMemberEntitiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(URLCategoriesScopeScopeGroupMemberEntitiesOutput).ToURLCategoriesScopeScopeGroupMemberEntitiesPtrOutputWithContext(ctx)
}

// URLCategoriesScopeScopeGroupMemberEntitiesPtrInput is an input type that accepts URLCategoriesScopeScopeGroupMemberEntitiesArgs, URLCategoriesScopeScopeGroupMemberEntitiesPtr and URLCategoriesScopeScopeGroupMemberEntitiesPtrOutput values.
// You can construct a concrete instance of `URLCategoriesScopeScopeGroupMemberEntitiesPtrInput` via:
//
//	        URLCategoriesScopeScopeGroupMemberEntitiesArgs{...}
//
//	or:
//
//	        nil
type URLCategoriesScopeScopeGroupMemberEntitiesPtrInput interface {
	pulumi.Input

	ToURLCategoriesScopeScopeGroupMemberEntitiesPtrOutput() URLCategoriesScopeScopeGroupMemberEntitiesPtrOutput
	ToURLCategoriesScopeScopeGroupMemberEntitiesPtrOutputWithContext(context.Context) URLCategoriesScopeScopeGroupMemberEntitiesPtrOutput
}

type urlcategoriesScopeScopeGroupMemberEntitiesPtrType URLCategoriesScopeScopeGroupMemberEntitiesArgs

func URLCategoriesScopeScopeGroupMemberEntitiesPtr(v *URLCategoriesScopeScopeGroupMemberEntitiesArgs) URLCategoriesScopeScopeGroupMemberEntitiesPtrInput {
	return (*urlcategoriesScopeScopeGroupMemberEntitiesPtrType)(v)
}

func (*urlcategoriesScopeScopeGroupMemberEntitiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**URLCategoriesScopeScopeGroupMemberEntities)(nil)).Elem()
}

func (i *urlcategoriesScopeScopeGroupMemberEntitiesPtrType) ToURLCategoriesScopeScopeGroupMemberEntitiesPtrOutput() URLCategoriesScopeScopeGroupMemberEntitiesPtrOutput {
	return i.ToURLCategoriesScopeScopeGroupMemberEntitiesPtrOutputWithContext(context.Background())
}

func (i *urlcategoriesScopeScopeGroupMemberEntitiesPtrType) ToURLCategoriesScopeScopeGroupMemberEntitiesPtrOutputWithContext(ctx context.Context) URLCategoriesScopeScopeGroupMemberEntitiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(URLCategoriesScopeScopeGroupMemberEntitiesPtrOutput)
}

type URLCategoriesScopeScopeGroupMemberEntitiesOutput struct{ *pulumi.OutputState }

func (URLCategoriesScopeScopeGroupMemberEntitiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*URLCategoriesScopeScopeGroupMemberEntities)(nil)).Elem()
}

func (o URLCategoriesScopeScopeGroupMemberEntitiesOutput) ToURLCategoriesScopeScopeGroupMemberEntitiesOutput() URLCategoriesScopeScopeGroupMemberEntitiesOutput {
	return o
}

func (o URLCategoriesScopeScopeGroupMemberEntitiesOutput) ToURLCategoriesScopeScopeGroupMemberEntitiesOutputWithContext(ctx context.Context) URLCategoriesScopeScopeGroupMemberEntitiesOutput {
	return o
}

func (o URLCategoriesScopeScopeGroupMemberEntitiesOutput) ToURLCategoriesScopeScopeGroupMemberEntitiesPtrOutput() URLCategoriesScopeScopeGroupMemberEntitiesPtrOutput {
	return o.ToURLCategoriesScopeScopeGroupMemberEntitiesPtrOutputWithContext(context.Background())
}

func (o URLCategoriesScopeScopeGroupMemberEntitiesOutput) ToURLCategoriesScopeScopeGroupMemberEntitiesPtrOutputWithContext(ctx context.Context) URLCategoriesScopeScopeGroupMemberEntitiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v URLCategoriesScopeScopeGroupMemberEntities) *URLCategoriesScopeScopeGroupMemberEntities {
		return &v
	}).(URLCategoriesScopeScopeGroupMemberEntitiesPtrOutput)
}

func (o URLCategoriesScopeScopeGroupMemberEntitiesOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v URLCategoriesScopeScopeGroupMemberEntities) []int { return v.Ids }).(pulumi.IntArrayOutput)
}

type URLCategoriesScopeScopeGroupMemberEntitiesPtrOutput struct{ *pulumi.OutputState }

func (URLCategoriesScopeScopeGroupMemberEntitiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**URLCategoriesScopeScopeGroupMemberEntities)(nil)).Elem()
}

func (o URLCategoriesScopeScopeGroupMemberEntitiesPtrOutput) ToURLCategoriesScopeScopeGroupMemberEntitiesPtrOutput() URLCategoriesScopeScopeGroupMemberEntitiesPtrOutput {
	return o
}

func (o URLCategoriesScopeScopeGroupMemberEntitiesPtrOutput) ToURLCategoriesScopeScopeGroupMemberEntitiesPtrOutputWithContext(ctx context.Context) URLCategoriesScopeScopeGroupMemberEntitiesPtrOutput {
	return o
}

func (o URLCategoriesScopeScopeGroupMemberEntitiesPtrOutput) Elem() URLCategoriesScopeScopeGroupMemberEntitiesOutput {
	return o.ApplyT(func(v *URLCategoriesScopeScopeGroupMemberEntities) URLCategoriesScopeScopeGroupMemberEntities {
		if v != nil {
			return *v
		}
		var ret URLCategoriesScopeScopeGroupMemberEntities
		return ret
	}).(URLCategoriesScopeScopeGroupMemberEntitiesOutput)
}

func (o URLCategoriesScopeScopeGroupMemberEntitiesPtrOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *URLCategoriesScopeScopeGroupMemberEntities) []int {
		if v == nil {
			return nil
		}
		return v.Ids
	}).(pulumi.IntArrayOutput)
}

type URLCategoriesUrlKeywordCounts struct {
	// Count of total keywords with retain parent category.
	RetainParentKeywordCount *int `pulumi:"retainParentKeywordCount"`
	// Count of URLs with retain parent category.
	RetainParentUrlCount *int `pulumi:"retainParentUrlCount"`
	// Total keyword count for the category.
	TotalKeywordCount *int `pulumi:"totalKeywordCount"`
	// Custom URL count for the category.
	TotalUrlCount *int `pulumi:"totalUrlCount"`
}

// URLCategoriesUrlKeywordCountsInput is an input type that accepts URLCategoriesUrlKeywordCountsArgs and URLCategoriesUrlKeywordCountsOutput values.
// You can construct a concrete instance of `URLCategoriesUrlKeywordCountsInput` via:
//
//	URLCategoriesUrlKeywordCountsArgs{...}
type URLCategoriesUrlKeywordCountsInput interface {
	pulumi.Input

	ToURLCategoriesUrlKeywordCountsOutput() URLCategoriesUrlKeywordCountsOutput
	ToURLCategoriesUrlKeywordCountsOutputWithContext(context.Context) URLCategoriesUrlKeywordCountsOutput
}

type URLCategoriesUrlKeywordCountsArgs struct {
	// Count of total keywords with retain parent category.
	RetainParentKeywordCount pulumi.IntPtrInput `pulumi:"retainParentKeywordCount"`
	// Count of URLs with retain parent category.
	RetainParentUrlCount pulumi.IntPtrInput `pulumi:"retainParentUrlCount"`
	// Total keyword count for the category.
	TotalKeywordCount pulumi.IntPtrInput `pulumi:"totalKeywordCount"`
	// Custom URL count for the category.
	TotalUrlCount pulumi.IntPtrInput `pulumi:"totalUrlCount"`
}

func (URLCategoriesUrlKeywordCountsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*URLCategoriesUrlKeywordCounts)(nil)).Elem()
}

func (i URLCategoriesUrlKeywordCountsArgs) ToURLCategoriesUrlKeywordCountsOutput() URLCategoriesUrlKeywordCountsOutput {
	return i.ToURLCategoriesUrlKeywordCountsOutputWithContext(context.Background())
}

func (i URLCategoriesUrlKeywordCountsArgs) ToURLCategoriesUrlKeywordCountsOutputWithContext(ctx context.Context) URLCategoriesUrlKeywordCountsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(URLCategoriesUrlKeywordCountsOutput)
}

func (i URLCategoriesUrlKeywordCountsArgs) ToURLCategoriesUrlKeywordCountsPtrOutput() URLCategoriesUrlKeywordCountsPtrOutput {
	return i.ToURLCategoriesUrlKeywordCountsPtrOutputWithContext(context.Background())
}

func (i URLCategoriesUrlKeywordCountsArgs) ToURLCategoriesUrlKeywordCountsPtrOutputWithContext(ctx context.Context) URLCategoriesUrlKeywordCountsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(URLCategoriesUrlKeywordCountsOutput).ToURLCategoriesUrlKeywordCountsPtrOutputWithContext(ctx)
}

// URLCategoriesUrlKeywordCountsPtrInput is an input type that accepts URLCategoriesUrlKeywordCountsArgs, URLCategoriesUrlKeywordCountsPtr and URLCategoriesUrlKeywordCountsPtrOutput values.
// You can construct a concrete instance of `URLCategoriesUrlKeywordCountsPtrInput` via:
//
//	        URLCategoriesUrlKeywordCountsArgs{...}
//
//	or:
//
//	        nil
type URLCategoriesUrlKeywordCountsPtrInput interface {
	pulumi.Input

	ToURLCategoriesUrlKeywordCountsPtrOutput() URLCategoriesUrlKeywordCountsPtrOutput
	ToURLCategoriesUrlKeywordCountsPtrOutputWithContext(context.Context) URLCategoriesUrlKeywordCountsPtrOutput
}

type urlcategoriesUrlKeywordCountsPtrType URLCategoriesUrlKeywordCountsArgs

func URLCategoriesUrlKeywordCountsPtr(v *URLCategoriesUrlKeywordCountsArgs) URLCategoriesUrlKeywordCountsPtrInput {
	return (*urlcategoriesUrlKeywordCountsPtrType)(v)
}

func (*urlcategoriesUrlKeywordCountsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**URLCategoriesUrlKeywordCounts)(nil)).Elem()
}

func (i *urlcategoriesUrlKeywordCountsPtrType) ToURLCategoriesUrlKeywordCountsPtrOutput() URLCategoriesUrlKeywordCountsPtrOutput {
	return i.ToURLCategoriesUrlKeywordCountsPtrOutputWithContext(context.Background())
}

func (i *urlcategoriesUrlKeywordCountsPtrType) ToURLCategoriesUrlKeywordCountsPtrOutputWithContext(ctx context.Context) URLCategoriesUrlKeywordCountsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(URLCategoriesUrlKeywordCountsPtrOutput)
}

type URLCategoriesUrlKeywordCountsOutput struct{ *pulumi.OutputState }

func (URLCategoriesUrlKeywordCountsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*URLCategoriesUrlKeywordCounts)(nil)).Elem()
}

func (o URLCategoriesUrlKeywordCountsOutput) ToURLCategoriesUrlKeywordCountsOutput() URLCategoriesUrlKeywordCountsOutput {
	return o
}

func (o URLCategoriesUrlKeywordCountsOutput) ToURLCategoriesUrlKeywordCountsOutputWithContext(ctx context.Context) URLCategoriesUrlKeywordCountsOutput {
	return o
}

func (o URLCategoriesUrlKeywordCountsOutput) ToURLCategoriesUrlKeywordCountsPtrOutput() URLCategoriesUrlKeywordCountsPtrOutput {
	return o.ToURLCategoriesUrlKeywordCountsPtrOutputWithContext(context.Background())
}

func (o URLCategoriesUrlKeywordCountsOutput) ToURLCategoriesUrlKeywordCountsPtrOutputWithContext(ctx context.Context) URLCategoriesUrlKeywordCountsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v URLCategoriesUrlKeywordCounts) *URLCategoriesUrlKeywordCounts {
		return &v
	}).(URLCategoriesUrlKeywordCountsPtrOutput)
}

// Count of total keywords with retain parent category.
func (o URLCategoriesUrlKeywordCountsOutput) RetainParentKeywordCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v URLCategoriesUrlKeywordCounts) *int { return v.RetainParentKeywordCount }).(pulumi.IntPtrOutput)
}

// Count of URLs with retain parent category.
func (o URLCategoriesUrlKeywordCountsOutput) RetainParentUrlCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v URLCategoriesUrlKeywordCounts) *int { return v.RetainParentUrlCount }).(pulumi.IntPtrOutput)
}

// Total keyword count for the category.
func (o URLCategoriesUrlKeywordCountsOutput) TotalKeywordCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v URLCategoriesUrlKeywordCounts) *int { return v.TotalKeywordCount }).(pulumi.IntPtrOutput)
}

// Custom URL count for the category.
func (o URLCategoriesUrlKeywordCountsOutput) TotalUrlCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v URLCategoriesUrlKeywordCounts) *int { return v.TotalUrlCount }).(pulumi.IntPtrOutput)
}

type URLCategoriesUrlKeywordCountsPtrOutput struct{ *pulumi.OutputState }

func (URLCategoriesUrlKeywordCountsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**URLCategoriesUrlKeywordCounts)(nil)).Elem()
}

func (o URLCategoriesUrlKeywordCountsPtrOutput) ToURLCategoriesUrlKeywordCountsPtrOutput() URLCategoriesUrlKeywordCountsPtrOutput {
	return o
}

func (o URLCategoriesUrlKeywordCountsPtrOutput) ToURLCategoriesUrlKeywordCountsPtrOutputWithContext(ctx context.Context) URLCategoriesUrlKeywordCountsPtrOutput {
	return o
}

func (o URLCategoriesUrlKeywordCountsPtrOutput) Elem() URLCategoriesUrlKeywordCountsOutput {
	return o.ApplyT(func(v *URLCategoriesUrlKeywordCounts) URLCategoriesUrlKeywordCounts {
		if v != nil {
			return *v
		}
		var ret URLCategoriesUrlKeywordCounts
		return ret
	}).(URLCategoriesUrlKeywordCountsOutput)
}

// Count of total keywords with retain parent category.
func (o URLCategoriesUrlKeywordCountsPtrOutput) RetainParentKeywordCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *URLCategoriesUrlKeywordCounts) *int {
		if v == nil {
			return nil
		}
		return v.RetainParentKeywordCount
	}).(pulumi.IntPtrOutput)
}

// Count of URLs with retain parent category.
func (o URLCategoriesUrlKeywordCountsPtrOutput) RetainParentUrlCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *URLCategoriesUrlKeywordCounts) *int {
		if v == nil {
			return nil
		}
		return v.RetainParentUrlCount
	}).(pulumi.IntPtrOutput)
}

// Total keyword count for the category.
func (o URLCategoriesUrlKeywordCountsPtrOutput) TotalKeywordCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *URLCategoriesUrlKeywordCounts) *int {
		if v == nil {
			return nil
		}
		return v.TotalKeywordCount
	}).(pulumi.IntPtrOutput)
}

// Custom URL count for the category.
func (o URLCategoriesUrlKeywordCountsPtrOutput) TotalUrlCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *URLCategoriesUrlKeywordCounts) *int {
		if v == nil {
			return nil
		}
		return v.TotalUrlCount
	}).(pulumi.IntPtrOutput)
}

type GetURLCategoriesScope struct {
	// (List of Object)
	ScopeEntities []GetURLCategoriesScopeScopeEntity `pulumi:"scopeEntities"`
	// (List of Object) Only applicable for the LOCATION_GROUP admin scope type, in which case this attribute gives the list of ID/name pairs of locations within the location group. The attribute name is subject to change.
	ScopeGroupMemberEntities []GetURLCategoriesScopeScopeGroupMemberEntity `pulumi:"scopeGroupMemberEntities"`
	// (String) The admin scope type. The attribute name is subject to change. `ORGANIZATION`, `DEPARTMENT`, `LOCATION`, `LOCATION_GROUP`
	Type string `pulumi:"type"`
}

// GetURLCategoriesScopeInput is an input type that accepts GetURLCategoriesScopeArgs and GetURLCategoriesScopeOutput values.
// You can construct a concrete instance of `GetURLCategoriesScopeInput` via:
//
//	GetURLCategoriesScopeArgs{...}
type GetURLCategoriesScopeInput interface {
	pulumi.Input

	ToGetURLCategoriesScopeOutput() GetURLCategoriesScopeOutput
	ToGetURLCategoriesScopeOutputWithContext(context.Context) GetURLCategoriesScopeOutput
}

type GetURLCategoriesScopeArgs struct {
	// (List of Object)
	ScopeEntities GetURLCategoriesScopeScopeEntityArrayInput `pulumi:"scopeEntities"`
	// (List of Object) Only applicable for the LOCATION_GROUP admin scope type, in which case this attribute gives the list of ID/name pairs of locations within the location group. The attribute name is subject to change.
	ScopeGroupMemberEntities GetURLCategoriesScopeScopeGroupMemberEntityArrayInput `pulumi:"scopeGroupMemberEntities"`
	// (String) The admin scope type. The attribute name is subject to change. `ORGANIZATION`, `DEPARTMENT`, `LOCATION`, `LOCATION_GROUP`
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetURLCategoriesScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetURLCategoriesScope)(nil)).Elem()
}

func (i GetURLCategoriesScopeArgs) ToGetURLCategoriesScopeOutput() GetURLCategoriesScopeOutput {
	return i.ToGetURLCategoriesScopeOutputWithContext(context.Background())
}

func (i GetURLCategoriesScopeArgs) ToGetURLCategoriesScopeOutputWithContext(ctx context.Context) GetURLCategoriesScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetURLCategoriesScopeOutput)
}

// GetURLCategoriesScopeArrayInput is an input type that accepts GetURLCategoriesScopeArray and GetURLCategoriesScopeArrayOutput values.
// You can construct a concrete instance of `GetURLCategoriesScopeArrayInput` via:
//
//	GetURLCategoriesScopeArray{ GetURLCategoriesScopeArgs{...} }
type GetURLCategoriesScopeArrayInput interface {
	pulumi.Input

	ToGetURLCategoriesScopeArrayOutput() GetURLCategoriesScopeArrayOutput
	ToGetURLCategoriesScopeArrayOutputWithContext(context.Context) GetURLCategoriesScopeArrayOutput
}

type GetURLCategoriesScopeArray []GetURLCategoriesScopeInput

func (GetURLCategoriesScopeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetURLCategoriesScope)(nil)).Elem()
}

func (i GetURLCategoriesScopeArray) ToGetURLCategoriesScopeArrayOutput() GetURLCategoriesScopeArrayOutput {
	return i.ToGetURLCategoriesScopeArrayOutputWithContext(context.Background())
}

func (i GetURLCategoriesScopeArray) ToGetURLCategoriesScopeArrayOutputWithContext(ctx context.Context) GetURLCategoriesScopeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetURLCategoriesScopeArrayOutput)
}

type GetURLCategoriesScopeOutput struct{ *pulumi.OutputState }

func (GetURLCategoriesScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetURLCategoriesScope)(nil)).Elem()
}

func (o GetURLCategoriesScopeOutput) ToGetURLCategoriesScopeOutput() GetURLCategoriesScopeOutput {
	return o
}

func (o GetURLCategoriesScopeOutput) ToGetURLCategoriesScopeOutputWithContext(ctx context.Context) GetURLCategoriesScopeOutput {
	return o
}

// (List of Object)
func (o GetURLCategoriesScopeOutput) ScopeEntities() GetURLCategoriesScopeScopeEntityArrayOutput {
	return o.ApplyT(func(v GetURLCategoriesScope) []GetURLCategoriesScopeScopeEntity { return v.ScopeEntities }).(GetURLCategoriesScopeScopeEntityArrayOutput)
}

// (List of Object) Only applicable for the LOCATION_GROUP admin scope type, in which case this attribute gives the list of ID/name pairs of locations within the location group. The attribute name is subject to change.
func (o GetURLCategoriesScopeOutput) ScopeGroupMemberEntities() GetURLCategoriesScopeScopeGroupMemberEntityArrayOutput {
	return o.ApplyT(func(v GetURLCategoriesScope) []GetURLCategoriesScopeScopeGroupMemberEntity {
		return v.ScopeGroupMemberEntities
	}).(GetURLCategoriesScopeScopeGroupMemberEntityArrayOutput)
}

// (String) The admin scope type. The attribute name is subject to change. `ORGANIZATION`, `DEPARTMENT`, `LOCATION`, `LOCATION_GROUP`
func (o GetURLCategoriesScopeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetURLCategoriesScope) string { return v.Type }).(pulumi.StringOutput)
}

type GetURLCategoriesScopeArrayOutput struct{ *pulumi.OutputState }

func (GetURLCategoriesScopeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetURLCategoriesScope)(nil)).Elem()
}

func (o GetURLCategoriesScopeArrayOutput) ToGetURLCategoriesScopeArrayOutput() GetURLCategoriesScopeArrayOutput {
	return o
}

func (o GetURLCategoriesScopeArrayOutput) ToGetURLCategoriesScopeArrayOutputWithContext(ctx context.Context) GetURLCategoriesScopeArrayOutput {
	return o
}

func (o GetURLCategoriesScopeArrayOutput) Index(i pulumi.IntInput) GetURLCategoriesScopeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetURLCategoriesScope {
		return vs[0].([]GetURLCategoriesScope)[vs[1].(int)]
	}).(GetURLCategoriesScopeOutput)
}

type GetURLCategoriesScopeScopeEntity struct {
	// (Map of String)
	Extensions map[string]string `pulumi:"extensions"`
	// URL category
	Id int `pulumi:"id"`
	// (String) The configured name of the entity
	Name string `pulumi:"name"`
}

// GetURLCategoriesScopeScopeEntityInput is an input type that accepts GetURLCategoriesScopeScopeEntityArgs and GetURLCategoriesScopeScopeEntityOutput values.
// You can construct a concrete instance of `GetURLCategoriesScopeScopeEntityInput` via:
//
//	GetURLCategoriesScopeScopeEntityArgs{...}
type GetURLCategoriesScopeScopeEntityInput interface {
	pulumi.Input

	ToGetURLCategoriesScopeScopeEntityOutput() GetURLCategoriesScopeScopeEntityOutput
	ToGetURLCategoriesScopeScopeEntityOutputWithContext(context.Context) GetURLCategoriesScopeScopeEntityOutput
}

type GetURLCategoriesScopeScopeEntityArgs struct {
	// (Map of String)
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// URL category
	Id pulumi.IntInput `pulumi:"id"`
	// (String) The configured name of the entity
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetURLCategoriesScopeScopeEntityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetURLCategoriesScopeScopeEntity)(nil)).Elem()
}

func (i GetURLCategoriesScopeScopeEntityArgs) ToGetURLCategoriesScopeScopeEntityOutput() GetURLCategoriesScopeScopeEntityOutput {
	return i.ToGetURLCategoriesScopeScopeEntityOutputWithContext(context.Background())
}

func (i GetURLCategoriesScopeScopeEntityArgs) ToGetURLCategoriesScopeScopeEntityOutputWithContext(ctx context.Context) GetURLCategoriesScopeScopeEntityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetURLCategoriesScopeScopeEntityOutput)
}

// GetURLCategoriesScopeScopeEntityArrayInput is an input type that accepts GetURLCategoriesScopeScopeEntityArray and GetURLCategoriesScopeScopeEntityArrayOutput values.
// You can construct a concrete instance of `GetURLCategoriesScopeScopeEntityArrayInput` via:
//
//	GetURLCategoriesScopeScopeEntityArray{ GetURLCategoriesScopeScopeEntityArgs{...} }
type GetURLCategoriesScopeScopeEntityArrayInput interface {
	pulumi.Input

	ToGetURLCategoriesScopeScopeEntityArrayOutput() GetURLCategoriesScopeScopeEntityArrayOutput
	ToGetURLCategoriesScopeScopeEntityArrayOutputWithContext(context.Context) GetURLCategoriesScopeScopeEntityArrayOutput
}

type GetURLCategoriesScopeScopeEntityArray []GetURLCategoriesScopeScopeEntityInput

func (GetURLCategoriesScopeScopeEntityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetURLCategoriesScopeScopeEntity)(nil)).Elem()
}

func (i GetURLCategoriesScopeScopeEntityArray) ToGetURLCategoriesScopeScopeEntityArrayOutput() GetURLCategoriesScopeScopeEntityArrayOutput {
	return i.ToGetURLCategoriesScopeScopeEntityArrayOutputWithContext(context.Background())
}

func (i GetURLCategoriesScopeScopeEntityArray) ToGetURLCategoriesScopeScopeEntityArrayOutputWithContext(ctx context.Context) GetURLCategoriesScopeScopeEntityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetURLCategoriesScopeScopeEntityArrayOutput)
}

type GetURLCategoriesScopeScopeEntityOutput struct{ *pulumi.OutputState }

func (GetURLCategoriesScopeScopeEntityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetURLCategoriesScopeScopeEntity)(nil)).Elem()
}

func (o GetURLCategoriesScopeScopeEntityOutput) ToGetURLCategoriesScopeScopeEntityOutput() GetURLCategoriesScopeScopeEntityOutput {
	return o
}

func (o GetURLCategoriesScopeScopeEntityOutput) ToGetURLCategoriesScopeScopeEntityOutputWithContext(ctx context.Context) GetURLCategoriesScopeScopeEntityOutput {
	return o
}

// (Map of String)
func (o GetURLCategoriesScopeScopeEntityOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetURLCategoriesScopeScopeEntity) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// URL category
func (o GetURLCategoriesScopeScopeEntityOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetURLCategoriesScopeScopeEntity) int { return v.Id }).(pulumi.IntOutput)
}

// (String) The configured name of the entity
func (o GetURLCategoriesScopeScopeEntityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetURLCategoriesScopeScopeEntity) string { return v.Name }).(pulumi.StringOutput)
}

type GetURLCategoriesScopeScopeEntityArrayOutput struct{ *pulumi.OutputState }

func (GetURLCategoriesScopeScopeEntityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetURLCategoriesScopeScopeEntity)(nil)).Elem()
}

func (o GetURLCategoriesScopeScopeEntityArrayOutput) ToGetURLCategoriesScopeScopeEntityArrayOutput() GetURLCategoriesScopeScopeEntityArrayOutput {
	return o
}

func (o GetURLCategoriesScopeScopeEntityArrayOutput) ToGetURLCategoriesScopeScopeEntityArrayOutputWithContext(ctx context.Context) GetURLCategoriesScopeScopeEntityArrayOutput {
	return o
}

func (o GetURLCategoriesScopeScopeEntityArrayOutput) Index(i pulumi.IntInput) GetURLCategoriesScopeScopeEntityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetURLCategoriesScopeScopeEntity {
		return vs[0].([]GetURLCategoriesScopeScopeEntity)[vs[1].(int)]
	}).(GetURLCategoriesScopeScopeEntityOutput)
}

type GetURLCategoriesScopeScopeGroupMemberEntity struct {
	// (Map of String)
	Extensions map[string]string `pulumi:"extensions"`
	// URL category
	Id int `pulumi:"id"`
	// (String) The configured name of the entity
	Name string `pulumi:"name"`
}

// GetURLCategoriesScopeScopeGroupMemberEntityInput is an input type that accepts GetURLCategoriesScopeScopeGroupMemberEntityArgs and GetURLCategoriesScopeScopeGroupMemberEntityOutput values.
// You can construct a concrete instance of `GetURLCategoriesScopeScopeGroupMemberEntityInput` via:
//
//	GetURLCategoriesScopeScopeGroupMemberEntityArgs{...}
type GetURLCategoriesScopeScopeGroupMemberEntityInput interface {
	pulumi.Input

	ToGetURLCategoriesScopeScopeGroupMemberEntityOutput() GetURLCategoriesScopeScopeGroupMemberEntityOutput
	ToGetURLCategoriesScopeScopeGroupMemberEntityOutputWithContext(context.Context) GetURLCategoriesScopeScopeGroupMemberEntityOutput
}

type GetURLCategoriesScopeScopeGroupMemberEntityArgs struct {
	// (Map of String)
	Extensions pulumi.StringMapInput `pulumi:"extensions"`
	// URL category
	Id pulumi.IntInput `pulumi:"id"`
	// (String) The configured name of the entity
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetURLCategoriesScopeScopeGroupMemberEntityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetURLCategoriesScopeScopeGroupMemberEntity)(nil)).Elem()
}

func (i GetURLCategoriesScopeScopeGroupMemberEntityArgs) ToGetURLCategoriesScopeScopeGroupMemberEntityOutput() GetURLCategoriesScopeScopeGroupMemberEntityOutput {
	return i.ToGetURLCategoriesScopeScopeGroupMemberEntityOutputWithContext(context.Background())
}

func (i GetURLCategoriesScopeScopeGroupMemberEntityArgs) ToGetURLCategoriesScopeScopeGroupMemberEntityOutputWithContext(ctx context.Context) GetURLCategoriesScopeScopeGroupMemberEntityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetURLCategoriesScopeScopeGroupMemberEntityOutput)
}

// GetURLCategoriesScopeScopeGroupMemberEntityArrayInput is an input type that accepts GetURLCategoriesScopeScopeGroupMemberEntityArray and GetURLCategoriesScopeScopeGroupMemberEntityArrayOutput values.
// You can construct a concrete instance of `GetURLCategoriesScopeScopeGroupMemberEntityArrayInput` via:
//
//	GetURLCategoriesScopeScopeGroupMemberEntityArray{ GetURLCategoriesScopeScopeGroupMemberEntityArgs{...} }
type GetURLCategoriesScopeScopeGroupMemberEntityArrayInput interface {
	pulumi.Input

	ToGetURLCategoriesScopeScopeGroupMemberEntityArrayOutput() GetURLCategoriesScopeScopeGroupMemberEntityArrayOutput
	ToGetURLCategoriesScopeScopeGroupMemberEntityArrayOutputWithContext(context.Context) GetURLCategoriesScopeScopeGroupMemberEntityArrayOutput
}

type GetURLCategoriesScopeScopeGroupMemberEntityArray []GetURLCategoriesScopeScopeGroupMemberEntityInput

func (GetURLCategoriesScopeScopeGroupMemberEntityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetURLCategoriesScopeScopeGroupMemberEntity)(nil)).Elem()
}

func (i GetURLCategoriesScopeScopeGroupMemberEntityArray) ToGetURLCategoriesScopeScopeGroupMemberEntityArrayOutput() GetURLCategoriesScopeScopeGroupMemberEntityArrayOutput {
	return i.ToGetURLCategoriesScopeScopeGroupMemberEntityArrayOutputWithContext(context.Background())
}

func (i GetURLCategoriesScopeScopeGroupMemberEntityArray) ToGetURLCategoriesScopeScopeGroupMemberEntityArrayOutputWithContext(ctx context.Context) GetURLCategoriesScopeScopeGroupMemberEntityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetURLCategoriesScopeScopeGroupMemberEntityArrayOutput)
}

type GetURLCategoriesScopeScopeGroupMemberEntityOutput struct{ *pulumi.OutputState }

func (GetURLCategoriesScopeScopeGroupMemberEntityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetURLCategoriesScopeScopeGroupMemberEntity)(nil)).Elem()
}

func (o GetURLCategoriesScopeScopeGroupMemberEntityOutput) ToGetURLCategoriesScopeScopeGroupMemberEntityOutput() GetURLCategoriesScopeScopeGroupMemberEntityOutput {
	return o
}

func (o GetURLCategoriesScopeScopeGroupMemberEntityOutput) ToGetURLCategoriesScopeScopeGroupMemberEntityOutputWithContext(ctx context.Context) GetURLCategoriesScopeScopeGroupMemberEntityOutput {
	return o
}

// (Map of String)
func (o GetURLCategoriesScopeScopeGroupMemberEntityOutput) Extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetURLCategoriesScopeScopeGroupMemberEntity) map[string]string { return v.Extensions }).(pulumi.StringMapOutput)
}

// URL category
func (o GetURLCategoriesScopeScopeGroupMemberEntityOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetURLCategoriesScopeScopeGroupMemberEntity) int { return v.Id }).(pulumi.IntOutput)
}

// (String) The configured name of the entity
func (o GetURLCategoriesScopeScopeGroupMemberEntityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetURLCategoriesScopeScopeGroupMemberEntity) string { return v.Name }).(pulumi.StringOutput)
}

type GetURLCategoriesScopeScopeGroupMemberEntityArrayOutput struct{ *pulumi.OutputState }

func (GetURLCategoriesScopeScopeGroupMemberEntityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetURLCategoriesScopeScopeGroupMemberEntity)(nil)).Elem()
}

func (o GetURLCategoriesScopeScopeGroupMemberEntityArrayOutput) ToGetURLCategoriesScopeScopeGroupMemberEntityArrayOutput() GetURLCategoriesScopeScopeGroupMemberEntityArrayOutput {
	return o
}

func (o GetURLCategoriesScopeScopeGroupMemberEntityArrayOutput) ToGetURLCategoriesScopeScopeGroupMemberEntityArrayOutputWithContext(ctx context.Context) GetURLCategoriesScopeScopeGroupMemberEntityArrayOutput {
	return o
}

func (o GetURLCategoriesScopeScopeGroupMemberEntityArrayOutput) Index(i pulumi.IntInput) GetURLCategoriesScopeScopeGroupMemberEntityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetURLCategoriesScopeScopeGroupMemberEntity {
		return vs[0].([]GetURLCategoriesScopeScopeGroupMemberEntity)[vs[1].(int)]
	}).(GetURLCategoriesScopeScopeGroupMemberEntityOutput)
}

type GetURLCategoriesUrlKeywordCount struct {
	// (Number) Count of total keywords with retain parent category.
	RetainParentKeywordCount int `pulumi:"retainParentKeywordCount"`
	// (Number) Count of URLs with retain parent category.
	RetainParentUrlCount int `pulumi:"retainParentUrlCount"`
	// (Number) Total keyword count for the category.
	TotalKeywordCount int `pulumi:"totalKeywordCount"`
	// (Number) Custom URL count for the category.
	TotalUrlCount int `pulumi:"totalUrlCount"`
}

// GetURLCategoriesUrlKeywordCountInput is an input type that accepts GetURLCategoriesUrlKeywordCountArgs and GetURLCategoriesUrlKeywordCountOutput values.
// You can construct a concrete instance of `GetURLCategoriesUrlKeywordCountInput` via:
//
//	GetURLCategoriesUrlKeywordCountArgs{...}
type GetURLCategoriesUrlKeywordCountInput interface {
	pulumi.Input

	ToGetURLCategoriesUrlKeywordCountOutput() GetURLCategoriesUrlKeywordCountOutput
	ToGetURLCategoriesUrlKeywordCountOutputWithContext(context.Context) GetURLCategoriesUrlKeywordCountOutput
}

type GetURLCategoriesUrlKeywordCountArgs struct {
	// (Number) Count of total keywords with retain parent category.
	RetainParentKeywordCount pulumi.IntInput `pulumi:"retainParentKeywordCount"`
	// (Number) Count of URLs with retain parent category.
	RetainParentUrlCount pulumi.IntInput `pulumi:"retainParentUrlCount"`
	// (Number) Total keyword count for the category.
	TotalKeywordCount pulumi.IntInput `pulumi:"totalKeywordCount"`
	// (Number) Custom URL count for the category.
	TotalUrlCount pulumi.IntInput `pulumi:"totalUrlCount"`
}

func (GetURLCategoriesUrlKeywordCountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetURLCategoriesUrlKeywordCount)(nil)).Elem()
}

func (i GetURLCategoriesUrlKeywordCountArgs) ToGetURLCategoriesUrlKeywordCountOutput() GetURLCategoriesUrlKeywordCountOutput {
	return i.ToGetURLCategoriesUrlKeywordCountOutputWithContext(context.Background())
}

func (i GetURLCategoriesUrlKeywordCountArgs) ToGetURLCategoriesUrlKeywordCountOutputWithContext(ctx context.Context) GetURLCategoriesUrlKeywordCountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetURLCategoriesUrlKeywordCountOutput)
}

// GetURLCategoriesUrlKeywordCountArrayInput is an input type that accepts GetURLCategoriesUrlKeywordCountArray and GetURLCategoriesUrlKeywordCountArrayOutput values.
// You can construct a concrete instance of `GetURLCategoriesUrlKeywordCountArrayInput` via:
//
//	GetURLCategoriesUrlKeywordCountArray{ GetURLCategoriesUrlKeywordCountArgs{...} }
type GetURLCategoriesUrlKeywordCountArrayInput interface {
	pulumi.Input

	ToGetURLCategoriesUrlKeywordCountArrayOutput() GetURLCategoriesUrlKeywordCountArrayOutput
	ToGetURLCategoriesUrlKeywordCountArrayOutputWithContext(context.Context) GetURLCategoriesUrlKeywordCountArrayOutput
}

type GetURLCategoriesUrlKeywordCountArray []GetURLCategoriesUrlKeywordCountInput

func (GetURLCategoriesUrlKeywordCountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetURLCategoriesUrlKeywordCount)(nil)).Elem()
}

func (i GetURLCategoriesUrlKeywordCountArray) ToGetURLCategoriesUrlKeywordCountArrayOutput() GetURLCategoriesUrlKeywordCountArrayOutput {
	return i.ToGetURLCategoriesUrlKeywordCountArrayOutputWithContext(context.Background())
}

func (i GetURLCategoriesUrlKeywordCountArray) ToGetURLCategoriesUrlKeywordCountArrayOutputWithContext(ctx context.Context) GetURLCategoriesUrlKeywordCountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetURLCategoriesUrlKeywordCountArrayOutput)
}

type GetURLCategoriesUrlKeywordCountOutput struct{ *pulumi.OutputState }

func (GetURLCategoriesUrlKeywordCountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetURLCategoriesUrlKeywordCount)(nil)).Elem()
}

func (o GetURLCategoriesUrlKeywordCountOutput) ToGetURLCategoriesUrlKeywordCountOutput() GetURLCategoriesUrlKeywordCountOutput {
	return o
}

func (o GetURLCategoriesUrlKeywordCountOutput) ToGetURLCategoriesUrlKeywordCountOutputWithContext(ctx context.Context) GetURLCategoriesUrlKeywordCountOutput {
	return o
}

// (Number) Count of total keywords with retain parent category.
func (o GetURLCategoriesUrlKeywordCountOutput) RetainParentKeywordCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetURLCategoriesUrlKeywordCount) int { return v.RetainParentKeywordCount }).(pulumi.IntOutput)
}

// (Number) Count of URLs with retain parent category.
func (o GetURLCategoriesUrlKeywordCountOutput) RetainParentUrlCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetURLCategoriesUrlKeywordCount) int { return v.RetainParentUrlCount }).(pulumi.IntOutput)
}

// (Number) Total keyword count for the category.
func (o GetURLCategoriesUrlKeywordCountOutput) TotalKeywordCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetURLCategoriesUrlKeywordCount) int { return v.TotalKeywordCount }).(pulumi.IntOutput)
}

// (Number) Custom URL count for the category.
func (o GetURLCategoriesUrlKeywordCountOutput) TotalUrlCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetURLCategoriesUrlKeywordCount) int { return v.TotalUrlCount }).(pulumi.IntOutput)
}

type GetURLCategoriesUrlKeywordCountArrayOutput struct{ *pulumi.OutputState }

func (GetURLCategoriesUrlKeywordCountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetURLCategoriesUrlKeywordCount)(nil)).Elem()
}

func (o GetURLCategoriesUrlKeywordCountArrayOutput) ToGetURLCategoriesUrlKeywordCountArrayOutput() GetURLCategoriesUrlKeywordCountArrayOutput {
	return o
}

func (o GetURLCategoriesUrlKeywordCountArrayOutput) ToGetURLCategoriesUrlKeywordCountArrayOutputWithContext(ctx context.Context) GetURLCategoriesUrlKeywordCountArrayOutput {
	return o
}

func (o GetURLCategoriesUrlKeywordCountArrayOutput) Index(i pulumi.IntInput) GetURLCategoriesUrlKeywordCountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetURLCategoriesUrlKeywordCount {
		return vs[0].([]GetURLCategoriesUrlKeywordCount)[vs[1].(int)]
	}).(GetURLCategoriesUrlKeywordCountOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*URLCategoriesScopeInput)(nil)).Elem(), URLCategoriesScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*URLCategoriesScopeArrayInput)(nil)).Elem(), URLCategoriesScopeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*URLCategoriesScopeScopeEntitiesInput)(nil)).Elem(), URLCategoriesScopeScopeEntitiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*URLCategoriesScopeScopeEntitiesPtrInput)(nil)).Elem(), URLCategoriesScopeScopeEntitiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*URLCategoriesScopeScopeGroupMemberEntitiesInput)(nil)).Elem(), URLCategoriesScopeScopeGroupMemberEntitiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*URLCategoriesScopeScopeGroupMemberEntitiesPtrInput)(nil)).Elem(), URLCategoriesScopeScopeGroupMemberEntitiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*URLCategoriesUrlKeywordCountsInput)(nil)).Elem(), URLCategoriesUrlKeywordCountsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*URLCategoriesUrlKeywordCountsPtrInput)(nil)).Elem(), URLCategoriesUrlKeywordCountsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetURLCategoriesScopeInput)(nil)).Elem(), GetURLCategoriesScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetURLCategoriesScopeArrayInput)(nil)).Elem(), GetURLCategoriesScopeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetURLCategoriesScopeScopeEntityInput)(nil)).Elem(), GetURLCategoriesScopeScopeEntityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetURLCategoriesScopeScopeEntityArrayInput)(nil)).Elem(), GetURLCategoriesScopeScopeEntityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetURLCategoriesScopeScopeGroupMemberEntityInput)(nil)).Elem(), GetURLCategoriesScopeScopeGroupMemberEntityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetURLCategoriesScopeScopeGroupMemberEntityArrayInput)(nil)).Elem(), GetURLCategoriesScopeScopeGroupMemberEntityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetURLCategoriesUrlKeywordCountInput)(nil)).Elem(), GetURLCategoriesUrlKeywordCountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetURLCategoriesUrlKeywordCountArrayInput)(nil)).Elem(), GetURLCategoriesUrlKeywordCountArray{})
	pulumi.RegisterOutputType(URLCategoriesScopeOutput{})
	pulumi.RegisterOutputType(URLCategoriesScopeArrayOutput{})
	pulumi.RegisterOutputType(URLCategoriesScopeScopeEntitiesOutput{})
	pulumi.RegisterOutputType(URLCategoriesScopeScopeEntitiesPtrOutput{})
	pulumi.RegisterOutputType(URLCategoriesScopeScopeGroupMemberEntitiesOutput{})
	pulumi.RegisterOutputType(URLCategoriesScopeScopeGroupMemberEntitiesPtrOutput{})
	pulumi.RegisterOutputType(URLCategoriesUrlKeywordCountsOutput{})
	pulumi.RegisterOutputType(URLCategoriesUrlKeywordCountsPtrOutput{})
	pulumi.RegisterOutputType(GetURLCategoriesScopeOutput{})
	pulumi.RegisterOutputType(GetURLCategoriesScopeArrayOutput{})
	pulumi.RegisterOutputType(GetURLCategoriesScopeScopeEntityOutput{})
	pulumi.RegisterOutputType(GetURLCategoriesScopeScopeEntityArrayOutput{})
	pulumi.RegisterOutputType(GetURLCategoriesScopeScopeGroupMemberEntityOutput{})
	pulumi.RegisterOutputType(GetURLCategoriesScopeScopeGroupMemberEntityArrayOutput{})
	pulumi.RegisterOutputType(GetURLCategoriesUrlKeywordCountOutput{})
	pulumi.RegisterOutputType(GetURLCategoriesUrlKeywordCountArrayOutput{})
}
