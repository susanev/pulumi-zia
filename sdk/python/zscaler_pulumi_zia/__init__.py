# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from . import _utilities
import typing
# Export this package's modules as members:
from .provider import *

# Make subpackages available:
if typing.TYPE_CHECKING:
    import zscaler_pulumi_zia.activation as __activation
    activation = __activation
    import zscaler_pulumi_zia.adminroles as __adminroles
    adminroles = __adminroles
    import zscaler_pulumi_zia.adminusers as __adminusers
    adminusers = __adminusers
    import zscaler_pulumi_zia.authsettingsurls as __authsettingsurls
    authsettingsurls = __authsettingsurls
    import zscaler_pulumi_zia.config as __config
    config = __config
    import zscaler_pulumi_zia.departments as __departments
    departments = __departments
    import zscaler_pulumi_zia.devicegroups as __devicegroups
    devicegroups = __devicegroups
    import zscaler_pulumi_zia.devices as __devices
    devices = __devices
    import zscaler_pulumi_zia.dlp as __dlp
    dlp = __dlp
    import zscaler_pulumi_zia.firewall as __firewall
    firewall = __firewall
    import zscaler_pulumi_zia.groups as __groups
    groups = __groups
    import zscaler_pulumi_zia.locationgroups as __locationgroups
    locationgroups = __locationgroups
    import zscaler_pulumi_zia.locationmanagement as __locationmanagement
    locationmanagement = __locationmanagement
    import zscaler_pulumi_zia.rulelabels as __rulelabels
    rulelabels = __rulelabels
    import zscaler_pulumi_zia.securitysettings as __securitysettings
    securitysettings = __securitysettings
    import zscaler_pulumi_zia.timewindow as __timewindow
    timewindow = __timewindow
    import zscaler_pulumi_zia.trafficforwarding as __trafficforwarding
    trafficforwarding = __trafficforwarding
    import zscaler_pulumi_zia.urlcategory as __urlcategory
    urlcategory = __urlcategory
    import zscaler_pulumi_zia.urlfiltering as __urlfiltering
    urlfiltering = __urlfiltering
    import zscaler_pulumi_zia.users as __users
    users = __users
else:
    activation = _utilities.lazy_import('zscaler_pulumi_zia.activation')
    adminroles = _utilities.lazy_import('zscaler_pulumi_zia.adminroles')
    adminusers = _utilities.lazy_import('zscaler_pulumi_zia.adminusers')
    authsettingsurls = _utilities.lazy_import('zscaler_pulumi_zia.authsettingsurls')
    config = _utilities.lazy_import('zscaler_pulumi_zia.config')
    departments = _utilities.lazy_import('zscaler_pulumi_zia.departments')
    devicegroups = _utilities.lazy_import('zscaler_pulumi_zia.devicegroups')
    devices = _utilities.lazy_import('zscaler_pulumi_zia.devices')
    dlp = _utilities.lazy_import('zscaler_pulumi_zia.dlp')
    firewall = _utilities.lazy_import('zscaler_pulumi_zia.firewall')
    groups = _utilities.lazy_import('zscaler_pulumi_zia.groups')
    locationgroups = _utilities.lazy_import('zscaler_pulumi_zia.locationgroups')
    locationmanagement = _utilities.lazy_import('zscaler_pulumi_zia.locationmanagement')
    rulelabels = _utilities.lazy_import('zscaler_pulumi_zia.rulelabels')
    securitysettings = _utilities.lazy_import('zscaler_pulumi_zia.securitysettings')
    timewindow = _utilities.lazy_import('zscaler_pulumi_zia.timewindow')
    trafficforwarding = _utilities.lazy_import('zscaler_pulumi_zia.trafficforwarding')
    urlcategory = _utilities.lazy_import('zscaler_pulumi_zia.urlcategory')
    urlfiltering = _utilities.lazy_import('zscaler_pulumi_zia.urlfiltering')
    users = _utilities.lazy_import('zscaler_pulumi_zia.users')

_utilities.register(
    resource_modules="""
[
 {
  "pkg": "zia",
  "mod": "Activation/activationStatus",
  "fqn": "zscaler_pulumi_zia.activation",
  "classes": {
   "zia:Activation/activationStatus:ActivationStatus": "ActivationStatus"
  }
 },
 {
  "pkg": "zia",
  "mod": "AdminUsers/adminUsers",
  "fqn": "zscaler_pulumi_zia.adminusers",
  "classes": {
   "zia:AdminUsers/adminUsers:AdminUsers": "AdminUsers"
  }
 },
 {
  "pkg": "zia",
  "mod": "AuthSettingsUrls/authSettingsURLs",
  "fqn": "zscaler_pulumi_zia.authsettingsurls",
  "classes": {
   "zia:AuthSettingsUrls/authSettingsURLs:AuthSettingsURLs": "AuthSettingsURLs"
  }
 },
 {
  "pkg": "zia",
  "mod": "DLP/dLPDictionaries",
  "fqn": "zscaler_pulumi_zia.dlp",
  "classes": {
   "zia:DLP/dLPDictionaries:DLPDictionaries": "DLPDictionaries"
  }
 },
 {
  "pkg": "zia",
  "mod": "DLP/dLPNotificationTemplates",
  "fqn": "zscaler_pulumi_zia.dlp",
  "classes": {
   "zia:DLP/dLPNotificationTemplates:DLPNotificationTemplates": "DLPNotificationTemplates"
  }
 },
 {
  "pkg": "zia",
  "mod": "DLP/dLPWebRules",
  "fqn": "zscaler_pulumi_zia.dlp",
  "classes": {
   "zia:DLP/dLPWebRules:DLPWebRules": "DLPWebRules"
  }
 },
 {
  "pkg": "zia",
  "mod": "Firewall/firewallFilteringApplicationGroups",
  "fqn": "zscaler_pulumi_zia.firewall",
  "classes": {
   "zia:Firewall/firewallFilteringApplicationGroups:FirewallFilteringApplicationGroups": "FirewallFilteringApplicationGroups"
  }
 },
 {
  "pkg": "zia",
  "mod": "Firewall/firewallFilteringDestinationGroups",
  "fqn": "zscaler_pulumi_zia.firewall",
  "classes": {
   "zia:Firewall/firewallFilteringDestinationGroups:FirewallFilteringDestinationGroups": "FirewallFilteringDestinationGroups"
  }
 },
 {
  "pkg": "zia",
  "mod": "Firewall/firewallFilteringNetworkServices",
  "fqn": "zscaler_pulumi_zia.firewall",
  "classes": {
   "zia:Firewall/firewallFilteringNetworkServices:FirewallFilteringNetworkServices": "FirewallFilteringNetworkServices"
  }
 },
 {
  "pkg": "zia",
  "mod": "Firewall/firewallFilteringRule",
  "fqn": "zscaler_pulumi_zia.firewall",
  "classes": {
   "zia:Firewall/firewallFilteringRule:FirewallFilteringRule": "FirewallFilteringRule"
  }
 },
 {
  "pkg": "zia",
  "mod": "Firewall/firewallFilteringServiceGroups",
  "fqn": "zscaler_pulumi_zia.firewall",
  "classes": {
   "zia:Firewall/firewallFilteringServiceGroups:FirewallFilteringServiceGroups": "FirewallFilteringServiceGroups"
  }
 },
 {
  "pkg": "zia",
  "mod": "Firewall/firewallFilteringSourceGroups",
  "fqn": "zscaler_pulumi_zia.firewall",
  "classes": {
   "zia:Firewall/firewallFilteringSourceGroups:FirewallFilteringSourceGroups": "FirewallFilteringSourceGroups"
  }
 },
 {
  "pkg": "zia",
  "mod": "LocationManagement/locationManagement",
  "fqn": "zscaler_pulumi_zia.locationmanagement",
  "classes": {
   "zia:LocationManagement/locationManagement:LocationManagement": "LocationManagement"
  }
 },
 {
  "pkg": "zia",
  "mod": "RuleLabels/ruleLabels",
  "fqn": "zscaler_pulumi_zia.rulelabels",
  "classes": {
   "zia:RuleLabels/ruleLabels:RuleLabels": "RuleLabels"
  }
 },
 {
  "pkg": "zia",
  "mod": "SecuritySettings/securitySettings",
  "fqn": "zscaler_pulumi_zia.securitysettings",
  "classes": {
   "zia:SecuritySettings/securitySettings:SecuritySettings": "SecuritySettings"
  }
 },
 {
  "pkg": "zia",
  "mod": "TrafficForwarding/trafficForwardingGRETunnel",
  "fqn": "zscaler_pulumi_zia.trafficforwarding",
  "classes": {
   "zia:TrafficForwarding/trafficForwardingGRETunnel:TrafficForwardingGRETunnel": "TrafficForwardingGRETunnel"
  }
 },
 {
  "pkg": "zia",
  "mod": "TrafficForwarding/trafficForwardingStaticIP",
  "fqn": "zscaler_pulumi_zia.trafficforwarding",
  "classes": {
   "zia:TrafficForwarding/trafficForwardingStaticIP:TrafficForwardingStaticIP": "TrafficForwardingStaticIP"
  }
 },
 {
  "pkg": "zia",
  "mod": "TrafficForwarding/trafficForwardingVPNCredentials",
  "fqn": "zscaler_pulumi_zia.trafficforwarding",
  "classes": {
   "zia:TrafficForwarding/trafficForwardingVPNCredentials:TrafficForwardingVPNCredentials": "TrafficForwardingVPNCredentials"
  }
 },
 {
  "pkg": "zia",
  "mod": "URLCategory/uRLCategories",
  "fqn": "zscaler_pulumi_zia.urlcategory",
  "classes": {
   "zia:URLCategory/uRLCategories:URLCategories": "URLCategories"
  }
 },
 {
  "pkg": "zia",
  "mod": "URLFiltering/uRLFilteringRules",
  "fqn": "zscaler_pulumi_zia.urlfiltering",
  "classes": {
   "zia:URLFiltering/uRLFilteringRules:URLFilteringRules": "URLFilteringRules"
  }
 },
 {
  "pkg": "zia",
  "mod": "Users/userManagement",
  "fqn": "zscaler_pulumi_zia.users",
  "classes": {
   "zia:Users/userManagement:UserManagement": "UserManagement"
  }
 }
]
""",
    resource_packages="""
[
 {
  "pkg": "zia",
  "token": "pulumi:providers:zia",
  "fqn": "zscaler_pulumi_zia",
  "class": "Provider"
 }
]
"""
)
